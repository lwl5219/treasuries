<div id="pf3d8" class="pf w2 h11" data-page-no="3d8"><div class="pc pc3d8 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3d8.png"/><div class="t m5 x1df h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>11.4<span class="_ _60"> </span>The<span class="_ _10"> </span>Sockets<span class="_ _10"> </span>Interface<span class="_ _3e"> </span><span class="ffe fs1e">983</span></div><div class="t m5 x159 h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/netp/echoserveri.c</div><div class="t m5 x2c h88 yad1 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs4e fc2">#include<span class="_ _e"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 x2c h2e y22bf ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 x2c h2e y7cd8 ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x2d h88 yecc ffd fs4e fc2 sc0 ls0 ws0">void<span class="_ _e"> </span>echo(int<span class="_ _f"> </span>connfd);</div><div class="t m5 x2c h2e y1323 ff6 fs20 fc6 sc0 ls0 ws0">4</div><div class="t m5 x2c h2e y7cd9 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x2d h88 y5f5e ffd fs4e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(int<span class="_ _f"> </span>argc,<span class="_ _e"> </span>char<span class="_ _e"> </span>**argv)</div><div class="t m5 x2c h88 y7cda ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _1c"> </span><span class="ffd fs4e fc2">{</span></div><div class="t m5 x2c h88 yad4 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>listenfd,<span class="_ _e"> </span>connfd;</span></div><div class="t m5 x2c h88 y7cdb ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _e2"> </span><span class="ffd fs4e fc2">socklen_t<span class="_ _e"> </span>clientlen;</span></div><div class="t m5 x2c h88 y1a10 ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _e2"> </span><span class="ffd fs4e fc2">struct<span class="_ _e"> </span>sockaddr_storage<span class="_ _e"> </span>clientaddr;<span class="_ _3d"> </span>/*<span class="_ _e"> </span>Enough<span class="_ _e"> </span>space<span class="_ _e"> </span>for<span class="_ _f"> </span>any<span class="_ _e"> </span>address<span class="_ _e"> </span>*/</span></div><div class="t m5 x17 h88 y7cdc ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _e2"> </span><span class="ffd fs4e fc2">char<span class="_ _e"> </span>client_hostname[MAXLINE],<span class="_ _e"> </span>client_port[MAXLINE];</span></div><div class="t m5 x17 h2e y3011 ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x17 h2e y7cdd ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x1a0 h88 y59f3 ffd fs4e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(argc<span class="_ _f"> </span>!=<span class="_ _e"> </span>2)<span class="_ _e"> </span>{</div><div class="t m5 x17 h88 y7cde ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _18b"> </span><span class="ffd fs4e fc2">fprintf(stderr,<span class="_ _e"> </span>&quot;usage:<span class="_ _f"> </span>%s<span class="_ _e"> </span>&lt;port&gt;\n&quot;,<span class="_ _e"> </span>argv[0]);</span></div><div class="t m5 x17 h88 y32c4 ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _18b"> </span><span class="ffd fs4e fc2">exit(0);</span></div><div class="t m5 x17 h88 y4b5c ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x17 h2e y7cdf ff6 fs20 fc6 sc0 ls0 ws0">16</div><div class="t m5 x17 h2e y7ce0 ff6 fs20 fc6 sc0 ls0 ws0">17</div><div class="t m5 x1a0 h88 y7ce1 ffd fs4e fc2 sc0 ls0 ws0">listenfd<span class="_ _e"> </span>=<span class="_ _f"> </span>Open_listenfd(argv[1]);</div><div class="t m5 x17 h88 y47eb ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _e2"> </span><span class="ffd fs4e fc2">while<span class="_ _e"> </span>(1)<span class="_ _e"> </span>{</span></div><div class="t m5 x17 h88 y417 ff6 fs20 fc6 sc0 ls0 ws0">19<span class="_ _18b"> </span><span class="ffd fs4e fc2">clientlen<span class="_ _e"> </span>=<span class="_ _f"> </span>sizeof(struct<span class="_ _e"> </span>sockaddr_storage);</span></div><div class="t m5 x17 h88 y3c0a ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _18b"> </span><span class="ffd fs4e fc2">connfd<span class="_ _e"> </span>=<span class="_ _f"> </span>Accept(listenfd,<span class="_ _e"> </span>(SA<span class="_ _e"> </span>*)&amp;clientaddr,<span class="_ _f"> </span>&amp;clientlen);</span></div><div class="t m5 x17 h88 y418 ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _18b"> </span><span class="ffd fs4e fc2">Getnameinfo((SA<span class="_ _e"> </span>*)<span class="_ _f"> </span>&amp;clientaddr,<span class="_ _e"> </span>clientlen,<span class="_ _e"> </span>client_hostname,<span class="_ _f"> </span>MAXLINE,</span></div><div class="t m5 x17 h88 y7ce2 ff6 fs20 fc6 sc0 ls0 ws0">22<span class="_ _232"> </span><span class="ffd fs4e fc2">client_port,<span class="_ _e"> </span>MAXLINE,<span class="_ _f"> </span>0);</span></div><div class="t m5 x17 h88 y4948 ff6 fs20 fc6 sc0 ls0 ws0">23<span class="_ _18b"> </span><span class="ffd fs4e fc2">printf(&quot;Connected<span class="_ _e"> </span>to<span class="_ _f"> </span>(%s,<span class="_ _e"> </span>%s)\n&quot;,<span class="_ _e"> </span>client_hostname,<span class="_ _f"> </span>client_port);</span></div><div class="t m5 x17 h88 y47f1 ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _18b"> </span><span class="ffd fs4e fc2">echo(connfd);</span></div><div class="t m5 x17 h88 y1ada ff6 fs20 fc6 sc0 ls0 ws0">25<span class="_ _18b"> </span><span class="ffd fs4e fc2">Close(connfd);</span></div><div class="t m5 x17 h88 y5eb2 ff6 fs20 fc6 sc0 ls0 ws0">26<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x17 h88 y6626 ff6 fs20 fc6 sc0 ls0 ws0">27<span class="_ _e2"> </span><span class="ffd fs4e fc2">exit(0);</span></div><div class="t m5 x17 h88 y7ce3 ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _1c"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x159 h2c y7ce4 ffa fs16 fc2 sc0 ls0 ws0">code/netp/echoserveri.c</div><div class="t m5 x17 h2f y7ce5 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>11.21<span class="_ _66"> </span><span class="fc1">Iterative<span class="_"> </span>echo<span class="_"> </span>ser<span class="_ _2"></span>ver<span class="_"> </span>main<span class="_"> </span>routine.</span></div><div class="t m5 xde h2c y7ce6 ffa fs16 fc1 sc0 ls0 ws0">code/netp/echo<span class="_ _1"></span>.c</div><div class="t m5 x2c h88 y7ce7 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs4e fc2">#include<span class="_ _e"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 x2c h2e y7ce8 ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 x2c h2e y7ce9 ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x2d h88 y7cea ffd fs4e fc2 sc0 ls0 ws0">void<span class="_ _e"> </span>echo(int<span class="_ _f"> </span>connfd)</div><div class="t m5 x2c h88 y73ff ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _1c"> </span><span class="ffd fs4e fc2">{</span></div><div class="t m5 x2c h88 yb95 ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _e2"> </span><span class="ffd fs4e fc2">size_t<span class="_ _e"> </span>n;</span></div><div class="t m5 x2c h88 y7ceb ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _e2"> </span><span class="ffd fs4e fc2">char<span class="_ _e"> </span>buf[MAXLINE];</span></div><div class="t m5 x2c h88 y7cec ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _e2"> </span><span class="ffd fs4e fc2">rio_t<span class="_ _e"> </span>rio;</span></div><div class="t m5 x2c h2e y7ced ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x2c h2e y7cee ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 x1a0 h88 y7cef ffd fs4e fc2 sc0 ls0 ws0">Rio_readinitb(&amp;rio,<span class="_ _e"> </span>connfd);</div><div class="t m5 x17 h88 y7405 ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _e2"> </span><span class="ffd fs4e fc2">while((n<span class="_ _e"> </span>=<span class="_ _e"> </span>Rio_readlineb(&amp;rio,<span class="_ _f"> </span>buf,<span class="_ _e"> </span>MAXLINE))<span class="_ _e"> </span>!=<span class="_ _f"> </span>0)<span class="_ _e"> </span>{</span></div><div class="t m5 x17 h88 y2b89 ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _18b"> </span><span class="ffd fs4e fc2">printf(&quot;server<span class="_ _e"> </span>received<span class="_ _f"> </span>%d<span class="_ _e"> </span>bytes\n&quot;,<span class="_ _e"> </span>(int)n);</span></div><div class="t m5 x17 h88 y7cf0 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _18b"> </span><span class="ffd fs4e fc2">Rio_writen(connfd,<span class="_ _e"> </span>buf,<span class="_ _f"> </span>n);</span></div><div class="t m5 x17 h88 y7cf1 ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x17 h2e y7cf2 ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x2d h88 y7cf3 ffd fs4e fc2 sc0 ls0 ws0">}</div><div class="t m5 xde h2c y7cf4 ffa fs16 fc2 sc0 ls0 ws0">code/netp/echo<span class="_ _1"></span>.c</div><div class="t m5 x17 h2f y7cf5 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>11.22</div><div class="t m5 x155 h3a y7cf6 ffd fs19 fc1 sc0 ls0 ws0">echo<span class="_ _10"> </span><span class="ffe fs16">function<span class="_"> </span>that<span class="_"> </span>reads<span class="_"> </span>and<span class="_"> </span>echoes<span class="_"> </span>text<span class="_"> </span>lines.</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
