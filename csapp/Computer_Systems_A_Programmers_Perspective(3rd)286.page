<div id="pf11e" class="pf w2 h11" data-page-no="11e"><div class="pc pc11e w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg11e.png"/><div class="t m5 xb5 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>3.7<span class="_ _60"> </span>Procedures<span class="_ _3e"> </span><span class="ffe fs1e">285</span></div><div class="t m5 x17 h3a ye7 ff6 fs16 fc2 sc0 ls0 ws0">(a)<span class="_ _10"> </span>Code<span class="_ _11"> </span>for<span class="_ _10"> </span><span class="ffd fs19">swap_add<span class="_ _10"> </span></span>and<span class="_ _11"> </span>calling<span class="_ _10"> </span>function</div><div class="t m5 x17 h2d y2283 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>swap_add(long<span class="_ _1f"> </span>*xp,<span class="_ _1f"> </span>long<span class="_ _e"> </span>*yp)</div><div class="t m5 x17 h2d y2284 ffd fs1e fc2 sc0 ls0 ws0">{</div><div class="t m5 x1b6 h2d y2285 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>x<span class="_ _1f"> </span>=<span class="_ _1f"> </span>*xp;</div><div class="t m5 x1b6 h2d y2286 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>y<span class="_ _1f"> </span>=<span class="_ _1f"> </span>*yp;</div><div class="t m5 x1b6 h2d y2287 ffd fs1e fc2 sc0 ls33 ws0">*<span class="_ _41"></span>x<span class="_ _41"></span>p=y<span class="_ _41"></span>;</div><div class="t m5 x1b6 h2d y2288 ffd fs1e fc2 sc0 ls33 ws0">*<span class="_ _41"></span>y<span class="_ _41"></span>p=x<span class="_ _41"></span>;</div><div class="t m5 x1b6 h2d y23a1 ffd fs1e fc2 sc0 ls0 ws0">retur<span class="ls33">nx+y<span class="_ _41"></span>;</span></div><div class="t m5 x17 h2d y23a2 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x17 h2d y2555 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>caller()</div><div class="t m5 x17 h2d y2556 ffd fs1e fc2 sc0 ls0 ws0">{</div><div class="t m5 x1b6 h2d y2557 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>arg1<span class="_ _1f"> </span>=<span class="_ _1f"> </span>534;</div><div class="t m5 x1b6 h2d y2558 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>arg2<span class="_ _1f"> </span>=<span class="_ _1f"> </span>1057;</div><div class="t m5 x1b6 h2d y2559 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>sum<span class="_ _1f"> </span>=<span class="_ _1f"> </span>swap_add(&amp;arg1,<span class="_ _e"> </span>&amp;arg2);</div><div class="t m5 x1b6 h2d y255a ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>diff<span class="_ _1f"> </span>=<span class="_ _1f"> </span>arg1<span class="_ _e"> </span>-<span class="_ _1f"> </span>arg2;</div><div class="t m5 x1b6 h2d y255b ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>sum<span class="_ _1f"> </span>*<span class="_ _1f"> </span>diff;</div><div class="t m5 x17 h2d y2840 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x17 h34 y29fc ff6 fs16 fc2 sc0 ls0 ws0">(b)<span class="_ _10"> </span>Generated<span class="_ _11"> </span>assembly<span class="_ _10"> </span>code<span class="_ _10"> </span>for<span class="_ _11"> </span>calling<span class="_ _10"> </span>function</div><div class="t m5 x2e h61 y29fd ff13 fs35 fc6 sc0 ls0 ws0">long<span class="_ _f"> </span>caller()</div><div class="t m5 x2c h2d y29fe ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">caller:</span></div><div class="t m5 x2c h2d y29ff ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _45"> </span><span class="ffd fs1e fc2">subq<span class="_ _46"> </span>$16,<span class="_ _e"> </span>%rsp<span class="_ _5d"> </span></span><span class="ff13 fs35">Allocate<span class="_ _f"> </span>16<span class="_ _e"> </span>bytes<span class="_ _21"> </span>for<span class="_ _f"> </span>stack<span class="_ _e"> </span>frame</span></div><div class="t m5 x2c h2d y2a00 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>$534,<span class="_ _e"> </span>(%rsp)<span class="_ _59"> </span></span><span class="ff13 fs35">Store<span class="_ _f"> </span>534<span class="_ _e"> </span>in<span class="_ _21"> </span>arg1</span></div><div class="t m5 x2c h2e y2a01 ff6 fs20 fc6 sc0 ls0 ws0">4</div><div class="t m5 xd1 h2d y29bd ffd fs1e fc2 sc0 ls0 ws0">movq<span class="_ _46"> </span>$1057,<span class="_ _e"> </span>8(%rsp)<span class="_ _f1"> </span><span class="ff13 fs35 fc6">Store<span class="_ _f"> </span>1057<span class="_ _f"> </span>in<span class="_ _f"> </span>arg2</span></div><div class="t m5 x2c h2e y28f5 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 xd1 h2d y28f6 ffd fs1e fc2 sc0 ls0 ws0">leaq<span class="_ _46"> </span>8(%rsp),<span class="_ _e"> </span>%rsi<span class="_ _93"> </span><span class="ff13 fs35 fc6">Compute<span class="_ _e"> </span>&amp;arg2<span class="_ _21"> </span>as<span class="_ _f"> </span>second<span class="_ _f"> </span>argument</span></div><div class="t m5 x2c h2d y28f7 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>%rsp,<span class="_ _e"> </span>%rdi<span class="_ _2a"> </span></span><span class="ff13 fs35">Compute<span class="_ _f"> </span>&amp;arg1<span class="_ _f"> </span>as<span class="_ _e"> </span>first<span class="_ _21"> </span>argument</span></div><div class="t m5 x2c h2d y28f8 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _45"> </span><span class="ffd fs1e fc2">call<span class="_ _46"> </span>swap_add<span class="_ _81"> </span></span><span class="ff13 fs35">Call<span class="_ _f"> </span>swap_add(&amp;arg1,<span class="_ _e"> </span>&amp;arg2)</span></div><div class="t m5 x2c h2d y28f9 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>(%rsp),<span class="_ _e"> </span>%rdx<span class="_ _59"> </span></span><span class="ff13 fs35">Get<span class="_ _f"> </span>arg1</span></div><div class="t m5 x2c h2e y28fa ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 xd1 h2d y28fb ffd fs1e fc2 sc0 ls0 ws0">subq<span class="_ _46"> </span>8(%rsp),<span class="_ _e"> </span>%rdx<span class="_ _93"> </span><span class="ff13 fs35 fc6">Compute<span class="_ _e"> </span>diff<span class="_ _21"> </span>=<span class="_ _f"> </span>arg1<span class="_ _f"> </span>-<span class="_ _e"> </span>arg2</span></div><div class="t m5 x17 h2d y28fc ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _45"> </span><span class="ffd fs1e fc2">imulq<span class="_ _3f"> </span>%rdx,<span class="_ _e"> </span>%rax<span class="_ _2a"> </span></span><span class="ff13 fs35">Compute<span class="_ _f"> </span>sum<span class="_ _f"> </span>*<span class="_ _e"> </span>diff</span></div><div class="t m5 x17 h2d y28fd ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _45"> </span><span class="ffd fs1e fc2">addq<span class="_ _46"> </span>$16,<span class="_ _e"> </span>%rsp<span class="_ _5d"> </span></span><span class="ff13 fs35">Deallocate<span class="_ _f"> </span>stack<span class="_ _e"> </span>frame</span></div><div class="t m5 x17 h2d y28fe ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _45"> </span><span class="ffd fs1e fc2">ret<span class="_ _139"> </span></span><span class="ff13 fs35">Return</span></div><div class="t m5 x17 h34 y2a02 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _13"> </span>3.31<span class="_ _c"> </span><span class="fc1">Example<span class="_ _10"> </span>of<span class="_ _13"> </span>procedure<span class="_ _13"> </span>deﬁnition<span class="_ _10"> </span>and<span class="_ _13"> </span>call.<span class="_ _13"> </span><span class="ff6">The<span class="_ _10"> </span>calling<span class="_ _13"> </span>code<span class="_ _13"> </span>must<span class="_ _10"> </span>allocate</span></span></div><div class="t m5 x17 h34 y2a03 ff6 fs16 fc1 sc0 ls0 ws0">a<span class="_ _10"> </span>stack<span class="_ _11"> </span>frame<span class="_ _10"> </span>due<span class="_ _10"> </span>to<span class="_ _11"> </span>the<span class="_ _10"> </span>presence<span class="_ _11"> </span>of<span class="_ _10"> </span>address<span class="_ _11"> </span>operators.</div><div class="t m5 x17 h26 y561 ffd fs19 fc1 sc0 ls0 ws0">proc<span class="ff7">.<span class="_"> </span>T<span class="_ _1"></span>his<span class="_"> </span>includes<span class="_ _13"> </span>setting<span class="_"> </span>up<span class="_"> </span>the<span class="_ _13"> </span>stack<span class="_"> </span>frame<span class="_"> </span>for<span class="_ _13"> </span>the<span class="_"> </span>local<span class="_"> </span>variables<span class="_"> </span>and<span class="_ _13"> </span>function</span></div><div class="t m5 x17 h26 y562 ff7 fs19 fc1 sc0 ls0 ws0">parameters<span class="_ _1"></span>,<span class="_ _f"> </span>and<span class="_ _21"> </span>for<span class="_ _f"> </span>loading<span class="_ _21"> </span>function<span class="_ _21"> </span>arguments<span class="_ _21"> </span>into<span class="_ _21"> </span>registers<span class="_ _1"></span>.<span class="_ _f"> </span>As<span class="_ _21"> </span>F<span class="_ _0"></span>igure<span class="_ _21"> </span>3.33</div><div class="t m5 x17 h26 y563 ff7 fs19 fc1 sc0 ls0 ws0">shows<span class="_ _1"></span>,<span class="_ _16"> </span>local<span class="_ _16"> </span>variables<span class="_ _16"> </span><span class="ffd">x1</span>–<span class="ffd">x4<span class="_ _16"> </span></span>are<span class="_ _16"> </span>allocated<span class="_ _16"> </span>on<span class="_ _16"> </span>the<span class="_ _16"> </span>stack<span class="_ _11"> </span>and<span class="_ _16"> </span>have<span class="_ _16"> </span>different<span class="_ _16"> </span>sizes<span class="_ _1"></span>.</div><div class="t m5 x17 h26 y564 ff7 fs19 fc1 sc0 ls0 ws0">Expressing<span class="_ _6"> </span>their<span class="_ _6"> </span>locations<span class="_ _13"> </span>as<span class="_ _a"> </span>offsets<span class="_ _13"> </span>relative<span class="_ _a"> </span>to<span class="_ _13"> </span>the<span class="_ _a"> </span>stack<span class="_ _13"> </span>pointer<span class="_ _1"></span>,<span class="_ _13"> </span>they<span class="_ _6"> </span>occupy<span class="_ _6"> </span>bytes</div><div class="t m5 x17 h26 y565 ff7 fs19 fc1 sc0 ls0 ws0">24–31<span class="_ _16"> </span>(<span class="ffd">x1</span>),<span class="_ _14"> </span>20–23<span class="_ _14"> </span>(<span class="ffd">x2</span>),<span class="_ _14"> </span>18–19<span class="_ _14"> </span>(<span class="ffd">x3</span>),<span class="_ _14"> </span>and<span class="_ _16"> </span>17<span class="_ _14"> </span>(<span class="ffd">s3</span>).<span class="_ _16"> </span>Pointers<span class="_ _16"> </span>to<span class="_ _16"> </span>these<span class="_ _14"> </span>locations<span class="_ _16"> </span>are</div><div class="t m5 x17 h26 y566 ff7 fs19 fc1 sc0 ls0 ws0">generated<span class="_"> </span>by<span class="_"> </span><span class="ffd">leaq<span class="_ _11"> </span></span>instructions<span class="_"> </span>(lines<span class="_"> </span>7,<span class="_"> </span>10,<span class="_ _11"> </span>12,<span class="_"> </span>and<span class="_"> </span>14).<span class="_ _11"> </span>Arguments<span class="_"> </span>7<span class="_"> </span>(with<span class="_ _11"> </span>value</div><div class="t m5 x17 h26 y567 ff7 fs19 fc1 sc0 ls0 ws0">4)<span class="_"> </span>and<span class="_"> </span>8<span class="_ _13"> </span>(a<span class="_"> </span>pointer<span class="_"> </span>to<span class="_"> </span>the<span class="_ _13"> </span>location<span class="_"> </span>of<span class="_"> </span><span class="ffd">x4</span>)<span class="_"> </span>are<span class="_ _13"> </span>stored<span class="_"> </span>on<span class="_"> </span>the<span class="_"> </span>stack<span class="_ _13"> </span>at<span class="_"> </span>offsets<span class="_"> </span>0<span class="_"> </span>and<span class="_ _13"> </span>8</div><div class="t m5 x17 h26 y216d ff7 fs19 fc1 sc0 ls0 ws0">relative<span class="_"> </span>to<span class="_"> </span>the<span class="_"> </span>stack<span class="_"> </span>pointer.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
