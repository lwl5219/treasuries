<div id="pf37f" class="pf w2 h11" data-page-no="37f"><div class="pc pc37f w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg37f.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">894<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>9<span class="_ _3d"> </span>Virtual<span class="_ _10"> </span>Memory</span></div><div class="t m5 x83 h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 xb h2d y280 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">int<span class="_ _1f"> </span>mm_init(void)</span></div><div class="t m5 xb h2d y281 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 xb h2d y283 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>Create<span class="_ _1f"> </span>the<span class="_ _1f"> </span>initial<span class="_ _e"> </span>empty<span class="_ _1f"> </span>heap<span class="_ _e"> </span>*/</span></div><div class="t m5 xb h2d y284 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>((heap_listp<span class="_ _1f"> </span>=<span class="_ _1f"> </span>mem_sbrk(4*WSIZE))<span class="_ _e"> </span>==<span class="_ _1f"> </span>(void<span class="_ _e"> </span>*)-1)</span></div><div class="t m5 xb h2d y285 ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _70"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>-1;</span></div><div class="t m5 xb h2d y286 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(heap_listp,<span class="_ _e"> </span>0);<span class="_ _fd"> </span>/*<span class="_ _1f"> </span>Alignment<span class="_ _e"> </span>padding<span class="_ _1f"> </span>*/</span></div><div class="t m5 xb h2d y287 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(heap_listp<span class="_ _e"> </span>+<span class="_ _1f"> </span>(1*WSIZE),<span class="_ _1f"> </span>PACK(DSIZE,<span class="_ _e"> </span>1));<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Prologue<span class="_ _1f"> </span>header<span class="_ _1f"> </span>*/</span></div><div class="t m5 xb h2d y4493 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(heap_listp<span class="_ _e"> </span>+<span class="_ _1f"> </span>(2*WSIZE),<span class="_ _1f"> </span>PACK(DSIZE,<span class="_ _e"> </span>1));<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Prologue<span class="_ _1f"> </span>footer<span class="_ _1f"> </span>*/</span></div><div class="t m5 xb h2d y4a9a ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(heap_listp<span class="_ _e"> </span>+<span class="_ _1f"> </span>(3*WSIZE),<span class="_ _1f"> </span>PACK(0,<span class="_ _e"> </span>1));<span class="_ _8c"> </span>/*<span class="_ _1f"> </span>Epilogue<span class="_ _e"> </span>header<span class="_ _1f"> </span>*/</span></div><div class="t m5 x14 h2d y4a9b ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _20"> </span><span class="ffd fs1e fc2">heap_listp<span class="_ _e"> </span>+=<span class="_ _1f"> </span>(2*WSIZE);</span></div><div class="t m5 x14 h2e y4a9c ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x14 h2e y65f2 ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x26 h2d y906 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Extend<span class="_ _1f"> </span>the<span class="_ _1f"> </span>empty<span class="_ _e"> </span>heap<span class="_ _1f"> </span>with<span class="_ _e"> </span>a<span class="_ _1f"> </span>free<span class="_ _1f"> </span>block<span class="_ _e"> </span>of<span class="_ _1f"> </span>CHUNKSIZE<span class="_ _e"> </span>bytes<span class="_ _1f"> </span>*/</div><div class="t m5 x14 h2d y4a9d ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>(extend_heap(CHUNKSIZE/WSIZE)<span class="_ _1f"> </span>==<span class="_ _1f"> </span>NULL)</span></div><div class="t m5 x14 h2d y4a9e ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _70"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>-1;</span></div><div class="t m5 x14 h2d y4a9f ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>0;</span></div><div class="t m5 x14 h2d y417 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x83 h2c y73ef ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x14 h2f y73f0 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>9.44</div><div class="t m5 xe h3a y73f1 ffd fs19 fc1 sc0 ls0 ws0">mm_init<span class="_ _10"> </span><span class="ffe fs16">creates<span class="_"> </span>a<span class="_"> </span>heap<span class="_"> </span>with<span class="_"> </span>an<span class="_"> </span>initial<span class="_"> </span>free<span class="_"> </span>block.</span></div><div class="t m5 x83 h2c y73f2 ffa fs16 fc1 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 xb h2d y73f3 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">static<span class="_ _1f"> </span>void<span class="_ _e"> </span>*extend_heap(size_t<span class="_ _1f"> </span>words)</span></div><div class="t m5 xb h2d y73f4 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 xb h2d y73f5 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">char<span class="_ _e"> </span>*bp;</span></div><div class="t m5 xb h2d y73f6 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">size_t<span class="_ _e"> </span>size;</span></div><div class="t m5 xb h2e y73f7 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 xb h2e y73f8 ff6 fs20 fc6 sc0 ls0 ws0">6</div><div class="t m5 x26 h2d y73f9 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Allocate<span class="_ _1f"> </span>an<span class="_ _1f"> </span>even<span class="_ _e"> </span>number<span class="_ _1f"> </span>of<span class="_ _e"> </span>words<span class="_ _1f"> </span>to<span class="_ _1f"> </span>maintain<span class="_ _e"> </span>alignment<span class="_ _1f"> </span>*/</div><div class="t m5 xb h2d y73fa ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">size<span class="_ _e"> </span>=<span class="_ _1f"> </span>(words<span class="_ _1f"> </span>%<span class="_ _e"> </span>2)<span class="_ _1f"> </span>?<span class="_ _e"> </span>(words+1)<span class="_ _1f"> </span>*<span class="_ _1f"> </span>WSIZE<span class="_ _e"> </span>:<span class="_ _1f"> </span>words<span class="_ _e"> </span>*<span class="_ _1f"> </span>WSIZE;</span></div><div class="t m5 xb h2d y73fb ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>((long)(bp<span class="_ _1f"> </span>=<span class="_ _1f"> </span>mem_sbrk(size))<span class="_ _e"> </span>==<span class="_ _1f"> </span>-1)</span></div><div class="t m5 xb h2d y73fc ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _70"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>NULL;</span></div><div class="t m5 x14 h2e y73fd ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x14 h2e y73fe ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x26 h2d y73ff ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Initialize<span class="_ _1f"> </span>free<span class="_ _1f"> </span>block<span class="_ _e"> </span>header/footer<span class="_ _1f"> </span>and<span class="_ _e"> </span>the<span class="_ _1f"> </span>epilogue<span class="_ _1f"> </span>header<span class="_ _e"> </span>*/</div><div class="t m5 x14 h2d y7400 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(HDRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));<span class="_ _82"> </span>/*<span class="_ _1f"> </span>Free<span class="_ _1f"> </span>block<span class="_ _e"> </span>header<span class="_ _1f"> </span>*/</span></div><div class="t m5 x14 h2d y7401 ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(FTRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));<span class="_ _82"> </span>/*<span class="_ _1f"> </span>Free<span class="_ _1f"> </span>block<span class="_ _e"> </span>footer<span class="_ _1f"> </span>*/</span></div><div class="t m5 x14 h2e y7402 ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x26 h2d y7403 ffd fs1e fc2 sc0 ls0 ws0">PUT(HDRP(NEXT_BLKP(bp)),<span class="_ _e"> </span>PACK(0,<span class="_ _1f"> </span>1));<span class="_ _1f"> </span>/*<span class="_ _e"> </span>New<span class="_ _1f"> </span>epilogue<span class="_ _e"> </span>header<span class="_ _1f"> </span>*/</div><div class="t m5 x14 h2e y29c6 ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x14 h2e y7404 ff6 fs20 fc6 sc0 ls0 ws0">16</div><div class="t m5 x26 h2d y7405 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Coalesce<span class="_ _1f"> </span>if<span class="_ _1f"> </span>the<span class="_ _e"> </span>previous<span class="_ _1f"> </span>block<span class="_ _e"> </span>was<span class="_ _1f"> </span>free<span class="_ _1f"> </span>*/</div><div class="t m5 x14 h2d y7406 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>coalesce(bp);</span></div><div class="t m5 x14 h2d y7407 ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x83 h2c y7408 ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x14 h2f y7409 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>9.45</div><div class="t m5 xe h3a yd18 ffd fs19 fc1 sc0 ls0 ws0">extend_heap<span class="_ _10"> </span><span class="ffe fs16">extends<span class="_"> </span>the<span class="_"> </span>heap<span class="_"> </span>with<span class="_"> </span>a<span class="_"> </span>new<span class="_"> </span>free<span class="_"> </span>block.</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
