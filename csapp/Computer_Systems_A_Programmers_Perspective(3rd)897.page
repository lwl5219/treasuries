<div id="pf381" class="pf w2 h11" data-page-no="381"><div class="pc pc381 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg381.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">896<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>9<span class="_ _3d"> </span>Virtual<span class="_ _10"> </span>Memory</span></div><div class="t m5 x83 h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x1f h2d y280 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">void<span class="_ _1f"> </span>mm_free(void<span class="_ _e"> </span>*bp)</span></div><div class="t m5 x1f h2d y281 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x1f h2d y283 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">size_t<span class="_ _e"> </span>size<span class="_ _1f"> </span>=<span class="_ _1f"> </span>GET_SIZE(HDRP(bp));</span></div><div class="t m5 x1f h2e y284 ff6 fs20 fc6 sc0 ls0 ws0">4</div><div class="t m5 x1f h2e y69c3 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x33 h2d y285 ffd fs1e fc2 sc0 ls0 ws0">PUT(HDRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</div><div class="t m5 x1f h2d y286 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">PUT(FTRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</span></div><div class="t m5 x1f h2d y287 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">coalesce(bp);</span></div><div class="t m5 x1f h2d y4493 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1f h2e y4a9a ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 x1b0 h2e y6a52 ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x4f h2d y4a9b ffd fs1e fc2 sc0 ls0 ws0">static<span class="_ _e"> </span>void<span class="_ _1f"> </span>*coalesce(void<span class="_ _1f"> </span>*bp)</div><div class="t m5 x1b0 h2d y4a9c ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x1b0 h2d y906 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _20"> </span><span class="ffd fs1e fc2">size_t<span class="_ _e"> </span>prev_alloc<span class="_ _1f"> </span>=<span class="_ _1f"> </span>GET_ALLOC(FTRP(PREV_BLKP(bp)));</span></div><div class="t m5 x1b0 h2d y4a9d ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">size_t<span class="_ _e"> </span>next_alloc<span class="_ _1f"> </span>=<span class="_ _1f"> </span>GET_ALLOC(HDRP(NEXT_BLKP(bp)));</span></div><div class="t m5 x1b0 h2d y4a9e ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _20"> </span><span class="ffd fs1e fc2">size_t<span class="_ _e"> </span>size<span class="_ _1f"> </span>=<span class="_ _1f"> </span>GET_SIZE(HDRP(bp));</span></div><div class="t m5 x1b0 h2e y4a9f ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x1b0 h2e y6a28 ff6 fs20 fc6 sc0 ls0 ws0">16</div><div class="t m5 x33 h2d y417 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(prev_alloc<span class="_ _1f"> </span>&amp;&amp;<span class="_ _1f"> </span>next_alloc)<span class="_ _e"> </span>{<span class="_ _44"> </span>/*<span class="_ _1f"> </span>Case<span class="_ _e"> </span>1<span class="_ _1f"> </span>*/</div><div class="t m5 x1b0 h2d y4aa0 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _70"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>bp;</span></div><div class="t m5 x1b0 h2d yeb4 ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2e y2a2b ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x1b0 h2e y6779 ff6 fs20 fc6 sc0 ls0 ws0">20</div><div class="t m5 x33 h2d y1ab8 ffd fs1e fc2 sc0 ls0 ws0">else<span class="_ _e"> </span>if<span class="_ _1f"> </span>(prev_alloc<span class="_ _1f"> </span>&amp;&amp;<span class="_ _e"> </span>!next_alloc)<span class="_ _1f"> </span>{<span class="_ _5a"> </span>/*<span class="_ _1f"> </span>Case<span class="_ _e"> </span>2<span class="_ _1f"> </span>*/</div><div class="t m5 x1b0 h2e y94f ff6 fs20 fc6 sc0 ls0 ws0">21</div><div class="t m5 xf7 h2d y1ada ffd fs1e fc2 sc0 ls0 ws0">size<span class="_ _e"> </span>+=<span class="_ _1f"> </span>GET_SIZE(HDRP(NEXT_BLKP(bp)));</div><div class="t m5 x1b0 h2d y4aa1 ff6 fs20 fc6 sc0 ls0 ws0">22<span class="_ _70"> </span><span class="ffd fs1e fc2">PUT(HDRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</span></div><div class="t m5 x1b0 h2d y3228 ff6 fs20 fc6 sc0 ls0 ws0">23<span class="_ _70"> </span><span class="ffd fs1e fc2">PUT(FTRP(bp),<span class="_ _e"> </span>PACK(size,0));</span></div><div class="t m5 x1b0 h2d y35d ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2e y4aa3 ff6 fs20 fc6 sc0 ls0 ws0">25</div><div class="t m5 x1b0 h2e y6b3a ff6 fs20 fc6 sc0 ls0 ws0">26</div><div class="t m5 x33 h2d y2467 ffd fs1e fc2 sc0 ls0 ws0">else<span class="_ _e"> </span>if<span class="_ _1f"> </span>(!prev_alloc<span class="_ _1f"> </span>&amp;&amp;<span class="_ _e"> </span>next_alloc)<span class="_ _1f"> </span>{<span class="_ _5a"> </span>/*<span class="_ _1f"> </span>Case<span class="_ _e"> </span>3<span class="_ _1f"> </span>*/</div><div class="t m5 x1b0 h2d y322b ff6 fs20 fc6 sc0 ls0 ws0">27<span class="_ _70"> </span><span class="ffd fs1e fc2">size<span class="_ _e"> </span>+=<span class="_ _1f"> </span>GET_SIZE(HDRP(PREV_BLKP(bp)));</span></div><div class="t m5 x1b0 h2d y322c ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _70"> </span><span class="ffd fs1e fc2">PUT(FTRP(bp),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</span></div><div class="t m5 x1b0 h2d y441 ff6 fs20 fc6 sc0 ls0 ws0">29<span class="_ _70"> </span><span class="ffd fs1e fc2">PUT(HDRP(PREV_BLKP(bp)),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</span></div><div class="t m5 x1b0 h2d y2c5c ff6 fs20 fc6 sc0 ls0 ws0">30<span class="_ _70"> </span><span class="ffd fs1e fc2">bp<span class="_ _e"> </span>=<span class="_ _1f"> </span>PREV_BLKP(bp);</span></div><div class="t m5 x1b0 h2d y322d ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2e y24a ff6 fs20 fc6 sc0 ls0 ws0">32</div><div class="t m5 x1b0 h2e y61bb ff6 fs20 fc6 sc0 ls0 ws0">33</div><div class="t m5 x33 h2d y8f9 ffd fs1e fc2 sc0 ls0 ws0">else<span class="_ _e"> </span>{<span class="_ _226"> </span>/*<span class="_ _e"> </span>Case<span class="_ _1f"> </span>4<span class="_ _1f"> </span>*/</div><div class="t m5 x1b0 h2d y5fd ff6 fs20 fc6 sc0 ls0 ws0">34<span class="_ _70"> </span><span class="ffd fs1e fc2">size<span class="_ _e"> </span>+=<span class="_ _1f"> </span>GET_SIZE(HDRP(PREV_BLKP(bp)))<span class="_ _1f"> </span>+</span></div><div class="t m5 x1b0 h2d y4aa5 ff6 fs20 fc6 sc0 ls0 ws0">35<span class="_ _d1"> </span><span class="ffd fs1e fc2">GET_SIZE(FTRP(NEXT_BLKP(bp)));</span></div><div class="t m5 x1b0 h2e y22d4 ff6 fs20 fc6 sc0 ls0 ws0">36</div><div class="t m5 xf7 h2d y74d ffd fs1e fc2 sc0 ls0 ws0">PUT(HDRP(PREV_BLKP(bp)),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</div><div class="t m5 x1b0 h2d y277 ff6 fs20 fc6 sc0 ls0 ws0">37<span class="_ _70"> </span><span class="ffd fs1e fc2">PUT(FTRP(NEXT_BLKP(bp)),<span class="_ _e"> </span>PACK(size,<span class="_ _1f"> </span>0));</span></div><div class="t m5 x1b0 h2d y2269 ff6 fs20 fc6 sc0 ls0 ws0">38<span class="_ _70"> </span><span class="ffd fs1e fc2">bp<span class="_ _e"> </span>=<span class="_ _1f"> </span>PREV_BLKP(bp);</span></div><div class="t m5 x1b0 h2d y226b ff6 fs20 fc6 sc0 ls0 ws0">39<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2d y226d ff6 fs20 fc6 sc0 ls0 ws0">40<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>bp;</span></div><div class="t m5 x1b0 h2d y8d5 ff6 fs20 fc6 sc0 ls0 ws0">41<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x83 h2c y7425 ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x1d h2f y7426 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _11"> </span>9.46</div><div class="t m5 x15e h3a y2423 ffd fs19 fc1 sc0 ls0 ws0">mm_free<span class="_ _11"> </span><span class="ffe fs16">frees<span class="_ _11"> </span>a<span class="_ _16"> </span>block<span class="_"> </span>and<span class="_ _11"> </span>uses<span class="_ _16"> </span>boundary-tag<span class="_ _11"> </span>coalescing<span class="_ _11"> </span>to<span class="_ _16"> </span>merge<span class="_"> </span>it</span></div><div class="t m5 x1d h2f y7427 ffe fs16 fc1 sc0 ls0 ws0">with<span class="_"> </span>any<span class="_"> </span>adjacent<span class="_"> </span>free<span class="_"> </span>blocks<span class="_"> </span>in<span class="_"> </span>constant<span class="_"> </span>time.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
