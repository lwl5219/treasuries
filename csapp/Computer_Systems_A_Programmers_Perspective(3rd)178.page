<div id="pfb2" class="pf w2 h11" data-page-no="b2"><div class="pc pcb2 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bgb2.png"/><div class="t m5 x5f h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Homework<span class="_ _10"> </span>Problems<span class="_ _1b"> </span><span class="ffe fs1e">177</span></div><div class="t m5 x17 h42 y9c ff6 fs29 fc6 sc0 ls0 ws0">Bit-Level<span class="_ _11"> </span>Floating-Point<span class="_ _16"> </span>Coding<span class="_ _16"> </span>Rules</div><div class="t m5 x17 h26 y1c4a ff7 fs19 fc1 sc0 ls0 ws0">In<span class="_ _11"> </span>the<span class="_ _11"> </span>following<span class="_ _11"> </span>problems<span class="_ _1"></span>,<span class="_ _11"> </span>you<span class="_ _11"> </span>will<span class="_ _11"> </span>write<span class="_ _11"> </span>code<span class="_ _11"> </span>to<span class="_ _11"> </span>implement<span class="_ _11"> </span>ﬂoating-point<span class="_ _11"> </span>func-</div><div class="t m5 x17 h26 y1c4b ff7 fs19 fc1 sc0 ls0 ws0">tions<span class="_ _1"></span>,<span class="_ _15"> </span>operating<span class="_ _15"> </span>directly<span class="_ _14"> </span>on<span class="_ _15"> </span>bit-level<span class="_ _14"> </span>representations<span class="_ _15"> </span>of<span class="_ _14"> </span>ﬂoating-point<span class="_ _14"> </span>numbers<span class="_ _0"></span>.</div><div class="t m5 x17 h26 y1c4c ff7 fs19 fc1 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _13"> </span>code<span class="_"> </span>should<span class="_ _13"> </span>exactly<span class="_"> </span>replicate<span class="_ _13"> </span>the<span class="_"> </span>conventions<span class="_ _13"> </span>for<span class="_ _13"> </span>IEEE<span class="_"> </span>ﬂoating-point<span class="_ _13"> </span>oper<span class="_ _1"></span>-</div><div class="t m5 x17 h26 y1c4d ff7 fs19 fc1 sc0 ls0 ws0">ations<span class="_ _1"></span>,<span class="_"> </span>including<span class="_"> </span>using<span class="_"> </span>round-to-even<span class="_"> </span>mode<span class="_"> </span>when<span class="_"> </span>rounding<span class="_"> </span>is<span class="_"> </span>required.</div><div class="t m5 x26 h26 y1c4e ff7 fs19 fc1 sc0 ls0 ws0">T<span class="_ _7"></span>o<span class="_"> </span>this<span class="_"> </span>end,<span class="_"> </span>we<span class="_"> </span>deﬁne<span class="_"> </span>data<span class="_"> </span>type<span class="_"> </span><span class="ffd">float_bits<span class="_ _11"> </span></span>to<span class="_"> </span>be<span class="_"> </span>equivalent<span class="_"> </span>to<span class="_"> </span><span class="ffd">unsigned</span>:</div><div class="t m5 x17 h2d y1c4f ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Access<span class="_ _1f"> </span>bit-level<span class="_ _1f"> </span>representation<span class="_ _e"> </span>floating-point<span class="_ _1f"> </span>number<span class="_ _e"> </span>*/</div><div class="t m5 x17 h2d y1c50 ffd fs1e fc2 sc0 ls0 ws0">typedef<span class="_ _e"> </span>unsigned<span class="_ _1f"> </span>float_bits;</div><div class="t m5 x26 h26 y1c51 ff7 fs19 fc2 sc0 ls0 ws0">Rather<span class="_ _16"> </span>than<span class="_ _14"> </span>using<span class="_ _14"> </span>data<span class="_ _14"> </span>type<span class="_ _14"> </span><span class="ffd">float<span class="_ _14"> </span></span>in<span class="_ _16"> </span>your<span class="_ _14"> </span>code,<span class="_ _14"> </span>you<span class="_ _16"> </span>will<span class="_ _14"> </span>use<span class="_ _14"> </span><span class="ffd">float_bits</span>.</div><div class="t m5 x17 h26 y1c52 ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>ou<span class="_ _11"> </span>may<span class="_ _11"> </span>use<span class="_ _11"> </span>both<span class="_ _11"> </span><span class="ffd">int<span class="_ _16"> </span></span>and<span class="_ _11"> </span><span class="ffd">unsigned<span class="_ _11"> </span></span>data<span class="_ _11"> </span>types<span class="_ _1"></span>,<span class="_ _16"> </span>including<span class="_ _11"> </span>unsigned<span class="_ _11"> </span>and<span class="_ _11"> </span>integer</div><div class="t m5 x17 h26 y1c53 ff7 fs19 fc2 sc0 ls0 ws0">constants<span class="_ _16"> </span>and<span class="_ _14"> </span>operations<span class="_ _1"></span>.<span class="_ _14"> </span>Y<span class="_ _3"></span>ou<span class="_ _14"> </span>may<span class="_ _16"> </span>not<span class="_ _14"> </span>use<span class="_ _14"> </span>any<span class="_ _14"> </span>unions<span class="_ _1"></span>,<span class="_ _14"> </span>structs<span class="_ _1"></span>,<span class="_ _15"> </span>or<span class="_ _14"> </span>arrays<span class="_ _1"></span>.<span class="_ _14"> </span>Most</div><div class="t m5 x17 h26 y1c54 ff7 fs19 fc2 sc0 ls0 ws0">signiﬁcantly<span class="_ _3"></span>,<span class="_ _14"> </span>you<span class="_ _16"> </span>may<span class="_ _14"> </span>not<span class="_ _16"> </span>use<span class="_ _14"> </span>any<span class="_ _16"> </span>ﬂoating-point<span class="_ _14"> </span>data<span class="_ _16"> </span>types<span class="_ _1"></span>,<span class="_ _14"> </span>operations<span class="_ _0"></span>,<span class="_ _14"> </span>or<span class="_ _16"> </span>con-</div><div class="t m5 x17 h26 y1c55 ff7 fs19 fc2 sc0 ls0 ws0">stants<span class="_ _1"></span>.<span class="_ _16"> </span>Instead,<span class="_ _11"> </span>your<span class="_ _16"> </span>code<span class="_ _16"> </span>should<span class="_ _11"> </span>perform<span class="_ _16"> </span>the<span class="_ _16"> </span>bit<span class="_ _11"> </span>manipulations<span class="_ _16"> </span>that<span class="_ _11"> </span>implement</div><div class="t m5 x17 h26 y1c56 ff7 fs19 fc2 sc0 ls0 ws0">the<span class="_"> </span>speciﬁed<span class="_"> </span>ﬂoating-point<span class="_"> </span>operations<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y1c57 ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>he<span class="_"> </span>following<span class="_"> </span>function<span class="_ _13"> </span>illustrates<span class="_"> </span>the<span class="_"> </span>use<span class="_ _13"> </span>of<span class="_"> </span>these<span class="_"> </span>coding<span class="_ _13"> </span>rules<span class="_ _1"></span>.<span class="_"> </span>F<span class="_ _1"></span>or<span class="_"> </span>argument</div><div class="t m5 x17 h46 y1c58 ff11 fs19 fc2 sc0 ls0 ws0">f<span class="_ _6"> </span><span class="ff7">,<span class="_ _15"> </span>it<span class="_ _14"> </span>returns<span class="_ _14"> </span><span class="ff12">±</span><span class="ls11e">0i<span class="_ _42"></span>f<span class="ff11 ls0">f<span class="_ _1f"> </span><span class="ff7">is<span class="_ _16"> </span>denormalized<span class="_ _14"> </span>(preserving<span class="_ _14"> </span>the<span class="_ _14"> </span>sign<span class="_ _14"> </span>of<span class="_ _14"> </span></span>f<span class="_ _6"> </span><span class="ff7">),<span class="_ _15"> </span>and<span class="_ _14"> </span>returns<span class="_ _14"> </span></span>f</span></span></span></div><div class="t m5 x17 h26 y1c59 ff7 fs19 fc2 sc0 ls0 ws0">otherwise<span class="_ _1"></span>.</div><div class="t m5 x17 h2d y1c5a ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>If<span class="_ _1f"> </span>f<span class="_ _1f"> </span>is<span class="_ _e"> </span>denorm,<span class="_ _1f"> </span>return<span class="_ _e"> </span>0.<span class="_ _1a"> </span>Otherwise,<span class="_ _1f"> </span>return<span class="_ _1f"> </span>f<span class="_ _e"> </span>*/</div><div class="t m5 x17 h2d y1c5b ffd fs1e fc2 sc0 ls0 ws0">float_bits<span class="_ _e"> </span>float_denorm_zero(float_bits<span class="_ _1f"> </span>f)<span class="_ _1f"> </span>{</div><div class="t m5 x1b6 h2d y1c5c ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Decompose<span class="_ _1f"> </span>bit<span class="_ _1f"> </span>representation<span class="_ _e"> </span>into<span class="_ _1f"> </span>parts<span class="_ _e"> </span>*/</div><div class="t m5 x1b6 h2d y1c5d ffd fs1e fc2 sc0 ls0 ws0">unsigned<span class="_ _e"> </span>sign<span class="_ _1f"> </span>=<span class="_ _1f"> </span>f&gt;&gt;31;</div><div class="t m5 x1b6 h2d y1c5e ffd fs1e fc2 sc0 ls0 ws0">unsigned<span class="_ _e"> </span>exp<span class="_ _1f"> </span>=<span class="_ _1a"> </span>f&gt;&gt;23<span class="_ _1f"> </span>&amp;<span class="_ _e"> </span>0xFF;</div><div class="t m5 x1b6 h2d y1c5f ffd fs1e fc2 sc0 ls0 ws0">unsigned<span class="_ _e"> </span>frac<span class="_ _1f"> </span>=<span class="_ _1f"> </span>f<span class="_ _58"> </span>&amp;<span class="_ _1f"> </span>0x7FFFFF;</div><div class="t m5 x1b6 h2d y1c60 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(exp<span class="_ _1f"> </span>==<span class="_ _1f"> </span>0)<span class="_ _e"> </span>{</div><div class="t m5 x21e h2d y1c61 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Denormalized.<span class="_ _1a"> </span>Set<span class="_ _1f"> </span>fraction<span class="_ _1f"> </span>to<span class="_ _e"> </span>0<span class="_ _1f"> </span>*/</div><div class="t m5 x21e h2d y1c62 ffd fs1e fc2 sc0 ls0 ws0">frac<span class="_ _e"> </span>=<span class="_ _1f"> </span>0;</div><div class="t m5 x1b6 h2d y1c63 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x1b6 h2d y1c64 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Reassemble<span class="_ _1f"> </span>bits<span class="_ _1f"> </span>*/</div><div class="t m5 x1b6 h2d y1c65 ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>(sign<span class="_ _1f"> </span>&lt;&lt;<span class="_ _1f"> </span>31)<span class="_ _e"> </span>|<span class="_ _1f"> </span>(exp<span class="_ _e"> </span>&lt;&lt;<span class="_ _1f"> </span>23)<span class="_ _1f"> </span>|<span class="_ _e"> </span>frac;</div><div class="t m5 x17 h2d y1c66 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x17 h28 y1c67 ffe fs1e fc6 sc0 ls0 ws0">2.92</div><div class="t m5 x153 h73 y1c68 ff10 fs19 fc6 sc0 ls0 ws0">◆◆</div><div class="t m5 x17 h26 y1c69 ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>ollowing<span class="_ _16"> </span>the<span class="_ _16"> </span>bit-level<span class="_ _14"> </span>ﬂoating-point<span class="_ _16"> </span>coding<span class="_ _16"> </span>rules<span class="_ _1"></span>,<span class="_ _14"> </span>implement<span class="_ _16"> </span>the<span class="_ _14"> </span>function<span class="_ _16"> </span>with</div><div class="t m5 x17 h26 y1c6a ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>following<span class="_"> </span>prototype:</div><div class="t m5 x17 h2d y1c6b ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Compute<span class="_ _1f"> </span>-f.<span class="_ _1a"> </span>If<span class="_ _1f"> </span>f<span class="_ _e"> </span>is<span class="_ _1f"> </span>NaN,<span class="_ _e"> </span>then<span class="_ _1f"> </span>return<span class="_ _1f"> </span>f.<span class="_ _e"> </span>*/</div><div class="t m5 x17 h2d y1c6c ffd fs1e fc2 sc0 ls0 ws0">float_bits<span class="_ _e"> </span>float_negate(float_bits<span class="_ _1f"> </span>f);</div><div class="t m5 x26 h46 y1c6d ff7 fs19 fc2 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_ _16"> </span>ﬂoating-point<span class="_ _16"> </span>number<span class="_ _11"> </span><span class="ff11">f<span class="_ _13"> </span></span>,<span class="_ _16"> </span>this<span class="_ _11"> </span>function<span class="_ _16"> </span>computes<span class="_ _16"> </span><span class="ff12">−<span class="ff11">f<span class="_ _13"> </span></span></span><span class="ls11f">.I<span class="_ _42"></span>f<span class="ff11 ls0">f<span class="_ _e"> </span><span class="ff7">is<span class="_ _16"> </span><span class="ffa">NaN<span class="_ _5"></span></span>,<span class="_ _16"> </span>your</span></span></span></div><div class="t m5 x17 h26 y1c6e ff7 fs19 fc2 sc0 ls0 ws0">function<span class="_"> </span>should<span class="_"> </span>simply<span class="_"> </span>return<span class="_"> </span><span class="ff11">f<span class="_ _6"> </span></span>.</div><div class="t m5 x26 h26 y1c6f ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _7"></span>est<span class="_ _11"> </span>your<span class="_"> </span>function<span class="_ _11"> </span>by<span class="_ _11"> </span>evaluating<span class="_"> </span>it<span class="_ _11"> </span>for<span class="_"> </span>all<span class="_ _11"> </span>2</div><div class="t m5 x119 h3c y1bb9 ff7 fs25 fc2 sc0 ls0 ws0">32</div><div class="t m5 xd2 h26 yd76 ff7 fs19 fc2 sc0 ls0 ws0">values<span class="_"> </span>of<span class="_ _11"> </span>argument<span class="_"> </span><span class="ffd">f<span class="_ _11"> </span></span>and<span class="_ _11"> </span>com-</div><div class="t m5 x17 h26 yd77 ff7 fs19 fc2 sc0 ls0 ws0">paring<span class="_ _11"> </span>the<span class="_ _11"> </span>result<span class="_ _16"> </span>to<span class="_ _11"> </span>what<span class="_ _11"> </span>would<span class="_ _11"> </span>be<span class="_ _16"> </span>obtained<span class="_ _11"> </span>using<span class="_ _11"> </span>your<span class="_ _11"> </span>machine’s<span class="_ _11"> </span>ﬂoating-point</div><div class="t m5 x17 h26 yd78 ff7 fs19 fc2 sc0 ls0 ws0">operations<span class="_ _1"></span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
