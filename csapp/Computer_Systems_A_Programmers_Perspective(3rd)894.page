<div id="pf37e" class="pf w2 h11" data-page-no="37e"><div class="pc pc37e w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg37e.png"/><div class="t m5 x1c9 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>9.9<span class="_ _60"> </span>Dynamic<span class="_ _10"> </span>Memor<span class="_"> </span>y<span class="_ _10"> </span>Allocation<span class="_ _3e"> </span><span class="ffe fs1e">893</span></div><div class="t m5 x97 h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x2c h2e y280 ff6 fs20 fc6 sc0 ls0 ws0">1</div><div class="t m5 x2d h2d yad1 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Basic<span class="_ _1f"> </span>constants<span class="_ _1f"> </span>and<span class="_ _e"> </span>macros<span class="_ _1f"> </span>*/</div><div class="t m5 x2c h2d y281 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>WSIZE<span class="_ _6f"> </span>4<span class="_ _6f"> </span>/*<span class="_ _1f"> </span>Word<span class="_ _e"> </span>and<span class="_ _1f"> </span>header/footer<span class="_ _e"> </span>size<span class="_ _1f"> </span>(bytes)<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d yad2 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>DSIZE<span class="_ _6f"> </span>8<span class="_ _6f"> </span>/*<span class="_ _1f"> </span>Double<span class="_ _e"> </span>word<span class="_ _1f"> </span>size<span class="_ _e"> </span>(bytes)<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d yad3 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>CHUNKSIZE<span class="_ _1a"> </span>(1&lt;&lt;12)<span class="_ _1a"> </span>/*<span class="_ _e"> </span>Extend<span class="_ _1f"> </span>heap<span class="_ _1f"> </span>by<span class="_ _e"> </span>this<span class="_ _1f"> </span>amount<span class="_ _e"> </span>(bytes)<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2e y285 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x2c h2e y65f1 ff6 fs20 fc6 sc0 ls0 ws0">6</div><div class="t m5 x2d h2d yad4 ffd fs1e fc2 sc0 ls0 ws0">#define<span class="_ _e"> </span>MAX(x,<span class="_ _1f"> </span>y)<span class="_ _1f"> </span>((x)<span class="_ _e"> </span>&gt;<span class="_ _1f"> </span>(y)?<span class="_ _e"> </span>(x)<span class="_ _1f"> </span>:<span class="_ _1f"> </span>(y))</div><div class="t m5 x2c h2e yad5 ff6 fs20 fc6 sc0 ls0 ws0">7</div><div class="t m5 x2c h2e y73ea ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x2d h2d yad6 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Pack<span class="_ _1f"> </span>a<span class="_ _1f"> </span>size<span class="_ _e"> </span>and<span class="_ _1f"> </span>allocated<span class="_ _e"> </span>bit<span class="_ _1f"> </span>into<span class="_ _1f"> </span>a<span class="_ _e"> </span>word<span class="_ _1f"> </span>*/</div><div class="t m5 x2c h2d y496b ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>PACK(size,<span class="_ _e"> </span>alloc)<span class="_ _1a"> </span>((size)<span class="_ _1f"> </span>|<span class="_ _1f"> </span>(alloc))</span></div><div class="t m5 x17 h2e y50d4 ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x17 h2e y73eb ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x2d h2d y4a9c ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Read<span class="_ _1f"> </span>and<span class="_ _1f"> </span>write<span class="_ _e"> </span>a<span class="_ _1f"> </span>word<span class="_ _e"> </span>at<span class="_ _1f"> </span>address<span class="_ _1f"> </span>p<span class="_ _e"> </span>*/</div><div class="t m5 x17 h2d y61b6 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>GET(p)<span class="_ _6f"> </span>(*(unsigned<span class="_ _1f"> </span>int<span class="_ _e"> </span>*)(p))</span></div><div class="t m5 x17 h2d y2181 ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>PUT(p,<span class="_ _e"> </span>val)<span class="_ _1a"> </span>(*(unsigned<span class="_ _1f"> </span>int<span class="_ _1f"> </span>*)(p)<span class="_ _e"> </span>=<span class="_ _1f"> </span>(val))</span></div><div class="t m5 x17 h2e y554b ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x17 h2e y61b7 ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x2d h2d y4a9f ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Read<span class="_ _1f"> </span>the<span class="_ _1f"> </span>size<span class="_ _e"> </span>and<span class="_ _1f"> </span>allocated<span class="_ _e"> </span>fields<span class="_ _1f"> </span>from<span class="_ _1f"> </span>address<span class="_ _e"> </span>p<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y417 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>GET_SIZE(p)<span class="_ _1a"> </span>(GET(p)<span class="_ _e"> </span>&amp;<span class="_ _1f"> </span>~0x7)</span></div><div class="t m5 x17 h2d y4aa0 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>GET_ALLOC(p)<span class="_ _e"> </span>(GET(p)<span class="_ _1f"> </span>&amp;<span class="_ _1f"> </span>0x1)</span></div><div class="t m5 x17 h2e y3ec ff6 fs20 fc6 sc0 ls0 ws0">18</div><div class="t m5 x17 h2e y73ec ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x2d h2d y2a2b ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Given<span class="_ _1f"> </span>block<span class="_ _1f"> </span>ptr<span class="_ _e"> </span>bp,<span class="_ _1f"> </span>compute<span class="_ _e"> </span>address<span class="_ _1f"> </span>of<span class="_ _1f"> </span>its<span class="_ _e"> </span>header<span class="_ _1f"> </span>and<span class="_ _e"> </span>footer<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y1ab8 ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>HDRP(bp)<span class="_ _6f"> </span>((char<span class="_ _1f"> </span>*)(bp)<span class="_ _e"> </span>-<span class="_ _1f"> </span>WSIZE)</span></div><div class="t m5 x17 h2d y1ada ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>FTRP(bp)<span class="_ _6f"> </span>((char<span class="_ _1f"> </span>*)(bp)<span class="_ _e"> </span>+<span class="_ _1f"> </span>GET_SIZE(HDRP(bp))<span class="_ _e"> </span>-<span class="_ _1f"> </span>DSIZE)</span></div><div class="t m5 x17 h2e y61b9 ff6 fs20 fc6 sc0 ls0 ws0">22</div><div class="t m5 x17 h2e y6a26 ff6 fs20 fc6 sc0 ls0 ws0">23</div><div class="t m5 x2d h2d y3228 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Given<span class="_ _1f"> </span>block<span class="_ _1f"> </span>ptr<span class="_ _e"> </span>bp,<span class="_ _1f"> </span>compute<span class="_ _e"> </span>address<span class="_ _1f"> </span>of<span class="_ _1f"> </span>next<span class="_ _e"> </span>and<span class="_ _1f"> </span>previous<span class="_ _e"> </span>blocks<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y35d ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>NEXT_BLKP(bp)<span class="_ _1a"> </span>((char<span class="_ _e"> </span>*)(bp)<span class="_ _1f"> </span>+<span class="_ _1f"> </span>GET_SIZE(((char<span class="_ _e"> </span>*)(bp)<span class="_ _1f"> </span>-<span class="_ _e"> </span>WSIZE)))</span></div><div class="t m5 x17 h2d y3229 ff6 fs20 fc6 sc0 ls0 ws0">25<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>PREV_BLKP(bp)<span class="_ _1a"> </span>((char<span class="_ _e"> </span>*)(bp)<span class="_ _1f"> </span>-<span class="_ _1f"> </span>GET_SIZE(((char<span class="_ _e"> </span>*)(bp)<span class="_ _1f"> </span>-<span class="_ _e"> </span>DSIZE)))</span></div><div class="t m5 x97 h2c y73ed ffa fs16 fc2 sc0 ls0 ws0">code/vm/malloc/mm.c</div><div class="t m5 x17 h2f y73ee ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>9.43<span class="_ _66"> </span><span class="fc1">Basic<span class="_"> </span>constants<span class="_"> </span>and<span class="_"> </span>macros<span class="_"> </span>for<span class="_"> </span>manipulating<span class="_"> </span>the<span class="_"> </span>free<span class="_"> </span>list.</span></div><div class="t m5 x17 h42 y17d3 ff6 fs29 fc6 sc0 ls0 ws0">Creating<span class="_ _11"> </span>the<span class="_ _16"> </span>Initial<span class="_ _16"> </span>Free<span class="_ _11"> </span>List</div><div class="t m5 x17 h26 y7c1 ff7 fs19 fc1 sc0 ls0 ws0">Before<span class="_"> </span>calling<span class="_"> </span><span class="ffd">mm_malloc<span class="_ _10"> </span></span>or<span class="_"> </span><span class="ffd">mm_free</span>,<span class="_"> </span>the<span class="_"> </span>application<span class="_"> </span>must<span class="_"> </span>initialize<span class="_"> </span>the<span class="_"> </span>heap<span class="_"> </span>by</div><div class="t m5 x17 h26 y7c2 ff7 fs19 fc1 sc0 ls0 ws0">calling<span class="_"> </span>the<span class="_"> </span><span class="ffd">mm_init<span class="_ _10"> </span></span>function<span class="_"> </span>(F<span class="_ _0"></span>igure<span class="_"> </span>9.44).</div><div class="t m5 x26 h26 y7c3 ff7 fs19 fc1 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_"> </span><span class="ffd ls0">mm_init<span class="_ _13"> </span><span class="ff7">function<span class="_ _13"> </span>gets<span class="_ _13"> </span>four<span class="_ _13"> </span>words<span class="_ _6"> </span>from<span class="_ _13"> </span>the<span class="_ _13"> </span>memory<span class="_ _13"> </span>system<span class="_ _6"> </span>and<span class="_ _13"> </span>initializes</span></span></div><div class="t m5 x17 h26 y7c4 ff7 fs19 fc1 sc0 ls0 ws0">them<span class="_ _15"> </span>to<span class="_ _21"> </span>create<span class="_ _21"> </span>the<span class="_ _21"> </span>empty<span class="_ _21"> </span>free<span class="_ _21"> </span>list<span class="_ _21"> </span>(lines<span class="_ _21"> </span>4–10).<span class="_ _21"> </span>It<span class="_ _15"> </span>then<span class="_ _21"> </span>calls<span class="_ _21"> </span>the<span class="_ _21"> </span><span class="ffd">extend_heap</span></div><div class="t m5 x17 h26 y7c5 ff7 fs19 fc1 sc0 ls0 ws0">function<span class="_ _6"> </span>(Figure<span class="_ _6"> </span>9.45),<span class="_ _13"> </span>which<span class="_ _6"> </span>extends<span class="_ _13"> </span>the<span class="_ _a"> </span>heap<span class="_ _13"> </span>by<span class="_ _6"> </span>CHUNKSIZE<span class="_ _13"> </span>bytes<span class="_ _6"> </span>and<span class="_ _6"> </span>creates</div><div class="t m5 x17 h26 y7c6 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>initial<span class="_"> </span>free<span class="_"> </span>block.<span class="_ _13"> </span>At<span class="_"> </span>this<span class="_"> </span>point,<span class="_"> </span>the<span class="_"> </span>allocator<span class="_"> </span>is<span class="_"> </span>initialized<span class="_ _13"> </span>and<span class="_"> </span>ready<span class="_"> </span>to<span class="_"> </span>accept</div><div class="t m5 x17 h26 y7c7 ff7 fs19 fc1 sc0 ls0 ws0">allocate<span class="_"> </span>and<span class="_"> </span>free<span class="_"> </span>requests<span class="_"> </span>from<span class="_"> </span>the<span class="_"> </span>application.</div><div class="t m5 x26 h26 y7c8 ff7 fs19 fc1 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_"> </span><span class="ffd ls0">extend_heap<span class="_ _6"> </span><span class="ff7">function<span class="_ _6"> </span>is<span class="_ _13"> </span>invoked<span class="_ _a"> </span>in<span class="_ _13"> </span>two<span class="_ _a"> </span>different<span class="_ _13"> </span>circumstances:<span class="_ _a"> </span>(1)<span class="_ _13"> </span>when</span></span></div><div class="t m5 x17 h26 y7c9 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>heap<span class="_ _11"> </span>is<span class="_ _11"> </span>initialized<span class="_ _11"> </span>and<span class="_ _11"> </span>(2)<span class="_ _11"> </span>when<span class="_"> </span><span class="ffd">mm_malloc<span class="_ _11"> </span></span>is<span class="_ _11"> </span>unable<span class="_ _11"> </span>to<span class="_ _11"> </span>ﬁnd<span class="_ _11"> </span>a<span class="_"> </span>suitable<span class="_ _11"> </span>ﬁt.<span class="_ _11"> </span>T<span class="_ _3"></span>o</div><div class="t m5 x17 h26 y7ca ff7 fs19 fc1 sc0 ls0 ws0">maintain<span class="_ _15"> </span>alignment,<span class="_ _21"> </span><span class="ffd">extend_heap<span class="_ _15"> </span></span>rounds<span class="_ _15"> </span>up<span class="_ _15"> </span>the<span class="_ _15"> </span>requested<span class="_ _15"> </span>size<span class="_ _15"> </span>to<span class="_ _15"> </span>the<span class="_ _15"> </span>nearest</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
