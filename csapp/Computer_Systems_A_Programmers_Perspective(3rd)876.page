<div id="pf36c" class="pf w2 h11" data-page-no="36c"><div class="pc pc36c w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg36c.png"/><div class="t m5 x1c9 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>9.9<span class="_ _60"> </span>Dynamic<span class="_ _10"> </span>Memor<span class="_"> </span>y<span class="_ _10"> </span>Allocation<span class="_ _3e"> </span><span class="ffe fs1e">875</span></div><div class="t m5 x17 h26 ye7 ff7 fs19 fc2 sc0 ls0 ws0">asks<span class="_ _16"> </span>the<span class="_ _14"> </span>kernel<span class="_ _16"> </span>to<span class="_ _14"> </span>create<span class="_ _14"> </span>a<span class="_ _16"> </span>new<span class="_ _14"> </span>read-only<span class="_ _3"></span>,<span class="_ _14"> </span>private<span class="_ _0"></span>,<span class="_ _14"> </span>demand-zero<span class="_ _14"> </span>area<span class="_ _16"> </span>of<span class="_ _14"> </span>virtual</div><div class="t m5 x17 h26 y2a7 ff7 fs19 fc2 sc0 ls0 ws0">memory<span class="_ _14"> </span>containing<span class="_ _14"> </span><span class="ffd">size<span class="_ _14"> </span></span>bytes<span class="_ _1"></span>.<span class="_ _14"> </span>If<span class="_ _14"> </span>the<span class="_ _14"> </span>call<span class="_ _15"> </span>is<span class="_ _14"> </span>successful,<span class="_ _15"> </span>then<span class="_ _14"> </span><span class="ffd">bufp<span class="_ _14"> </span></span>contains<span class="_ _14"> </span>the</div><div class="t m5 x17 h26 y2a8 ff7 fs19 fc2 sc0 ls0 ws0">address<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>new<span class="_"> </span>area.</div><div class="t m5 x26 h26 y2f7 ff7 fs19 fc2 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_ _11"> </span><span class="ffd ls0">munmap<span class="_ _10"> </span><span class="ff7">function<span class="_"> </span>deletes<span class="_"> </span>regions<span class="_"> </span>of<span class="_"> </span>virtual<span class="_"> </span>memory:</span></span></div><div class="t m5 x31 h2d y7187 ffd fs1e fc2 sc0 ls0 ws0">#include<span class="_ _e"> </span>&lt;unistd.h&gt;</div><div class="t m5 x31 h2d y7188 ffd fs1e fc2 sc0 ls0 ws0">#include<span class="_ _e"> </span>&lt;sys/mman.h&gt;</div><div class="t m5 x31 h2d y7189 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>munmap(void<span class="_ _1f"> </span>*start,<span class="_ _1f"> </span>size_t<span class="_ _e"> </span>length);</div><div class="t m5 x1db hf2 y718a ff7 fs1f fc2 sc0 ls0 ws0">Returns:<span class="_"> </span>0<span class="_"> </span>if<span class="_"> </span>OK,<span class="_"> </span><span class="ff12">−</span>1<span class="_ _13"> </span>on<span class="_"> </span>error</div><div class="t m5 x17 h26 y718b ff7 fs19 fc2 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_"> </span><span class="ffd ls0">munmap<span class="_ _13"> </span><span class="ff7">function<span class="_ _13"> </span>deletes<span class="_ _13"> </span>the<span class="_ _13"> </span>area<span class="_ _6"> </span>starting<span class="_ _13"> </span>at<span class="_ _13"> </span>virtual<span class="_ _13"> </span>address<span class="_ _13"> </span></span>start<span class="_ _6"> </span><span class="ff7">and<span class="_ _13"> </span>consist-</span></span></div><div class="t m5 x17 h26 y718c ff7 fs19 fc2 sc0 ls0 ws0">ing<span class="_ _11"> </span>of<span class="_ _11"> </span>the<span class="_ _11"> </span>next<span class="_ _16"> </span><span class="ffd">length<span class="_ _10"> </span></span>bytes<span class="_ _0"></span>.<span class="_ _11"> </span>Subsequent<span class="_ _11"> </span>references<span class="_ _11"> </span>to<span class="_ _16"> </span>the<span class="_"> </span>deleted<span class="_ _16"> </span>region<span class="_"> </span>result</div><div class="t m5 x17 h26 y718d ff7 fs19 fc2 sc0 ls0 ws0">in<span class="_"> </span>segmentation<span class="_"> </span>faults<span class="_ _1"></span>.</div><div class="t m5 x17 h47 y718e ffe fs2b fc1 sc0 ls0 ws0">Practice<span class="_"> </span>Problem<span class="_"> </span>9.5<span class="_ _1f"> </span><span class="fs16">(solution<span class="_"> </span>page<span class="_"> </span>918)</span></div><div class="t m5 x17 h26 y718f ff7 fs19 fc1 sc0 ls0 ws0">Write<span class="_ _13"> </span>a<span class="_ _13"> </span>C<span class="_ _6"> </span>program<span class="_ _13"> </span><span class="ffd">mmapcopy.c<span class="_ _13"> </span></span>that<span class="_ _13"> </span>uses<span class="_ _13"> </span><span class="ffd">mmap<span class="_ _6"> </span></span>to<span class="_ _13"> </span>copy<span class="_ _13"> </span>an<span class="_ _13"> </span>arbitrary-size<span class="_ _13"> </span>disk<span class="_ _13"> </span>ﬁle<span class="_ _6"> </span>to</div><div class="t m5 x17 h26 y7190 ffd fs19 fc1 sc0 ls0 ws0">stdout<span class="ff7">.<span class="_ _13"> </span>T<span class="_ _1"></span>he<span class="_ _13"> </span>name<span class="_ _13"> </span>of<span class="_ _13"> </span>the<span class="_ _13"> </span>input<span class="_ _13"> </span>ﬁle<span class="_ _13"> </span>should<span class="_ _13"> </span>be<span class="_ _13"> </span>passed<span class="_ _13"> </span>as<span class="_ _13"> </span>a<span class="_ _13"> </span>command-line<span class="_ _13"> </span>argument.</span></div><div class="t m5 x17 h3b y7191 fff fs24 fc6 sc0 ls0 ws0">9.9<span class="_ _17"> </span><span class="ffe fs18">Dynamic<span class="_"> </span>Memor<span class="_ _2"></span>y<span class="_"> </span>Allocation</span></div><div class="t m5 x17 h26 y7192 ff7 fs19 fc1 sc0 ls0 ws0">While<span class="_ _16"> </span>it<span class="_ _16"> </span>is<span class="_ _16"> </span>certainly<span class="_ _16"> </span>possible<span class="_ _14"> </span>to<span class="_ _16"> </span>use<span class="_ _16"> </span>the<span class="_ _14"> </span>low-level<span class="_ _16"> </span><span class="ffd">mmap<span class="_ _16"> </span></span>and<span class="_ _14"> </span><span class="ffd">munmap<span class="_ _16"> </span></span>functions<span class="_ _16"> </span>to</div><div class="t m5 x17 h26 y7193 ff7 fs19 fc1 sc0 ls0 ws0">create<span class="_"> </span>and<span class="_ _11"> </span>delete<span class="_ _11"> </span>areas<span class="_ _11"> </span>of<span class="_ _11"> </span>virtual<span class="_ _11"> </span>memory<span class="_ _3"></span>,<span class="_ _11"> </span>C<span class="_ _11"> </span>programmers<span class="_ _11"> </span>typically<span class="_ _11"> </span>ﬁnd<span class="_ _11"> </span>it<span class="_ _11"> </span>more</div><div class="t m5 x17 h26 y7194 ff7 fs19 fc1 sc0 ls0 ws0">convenient<span class="_ _13"> </span>and<span class="_ _13"> </span>more<span class="_ _6"> </span>portable<span class="_ _13"> </span>to<span class="_ _13"> </span>use<span class="_ _13"> </span>a<span class="_ _6"> </span><span class="ffa">dynamic<span class="_ _13"> </span>memory<span class="_ _13"> </span>allocator<span class="_ _13"> </span></span>when<span class="_ _13"> </span>they<span class="_ _13"> </span>need</div><div class="t m5 x17 h26 y7195 ff7 fs19 fc1 sc0 ls0 ws0">to<span class="_"> </span>acquire<span class="_"> </span>additional<span class="_"> </span>virtual<span class="_"> </span>memory<span class="_"> </span>at<span class="_"> </span>run<span class="_"> </span>time<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y7196 ff7 fs19 fc1 sc0 ls0 ws0">A<span class="_ _13"> </span>dynamic<span class="_ _13"> </span>memory<span class="_ _13"> </span>allocator<span class="_ _13"> </span>maintains<span class="_ _13"> </span>an<span class="_ _13"> </span>area<span class="_ _13"> </span>of<span class="_ _13"> </span>a<span class="_ _13"> </span>process’<span class="_ _1"></span>s<span class="_ _13"> </span>virtual<span class="_ _13"> </span>memory</div><div class="t m5 x17 h26 y7197 ff7 fs19 fc1 sc0 ls0 ws0">known<span class="_"> </span>as<span class="_ _13"> </span>the<span class="_"> </span><span class="ffa">heap<span class="_ _13"> </span></span>(Figure<span class="_ _13"> </span>9.33).<span class="_"> </span>Details<span class="_"> </span>vary<span class="_ _13"> </span>from<span class="_"> </span>system<span class="_"> </span>to<span class="_ _13"> </span>system,<span class="_"> </span>but<span class="_"> </span>without</div><div class="t m5 x17 h26 y7198 ff7 fs19 fc1 sc0 ls0 ws0">loss<span class="_ _11"> </span>of<span class="_ _11"> </span>generality<span class="_ _3"></span>,<span class="_ _11"> </span>we<span class="_ _11"> </span>will<span class="_ _11"> </span>assume<span class="_ _11"> </span>that<span class="_ _11"> </span>the<span class="_ _11"> </span>heap<span class="_ _16"> </span>is<span class="_"> </span>an<span class="_ _11"> </span>area<span class="_ _11"> </span>of<span class="_ _11"> </span>demand-zero<span class="_ _16"> </span>mem-</div><div class="t m5 x17 h26 y7199 ff7 fs19 fc1 sc0 ls0 ws0">ory<span class="_ _16"> </span>that<span class="_ _16"> </span>begins<span class="_ _11"> </span>immediately<span class="_ _16"> </span>after<span class="_ _16"> </span>the<span class="_ _16"> </span>uninitialized<span class="_ _16"> </span>data<span class="_ _16"> </span>area<span class="_ _16"> </span>and<span class="_ _16"> </span>grows<span class="_ _11"> </span>upward</div><div class="t m5 x17 h26 y719a ff7 fs19 fc1 sc0 ls0 ws0">(toward<span class="_"> </span>higher<span class="_"> </span>addresses).<span class="_ _11"> </span>F<span class="_ _1"></span>or<span class="_"> </span>each<span class="_ _11"> </span>process<span class="_ _1"></span>,<span class="_ _11"> </span>the<span class="_"> </span>kernel<span class="_ _11"> </span>maintains<span class="_"> </span>a<span class="_"> </span>variable<span class="_ _11"> </span><span class="ffd">brk</span></div><div class="t m5 x17 h26 y719b ff7 fs19 fc1 sc0 ls0 ws0">(pronounced<span class="_"> </span>“break”)<span class="_"> </span>that<span class="_"> </span>points<span class="_"> </span>to<span class="_"> </span>the<span class="_"> </span>top<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>heap<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y719c ff7 fs19 fc1 sc0 ls0 ws0">An<span class="_ _11"> </span>allocator<span class="_ _16"> </span>maintains<span class="_ _11"> </span>the<span class="_ _11"> </span>heap<span class="_ _16"> </span>as<span class="_ _11"> </span>a<span class="_ _11"> </span>collection<span class="_ _16"> </span>of<span class="_ _11"> </span>various-size<span class="_ _11"> </span><span class="ffa">blocks</span>.<span class="_ _16"> </span>Each</div><div class="t m5 x17 h26 y719d ff7 fs19 fc1 sc0 ls0 ws0">block<span class="_"> </span>is<span class="_"> </span>a<span class="_"> </span>contiguous<span class="_"> </span>chunk<span class="_"> </span>of<span class="_"> </span>virtual<span class="_"> </span>memory<span class="_"> </span>that<span class="_"> </span>is<span class="_"> </span>either<span class="_"> </span><span class="ffa">allocated<span class="_ _11"> </span></span>or<span class="_"> </span><span class="ffa">free</span><span class="ls2bf">.A<span class="_ _4a"></span>n</span></div><div class="t m5 x17 h26 y719e ff7 fs19 fc1 sc0 ls0 ws0">allocated<span class="_ _6"> </span>block<span class="_ _6"> </span>has<span class="_ _6"> </span>been<span class="_ _6"> </span>explicitly<span class="_ _13"> </span>reserved<span class="_ _a"> </span>for<span class="_ _6"> </span>use<span class="_ _13"> </span>by<span class="_ _a"> </span>the<span class="_ _6"> </span>application.<span class="_ _13"> </span>A<span class="_ _a"> </span>free<span class="_ _6"> </span>block</div><div class="t m5 x17 h26 y719f ff7 fs19 fc1 sc0 ls0 ws0">is<span class="_ _13"> </span>available<span class="_ _13"> </span>to<span class="_ _13"> </span>be<span class="_ _13"> </span>allocated.<span class="_ _13"> </span>A<span class="_ _13"> </span>free<span class="_ _13"> </span>block<span class="_ _13"> </span>remains<span class="_ _13"> </span>free<span class="_ _13"> </span>until<span class="_ _13"> </span>it<span class="_ _13"> </span>is<span class="_ _13"> </span>explicitly<span class="_ _13"> </span>allocated</div><div class="t m5 x17 h26 y71a0 ff7 fs19 fc1 sc0 ls0 ws0">by<span class="_ _16"> </span>the<span class="_ _16"> </span>application.<span class="_ _16"> </span>An<span class="_ _16"> </span>allocated<span class="_ _16"> </span>block<span class="_ _16"> </span>remains<span class="_ _16"> </span>allocated<span class="_ _16"> </span>until<span class="_ _16"> </span>it<span class="_ _16"> </span>is<span class="_ _16"> </span>freed,<span class="_ _16"> </span>either</div><div class="t m5 x17 h26 y71a1 ff7 fs19 fc1 sc0 ls0 ws0">explicitly<span class="_"> </span>by<span class="_"> </span>the<span class="_"> </span>application<span class="_"> </span>or<span class="_"> </span>implicitly<span class="_"> </span>by<span class="_"> </span>the<span class="_"> </span>memory<span class="_"> </span>allocator<span class="_"> </span>itself<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y71a2 ff7 fs19 fc1 sc0 ls0 ws0">Allocators<span class="_ _14"> </span>come<span class="_ _15"> </span>in<span class="_ _15"> </span>two<span class="_ _15"> </span>basic<span class="_ _15"> </span>styles<span class="_ _1"></span>.<span class="_ _15"> </span>Both<span class="_ _15"> </span>styles<span class="_ _15"> </span>require<span class="_ _14"> </span>the<span class="_ _15"> </span>application<span class="_ _15"> </span>to</div><div class="t m5 x17 h26 y71a3 ff7 fs19 fc1 sc0 ls0 ws0">explicitly<span class="_ _13"> </span>allocate<span class="_"> </span>blocks<span class="_ _3"></span>.<span class="_"> </span>T<span class="_ _1"></span>hey<span class="_"> </span>differ<span class="_ _13"> </span>about<span class="_ _13"> </span>which<span class="_"> </span>entity<span class="_ _13"> </span>is<span class="_"> </span>responsible<span class="_ _13"> </span>for<span class="_ _13"> </span>freeing</div><div class="t m5 x17 h26 y71a4 ff7 fs19 fc1 sc0 ls0 ws0">allocated<span class="_"> </span>blocks<span class="_ _1"></span>.</div><div class="t m5 x72 h3d y5769 ff14 fs26 fc6 sc0 ls0 ws0">.</div><div class="t m5 x26 h26 y8d6 ffa fs19 fc1 sc0 ls0 ws0">Explicit<span class="_ _f"> </span>allocators<span class="_ _e"> </span><span class="ff7">require<span class="_ _e"> </span>the<span class="_ _f"> </span>application<span class="_ _e"> </span>to<span class="_ _f"> </span>explicitly<span class="_ _e"> </span>free<span class="_ _f"> </span>any<span class="_ _e"> </span>allocated</span></div><div class="t m5 x26 h26 y8d7 ff7 fs19 fc1 sc0 ls0 ws0">blocks<span class="_ _1"></span>.<span class="_ _21"> </span>F<span class="_ _1"></span>or<span class="_ _21"> </span>example,<span class="_ _21"> </span>the<span class="_ _21"> </span>C<span class="_ _f"> </span>standard<span class="_ _21"> </span>library<span class="_ _21"> </span>provides<span class="_ _21"> </span>an<span class="_ _21"> </span>explicit<span class="_ _21"> </span>allocator</div><div class="t m5 x26 h26 y8d8 ff7 fs19 fc1 sc0 ls0 ws0">called<span class="_ _13"> </span>the<span class="_"> </span><span class="ffd">malloc<span class="_ _13"> </span></span>package<span class="_ _1"></span>.<span class="_"> </span>C<span class="_ _13"> </span>programs<span class="_ _13"> </span>allocate<span class="_"> </span>a<span class="_ _13"> </span>block<span class="_ _13"> </span>by<span class="_"> </span>calling<span class="_ _13"> </span>the<span class="_ _13"> </span><span class="ffd">malloc</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
