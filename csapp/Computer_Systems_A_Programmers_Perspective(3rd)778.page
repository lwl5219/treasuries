<div id="pf30a" class="pf w2 h11" data-page-no="30a"><div class="pc pc30a w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg30a.png"/><div class="t m5 x100 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>8.4<span class="_ _60"> </span>Process<span class="_ _10"> </span>Control<span class="_ _3e"> </span><span class="ffe fs1e">777</span></div><div class="t m5 x22f h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/ecf/fork.c</div><div class="t m5 x2c h2d y280 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">int<span class="_ _1f"> </span>main()</span></div><div class="t m5 x2c h2d y281 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x2c h2d y283 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">pid_t<span class="_ _e"> </span>pid;</span></div><div class="t m5 x2c h2d y284 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2 ls33">i<span class="_ _41"></span>n<span class="_ _41"></span>tx=1<span class="_ _41"></span>;</span></div><div class="t m5 x2c h2e y285 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x2c h2e y65f1 ff6 fs20 fc6 sc0 ls0 ws0">6</div><div class="t m5 x142 h2d y286 ffd fs1e fc2 sc0 ls0 ws0">pid<span class="_ _e"> </span>=<span class="_ _1f"> </span>Fork();</div><div class="t m5 x2c h2d y287 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>(pid<span class="_ _1f"> </span>==<span class="_ _1f"> </span>0)<span class="_ _e"> </span>{<span class="_ _1a"> </span>/*<span class="_ _1f"> </span>Child<span class="_ _e"> </span>*/</span></div><div class="t m5 x2c h2d y4493 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _70"> </span><span class="ffd fs1e fc2">printf(&quot;child<span class="_ _e"> </span>:<span class="_ _1f"> </span>x=%d\n&quot;,<span class="_ _1f"> </span>++x);</span></div><div class="t m5 x2c h2d y4a9a ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _70"> </span><span class="ffd fs1e fc2">exit(0);</span></div><div class="t m5 x17 h2d y4a9b ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2e y4a9c ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x17 h2e y65f2 ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x142 h2d y906 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Parent<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y4a9d ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">printf(&quot;parent:<span class="_ _e"> </span>x=%d\n&quot;,<span class="_ _1f"> </span>--x);</span></div><div class="t m5 x17 h2d y4a9e ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _20"> </span><span class="ffd fs1e fc2">exit(0);</span></div><div class="t m5 x17 h2d y4a9f ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x22f h2c y65f3 ffa fs16 fc2 sc0 ls0 ws0">code/ecf/fork.c</div><div class="t m5 x17 h2f y65f4 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>8.15<span class="_ _66"> </span><span class="fc1">Using</span></div><div class="t m5 x23 h3a y65f5 ffd fs19 fc1 sc0 ls0 ws0">fork<span class="_ _10"> </span><span class="ffe fs16">to<span class="_"> </span>create<span class="_"> </span>a<span class="_"> </span>new<span class="_"> </span>process.</span></div><div class="t m5 x72 h26 y65f6 ffa fs19 fc1 sc0 ls0 ws0">Duplicate<span class="_"> </span>but<span class="_"> </span>separate<span class="_"> </span>address<span class="_"> </span>spaces<span class="_ _3"></span>.<span class="_ _f"> </span><span class="ff7">If<span class="_"> </span>we<span class="_"> </span>could<span class="_"> </span>halt<span class="_"> </span>both<span class="_"> </span>the<span class="_"> </span>parent<span class="_"> </span>and<span class="_"> </span>the</span></div><div class="t m5 x30 h26 y65f7 ff7 fs19 fc1 sc0 ls0 ws0">child<span class="_ _16"> </span>immediately<span class="_ _16"> </span>after<span class="_ _14"> </span>the<span class="_ _16"> </span><span class="ffd">fork<span class="_ _14"> </span></span>function<span class="_ _16"> </span>returned<span class="_ _16"> </span>in<span class="_ _14"> </span>each<span class="_ _16"> </span>process<span class="_ _1"></span>,<span class="_ _14"> </span>we</div><div class="t m5 x30 h26 y65f8 ff7 fs19 fc1 sc0 ls0 ws0">would<span class="_ _13"> </span>see<span class="_ _6"> </span>that<span class="_ _13"> </span>the<span class="_ _6"> </span>address<span class="_ _13"> </span>space<span class="_ _13"> </span>of<span class="_ _6"> </span>each<span class="_ _13"> </span>process<span class="_ _13"> </span>is<span class="_ _6"> </span>identical.<span class="_ _13"> </span>Each<span class="_ _6"> </span>process</div><div class="t m5 x30 h26 y65f9 ff7 fs19 fc1 sc0 ls0 ws0">has<span class="_ _16"> </span>the<span class="_ _16"> </span>same<span class="_ _16"> </span>user<span class="_ _16"> </span>stack,<span class="_ _16"> </span>the<span class="_ _16"> </span>same<span class="_ _16"> </span>local<span class="_ _16"> </span>variable<span class="_ _16"> </span>values<span class="_ _1"></span>,<span class="_ _14"> </span>the<span class="_ _16"> </span>same<span class="_ _16"> </span>heap<span class="_ _1"></span>,</div><div class="t m5 x30 h26 y65fa ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _13"> </span>same<span class="_"> </span>global<span class="_ _13"> </span>variable<span class="_"> </span>values<span class="_ _3"></span>,<span class="_"> </span>and<span class="_"> </span>the<span class="_ _13"> </span>same<span class="_ _13"> </span>code.<span class="_ _13"> </span>T<span class="_ _1"></span>hus<span class="_ _0"></span>,<span class="_"> </span>in<span class="_ _13"> </span>our<span class="_ _13"> </span>example</div><div class="t m5 x30 h26 y65fb ff7 fs19 fc1 sc0 ls0 ws0">program,<span class="_"> </span>local<span class="_ _13"> </span>variable<span class="_ _13"> </span><span class="ffd">x<span class="_ _10"> </span></span>has<span class="_ _13"> </span>a<span class="_"> </span>value<span class="_ _13"> </span>of<span class="_ _13"> </span>1<span class="_"> </span>in<span class="_ _13"> </span>both<span class="_"> </span>the<span class="_ _13"> </span>parent<span class="_ _13"> </span>and<span class="_"> </span>the<span class="_ _13"> </span>child</div><div class="t m5 x30 h26 y65fc ff7 fs19 fc1 sc0 ls0 ws0">when<span class="_"> </span>the<span class="_ _11"> </span><span class="ffd">fork<span class="_ _11"> </span></span>function<span class="_"> </span>returns<span class="_ _11"> </span>in<span class="_ _11"> </span>line<span class="_"> </span>6.<span class="_ _11"> </span>However,<span class="_"> </span>since<span class="_ _11"> </span>the<span class="_ _11"> </span>parent<span class="_"> </span>and</div><div class="t m5 x30 h26 y65fd ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _13"> </span>child<span class="_ _13"> </span>are<span class="_ _13"> </span>separate<span class="_ _13"> </span>processes<span class="_ _3"></span>,<span class="_ _13"> </span>they<span class="_ _13"> </span>each<span class="_ _13"> </span>have<span class="_ _13"> </span>their<span class="_ _13"> </span>own<span class="_ _13"> </span>private<span class="_ _13"> </span>address</div><div class="t m5 x30 h26 y65fe ff7 fs19 fc1 sc0 ls0 ws0">spaces<span class="_ _1"></span>.<span class="_ _14"> </span>Any<span class="_ _15"> </span>subsequent<span class="_ _14"> </span>changes<span class="_ _15"> </span>that<span class="_ _14"> </span>a<span class="_ _15"> </span>parent<span class="_ _14"> </span>or<span class="_ _15"> </span>child<span class="_ _14"> </span>makes<span class="_ _15"> </span>to<span class="_ _14"> </span><span class="ffd">x<span class="_ _14"> </span></span>are</div><div class="t m5 x30 h26 y65ff ff7 fs19 fc1 sc0 ls0 ws0">private<span class="_"> </span>and<span class="_ _11"> </span>are<span class="_ _11"> </span>not<span class="_ _11"> </span>reﬂected<span class="_ _11"> </span>in<span class="_ _11"> </span>the<span class="_"> </span>memory<span class="_ _11"> </span>of<span class="_ _11"> </span>the<span class="_ _11"> </span>other<span class="_ _11"> </span>process<span class="_ _1"></span>.<span class="_ _11"> </span>T<span class="_ _1"></span>his<span class="_ _11"> </span>is</div><div class="t m5 x30 h26 y6600 ff7 fs19 fc1 sc0 ls0 ws0">why<span class="_"> </span>the<span class="_ _13"> </span>variable<span class="_"> </span><span class="ffd">x<span class="_ _10"> </span></span>has<span class="_"> </span>different<span class="_ _13"> </span>values<span class="_"> </span>in<span class="_"> </span>the<span class="_ _13"> </span>parent<span class="_"> </span>and<span class="_"> </span>child<span class="_"> </span>when<span class="_ _13"> </span>they</div><div class="t m5 x30 h26 y6601 ff7 fs19 fc1 sc0 ls0 ws0">call<span class="_"> </span>their<span class="_"> </span>respective<span class="_"> </span><span class="ffd">printf<span class="_ _10"> </span></span>statements<span class="_ _1"></span>.</div><div class="t m5 x72 h26 y6602 ffa fs19 fc1 sc0 ls0 ws0">Shared<span class="_ _13"> </span>ﬁles<span class="_ _3"></span>.<span class="_ _21"> </span><span class="ff7">When<span class="_ _6"> </span>we<span class="_ _13"> </span>run<span class="_ _6"> </span>the<span class="_ _13"> </span>example<span class="_ _13"> </span>program,<span class="_ _6"> </span>we<span class="_ _13"> </span>notice<span class="_ _6"> </span>that<span class="_ _13"> </span>both<span class="_ _6"> </span>parent<span class="_ _13"> </span>and</span></div><div class="t m5 x30 h26 y6603 ff7 fs19 fc1 sc0 ls0 ws0">child<span class="_ _13"> </span>print<span class="_ _13"> </span>their<span class="_"> </span>output<span class="_ _13"> </span>on<span class="_ _13"> </span>the<span class="_ _13"> </span>screen.<span class="_"> </span>T<span class="_ _1"></span>he<span class="_ _13"> </span>reason<span class="_"> </span>is<span class="_ _13"> </span>that<span class="_ _13"> </span>the<span class="_ _13"> </span>child<span class="_ _13"> </span>inherits</div><div class="t m5 x30 h26 y6604 ff7 fs19 fc1 sc0 ls0 ws0">all<span class="_"> </span>of<span class="_"> </span>the<span class="_ _11"> </span>parent’s<span class="_"> </span>open<span class="_"> </span>ﬁles<span class="_ _1"></span>.<span class="_"> </span>When<span class="_"> </span>the<span class="_"> </span>parent<span class="_"> </span>calls<span class="_ _11"> </span><span class="ffd">fork</span>,<span class="_"> </span>the<span class="_"> </span><span class="ffd">stdout<span class="_ _11"> </span></span>ﬁle</div><div class="t m5 x30 h26 y6605 ff7 fs19 fc1 sc0 ls0 ws0">is<span class="_"> </span>open<span class="_ _13"> </span>and<span class="_"> </span>directed<span class="_"> </span>to<span class="_ _13"> </span>the<span class="_"> </span>screen.<span class="_"> </span>T<span class="_ _1"></span>he<span class="_"> </span>child<span class="_ _13"> </span>inherits<span class="_"> </span>this<span class="_"> </span>ﬁle<span class="_ _1"></span>,<span class="_"> </span>and<span class="_ _13"> </span>thus<span class="_"> </span>its</div><div class="t m5 x30 h26 y6606 ff7 fs19 fc1 sc0 ls0 ws0">output<span class="_"> </span>is<span class="_"> </span>also<span class="_"> </span>directed<span class="_"> </span>to<span class="_"> </span>the<span class="_"> </span>screen.</div><div class="t m5 x26 h26 y402 ff7 fs19 fc1 sc0 ls0 ws0">When<span class="_ _14"> </span>you<span class="_ _15"> </span>are<span class="_ _14"> </span>ﬁrst<span class="_ _15"> </span>learning<span class="_ _15"> </span>about<span class="_ _15"> </span>the<span class="_ _15"> </span><span class="ffd">fork<span class="_ _15"> </span></span>function,<span class="_ _15"> </span>it<span class="_ _15"> </span>is<span class="_ _15"> </span>often<span class="_ _15"> </span>helpful<span class="_ _15"> </span>to</div><div class="t m5 x17 h26 y403 ff7 fs19 fc1 sc0 ls0 ws0">sketch<span class="_ _13"> </span>the<span class="_ _13"> </span><span class="ffa">process<span class="_ _6"> </span>graph</span>,<span class="_ _13"> </span>which<span class="_ _13"> </span>is<span class="_ _13"> </span>a<span class="_ _13"> </span>simple<span class="_ _13"> </span>kind<span class="_ _6"> </span>of<span class="_ _13"> </span>precedence<span class="_ _13"> </span>graph<span class="_ _13"> </span>that<span class="_ _13"> </span>captures</div><div class="t m5 x17 h26 y404 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _15"> </span>partial<span class="_ _21"> </span>ordering<span class="_ _21"> </span>of<span class="_ _21"> </span>program<span class="_ _15"> </span>statements<span class="_ _1"></span>.<span class="_ _21"> </span>Each<span class="_ _21"> </span>vertex<span class="_ _21"> </span><span class="ff11">a<span class="_ _f"> </span></span>corresponds<span class="_ _21"> </span>to<span class="_ _21"> </span>the</div><div class="t m5 x17 h46 y405 ff7 fs19 fc1 sc0 ls0 ws0">execution<span class="_"> </span>of<span class="_ _13"> </span>a<span class="_"> </span>program<span class="_ _13"> </span>statement.<span class="_"> </span>A<span class="_ _13"> </span>directed<span class="_"> </span>edge<span class="_ _13"> </span><span class="ff11">a<span class="_ _11"> </span><span class="ff12">→<span class="_ _13"> </span></span>b<span class="_ _10"> </span></span>denotes<span class="_"> </span>that<span class="_"> </span>statement</div><div class="t m5 x17 h26 y406 ff11 fs19 fc1 sc0 ls0 ws0">a<span class="_"> </span><span class="ff7">“happens<span class="_ _11"> </span>before”<span class="_ _16"> </span>statement<span class="_ _11"> </span></span>b<span class="ff7">.<span class="_ _16"> </span>Edges<span class="_ _11"> </span>can<span class="_ _16"> </span>be<span class="_ _11"> </span>labeled<span class="_ _11"> </span>with<span class="_ _16"> </span>information<span class="_ _11"> </span>such<span class="_ _11"> </span>as</span></div><div class="t m5 x17 h26 y407 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>current<span class="_"> </span>value<span class="_ _11"> </span>of<span class="_"> </span>a<span class="_"> </span>variable.<span class="_"> </span>V<span class="_ _3"></span>ertices<span class="_"> </span>corresponding<span class="_"> </span>to<span class="_"> </span><span class="ffd">printf<span class="_ _11"> </span></span>statements<span class="_"> </span>can</div><div class="t m5 x17 h26 y408 ff7 fs19 fc1 sc0 ls0 ws0">be<span class="_ _16"> </span>labeled<span class="_ _16"> </span>with<span class="_ _16"> </span>the<span class="_ _16"> </span>output<span class="_ _16"> </span>of<span class="_ _16"> </span>the<span class="_ _16"> </span><span class="ffd">printf</span>.<span class="_ _16"> </span>Each<span class="_ _16"> </span>graph<span class="_ _16"> </span>begins<span class="_ _16"> </span>with<span class="_ _16"> </span>a<span class="_ _16"> </span>vertex<span class="_ _11"> </span>that</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
