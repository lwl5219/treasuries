<div id="pfc0" class="pf w2 h11" data-page-no="c0"><div class="pc pcc0 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bgc0.png"/><div class="t m5 x107 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Solutions<span class="_ _10"> </span>to<span class="_ _10"> </span>Practice<span class="_ _10"> </span>Problems<span class="_ _1b"> </span><span class="ffe fs1e">191</span></div><div class="t m5 x2c h2d ye7 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">/*<span class="_ _1f"> </span>Determine<span class="_ _e"> </span>whether<span class="_ _1f"> </span>the<span class="_ _1f"> </span>arguments<span class="_ _e"> </span>can<span class="_ _1f"> </span>be<span class="_ _e"> </span>multiplied</span></div><div class="t m5 x2c h2d yc4d ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _5b"> </span><span class="ffd fs1e fc2">without<span class="_ _1f"> </span>overflow<span class="_ _e"> </span>*/</span></div><div class="t m5 x2c h2d yecb ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _1c"> </span><span class="ffd fs1e fc2">int<span class="_ _1f"> </span>tmult_ok(int<span class="_ _e"> </span>x,<span class="_ _1f"> </span>int<span class="_ _1f"> </span>y)<span class="_ _e"> </span>{</span></div><div class="t m5 x2c h2d yecc ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>Compute<span class="_ _1f"> </span>product<span class="_ _1f"> </span>without<span class="_ _e"> </span>overflow<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d yecd ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _20"> </span><span class="ffd fs1e fc2">int64_t<span class="_ _e"> </span>pll<span class="_ _1f"> </span>=<span class="_ _1f"> </span>(int64_t)<span class="_ _e"> </span>x*y;</span></div><div class="t m5 x2c h2d yece ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>See<span class="_ _1f"> </span>if<span class="_ _1f"> </span>casting<span class="_ _e"> </span>to<span class="_ _1f"> </span>int<span class="_ _e"> </span>preserves<span class="_ _1f"> </span>value<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d yecf ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>pll<span class="_ _1f"> </span>==<span class="_ _1f"> </span>(int)<span class="_ _e"> </span>pll;</span></div><div class="t m5 x2c h2d yed0 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x26 h26 y1e8e ff7 fs19 fc2 sc0 ls0 ws0">Note<span class="_"> </span>that<span class="_ _11"> </span>the<span class="_ _11"> </span>casting<span class="_"> </span>on<span class="_ _11"> </span>the<span class="_ _11"> </span>right-hand<span class="_"> </span>side<span class="_ _11"> </span>of<span class="_ _11"> </span>line<span class="_"> </span>5<span class="_ _11"> </span>is<span class="_ _11"> </span>critical.<span class="_"> </span>If<span class="_ _11"> </span>we<span class="_ _11"> </span>instead</div><div class="t m5 x17 h26 y1e8f ff7 fs19 fc2 sc0 ls0 ws0">wrote<span class="_"> </span>the<span class="_"> </span>line<span class="_"> </span>as</div><div class="t m5 x1b6 h2d y1e90 ffd fs1e fc2 sc0 ls0 ws0">int64_t<span class="_ _e"> </span>pll<span class="_ _1f"> </span>=<span class="_ _1f"> </span>x*y;</div><div class="t m5 x17 h26 y1e91 ff7 fs19 fc2 sc0 ls0 ws0">the<span class="_"> </span>product<span class="_ _13"> </span>would<span class="_"> </span>be<span class="_"> </span>computed<span class="_ _13"> </span>as<span class="_"> </span>a<span class="_ _13"> </span>32-bit<span class="_"> </span>value<span class="_"> </span>(possibly<span class="_ _13"> </span>overﬂowing)<span class="_"> </span>and<span class="_"> </span>then</div><div class="t m5 x17 h26 y1e92 ff7 fs19 fc2 sc0 ls0 ws0">sign<span class="_"> </span>extended<span class="_"> </span>to<span class="_"> </span>64<span class="_"> </span>bits<span class="_ _1"></span>.</div><div class="t m5 x17 h28 y1e93 ffe fs1e fc6 sc0 ls0 ws0">Solution<span class="_"> </span>to<span class="_"> </span>Problem<span class="_"> </span>2.37<span class="_ _e"> </span><span class="fs16">(page<span class="_"> </span>135)</span></div><div class="t m5 x34 h26 y1e94 ff7 fs19 fc1 sc0 ls0 ws0">A.<span class="_ _1f"> </span>T<span class="_ _1"></span>his<span class="_ _13"> </span>change<span class="_"> </span>does<span class="_ _13"> </span>not<span class="_ _13"> </span>help<span class="_ _13"> </span>at<span class="_ _13"> </span>all.<span class="_"> </span>Even<span class="_ _13"> </span>though<span class="_ _13"> </span>the<span class="_ _13"> </span>computation<span class="_ _13"> </span>of<span class="_"> </span><span class="ffd">asize<span class="_ _13"> </span></span>will</div><div class="t m5 x2d h26 y1e95 ff7 fs19 fc1 sc0 ls0 ws0">be<span class="_ _6"> </span>accurate,<span class="_ _6"> </span>the<span class="_ _13"> </span>call<span class="_ _6"> </span>to<span class="_ _6"> </span><span class="ffd">malloc<span class="_ _13"> </span></span>will<span class="_ _6"> </span>cause<span class="_ _6"> </span>this<span class="_ _13"> </span>value<span class="_ _6"> </span>to<span class="_ _6"> </span>be<span class="_ _13"> </span>converted<span class="_ _6"> </span>to<span class="_ _6"> </span>a<span class="_ _13"> </span>32-bit</div><div class="t m5 x2d h26 y1e96 ff7 fs19 fc1 sc0 ls0 ws0">unsigned<span class="_"> </span>number,<span class="_"> </span>and<span class="_"> </span>so<span class="_"> </span>the<span class="_"> </span>same<span class="_"> </span>overﬂow<span class="_"> </span>conditions<span class="_"> </span>will<span class="_"> </span>occur<span class="_ _1"></span>.</div><div class="t m5 x34 h26 y1e97 ff7 fs19 fc1 sc0 ls0 ws0">B<span class="_ _3"></span>.<span class="_ _1d"> </span>With<span class="_ _14"> </span><span class="ffd">malloc<span class="_ _15"> </span></span>having<span class="_ _14"> </span>a<span class="_ _15"> </span>32-bit<span class="_ _15"> </span>unsigned<span class="_ _15"> </span>number<span class="_ _15"> </span>as<span class="_ _14"> </span>its<span class="_ _15"> </span>argument,<span class="_ _21"> </span>it<span class="_ _15"> </span>cannot</div><div class="t m5 x2d h26 y1e98 ff7 fs19 fc1 sc0 ls0 ws0">possibly<span class="_ _14"> </span>allocate<span class="_ _14"> </span>a<span class="_ _14"> </span>block<span class="_ _14"> </span>of<span class="_ _14"> </span>more<span class="_ _14"> </span>than<span class="_ _14"> </span>2</div><div class="t m5 x185 h3c y1e99 ff7 fs25 fc1 sc0 ls0 ws0">32</div><div class="t m5 x130 h26 y1e9a ff7 fs19 fc1 sc0 ls0 ws0">bytes<span class="_ _1"></span>,<span class="_ _15"> </span>and<span class="_ _14"> </span>so<span class="_ _14"> </span>there<span class="_ _14"> </span>is<span class="_ _14"> </span>no<span class="_ _14"> </span>point</div><div class="t m5 x2d h26 y1e9b ff7 fs19 fc1 sc0 ls0 ws0">attempting<span class="_ _21"> </span>to<span class="_ _f"> </span>allocate<span class="_ _f"> </span>or<span class="_ _21"> </span>copy<span class="_ _f"> </span>this<span class="_ _f"> </span>much<span class="_ _21"> </span>memory<span class="_ _3"></span>.<span class="_ _f"> </span>Instead,<span class="_ _e"> </span>the<span class="_ _21"> </span>function</div><div class="t m5 x2d h26 y1e9c ff7 fs19 fc1 sc0 ls0 ws0">should<span class="_ _16"> </span>abort<span class="_ _14"> </span>and<span class="_ _16"> </span>return<span class="_ _14"> </span><span class="ffd">NULL</span>,<span class="_ _14"> </span>as<span class="_ _16"> </span>illustrated<span class="_ _14"> </span>by<span class="_ _16"> </span>the<span class="_ _14"> </span>following<span class="_ _16"> </span>replacement</div><div class="t m5 x2d h26 y1e9d ff7 fs19 fc1 sc0 ls0 ws0">to<span class="_"> </span>the<span class="_"> </span>original<span class="_"> </span>call<span class="_"> </span>to<span class="_"> </span><span class="ffd">malloc<span class="_ _10"> </span></span>(line<span class="_"> </span>9):</div><div class="t m5 x142 h2d y1e9e ffd fs1e fc2 sc0 ls0 ws0">uint64_t<span class="_ _e"> </span>required_size<span class="_ _1f"> </span>=<span class="_ _1f"> </span>ele_cnt<span class="_ _e"> </span>*<span class="_ _1f"> </span>(uint64_t)<span class="_ _e"> </span>ele_size;</div><div class="t m5 x142 h2d y1e9f ffd fs1e fc2 sc0 ls0 ws0">size_t<span class="_ _e"> </span>request_size<span class="_ _1f"> </span>=<span class="_ _1f"> </span>(size_t)<span class="_ _e"> </span>required_size;</div><div class="t m5 x142 h2d y1ea0 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(required_size<span class="_ _1f"> </span>!=<span class="_ _1f"> </span>request_size)</div><div class="t m5 xc5 h2d y1ea1 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Overflow<span class="_ _1f"> </span>must<span class="_ _1f"> </span>have<span class="_ _e"> </span>occurred.<span class="_ _1f"> </span>Abort<span class="_ _e"> </span>operation<span class="_ _1f"> </span>*/</div><div class="t m5 xc5 h2d y1ea2 ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>NULL;</div><div class="t m5 x142 h2d y1ea3 ffd fs1e fc2 sc0 ls0 ws0">void<span class="_ _e"> </span>*result<span class="_ _1f"> </span>=<span class="_ _1f"> </span>malloc(request_size);</div><div class="t m5 x142 h2d y1ea4 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(result<span class="_ _1f"> </span>==<span class="_ _1f"> </span>NULL)</div><div class="t m5 xc5 h2d y1ea5 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>malloc<span class="_ _1f"> </span>failed<span class="_ _1f"> </span>*/</div><div class="t m5 xc5 h2d y1ea6 ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>NULL;</div><div class="t m5 x17 h28 y1ea7 ffe fs1e fc6 sc0 ls0 ws0">Solution<span class="_"> </span>to<span class="_"> </span>Problem<span class="_"> </span>2.38</div><div class="t m5 x112 h2f y1ea8 ffe fs16 fc6 sc0 ls0 ws0">(page<span class="_"> </span>138)</div><div class="t m5 x17 h26 y13c0 ff7 fs19 fc1 sc0 ls0 ws0">In<span class="_ _14"> </span>Chapter<span class="_ _14"> </span>3,<span class="_ _21"> </span>we<span class="_ _14"> </span>will<span class="_ _14"> </span>see<span class="_ _15"> </span>many<span class="_ _14"> </span>examples<span class="_ _14"> </span>of<span class="_ _15"> </span>the<span class="_ _14"> </span><span class="ff9">lea<span class="_ _15"> </span></span>instruction<span class="_ _14"> </span>in<span class="_ _14"> </span>action.<span class="_ _15"> </span>T<span class="_ _1"></span>he</div><div class="t m5 x17 h26 y13c1 ff7 fs19 fc1 sc0 ls0 ws0">instruction<span class="_ _14"> </span>is<span class="_ _14"> </span>provided<span class="_ _14"> </span>to<span class="_ _14"> </span>support<span class="_ _14"> </span>pointer<span class="_ _14"> </span>arithmetic,<span class="_ _14"> </span>but<span class="_ _14"> </span>the<span class="_ _14"> </span>C<span class="_ _15"> </span>compiler<span class="_ _14"> </span>often</div><div class="t m5 x17 h26 y13c2 ff7 fs19 fc1 sc0 ls0 ws0">uses<span class="_"> </span>it<span class="_"> </span>as<span class="_"> </span>a<span class="_"> </span>way<span class="_"> </span>to<span class="_"> </span>perform<span class="_"> </span>multiplication<span class="_"> </span>by<span class="_"> </span>small<span class="_"> </span>constants<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y13c3 ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_ _13"> </span>each<span class="_ _13"> </span>value<span class="_ _13"> </span>of<span class="_ _13"> </span><span class="ff11">k<span class="_ _2"></span></span>,<span class="_"> </span>we<span class="_ _13"> </span>can<span class="_ _13"> </span>compute<span class="_ _13"> </span>two<span class="_ _13"> </span>multiples:<span class="_ _13"> </span>2</div><div class="t m5 x1b4 h50 y1ea9 ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x1c2 h26 y77e ff7 fs19 fc1 sc0 ls0 ws0">(when<span class="_ _13"> </span><span class="ffd">b<span class="_ _13"> </span></span>is<span class="_ _13"> </span>0)<span class="_ _13"> </span>and<span class="_ _13"> </span>2</div><div class="t m5 x44 h50 y1ea9 ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x11d h46 y77e ff12 fs19 fc1 sc0 ls0 ws0">+<span class="_ _13"></span><span class="ff7">1</span></div><div class="t m5 x17 h26 y77f ff7 fs19 fc1 sc0 ls0 ws0">(when<span class="_"> </span><span class="ffd">b<span class="_ _10"> </span></span>is<span class="_"> </span><span class="ffd">a</span>).<span class="_"> </span>T<span class="_ _1"></span>hus<span class="_ _0"></span>,<span class="_"> </span>we<span class="_"> </span>can<span class="_"> </span>compute<span class="_"> </span>multiples<span class="_"> </span>1,<span class="_"> </span>2,<span class="_"> </span>3,<span class="_"> </span>4,<span class="_"> </span>5,<span class="_"> </span>8,<span class="_"> </span>and<span class="_"> </span>9.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
