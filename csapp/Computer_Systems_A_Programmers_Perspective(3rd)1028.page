<div id="pf404" class="pf w2 h11" data-page-no="404"><div class="pc pc404 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg404.png"/><div class="t m5 x88 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>12.3<span class="_ _60"> </span>Concurrent<span class="_ _10"> </span>Programming<span class="_ _10"> </span>with<span class="_ _10"> </span>Threads<span class="_ _3e"> </span><span class="ffe fs1e">1027</span></div><div class="t m5 x17 h41 ye7 ffe fs29 fc2 sc0 ls0 ws0">12.3.8<span class="_ _48"> </span><span class="fs19">A<span class="_"> </span>Concurrent<span class="_"> </span>Server<span class="_"> </span>Based<span class="_"> </span>on<span class="_"> </span>Threads</span></div><div class="t m5 x17 h26 ybbe ff7 fs19 fc2 sc0 ls0 ws0">F<span class="_ _1"></span>igure<span class="_ _16"> </span>12.14<span class="_ _11"> </span>shows<span class="_ _11"> </span>the<span class="_ _16"> </span>code<span class="_ _11"> </span>for<span class="_ _11"> </span>a<span class="_ _16"> </span>concurrent<span class="_ _11"> </span>echo<span class="_ _11"> </span>server<span class="_ _16"> </span>based<span class="_ _11"> </span>on<span class="_ _11"> </span>threads<span class="_ _1"></span>.<span class="_ _16"> </span>T<span class="_ _1"></span>he</div><div class="t m5 x17 h26 ybbf ff7 fs19 fc2 sc0 ls0 ws0">overall<span class="_ _11"> </span>structure<span class="_ _11"> </span>is<span class="_ _16"> </span>similar<span class="_"> </span>to<span class="_ _16"> </span>the<span class="_ _11"> </span>process-based<span class="_ _11"> </span>design.<span class="_ _11"> </span>The<span class="_"> </span>main<span class="_ _11"> </span>thread<span class="_ _16"> </span>repeat-</div><div class="t m5 x17 h26 ybc0 ff7 fs19 fc2 sc0 ls0 ws0">edly<span class="_"> </span>waits<span class="_ _11"> </span>for<span class="_ _11"> </span>a<span class="_ _11"> </span>connection<span class="_ _11"> </span>request<span class="_ _11"> </span>and<span class="_ _11"> </span>then<span class="_ _11"> </span>creates<span class="_ _11"> </span>a<span class="_ _11"> </span>peer<span class="_ _11"> </span>thread<span class="_ _11"> </span>to<span class="_ _11"> </span>handle<span class="_ _11"> </span>the</div><div class="t m5 x17 h26 ybc1 ff7 fs19 fc2 sc0 ls0 ws0">request.<span class="_ _14"> </span>While<span class="_ _16"> </span>the<span class="_ _14"> </span>code<span class="_ _14"> </span>looks<span class="_ _14"> </span>simple,<span class="_ _14"> </span>there<span class="_ _14"> </span>are<span class="_ _14"> </span>a<span class="_ _14"> </span>couple<span class="_ _14"> </span>of<span class="_ _14"> </span>general<span class="_ _14"> </span>and<span class="_ _14"> </span>some-</div><div class="t m5 x17 h26 ybc2 ff7 fs19 fc2 sc0 ls0 ws0">what<span class="_ _11"> </span>subtle<span class="_ _11"> </span>issues<span class="_ _11"> </span>we<span class="_ _11"> </span>need<span class="_ _16"> </span>to<span class="_"> </span>look<span class="_ _16"> </span>at<span class="_"> </span>more<span class="_ _16"> </span>closely<span class="_ _7"></span>.<span class="_ _11"> </span>The<span class="_"> </span>Ô¨Årst<span class="_ _11"> </span>issue<span class="_ _16"> </span>is<span class="_"> </span>how<span class="_ _11"> </span>to<span class="_ _16"> </span>pass</div><div class="t m5 x24d h2c y806f ffa fs16 fc2 sc0 ls0 ws0">code/conc/echoservert.c</div><div class="t m5 x2c h88 y8070 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs4e fc2">#include<span class="_ _e"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 x2c h2e y8071 ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 x2c h2e y8072 ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x2d h88 y1d43 ffd fs4e fc2 sc0 ls0 ws0">void<span class="_ _e"> </span>echo(int<span class="_ _f"> </span>connfd);</div><div class="t m5 x2c h88 y8073 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _1c"> </span><span class="ffd fs4e fc2">void<span class="_ _e"> </span>*thread(void<span class="_ _e"> </span>*vargp);</span></div><div class="t m5 x2c h2e y8074 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x2c h2e y8075 ff6 fs20 fc6 sc0 ls0 ws0">6</div><div class="t m5 x2d h88 y8076 ffd fs4e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(int<span class="_ _f"> </span>argc,<span class="_ _e"> </span>char<span class="_ _e"> </span>**argv)</div><div class="t m5 x2c h88 y8077 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _1c"> </span><span class="ffd fs4e fc2">{</span></div><div class="t m5 x2c h88 y8078 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>listenfd,<span class="_ _e"> </span>*connfdp;</span></div><div class="t m5 x2c h88 y463a ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _e2"> </span><span class="ffd fs4e fc2">socklen_t<span class="_ _e"> </span>clientlen;</span></div><div class="t m5 x17 h88 y8079 ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _e2"> </span><span class="ffd fs4e fc2">struct<span class="_ _e"> </span>sockaddr_storage<span class="_ _e"> </span>clientaddr;</span></div><div class="t m5 x17 h88 y807a ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _e2"> </span><span class="ffd fs4e fc2">pthread_t<span class="_ _e"> </span>tid;</span></div><div class="t m5 x17 h2e y807b ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x17 h2e y807c ff6 fs20 fc6 sc0 ls0 ws0">13</div><div class="t m5 x1a0 h88 y5999 ffd fs4e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(argc<span class="_ _f"> </span>!=<span class="_ _e"> </span>2)<span class="_ _e"> </span>{</div><div class="t m5 x17 h2e y807d ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x5a h88 y807e ffd fs4e fc2 sc0 ls0 ws0">fprintf(stderr,<span class="_ _e"> </span>&quot;usage:<span class="_ _f"> </span>%s<span class="_ _e"> </span>&lt;port&gt;\n&quot;,<span class="_ _e"> </span>argv[0]);</div><div class="t m5 x17 h88 y807f ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _18b"> </span><span class="ffd fs4e fc2">exit(0);</span></div><div class="t m5 x17 h2e y8080 ff6 fs20 fc6 sc0 ls0 ws0">16</div><div class="t m5 x1a0 h88 y8081 ffd fs4e fc2 sc0 ls0 ws0">}</div><div class="t m5 x17 h88 y8082 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _e2"> </span><span class="ffd fs4e fc2">listenfd<span class="_ _e"> </span>=<span class="_ _e"> </span>Open_listenfd(argv[1]);</span></div><div class="t m5 x17 h2e y8083 ff6 fs20 fc6 sc0 ls0 ws0">18</div><div class="t m5 x17 h2e y8084 ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x1a0 h88 y695a ffd fs4e fc2 sc0 ls0 ws0">while<span class="_ _e"> </span>(1)<span class="_ _f"> </span>{</div><div class="t m5 x17 h88 y695b ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _18b"> </span><span class="ffd fs4e fc2">clientlen=sizeof(struct<span class="_ _e"> </span>sockaddr_storage);</span></div><div class="t m5 x17 h88 y695c ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _18b"> </span><span class="ffd fs4e fc2">connfdp<span class="_ _e"> </span>=<span class="_ _f"> </span>Malloc(sizeof(int));</span></div><div class="t m5 x17 h88 y695d ff6 fs20 fc6 sc0 ls0 ws0">22<span class="_ _18b"> </span><span class="ffd fs4e fc2">*connfdp<span class="_ _e"> </span>=<span class="_ _f"> </span>Accept(listenfd,<span class="_ _e"> </span>(SA<span class="_ _e"> </span>*)<span class="_ _f"> </span>&amp;clientaddr,<span class="_ _e"> </span>&amp;clientlen);</span></div><div class="t m5 x17 h88 y8085 ff6 fs20 fc6 sc0 ls0 ws0">23<span class="_ _18b"> </span><span class="ffd fs4e fc2">Pthread_create(&amp;tid,<span class="_ _e"> </span>NULL,<span class="_ _f"> </span>thread,<span class="_ _e"> </span>connfdp);</span></div><div class="t m5 x17 h88 y6897 ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x17 h2e y6960 ff6 fs20 fc6 sc0 ls0 ws0">25</div><div class="t m5 x2d h88 y8086 ffd fs4e fc2 sc0 ls0 ws0">}</div><div class="t m5 x17 h2e y6961 ff6 fs20 fc6 sc0 ls0 ws0">26</div><div class="t m5 x17 h2e y8087 ff6 fs20 fc6 sc0 ls0 ws0">27</div><div class="t m5 x2d h88 y8088 ffd fs4e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Thread<span class="_ _f"> </span>routine<span class="_ _e"> </span>*/</div><div class="t m5 x17 h88 y8089 ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _1c"> </span><span class="ffd fs4e fc2">void<span class="_ _e"> </span>*thread(void<span class="_ _e"> </span>*vargp)</span></div><div class="t m5 x17 h88 y808a ff6 fs20 fc6 sc0 ls0 ws0">29<span class="_ _1c"> </span><span class="ffd fs4e fc2">{</span></div><div class="t m5 x17 h88 y2606 ff6 fs20 fc6 sc0 ls0 ws0">30<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>connfd<span class="_ _e"> </span>=<span class="_ _f"> </span>*((int<span class="_ _e"> </span>*)vargp);</span></div><div class="t m5 x17 h88 y6966 ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _e2"> </span><span class="ffd fs4e fc2">Pthread_detach(pthread_self());</span></div><div class="t m5 x17 h88 y808b ff6 fs20 fc6 sc0 ls0 ws0">32<span class="_ _e2"> </span><span class="ffd fs4e fc2">Free(vargp);</span></div><div class="t m5 x17 h88 y808c ff6 fs20 fc6 sc0 ls0 ws0">33<span class="_ _e2"> </span><span class="ffd fs4e fc2">echo(connfd);</span></div><div class="t m5 x17 h88 y808d ff6 fs20 fc6 sc0 ls0 ws0">34<span class="_ _e2"> </span><span class="ffd fs4e fc2">Close(connfd);</span></div><div class="t m5 x17 h88 y808e ff6 fs20 fc6 sc0 ls0 ws0">35<span class="_ _e2"> </span><span class="ffd fs4e fc2">return<span class="_ _e"> </span>NULL;</span></div><div class="t m5 x17 h88 y808f ff6 fs20 fc6 sc0 ls0 ws0">36<span class="_ _1c"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x24d h2c y68a7 ffa fs16 fc2 sc0 ls0 ws0">code/conc/echoservert.c</div><div class="t m5 x17 h2f y68a8 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>12.14<span class="_ _66"> </span><span class="fc1">Concurrent<span class="_"> </span>echo<span class="_"> </span>ser<span class="_ _2"></span>ver<span class="_"> </span>based<span class="_"> </span>on<span class="_"> </span>threads.</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
