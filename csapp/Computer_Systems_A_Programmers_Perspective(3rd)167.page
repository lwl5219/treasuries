<div id="pfa7" class="pf w2 h11" data-page-no="a7"><div class="pc pca7 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bga7.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">166<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>2<span class="_ _3d"> </span>Representing<span class="_ _10"> </span>and<span class="_ _10"> </span>Manipulating<span class="_ _10"> </span>Information</span></div><div class="t m5 x124 h26 ye7 ff7 fs19 fc2 sc0 ls0 ws0">C.<span class="_ _25"> </span>Any<span class="_"> </span>bit<span class="_"> </span>in<span class="_"> </span>the<span class="_"> </span>least<span class="_"> </span>signiﬁcant<span class="_"> </span>byte<span class="_"> </span>of<span class="_"> </span><span class="ffd">x<span class="_ _10"> </span></span>equals<span class="_"> </span>1.</div><div class="t m5 x124 h26 y10aa ff7 fs19 fc2 sc0 ls0 ws0">D<span class="_ _3"></span>.<span class="_ _23"> </span>Any<span class="_"> </span>bit<span class="_"> </span>in<span class="_"> </span>the<span class="_"> </span>most<span class="_"> </span>signiﬁcant<span class="_"> </span>byte<span class="_"> </span>of<span class="_"> </span><span class="ffd">x<span class="_ _10"> </span></span>equals<span class="_"> </span>0.</div><div class="t m5 x1d h26 y1a81 ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _16"> </span>code<span class="_ _14"> </span>should<span class="_ _14"> </span>follow<span class="_ _14"> </span>the<span class="_ _16"> </span>bit-level<span class="_ _14"> </span>integer<span class="_ _14"> </span>coding<span class="_ _14"> </span>rules<span class="_ _16"> </span>(page<span class="_ _14"> </span>164),<span class="_ _15"> </span>with<span class="_ _16"> </span>the</div><div class="t m5 x1d h26 y1a82 ff7 fs19 fc2 sc0 ls0 ws0">additional<span class="_"> </span>restriction<span class="_"> </span>that<span class="_"> </span>you<span class="_"> </span>may<span class="_"> </span>not<span class="_"> </span>use<span class="_"> </span>equality<span class="_"> </span>(<span class="ffd">==</span>)<span class="_"> </span>or<span class="_"> </span>inequality<span class="_"> </span>(<span class="ffd">!=</span>)<span class="_"> </span>tests<span class="_ _1"></span>.</div><div class="t m5 x1d h73 y1a83 ffe fs1e fc6 sc0 ls0 ws0">2.62<span class="_ _23"> </span><span class="ff10 fs19">◆◆◆</span></div><div class="t m5 x1d h26 y1a84 ff7 fs19 fc1 sc0 ls0 ws0">Write<span class="_ _15"> </span>a<span class="_ _15"> </span>function<span class="_ _21"> </span><span class="ffd">int_shifts_are_arithmetic()<span class="_ _15"> </span></span>that<span class="_ _15"> </span>yields<span class="_ _21"> </span>1<span class="_ _15"> </span>when<span class="_ _21"> </span>run<span class="_ _15"> </span>on<span class="_ _15"> </span>a</div><div class="t m5 x1d h26 y1a85 ff7 fs19 fc1 sc0 ls0 ws0">machine<span class="_"> </span>that<span class="_"> </span>uses<span class="_ _13"> </span>arithmetic<span class="_"> </span>right<span class="_"> </span>shifts<span class="_"> </span>for<span class="_"> </span>data<span class="_ _13"> </span>type<span class="_"> </span><span class="ffd">int<span class="_ _10"> </span></span>and<span class="_"> </span>yields<span class="_"> </span>0<span class="_"> </span>otherwise<span class="_ _3"></span>.</div><div class="t m5 x1d h26 y1a86 ff7 fs19 fc1 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _6"> </span>code<span class="_ _13"> </span>should<span class="_ _13"> </span>work<span class="_ _6"> </span>on<span class="_ _13"> </span>a<span class="_ _6"> </span>machine<span class="_ _13"> </span>with<span class="_ _6"> </span>any<span class="_ _13"> </span>word<span class="_ _6"> </span>size.<span class="_ _6"> </span>T<span class="_ _7"></span>est<span class="_ _13"> </span>your<span class="_ _13"> </span>code<span class="_ _6"> </span>on<span class="_ _13"> </span>several</div><div class="t m5 x1d h26 y1a87 ff7 fs19 fc1 sc0 ls0 ws0">machines<span class="_ _1"></span>.</div><div class="t m5 x1d h73 y1a88 ffe fs1e fc6 sc0 ls0 ws0">2.63<span class="_ _23"> </span><span class="ff10 fs19">◆◆◆</span></div><div class="t m5 x1d h26 y1a89 ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>ill<span class="_ _16"> </span>in<span class="_ _16"> </span>code<span class="_ _16"> </span>for<span class="_ _16"> </span>the<span class="_ _16"> </span>following<span class="_ _16"> </span>C<span class="_ _16"> </span>functions<span class="_ _1"></span>.<span class="_ _16"> </span>Function<span class="_ _16"> </span><span class="ffd">srl<span class="_ _16"> </span></span>performs<span class="_ _16"> </span>a<span class="_ _16"> </span>logical<span class="_ _16"> </span>right</div><div class="t m5 x1d h26 y1a8a ff7 fs19 fc1 sc0 ls0 ws0">shift<span class="_ _13"> </span>using<span class="_"> </span>an<span class="_ _13"> </span>arithmetic<span class="_"> </span>right<span class="_ _13"> </span>shift<span class="_"> </span>(given<span class="_ _13"> </span>by<span class="_"> </span>value<span class="_ _13"> </span><span class="ffd">xsra</span>),<span class="_ _13"> </span>followed<span class="_"> </span>by<span class="_ _13"> </span>other<span class="_"> </span>oper<span class="_ _3"></span>-</div><div class="t m5 x1d h26 y1a8b ff7 fs19 fc1 sc0 ls0 ws0">ations<span class="_"> </span>not<span class="_ _11"> </span>including<span class="_"> </span>right<span class="_ _11"> </span>shifts<span class="_"> </span>or<span class="_ _11"> </span>division.<span class="_ _11"> </span>Function<span class="_"> </span><span class="ffd">sra<span class="_ _11"> </span></span>performs<span class="_"> </span>an<span class="_ _11"> </span>arithmetic</div><div class="t m5 x1d h26 y1a8c ff7 fs19 fc1 sc0 ls0 ws0">right<span class="_ _21"> </span>shift<span class="_ _21"> </span>using<span class="_ _21"> </span>a<span class="_ _21"> </span>logical<span class="_ _21"> </span>right<span class="_ _21"> </span>shift<span class="_ _21"> </span>(given<span class="_ _f"> </span>by<span class="_ _21"> </span>value<span class="_ _21"> </span><span class="ffd">xsrl</span>),<span class="_ _f"> </span>followed<span class="_ _21"> </span>by<span class="_ _f"> </span>other</div><div class="t m5 x1d h26 y1a8d ff7 fs19 fc1 sc0 ls0 ws0">operations<span class="_ _14"> </span>not<span class="_ _14"> </span>including<span class="_ _14"> </span>right<span class="_ _14"> </span>shifts<span class="_ _15"> </span>or<span class="_ _14"> </span>division.<span class="_ _14"> </span>Y<span class="_ _3"></span>ou<span class="_ _14"> </span>may<span class="_ _14"> </span>use<span class="_ _14"> </span>the<span class="_ _14"> </span>computation</div><div class="t m5 x1d h26 y1a8e ffd fs19 fc1 sc0 ls0 ws0">8*sizeof(int)<span class="_ _16"> </span><span class="ff7">to<span class="_ _14"> </span>determine<span class="_ _14"> </span><span class="ff11">w<span class="_ _2"></span></span>,<span class="_ _14"> </span>the<span class="_ _14"> </span>number<span class="_ _16"> </span>of<span class="_ _14"> </span>bits<span class="_ _14"> </span>in<span class="_ _16"> </span>data<span class="_ _14"> </span>type<span class="_ _14"> </span></span>int<span class="ff7">.<span class="_ _14"> </span>T<span class="_ _1"></span>he<span class="_ _14"> </span>shift</span></div><div class="t m5 x1d h46 y1a8f ff7 fs19 fc1 sc0 ls0 ws0">amount<span class="_"> </span><span class="ffd">k<span class="_ _10"> </span></span>can<span class="_"> </span>range<span class="_"> </span>from<span class="_"> </span>0<span class="_"> </span>to<span class="_"> </span><span class="ff11">w<span class="_ _10"> </span><span class="ff12">−<span class="_ _10"> </span></span></span><span class="ls25">1.</span></div><div class="t m5 x1d h2d y1a90 ffd fs1e fc2 sc0 ls0 ws0">unsigned<span class="_ _e"> </span>srl(unsigned<span class="_ _1f"> </span>x,<span class="_ _1f"> </span>int<span class="_ _e"> </span>k)<span class="_ _1f"> </span>{</div><div class="t m5 x10c h2d y1a91 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Perform<span class="_ _1f"> </span>shift<span class="_ _1f"> </span>arithmetically<span class="_ _e"> </span>*/</div><div class="t m5 x10c h2d y1a92 ffd fs1e fc2 sc0 ls0 ws0">unsigned<span class="_ _e"> </span>xsra<span class="_ _1f"> </span>=<span class="_ _1f"> </span>(int)<span class="_ _e"> </span>x<span class="_ _1f"> </span>&gt;&gt;<span class="_ _e"> </span>k;</div><div class="t m5 x1d h2d y1a93 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a94 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a95 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a96 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a97 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a98 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a99 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x1d h2d y1a9a ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>sra(int<span class="_ _1f"> </span>x,<span class="_ _1f"> </span>int<span class="_ _e"> </span>k)<span class="_ _1f"> </span>{</div><div class="t m5 x10c h2d y1a9b ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Perform<span class="_ _1f"> </span>shift<span class="_ _1f"> </span>logically<span class="_ _e"> </span>*/</div><div class="t m5 x10c h2d y1a9c ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>xsrl<span class="_ _1f"> </span>=<span class="_ _1f"> </span>(unsigned)<span class="_ _e"> </span>x<span class="_ _1f"> </span>&gt;&gt;<span class="_ _e"> </span>k;</div><div class="t m5 x1d h2d y1a9d ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a9e ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1a9f ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1aa0 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1aa1 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1aa2 ffd fs1e fc2 sc0 ls0 ws0">.</div><div class="t m5 x1d h2d y1aa3 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x1d h28 y1aa4 ffe fs1e fc6 sc0 ls0 ws0">2.64</div><div class="t m5 xc4 h73 y1aa5 ff10 fs19 fc6 sc0 ls0 ws0">◆</div><div class="t m5 x1d h26 y1aa6 ff7 fs19 fc1 sc0 ls0 ws0">Write<span class="_"> </span>code<span class="_"> </span>to<span class="_"> </span>implement<span class="_"> </span>the<span class="_"> </span>following<span class="_"> </span>function:</div><div class="t m5 x1d h2d y1aa7 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Return<span class="_ _1f"> </span>1<span class="_ _1f"> </span>when<span class="_ _e"> </span>any<span class="_ _1f"> </span>odd<span class="_ _e"> </span>bit<span class="_ _1f"> </span>of<span class="_ _1f"> </span>x<span class="_ _e"> </span>equals<span class="_ _1f"> </span>1;<span class="_ _e"> </span>0<span class="_ _1f"> </span>otherwise.</div><div class="t m5 xa4 h2d y1aa8 ffd fs1e fc2 sc0 ls0 ws0">Assume<span class="_ _e"> </span>w=32<span class="_ _1f"> </span>*/</div><div class="t m5 x1d h2d y1aa9 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>any_odd_one(unsigned<span class="_ _1f"> </span>x);</div><div class="t m5 x29 h26 y15bf ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _15"> </span>function<span class="_ _21"> </span>should<span class="_ _21"> </span>follow<span class="_ _21"> </span>the<span class="_ _21"> </span>bit-level<span class="_ _21"> </span>integer<span class="_ _21"> </span>coding<span class="_ _21"> </span>rules<span class="_ _21"> </span>(page<span class="_ _21"> </span>164),</div><div class="t m5 x1d h46 y15c0 ff7 fs19 fc2 sc0 ls0 ws0">except<span class="_"> </span>that<span class="_"> </span>you<span class="_"> </span>may<span class="_"> </span>assume<span class="_"> </span>that<span class="_"> </span>data<span class="_"> </span>type<span class="_"> </span><span class="ffd">int<span class="_ _10"> </span></span>has<span class="_"> </span><span class="ff11">w<span class="_ _10"> </span><span class="ff12">=<span class="_ _10"> </span></span></span>32<span class="_"> </span>bits<span class="_ _1"></span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
