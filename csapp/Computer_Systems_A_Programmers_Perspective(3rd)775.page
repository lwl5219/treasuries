<div id="pf307" class="pf w2 h11" data-page-no="307"><div class="pc pc307 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg307.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">774<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>8<span class="_ _3d"> </span>Exceptional<span class="_ _10"> </span>Control<span class="_ _10"> </span>Flow</span></div><div class="t m5 x1f h2d ye7 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">void<span class="_ _1f"> </span>unix_error(char<span class="_ _e"> </span>*msg)<span class="_ _1f"> </span>/*<span class="_ _1f"> </span>Unix-style<span class="_ _e"> </span>error<span class="_ _1f"> </span>*/</span></div><div class="t m5 x1f h2d yc4d ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x1f h2d yecb ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">fprintf(stderr,<span class="_ _e"> </span>&quot;%s:<span class="_ _1f"> </span>%s\n&quot;,<span class="_ _1f"> </span>msg,<span class="_ _e"> </span>strerror(errno));</span></div><div class="t m5 x1f h2d yecc ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">exit(0);</span></div><div class="t m5 x1f h2d yecd ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1d h26 y6597 ff7 fs19 fc2 sc0 ls0 ws0">Given<span class="_"> </span>this<span class="_"> </span>function,<span class="_"> </span>our<span class="_"> </span>call<span class="_"> </span>to<span class="_"> </span><span class="ffd">fork<span class="_ _10"> </span></span>reduces<span class="_"> </span>from<span class="_"> </span>four<span class="_"> </span>lines<span class="_"> </span>to<span class="_"> </span>two<span class="_"> </span>lines:</div><div class="t m5 x1f h2d y6598 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>((pid<span class="_ _1f"> </span>=<span class="_ _1f"> </span>fork())<span class="_ _e"> </span>&lt;<span class="_ _1f"> </span>0)</span></div><div class="t m5 x1f h2d y5c03 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _70"> </span><span class="ffd fs1e fc2">unix_error(&quot;fork<span class="_ _e"> </span>error&quot;);</span></div><div class="t m5 x29 h26 y6599 ff7 fs19 fc2 sc0 ls0 ws0">W<span class="_ _3"></span>e<span class="_ _f"> </span>can<span class="_ _21"> </span>simplify<span class="_ _f"> </span>our<span class="_ _f"> </span>code<span class="_ _f"> </span>even<span class="_ _21"> </span>further<span class="_ _f"> </span>by<span class="_ _f"> </span>using<span class="_ _f"> </span><span class="ffa">error<span class="_ _0"></span>-handling<span class="_ _21"> </span>wrappers<span class="ff7">,</span></span></div><div class="t m5 x1d h26 y659a ff7 fs19 fc2 sc0 ls0 ws0">as<span class="_ _21"> </span>pioneered<span class="_ _21"> </span>by<span class="_ _f"> </span>Stevens<span class="_ _21"> </span>in<span class="_ _21"> </span>[110].<span class="_ _f"> </span>F<span class="_ _1"></span>or<span class="_ _21"> </span>a<span class="_ _f"> </span>given<span class="_ _21"> </span>base<span class="_ _21"> </span>function<span class="_ _f"> </span><span class="ffd">foo</span>,<span class="_ _e"> </span>we<span class="_ _15"> </span>deﬁne<span class="_ _f"> </span>a</div><div class="t m5 x1d h26 y659b ff7 fs19 fc2 sc0 ls0 ws0">wrapper<span class="_ _13"> </span>function<span class="_ _13"> </span><span class="ffd">Foo<span class="_ _6"> </span></span>with<span class="_ _13"> </span>identical<span class="_ _13"> </span>arguments<span class="_ _13"> </span>but<span class="_ _6"> </span>with<span class="_ _13"> </span>the<span class="_ _13"> </span>ﬁrst<span class="_ _13"> </span>letter<span class="_ _6"> </span>of<span class="_ _13"> </span>the<span class="_ _13"> </span>name</div><div class="t m5 x1d h26 y659c ff7 fs19 fc2 sc0 ls0 ws0">capitalized.<span class="_ _13"> </span>T<span class="_ _0"></span>he<span class="_ _13"> </span>wrapper<span class="_ _13"> </span>calls<span class="_ _13"> </span>the<span class="_"> </span>base<span class="_ _13"> </span>function,<span class="_ _13"> </span>checks<span class="_ _13"> </span>for<span class="_ _13"> </span>errors<span class="_ _1"></span>,<span class="_"> </span>and<span class="_ _13"> </span>terminates</div><div class="t m5 x1d h26 y659d ff7 fs19 fc2 sc0 ls0 ws0">if<span class="_ _13"> </span>there<span class="_"> </span>are<span class="_ _13"> </span>any<span class="_ _13"> </span>problems<span class="_ _1"></span>.<span class="_ _13"> </span>F<span class="_ _1"></span>or<span class="_"> </span>example<span class="_ _1"></span>,<span class="_"> </span>here<span class="_ _13"> </span>is<span class="_ _13"> </span>the<span class="_ _13"> </span>error<span class="_ _1"></span>-handling<span class="_"> </span>wrapper<span class="_ _13"> </span>for<span class="_ _13"> </span>the</div><div class="t m5 x1d h26 y659e ffd fs19 fc2 sc0 ls0 ws0">fork<span class="_ _10"> </span><span class="ff7">function:</span></div><div class="t m5 x1f h2d y659f ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">pid_t<span class="_ _1f"> </span>Fork(void)</span></div><div class="t m5 x1f h2d y65a0 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x1f h2d y65a1 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">pid_t<span class="_ _e"> </span>pid;</span></div><div class="t m5 x1f h2e y65a2 ff6 fs20 fc6 sc0 ls0 ws0">4</div><div class="t m5 x1f h2e y65a3 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x33 h2d y65a4 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>((pid<span class="_ _1f"> </span>=<span class="_ _1f"> </span>fork())<span class="_ _e"> </span>&lt;<span class="_ _1f"> </span>0)</div><div class="t m5 x1f h2d y65a5 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _70"> </span><span class="ffd fs1e fc2">unix_error(&quot;Fork<span class="_ _e"> </span>error&quot;);</span></div><div class="t m5 x1f h2d y65a6 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>pid;</span></div><div class="t m5 x1f h2d y65a7 ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1d h26 y65a8 ff7 fs19 fc2 sc0 ls0 ws0">Given<span class="_"> </span>this<span class="_"> </span>wrapper,<span class="_"> </span>our<span class="_"> </span>call<span class="_"> </span>to<span class="_"> </span><span class="ffd">fork<span class="_ _10"> </span></span>shrinks<span class="_"> </span>to<span class="_"> </span>a<span class="_"> </span>single<span class="_"> </span>compact<span class="_"> </span>line:</div><div class="t m5 x1f h2d y65a9 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _20"> </span><span class="ffd fs1e fc2">pid<span class="_ _e"> </span>=<span class="_ _1f"> </span>Fork();</span></div><div class="t m5 x29 h26 y65aa ff7 fs19 fc2 sc0 ls0 ws0">W<span class="_ _3"></span>e<span class="_"> </span>will<span class="_ _11"> </span>use<span class="_"> </span>error<span class="_ _1"></span>-handling<span class="_ _11"> </span>wrappers<span class="_"> </span>throughout<span class="_"> </span>the<span class="_ _11"> </span>remainder<span class="_"> </span>of<span class="_"> </span>this<span class="_ _11"> </span>book.</div><div class="t m5 x1d h26 y65ab ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>hey<span class="_ _13"> </span>allow<span class="_"> </span>us<span class="_ _13"> </span>to<span class="_ _13"> </span>keep<span class="_ _13"> </span>our<span class="_ _13"> </span>code<span class="_ _13"> </span>examples<span class="_ _13"> </span>concise<span class="_ _13"> </span>without<span class="_ _13"> </span>giving<span class="_ _13"> </span>you<span class="_"> </span>the<span class="_ _13"> </span>mistaken</div><div class="t m5 x1d h26 y65ac ff7 fs19 fc2 sc0 ls0 ws0">impression<span class="_ _15"> </span>that<span class="_ _21"> </span>it<span class="_ _21"> </span>is<span class="_ _21"> </span>permissible<span class="_ _15"> </span>to<span class="_ _21"> </span>ignore<span class="_ _21"> </span>error<span class="_ _21"> </span>checking.<span class="_ _15"> </span>Note<span class="_ _21"> </span>that<span class="_ _15"> </span>when<span class="_ _21"> </span>we</div><div class="t m5 x1d h26 y65ad ff7 fs19 fc2 sc0 ls0 ws0">discuss<span class="_ _16"> </span>system-level<span class="_ _14"> </span>functions<span class="_ _16"> </span>in<span class="_ _14"> </span>the<span class="_ _16"> </span>text,<span class="_ _15"> </span>we<span class="_ _16"> </span>will<span class="_ _14"> </span>always<span class="_ _16"> </span>refer<span class="_ _14"> </span>to<span class="_ _16"> </span>them<span class="_ _14"> </span>by<span class="_ _16"> </span>their</div><div class="t m5 x1d h26 y65ae ff7 fs19 fc2 sc0 ls0 ws0">lowercase<span class="_"> </span>base<span class="_"> </span>names<span class="_ _1"></span>,<span class="_"> </span>rather<span class="_"> </span>than<span class="_"> </span>by<span class="_"> </span>their<span class="_"> </span>uppercase<span class="_"> </span>wrapper<span class="_"> </span>names<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y65af ff7 fs19 fc2 sc0 ls0 ws0">See<span class="_ _e"> </span>Appendix<span class="_ _f"> </span>A<span class="_ _e"> </span>for<span class="_ _e"> </span>a<span class="_ _e"> </span>discussion<span class="_ _f"> </span>of<span class="_ _e"> </span>Unix<span class="_ _e"> </span>error<span class="_ _f"> </span>handling<span class="_ _e"> </span>and<span class="_ _e"> </span>the<span class="_ _e"> </span>error<span class="_ _3"></span>-</div><div class="t m5 x1d h26 y65b0 ff7 fs19 fc2 sc0 ls0 ws0">handling<span class="_"> </span>wrappers<span class="_"> </span>used<span class="_ _11"> </span>throughout<span class="_"> </span>this<span class="_ _11"> </span>book.<span class="_"> </span>T<span class="_ _0"></span>he<span class="_"> </span>wrappers<span class="_"> </span>are<span class="_ _11"> </span>deﬁned<span class="_"> </span>in<span class="_ _11"> </span>a<span class="_"> </span>ﬁle</div><div class="t m5 x1d h26 y65b1 ff7 fs19 fc2 sc0 ls0 ws0">called<span class="_"> </span><span class="ffd">csapp.c</span>,<span class="_ _11"> </span>and<span class="_ _11"> </span>their<span class="_"> </span>prototypes<span class="_ _11"> </span>are<span class="_ _11"> </span>deﬁned<span class="_"> </span>in<span class="_ _11"> </span>a<span class="_ _11"> </span>header<span class="_ _11"> </span>ﬁle<span class="_"> </span>called<span class="_ _11"> </span><span class="ffd">csapp.h</span>.</div><div class="t m5 x1d h26 y65b2 ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>hese<span class="_"> </span>are<span class="_"> </span>available<span class="_"> </span>online<span class="_"> </span>from<span class="_"> </span>the<span class="_"> </span>CS:APP<span class="_"> </span>W<span class="_ _1"></span>eb<span class="_"> </span>site<span class="_ _1"></span>.</div><div class="t m5 x1d h3b y1051 fff fs24 fc6 sc0 ls0 ws0">8.4<span class="_ _17"> </span><span class="ffe fs18">Process<span class="_"> </span>Control</span></div><div class="t m5 x1d h26 y587 ff7 fs19 fc1 sc0 ls0 ws0">Unix<span class="_ _11"> </span>provides<span class="_ _16"> </span>a<span class="_ _11"> </span>number<span class="_ _16"> </span>of<span class="_ _11"> </span>system<span class="_ _11"> </span>calls<span class="_ _16"> </span>for<span class="_ _11"> </span>manipulating<span class="_ _16"> </span>processes<span class="_ _11"> </span>from<span class="_ _16"> </span>C<span class="_ _11"> </span>pro-</div><div class="t m5 x1d h26 y588 ff7 fs19 fc1 sc0 ls0 ws0">grams<span class="_ _1"></span>.<span class="_"> </span>T<span class="_ _0"></span>his<span class="_"> </span>section<span class="_"> </span>describes<span class="_"> </span>the<span class="_"> </span>important<span class="_"> </span>functions<span class="_ _11"> </span>and<span class="_"> </span>gives<span class="_"> </span>examples<span class="_"> </span>of<span class="_"> </span>how</div><div class="t m5 x1d h26 y589 ff7 fs19 fc1 sc0 ls0 ws0">they<span class="_"> </span>are<span class="_"> </span>used.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
