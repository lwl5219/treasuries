<div id="pf3f9" class="pf w2 h11" data-page-no="3f9"><div class="pc pc3f9 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3f9.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">1016<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>12<span class="_ _3d"> </span>Concurrent<span class="_ _10"> </span>Programming</span></div><div class="t m5 x1d h26 y9c ff7 fs19 fc2 sc0 ls0 ws0">become<span class="_"> </span>ready<span class="_"> </span>for<span class="_"> </span>reading:</div><div class="t m5 x7c h40 y7f85 ffe7 fs28 fc1 sc0 ls0 ws0">listenfd<span class="_ _11b"> </span>stdin</div><div class="t m5 x1d h40 y7f86 ffe7 fs28 fc1 sc0 ls0 ws0">ready_set</div><div class="t m5 x65 h3f y7f87 ffe8 fs27 fc1 sc0 ls0 ws0"> ({0})<span class="ffe7">:<span class="_ _5e"> </span></span>0</div><div class="t m5 xd h3f y7f88 ffe8 fs27 fc1 sc0 ls0 ws0">3</div><div class="t m5 xe1 h3f y7f87 ffe8 fs27 fc1 sc0 ls0 ws0">0</div><div class="t m5 xe1 h3f y7f88 ffe8 fs27 fc1 sc0 ls0 ws0">2</div><div class="t m5 x138 h3f y7f87 ffe8 fs27 fc1 sc0 ls0 ws0">0</div><div class="t m5 x138 h3f y7f88 ffe8 fs27 fc1 sc0 ls0 ws0">1</div><div class="t m5 xfb h3f y7f87 ffe8 fs27 fc1 sc0 ls0 ws0">1</div><div class="t m5 xfb h3f y7f88 ffe8 fs27 fc1 sc0 ls0 ws0">0</div><div class="t m5 x29 h26 y7f89 ff7 fs19 fc2 sc0 ls0 ws0">Once<span class="_ _11"> </span><span class="ffd">select<span class="_ _16"> </span></span>returns<span class="_ _1"></span>,<span class="_ _16"> </span>we<span class="_ _16"> </span>use<span class="_ _11"> </span>the<span class="_ _16"> </span>FD_ISSET<span class="_ _16"> </span>macro<span class="_ _11"> </span>to<span class="_ _16"> </span>determine<span class="_ _16"> </span>which<span class="_ _11"> </span>de-</div><div class="t m5 x1d h26 y7f8a ff7 fs19 fc2 sc0 ls0 ws0">scriptors<span class="_ _14"> </span>are<span class="_ _16"> </span>ready<span class="_ _14"> </span>for<span class="_ _14"> </span>reading.<span class="_ _14"> </span>If<span class="_ _16"> </span>standard<span class="_ _14"> </span>input<span class="_ _14"> </span>is<span class="_ _14"> </span>ready<span class="_ _14"> </span>(line<span class="_ _14"> </span>25),<span class="_ _15"> </span>we<span class="_ _14"> </span>call<span class="_ _16"> </span>the</div><div class="t m5 x1d h26 y7f8b ffd fs19 fc2 sc0 ls0 ws0">command<span class="_ _11"> </span><span class="ff7">function,<span class="_ _11"> </span>which<span class="_ _16"> </span>reads<span class="_ _3"></span>,<span class="_ _16"> </span>parses<span class="_ _1"></span>,<span class="_ _11"> </span>and<span class="_ _16"> </span>responds<span class="_"> </span>to<span class="_ _16"> </span>the<span class="_ _11"> </span>command<span class="_ _11"> </span>before<span class="_ _11"> </span>re-</span></div><div class="t m5 x1d h26 y7f8c ff7 fs19 fc2 sc0 ls0 ws0">turning<span class="_ _11"> </span>to<span class="_ _16"> </span>the<span class="_ _11"> </span>main<span class="_ _16"> </span>routine<span class="_ _1"></span>.<span class="_ _16"> </span>If<span class="_ _11"> </span>the<span class="_ _16"> </span>listening<span class="_ _11"> </span>descriptor<span class="_ _16"> </span>is<span class="_ _11"> </span>ready<span class="_ _16"> </span>(line<span class="_ _11"> </span>27),<span class="_ _16"> </span>we<span class="_ _16"> </span>call</div><div class="t m5 x1d h26 y7f8d ffd fs19 fc2 sc0 ls0 ws0">accept<span class="_ _16"> </span><span class="ff7">to<span class="_ _16"> </span>get<span class="_ _16"> </span>a<span class="_ _16"> </span>connected<span class="_ _16"> </span>descriptor<span class="_ _16"> </span>and<span class="_ _16"> </span>then<span class="_ _16"> </span>call<span class="_ _14"> </span>the<span class="_ _16"> </span></span>echo<span class="_ _16"> </span><span class="ff7">function<span class="_ _16"> </span>from<span class="_ _16"> </span>Fig-</span></div><div class="t m5 x1d h26 y7f8e ff7 fs19 fc2 sc0 ls0 ws0">ure<span class="_"> </span>11.22,<span class="_ _11"> </span>which<span class="_ _11"> </span>echoes<span class="_"> </span>each<span class="_ _11"> </span>line<span class="_ _11"> </span>from<span class="_"> </span>the<span class="_ _11"> </span>client<span class="_ _11"> </span>until<span class="_"> </span>the<span class="_ _11"> </span>client<span class="_"> </span>closes<span class="_ _11"> </span>its<span class="_ _11"> </span>end<span class="_"> </span>of</div><div class="t m5 x1d h26 y7f8f ff7 fs19 fc2 sc0 ls0 ws0">the<span class="_"> </span>connection.</div><div class="t m5 x29 h26 y7f90 ff7 fs19 fc2 sc0 ls0 ws0">While<span class="_ _6"> </span>this<span class="_ _6"> </span>program<span class="_ _13"> </span>is<span class="_ _6"> </span>a<span class="_ _13"> </span>good<span class="_ _6"> </span>example<span class="_ _6"> </span>of<span class="_ _13"> </span>using<span class="_ _6"> </span><span class="ffd">select</span>,<span class="_ _13"> </span>it<span class="_ _6"> </span>still<span class="_ _13"> </span>leaves<span class="_ _6"> </span>something</div><div class="t m5 x1d h26 y7f91 ff7 fs19 fc2 sc0 ls0 ws0">to<span class="_ _13"> </span>be<span class="_ _13"> </span>desired.<span class="_ _13"> </span>T<span class="_ _0"></span>he<span class="_ _13"> </span>problem<span class="_ _13"> </span>is<span class="_ _13"> </span>that<span class="_ _13"> </span>once<span class="_ _13"> </span>it<span class="_ _13"> </span>connects<span class="_ _13"> </span>to<span class="_ _13"> </span>a<span class="_"> </span>client,<span class="_ _13"> </span>it<span class="_ _13"> </span>continues<span class="_ _13"> </span>echoing</div><div class="t m5 x1d h26 y7f92 ff7 fs19 fc2 sc0 ls0 ws0">input<span class="_ _14"> </span>lines<span class="_ _14"> </span>until<span class="_ _15"> </span>the<span class="_ _14"> </span>client<span class="_ _14"> </span>closes<span class="_ _14"> </span>its<span class="_ _15"> </span>end<span class="_ _14"> </span>of<span class="_ _14"> </span>the<span class="_ _15"> </span>connection.<span class="_ _14"> </span>T<span class="_ _0"></span>hus<span class="_ _1"></span>,<span class="_ _15"> </span>if<span class="_ _14"> </span>you<span class="_ _15"> </span>type<span class="_ _14"> </span>a</div><div class="t m5 x1d h26 y7f93 ff7 fs19 fc2 sc0 ls0 ws0">command<span class="_ _13"> </span>to<span class="_ _13"> </span>standard<span class="_"> </span>input,<span class="_ _13"> </span>you<span class="_ _13"> </span>will<span class="_ _13"> </span>not<span class="_ _13"> </span>get<span class="_"> </span>a<span class="_ _13"> </span>response<span class="_ _13"> </span>until<span class="_ _13"> </span>the<span class="_ _13"> </span>server<span class="_"> </span>is<span class="_ _13"> </span>ﬁnished</div><div class="t m5 x1d h26 y7f94 ff7 fs19 fc2 sc0 ls0 ws0">with<span class="_ _16"> </span>the<span class="_ _14"> </span>client.<span class="_ _14"> </span>A<span class="_ _14"> </span>better<span class="_ _16"> </span>approach<span class="_ _14"> </span>would<span class="_ _14"> </span>be<span class="_ _14"> </span>to<span class="_ _16"> </span>multiplex<span class="_ _14"> </span>at<span class="_ _14"> </span>a<span class="_ _16"> </span>ﬁner<span class="_ _14"> </span>granularity<span class="_ _3"></span>,</div><div class="t m5 x1d h26 y7f95 ff7 fs19 fc2 sc0 ls0 ws0">echoing<span class="_"> </span>(at<span class="_"> </span>most)<span class="_"> </span>one<span class="_"> </span>text<span class="_"> </span>line<span class="_"> </span>each<span class="_"> </span>time<span class="_"> </span>through<span class="_"> </span>the<span class="_"> </span>server<span class="_"> </span>loop<span class="_ _1"></span>.</div><div class="t m5 x1d h47 y7f96 ffe fs2b fc1 sc0 ls0 ws0">Practice<span class="_"> </span>Problem<span class="_"> </span>12.3<span class="_ _1f"> </span><span class="fs16">(solution<span class="_"> </span>page<span class="_"> </span>1072)</span></div><div class="t m5 x1d h26 y7f97 ff7 fs19 fc1 sc0 ls0 ws0">In<span class="_"> </span>Linux<span class="_ _13"> </span>systems<span class="_ _1"></span>,<span class="_"> </span>typing<span class="_ _13"> </span>Ctrl+D<span class="_"> </span>indicates<span class="_ _13"> </span>EOF<span class="_"> </span>on<span class="_ _13"> </span>standard<span class="_"> </span>input.<span class="_ _13"> </span>What<span class="_"> </span>happens</div><div class="t m5 x1d h26 y7f98 ff7 fs19 fc1 sc0 ls0 ws0">if<span class="_ _11"> </span>you<span class="_ _16"> </span>type<span class="_ _11"> </span>Ctrl+D<span class="_ _11"> </span>to<span class="_ _16"> </span>the<span class="_ _11"> </span>program<span class="_ _11"> </span>in<span class="_ _16"> </span>F<span class="_ _1"></span>igure<span class="_ _16"> </span>12.6<span class="_ _11"> </span>while<span class="_ _11"> </span>it<span class="_ _16"> </span>is<span class="_ _11"> </span>echoing<span class="_ _11"> </span>each<span class="_ _16"> </span>line<span class="_ _11"> </span>of</div><div class="t m5 x1d h26 y7f99 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>client?</div><div class="t m5 x1d h41 y322c ffe fs29 fc1 sc0 ls0 ws0">12.2.1<span class="_ _48"> </span><span class="fs19">A<span class="_"> </span>Concurrent<span class="_"> </span>Event-Driven<span class="_"> </span>Server<span class="_"> </span>Based<span class="_"> </span>on<span class="_"> </span>I/O<span class="_"> </span>Multiplexing</span></div><div class="t m5 x1d h26 y7fe ff7 fs19 fc1 sc0 ls0 ws0">I/O<span class="_ _16"> </span>multiplexing<span class="_ _11"> </span>can<span class="_ _16"> </span>be<span class="_ _16"> </span>used<span class="_ _11"> </span>as<span class="_ _16"> </span>the<span class="_ _16"> </span>basis<span class="_ _11"> </span>for<span class="_ _16"> </span>concurrent<span class="_ _16"> </span><span class="ffa">event-driven<span class="_ _11"> </span></span>programs<span class="_ _1"></span>,</div><div class="t m5 x1d h26 y7ff ff7 fs19 fc1 sc0 ls0 ws0">where<span class="_ _14"> </span>ﬂows<span class="_ _14"> </span>make<span class="_ _14"> </span>progress<span class="_ _14"> </span>as<span class="_ _14"> </span>a<span class="_ _14"> </span>result<span class="_ _14"> </span>of<span class="_ _14"> </span>certain<span class="_ _14"> </span>events<span class="_ _1"></span>.<span class="_ _14"> </span>The<span class="_ _16"> </span>general<span class="_ _14"> </span>idea<span class="_ _14"> </span>is<span class="_ _14"> </span>to</div><div class="t m5 x1d h26 y800 ff7 fs19 fc1 sc0 ls0 ws0">model<span class="_ _13"> </span>logical<span class="_"> </span>ﬂows<span class="_ _13"> </span>as<span class="_ _13"> </span>state<span class="_ _13"> </span>machines<span class="_ _1"></span>.<span class="_"> </span>Informally<span class="_ _7"></span>,<span class="_"> </span>a<span class="_ _13"> </span><span class="ffa">state<span class="_ _13"> </span>machine<span class="_ _13"> </span></span>is<span class="_"> </span>a<span class="_ _13"> </span>collection<span class="_ _13"> </span>of</div><div class="t m5 x1d h26 y801 ffa fs19 fc1 sc0 ls0 ws0">states<span class="ff7">,<span class="_ _13"> </span></span>input<span class="_ _13"> </span>events<span class="ff7">,<span class="_"> </span>and<span class="_ _13"> </span></span>transitions<span class="_ _13"> </span><span class="ff7">that<span class="_ _13"> </span>map<span class="_ _13"> </span>states<span class="_ _13"> </span>and<span class="_ _13"> </span>input<span class="_ _13"> </span>events<span class="_ _13"> </span>to<span class="_ _13"> </span>states<span class="_ _1"></span>.<span class="_ _13"> </span>Each</span></div><div class="t m5 x1d h26 y802 ff7 fs19 fc1 sc0 ls0 ws0">transition<span class="_"> </span>maps<span class="_ _13"> </span>an<span class="_"> </span>(input<span class="_"> </span>state<span class="_ _1"></span>,<span class="_"> </span>input<span class="_"> </span>event)<span class="_ _13"> </span>pair<span class="_"> </span>to<span class="_"> </span>an<span class="_ _13"> </span>output<span class="_"> </span>state<span class="_ _1"></span>.<span class="_"> </span>A<span class="_"> </span><span class="ffa">self-loop<span class="_ _13"> </span></span>is</div><div class="t m5 x1d h26 y803 ff7 fs19 fc1 sc0 ls0 ws0">a<span class="_ _13"> </span>transition<span class="_ _13"> </span>between<span class="_ _13"> </span>the<span class="_ _13"> </span>same<span class="_"> </span>input<span class="_ _13"> </span>and<span class="_ _13"> </span>output<span class="_ _13"> </span>state<span class="_ _1"></span>.<span class="_"> </span>State<span class="_ _13"> </span>machines<span class="_ _13"> </span>are<span class="_ _13"> </span>typically</div><div class="t m5 x1d h26 y804 ff7 fs19 fc1 sc0 ls0 ws0">drawn<span class="_ _16"> </span>as<span class="_ _16"> </span>directed<span class="_ _16"> </span>graphs<span class="_ _1"></span>,<span class="_ _16"> </span>where<span class="_ _16"> </span>nodes<span class="_ _16"> </span>represent<span class="_ _16"> </span>states<span class="_ _1"></span>,<span class="_ _14"> </span>directed<span class="_ _16"> </span>arcs<span class="_ _16"> </span>represent</div><div class="t m5 x1d h26 y805 ff7 fs19 fc1 sc0 ls0 ws0">transitions<span class="_ _1"></span>,<span class="_ _6"> </span>and<span class="_ _6"> </span>arc<span class="_ _6"> </span>labels<span class="_ _6"> </span>represent<span class="_ _6"> </span>input<span class="_ _6"> </span>events<span class="_ _0"></span>.<span class="_ _6"> </span>A<span class="_ _6"> </span>state<span class="_ _6"> </span>machine<span class="_ _6"> </span>begins<span class="_ _6"> </span>execution</div><div class="t m5 x1d h26 y806 ff7 fs19 fc1 sc0 ls0 ws0">in<span class="_"> </span>some<span class="_"> </span>initial<span class="_"> </span>state.<span class="_"> </span>Each<span class="_"> </span>input<span class="_"> </span>event<span class="_"> </span>triggers<span class="_ _11"> </span>a<span class="_"> </span>transition<span class="_"> </span>from<span class="_ _11"> </span>the<span class="_"> </span>current<span class="_"> </span>state</div><div class="t m5 x1d h26 y807 ff7 fs19 fc1 sc0 ls0 ws0">to<span class="_"> </span>the<span class="_"> </span>next<span class="_"> </span>state<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y808 ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_"> </span>each<span class="_"> </span>new<span class="_"> </span>client<span class="_ _11"> </span><span class="ff11">k<span class="_ _2"></span></span>,<span class="_"> </span>a<span class="_"> </span>concurrent<span class="_"> </span>server<span class="_ _11"> </span>based<span class="_"> </span>on<span class="_"> </span>I/O<span class="_"> </span>multiplexing<span class="_ _11"> </span>creates</div><div class="t m5 x1d h26 y809 ff7 fs19 fc1 sc0 ls0 ws0">a<span class="_ _11"> </span>new<span class="_ _11"> </span>state<span class="_ _11"> </span>machine<span class="_ _11"> </span><span class="ff11">s</span></div><div class="t m5 x255 h50 y21fe ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x110 h26 y13c0 ff7 fs19 fc1 sc0 ls0 ws0">and<span class="_ _11"> </span>associates<span class="_ _11"> </span>it<span class="_ _11"> </span>with<span class="_ _11"> </span>connected<span class="_ _11"> </span>descriptor<span class="_ _11"> </span><span class="ff11">d</span></div><div class="t m5 x193 h50 y21fe ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x220 h26 y13c0 ff7 fs19 fc1 sc0 ls0 ws0">.<span class="_ _11"> </span>As<span class="_ _11"> </span>shown</div><div class="t m5 x1d h26 y13c1 ff7 fs19 fc1 sc0 ls0 ws0">in<span class="_ _11"> </span>F<span class="_ _0"></span>igure<span class="_ _11"> </span>12.7,<span class="_ _16"> </span>each<span class="_ _11"> </span>state<span class="_ _11"> </span>machine<span class="_ _16"> </span><span class="ff11">s</span></div><div class="t m5 x130 h50 y52b9 ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x131 h26 y832 ff7 fs19 fc1 sc0 ls0 ws0">has<span class="_ _11"> </span>one<span class="_ _11"> </span>state<span class="_ _16"> </span>(“waiting<span class="_ _11"> </span>for<span class="_ _11"> </span>descriptor<span class="_ _16"> </span><span class="ff11">d</span></div><div class="t m5 x213 h50 y52ba ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x14b h26 y832 ff7 fs19 fc1 sc0 ls0 ws0">to</div><div class="t m5 x1d h26 y833 ff7 fs19 fc1 sc0 ls0 ws0">be<span class="_ _13"> </span>ready<span class="_ _13"> </span>for<span class="_ _13"> </span>reading”),<span class="_"> </span>one<span class="_ _13"> </span>input<span class="_ _13"> </span>event<span class="_ _13"> </span>(“descriptor<span class="_ _13"> </span><span class="ff11">d</span></div><div class="t m5 x152 h50 y21ff ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 x108 h26 y8d6 ff7 fs19 fc1 sc0 ls0 ws0">is<span class="_ _13"> </span>ready<span class="_ _13"> </span>for<span class="_ _13"> </span>reading”),<span class="_"> </span>and</div><div class="t m5 x1d h26 y8d7 ff7 fs19 fc1 sc0 ls0 ws0">one<span class="_"> </span>transition<span class="_"> </span>(“read<span class="_"> </span>a<span class="_"> </span>text<span class="_"> </span>line<span class="_"> </span>from<span class="_"> </span>descriptor<span class="_"> </span><span class="ff11">d</span></div><div class="t m5 x195 h50 y197d ff11 fs25 fc1 sc0 ls0 ws0">k</div><div class="t m5 xdf h26 y77e ff7 fs19 fc1 sc0 ls0 ws0">”).</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
