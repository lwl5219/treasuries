<div id="pfff" class="pf w2 h11" data-page-no="ff"><div class="pc pcff w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bgff.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">254<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>3<span class="_ _3d"> </span>Machine-Level<span class="_ _10"> </span>Representation<span class="_ _10"> </span>of<span class="_ _10"> </span>Programs</span></div><div class="t m5 x29 h26 ye7 ff7 fs19 fc2 sc0 ls0 ws0">Not<span class="_ _21"> </span>all<span class="_ _21"> </span>conditional<span class="_ _f"> </span>expressions<span class="_ _21"> </span>can<span class="_ _21"> </span>be<span class="_ _f"> </span>compiled<span class="_ _21"> </span>using<span class="_ _21"> </span>conditional<span class="_ _f"> </span>moves<span class="_ _1"></span>.</div><div class="t m5 x1d h26 y2a7 ff7 fs19 fc2 sc0 ls0 ws0">Most<span class="_"> </span>signiﬁcantly<span class="_ _7"></span>,<span class="_"> </span>the<span class="_"> </span>abstract<span class="_ _13"> </span>code<span class="_"> </span>we<span class="_ _13"> </span>have<span class="_"> </span>shown<span class="_"> </span>evaluates<span class="_ _13"> </span>both<span class="_"> </span><span class="ffa">then-expr<span class="_"> </span></span>and</div><div class="t m5 x1d h26 y2a8 ffa fs19 fc2 sc0 ls0 ws0">else-expr<span class="_ _15"> </span><span class="ff7">regardless<span class="_ _14"> </span>of<span class="_ _15"> </span>the<span class="_ _14"> </span>test<span class="_ _14"> </span>outcome<span class="_ _0"></span>.<span class="_ _14"> </span>If<span class="_ _14"> </span>one<span class="_ _14"> </span>of<span class="_ _15"> </span>those<span class="_ _14"> </span>two<span class="_ _14"> </span>expressions<span class="_ _14"> </span>could</span></div><div class="t m5 x1d h26 y2f7 ff7 fs19 fc2 sc0 ls0 ws0">possibly<span class="_ _14"> </span>generate<span class="_ _14"> </span>an<span class="_ _15"> </span>error<span class="_ _14"> </span>condition<span class="_ _15"> </span>or<span class="_ _14"> </span>a<span class="_ _14"> </span>side<span class="_ _15"> </span>effect,<span class="_ _15"> </span>this<span class="_ _14"> </span>could<span class="_ _15"> </span>lead<span class="_ _14"> </span>to<span class="_ _14"> </span>invalid</div><div class="t m5 x1d h26 y2f8 ff7 fs19 fc2 sc0 ls0 ws0">behavior.<span class="_ _6"> </span>Such<span class="_ _13"> </span>is<span class="_ _6"> </span>the<span class="_ _13"> </span>case<span class="_ _6"> </span>for<span class="_ _13"> </span>our<span class="_ _13"> </span>earlier<span class="_ _6"> </span>example<span class="_ _13"> </span>(F<span class="_ _1"></span>igure<span class="_ _13"> </span>3.16).<span class="_ _6"> </span>Indeed,<span class="_ _13"> </span>we<span class="_ _13"> </span>put<span class="_ _6"> </span>the</div><div class="t m5 x1d h26 y2f9 ff7 fs19 fc2 sc0 ls0 ws0">side<span class="_"> </span>effects<span class="_ _11"> </span>into<span class="_"> </span>this<span class="_ _11"> </span>example<span class="_"> </span>speciﬁcally<span class="_ _11"> </span>to<span class="_ _11"> </span>force<span class="_"> </span><span class="ff9">gcc<span class="_ _11"> </span></span>to<span class="_"> </span>implement<span class="_ _11"> </span>this<span class="_ _11"> </span>function</div><div class="t m5 x1d h26 y2fa ff7 fs19 fc2 sc0 ls0 ws0">using<span class="_"> </span>conditional<span class="_"> </span>transfers<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y2fb ff7 fs19 fc2 sc0 ls0 ws0">As<span class="_"> </span>a<span class="_"> </span>second<span class="_"> </span>illustration,<span class="_"> </span>consider<span class="_"> </span>the<span class="_"> </span>following<span class="_"> </span>C<span class="_"> </span>function:</div><div class="t m5 x1d h2d yed3 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _e"> </span>cread(long<span class="_ _1f"> </span>*xp)<span class="_ _1f"> </span>{</div><div class="t m5 x10c h2d y264f ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>(xp<span class="_ _1f"> </span>?<span class="_ _1f"> </span>*xp<span class="_ _e"> </span>:<span class="_ _1f"> </span>0);</div><div class="t m5 x1d h2d y2650 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x1d h26 y2651 ff7 fs19 fc2 sc0 ls0 ws0">At<span class="_"> </span>ﬁrst,<span class="_ _11"> </span>this<span class="_ _11"> </span>seems<span class="_"> </span>like<span class="_ _11"> </span>a<span class="_ _11"> </span>good<span class="_ _11"> </span>candidate<span class="_"> </span>to<span class="_ _11"> </span>compile<span class="_ _11"> </span>using<span class="_"> </span>a<span class="_ _11"> </span>conditional<span class="_ _11"> </span>move<span class="_"> </span>to</div><div class="t m5 x1d h26 y2652 ff7 fs19 fc2 sc0 ls0 ws0">set<span class="_"> </span>the<span class="_"> </span>result<span class="_ _13"> </span>to<span class="_"> </span>zero<span class="_"> </span>when<span class="_"> </span>the<span class="_"> </span>pointer<span class="_ _13"> </span>is<span class="_"> </span>null,<span class="_"> </span>as<span class="_"> </span>shown<span class="_"> </span>in<span class="_ _13"> </span>the<span class="_"> </span>following<span class="_"> </span>assembly</div><div class="t m5 x1d h26 y2653 ff7 fs19 fc2 sc0 ls0 ws0">code:</div><div class="t m5 xad h61 y19a9 ff13 fs35 fc6 sc0 ls0 ws0">long<span class="_ _f"> </span>cread(long<span class="_ _f"> </span>*xp)</div><div class="t m5 xad h61 y2654 ff13 fs35 fc6 sc0 ls0 ws0">Invalid<span class="_ _f"> </span>implementation<span class="_ _f"> </span>of<span class="_ _f"> </span>function<span class="_ _e"> </span>cread</div><div class="t m5 xad h61 y2655 ff13 fs35 fc6 sc0 ls0 ws0">xp<span class="_ _f"> </span>in<span class="_ _f"> </span>register<span class="_ _f"> </span>%rdi</div><div class="t m5 x1f h2d y3ed ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">cread:</span></div><div class="t m5 x1f h2d y2656 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>(%rdi),<span class="_ _e"> </span>%rax<span class="_ _f1"> </span></span><span class="ff13 fs35">v<span class="_ _f"> </span>=<span class="_ _f"> </span>*xp</span></div><div class="t m5 x1f h2d y19b0 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _45"> </span><span class="ffd fs1e fc2">testq<span class="_ _3f"> </span>%rdi,<span class="_ _e"> </span>%rdi<span class="_ _59"> </span></span><span class="ff13 fs35">Test<span class="_ _f"> </span>x</span></div><div class="t m5 x1f h2d y2657 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _45"> </span><span class="ffd fs1e fc2">movl<span class="_ _46"> </span>$0,<span class="_ _e"> </span>%edx<span class="_ _2a"> </span></span><span class="ff13 fs35">Set<span class="_ _f"> </span>ve<span class="_ _f"> </span>=<span class="_ _e"> </span>0</span></div><div class="t m5 x1f h2d y2658 ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _45"> </span><span class="ffd fs1e fc2">cmove<span class="_ _3f"> </span>%rdx,<span class="_ _e"> </span>%rax<span class="_ _59"> </span></span><span class="ff13 fs35">If<span class="_ _f"> </span>x==0<span class="ls156">,v=v<span class="_ _12"></span>e</span></span></div><div class="t m5 x1f h2d y2659 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _45"> </span><span class="ffd fs1e fc2">ret<span class="_ _12c"> </span></span><span class="ff13 fs35">Return<span class="_ _f"> </span>v</span></div><div class="t m5 x1d h26 y1a25 ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>his<span class="_ _21"> </span>implementation<span class="_ _15"> </span>is<span class="_ _15"> </span>invalid,<span class="_ _f"> </span>however,<span class="_ _21"> </span>since<span class="_ _21"> </span>the<span class="_ _15"> </span>dereferencing<span class="_ _21"> </span>of<span class="_ _15"> </span><span class="ffd">xp<span class="_ _15"> </span></span>by<span class="_ _21"> </span>the</div><div class="t m5 x1d h26 y1a26 ffd fs19 fc2 sc0 ls0 ws0">movq<span class="_ _14"> </span><span class="ff7">instruction<span class="_ _14"> </span>(line<span class="_ _14"> </span>2)<span class="_ _14"> </span>occurs<span class="_ _16"> </span>even<span class="_ _14"> </span>when<span class="_ _14"> </span>the<span class="_ _14"> </span>test<span class="_ _14"> </span>fails<span class="_ _1"></span>,<span class="_ _15"> </span>causing<span class="_ _14"> </span>a<span class="_ _14"> </span>null<span class="_ _14"> </span>pointer</span></div><div class="t m5 x1d h26 y1a27 ff7 fs19 fc2 sc0 ls0 ws0">dereferencing<span class="_"> </span>error.<span class="_"> </span>Instead,<span class="_"> </span>this<span class="_"> </span>code<span class="_"> </span>must<span class="_"> </span>be<span class="_"> </span>compiled<span class="_"> </span>using<span class="_"> </span>branching<span class="_"> </span>code<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y1a28 ff7 fs19 fc2 sc0 ls0 ws0">Using<span class="_ _16"> </span>conditional<span class="_ _14"> </span>moves<span class="_ _16"> </span>also<span class="_ _14"> </span>does<span class="_ _16"> </span>not<span class="_ _14"> </span>always<span class="_ _16"> </span>improve<span class="_ _14"> </span>code<span class="_ _16"> </span>efﬁciency<span class="_ _3"></span>.<span class="_ _16"> </span>F<span class="_ _1"></span>or</div><div class="t m5 x1d h26 y1a29 ff7 fs19 fc2 sc0 ls0 ws0">example<span class="_ _1"></span>,<span class="_ _16"> </span>if<span class="_ _11"> </span>either<span class="_ _11"> </span>the<span class="_ _11"> </span><span class="ffa">then-expr<span class="_ _16"> </span></span>or<span class="_ _16"> </span>the<span class="_"> </span><span class="ffa">else-expr<span class="_ _14"> </span></span>evaluation<span class="_ _11"> </span>requires<span class="_ _11"> </span>a<span class="_ _11"> </span>signiﬁcant</div><div class="t m5 x1d h26 y719 ff7 fs19 fc2 sc0 ls0 ws0">computation,<span class="_ _14"> </span>then<span class="_ _14"> </span>this<span class="_ _16"> </span>effort<span class="_ _14"> </span>is<span class="_ _14"> </span>wasted<span class="_ _16"> </span>when<span class="_ _14"> </span>the<span class="_ _14"> </span>corresponding<span class="_ _16"> </span>condition<span class="_ _14"> </span>does</div><div class="t m5 x1d h26 y71a ff7 fs19 fc2 sc0 ls0 ws0">not<span class="_ _16"> </span>hold.<span class="_ _16"> </span>Compilers<span class="_ _16"> </span>must<span class="_ _16"> </span>take<span class="_ _11"> </span>into<span class="_ _16"> </span>account<span class="_ _16"> </span>the<span class="_ _16"> </span>relative<span class="_ _16"> </span>performance<span class="_ _16"> </span>of<span class="_ _16"> </span>wasted</div><div class="t m5 x1d h26 y71b ff7 fs19 fc2 sc0 ls0 ws0">computation<span class="_"> </span>versus<span class="_"> </span>the<span class="_"> </span>potential<span class="_"> </span>for<span class="_"> </span>performance<span class="_"> </span>penalty<span class="_ _13"> </span>due<span class="_"> </span>to<span class="_"> </span>branch<span class="_"> </span>mispre-</div><div class="t m5 x1d h26 y71c ff7 fs19 fc2 sc0 ls0 ws0">diction.<span class="_ _13"> </span>In<span class="_ _13"> </span>truth,<span class="_ _13"> </span>they<span class="_ _6"> </span>do<span class="_ _13"> </span>not<span class="_ _13"> </span>really<span class="_ _13"> </span>have<span class="_ _6"> </span>enough<span class="_ _13"> </span>information<span class="_ _13"> </span>to<span class="_ _13"> </span>make<span class="_ _6"> </span>this<span class="_ _13"> </span>decision</div><div class="t m5 x1d h26 y71d ff7 fs19 fc2 sc0 ls0 ws0">reliably;<span class="_ _14"> </span>for<span class="_ _14"> </span>example<span class="_ _0"></span>,<span class="_ _14"> </span>they<span class="_ _16"> </span>do<span class="_ _14"> </span>not<span class="_ _16"> </span>know<span class="_ _16"> </span>how<span class="_ _14"> </span>well<span class="_ _16"> </span>the<span class="_ _14"> </span>branches<span class="_ _16"> </span>will<span class="_ _14"> </span>follow<span class="_ _16"> </span>pre-</div><div class="t m5 x1d h26 y71e ff7 fs19 fc2 sc0 ls0 ws0">dictable<span class="_"> </span>patterns<span class="_ _3"></span>.<span class="_"> </span>Our<span class="_"> </span>experiments<span class="_"> </span>with<span class="_"> </span><span class="ff9">gcc<span class="_ _10"> </span></span>indicate<span class="_"> </span>that<span class="_ _13"> </span>it<span class="_"> </span>only<span class="_"> </span>uses<span class="_"> </span>conditional</div><div class="t m5 x1d h26 y71f ff7 fs19 fc2 sc0 ls0 ws0">moves<span class="_"> </span>when<span class="_ _11"> </span>the<span class="_ _11"> </span>two<span class="_ _11"> </span>expressions<span class="_ _11"> </span>can<span class="_"> </span>be<span class="_ _11"> </span>computed<span class="_ _11"> </span>very<span class="_ _11"> </span>easily<span class="_ _3"></span>,<span class="_ _11"> </span>for<span class="_"> </span>example,<span class="_"> </span>with</div><div class="t m5 x1d h26 y720 ff7 fs19 fc2 sc0 ls0 ws0">single<span class="_ _11"> </span>add<span class="_ _11"> </span>instructions<span class="_ _1"></span>.<span class="_ _16"> </span>In<span class="_ _11"> </span>our<span class="_ _11"> </span>experience,<span class="_ _11"> </span><span class="ff9">gcc<span class="_ _11"> </span></span>uses<span class="_ _11"> </span>conditional<span class="_ _16"> </span>control<span class="_ _11"> </span>transfers</div><div class="t m5 x1d h26 y721 ff7 fs19 fc2 sc0 ls0 ws0">even<span class="_ _16"> </span>in<span class="_ _14"> </span>many<span class="_ _16"> </span>cases<span class="_ _14"> </span>where<span class="_ _16"> </span>the<span class="_ _14"> </span>cost<span class="_ _16"> </span>of<span class="_ _14"> </span>branch<span class="_ _16"> </span>misprediction<span class="_ _14"> </span>would<span class="_ _16"> </span>exceed<span class="_ _14"> </span>even</div><div class="t m5 x1d h26 y722 ff7 fs19 fc2 sc0 ls0 ws0">more<span class="_"> </span>complex<span class="_"> </span>computations<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y723 ff7 fs19 fc2 sc0 ls0 ws0">Overall,<span class="_ _e"> </span>then,<span class="_ _1f"> </span>we<span class="_ _f"> </span>see<span class="_ _e"> </span>that<span class="_ _f"> </span>conditional<span class="_ _e"> </span>data<span class="_ _21"> </span>transfers<span class="_ _e"> </span>offer<span class="_ _f"> </span>an<span class="_ _e"> </span>alternative</div><div class="t m5 x1d h26 y724 ff7 fs19 fc2 sc0 ls0 ws0">strategy<span class="_ _13"> </span>to<span class="_"> </span>conditional<span class="_ _13"> </span>control<span class="_ _13"> </span>transfers<span class="_ _13"> </span>for<span class="_"> </span>implementing<span class="_ _13"> </span>conditional<span class="_ _13"> </span>operations<span class="_ _1"></span>.</div><div class="t m5 x1d h26 y725 ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>hey<span class="_ _11"> </span>can<span class="_ _11"> </span>only<span class="_ _11"> </span>be<span class="_"> </span>used<span class="_ _11"> </span>in<span class="_ _11"> </span>restricted<span class="_ _11"> </span>cases<span class="_ _1"></span>,<span class="_ _11"> </span>but<span class="_ _11"> </span>these<span class="_ _11"> </span>cases<span class="_"> </span>are<span class="_ _11"> </span>fairly<span class="_ _11"> </span>common<span class="_ _11"> </span>and</div><div class="t m5 x1d h26 y726 ff7 fs19 fc2 sc0 ls0 ws0">provide<span class="_"> </span>a<span class="_"> </span>much<span class="_"> </span>better<span class="_"> </span>match<span class="_"> </span>to<span class="_"> </span>the<span class="_"> </span>operation<span class="_"> </span>of<span class="_"> </span>modern<span class="_"> </span>processors<span class="_ _1"></span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
