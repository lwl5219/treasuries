<div id="pfa8" class="pf w2 h11" data-page-no="a8"><div class="pc pca8 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bga8.png"/><div class="t m5 x5f h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Homework<span class="_ _10"> </span>Problems<span class="_ _1b"> </span><span class="ffe fs1e">167</span></div><div class="t m5 x17 h28 y140c ffe fs1e fc6 sc0 ls0 ws0">2.65</div><div class="t m5 x153 h73 ye7 ff10 fs19 fc6 sc0 ls0 ws0">◆◆◆◆</div><div class="t m5 x17 h26 y2a7 ff7 fs19 fc1 sc0 ls0 ws0">Write<span class="_"> </span>code<span class="_"> </span>to<span class="_"> </span>implement<span class="_"> </span>the<span class="_"> </span>following<span class="_"> </span>function:</div><div class="t m5 x17 h2d y1aaa ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Return<span class="_ _1f"> </span>1<span class="_ _1f"> </span>when<span class="_ _e"> </span>x<span class="_ _1f"> </span>contains<span class="_ _e"> </span>an<span class="_ _1f"> </span>odd<span class="_ _1f"> </span>number<span class="_ _e"> </span>of<span class="_ _1f"> </span>1s;<span class="_ _e"> </span>0<span class="_ _1f"> </span>otherwise.</div><div class="t m5 x2f h2d y1aab ffd fs1e fc2 sc0 ls0 ws0">Assume<span class="_ _e"> </span>w=32<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y1aac ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>odd_ones(unsigned<span class="_ _1f"> </span>x);</div><div class="t m5 x26 h26 yad4 ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _15"> </span>function<span class="_ _21"> </span>should<span class="_ _21"> </span>follow<span class="_ _21"> </span>the<span class="_ _21"> </span>bit-level<span class="_ _21"> </span>integer<span class="_ _21"> </span>coding<span class="_ _21"> </span>rules<span class="_ _21"> </span>(page<span class="_ _21"> </span>164),</div><div class="t m5 x17 h46 y1aad ff7 fs19 fc2 sc0 ls0 ws0">except<span class="_"> </span>that<span class="_"> </span>you<span class="_"> </span>may<span class="_"> </span>assume<span class="_"> </span>that<span class="_"> </span>data<span class="_"> </span>type<span class="_"> </span><span class="ffd">int<span class="_ _10"> </span></span>has<span class="_"> </span><span class="ff11">w<span class="_ _10"> </span><span class="ff12">=<span class="_ _10"> </span></span></span>32<span class="_"> </span>bits<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y1aae ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _13"> </span>code<span class="_"> </span>should<span class="_ _13"> </span>contain<span class="_"> </span>a<span class="_ _13"> </span>total<span class="_"> </span>of<span class="_ _13"> </span>at<span class="_"> </span>most<span class="_ _13"> </span>12<span class="_"> </span>arithmetic<span class="_ _1"></span>,<span class="_"> </span>bitwise<span class="_ _1"></span>,<span class="_"> </span>and<span class="_"> </span>logical</div><div class="t m5 x17 h26 y1aaf ff7 fs19 fc2 sc0 ls0 ws0">operations<span class="_ _1"></span>.</div><div class="t m5 x17 h73 y1ab0 ffe fs1e fc6 sc0 ls0 ws0">2.66<span class="_ _23"> </span><span class="ff10 fs19">◆◆◆</span></div><div class="t m5 x17 h26 y1ab1 ff7 fs19 fc1 sc0 ls0 ws0">Write<span class="_"> </span>code<span class="_"> </span>to<span class="_"> </span>implement<span class="_"> </span>the<span class="_"> </span>following<span class="_"> </span>function:</div><div class="t m5 x17 h2d y1ab2 ffd fs1e fc2 sc0 ls0 ws0">/*</div><div class="t m5 x52 h2d y1ab3 ffd fs1e fc2 sc0 ls0 ws0">*<span class="_ _e"> </span>Generate<span class="_ _1f"> </span>mask<span class="_ _1f"> </span>indicating<span class="_ _e"> </span>leftmost<span class="_ _1f"> </span>1<span class="_ _e"> </span>in<span class="_ _1f"> </span>x.<span class="_ _1a"> </span>Assume<span class="_ _1f"> </span>w=32.</div><div class="t m5 x52 h2d y1ab4 ffd fs1e fc2 sc0 ls0 ws0">*<span class="_ _e"> </span>For<span class="_ _1f"> </span>example,<span class="_ _1f"> </span>0xFF00<span class="_ _e"> </span>-&gt;<span class="_ _1f"> </span>0x8000,<span class="_ _e"> </span>and<span class="_ _1f"> </span>0x6600<span class="_ _1f"> </span>--&gt;<span class="_ _e"> </span>0x4000.</div><div class="t m5 x52 h2d y1ab5 ffd fs1e fc2 sc0 ls33 ws0">*I<span class="_ _41"></span>fx=0<span class="_ _41"></span>,<span class="ls0">then<span class="_ _e"> </span>return<span class="_ _1f"> </span>0.</span></div><div class="t m5 x52 h2d y1ab6 ffd fs1e fc2 sc0 ls0 ws0">*/</div><div class="t m5 x17 h2d y1ab7 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>leftmost_one(unsigned<span class="_ _1f"> </span>x);</div><div class="t m5 x26 h26 y1ab8 ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _15"> </span>function<span class="_ _21"> </span>should<span class="_ _21"> </span>follow<span class="_ _21"> </span>the<span class="_ _21"> </span>bit-level<span class="_ _21"> </span>integer<span class="_ _21"> </span>coding<span class="_ _21"> </span>rules<span class="_ _21"> </span>(page<span class="_ _21"> </span>164),</div><div class="t m5 x17 h46 y1ab9 ff7 fs19 fc2 sc0 ls0 ws0">except<span class="_"> </span>that<span class="_"> </span>you<span class="_"> </span>may<span class="_"> </span>assume<span class="_"> </span>that<span class="_"> </span>data<span class="_"> </span>type<span class="_"> </span><span class="ffd">int<span class="_ _10"> </span></span>has<span class="_"> </span><span class="ff11">w<span class="_ _10"> </span><span class="ff12">=<span class="_ _10"> </span></span></span>32<span class="_"> </span>bits<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y1aba ff7 fs19 fc2 sc0 ls0 ws0">Y<span class="_ _3"></span>our<span class="_ _13"> </span>code<span class="_"> </span>should<span class="_ _13"> </span>contain<span class="_"> </span>a<span class="_ _13"> </span>total<span class="_"> </span>of<span class="_ _13"> </span>at<span class="_"> </span>most<span class="_ _13"> </span>15<span class="_"> </span>arithmetic<span class="_ _1"></span>,<span class="_"> </span>bitwise<span class="_ _1"></span>,<span class="_"> </span>and<span class="_"> </span>logical</div><div class="t m5 x17 h26 y1abb ff7 fs19 fc2 sc0 ls0 ws0">operations<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y1abc ffa fs19 fc2 sc0 ls0 ws0">Hint:<span class="_"> </span><span class="ff7">F<span class="_ _0"></span>irst<span class="_"> </span>transform<span class="_"> </span><span class="ffd">x<span class="_ _10"> </span></span>into<span class="_"> </span>a<span class="_"> </span>bit<span class="_"> </span>vector<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>form<span class="_"> </span>[0</span></div><div class="t m5 x1de h45 y1abd ff11 fs19 fc2 sc0 ls42 ws0">...</div><div class="t m5 xe8 h26 y1abc ff7 fs19 fc2 sc0 ls0 ws0">011</div><div class="t m5 x84 h45 y1abd ff11 fs19 fc2 sc0 ls42 ws0">...</div><div class="t m5 x11b h26 y1abc ff7 fs19 fc2 sc0 ls0 ws0">1]<span class="_ _1"></span>.</div><div class="t m5 x17 h73 y35e ffe fs1e fc6 sc0 ls0 ws0">2.67<span class="_ _23"> </span><span class="ff10 fs19">◆◆</span></div><div class="t m5 x17 h26 y35f ff7 fs19 fc1 sc0 ls0 ws0">Y<span class="_ _3"></span>ou<span class="_ _16"> </span>are<span class="_ _14"> </span>given<span class="_ _14"> </span>the<span class="_ _14"> </span>task<span class="_ _14"> </span>of<span class="_ _14"> </span>writing<span class="_ _14"> </span>a<span class="_ _16"> </span>procedure<span class="_ _14"> </span><span class="ffd">int_size_is_32()<span class="_ _14"> </span></span>that<span class="_ _14"> </span>yields<span class="_ _14"> </span>1</div><div class="t m5 x17 h26 y360 ff7 fs19 fc1 sc0 ls0 ws0">when<span class="_ _13"> </span>run<span class="_ _13"> </span>on<span class="_"> </span>a<span class="_ _13"> </span>machine<span class="_ _13"> </span>for<span class="_ _13"> </span>which<span class="_ _13"> </span>an<span class="_"> </span><span class="ffd">int<span class="_ _13"> </span></span>is<span class="_ _13"> </span>32<span class="_ _13"> </span>bits<span class="_ _1"></span>,<span class="_ _13"> </span>and<span class="_"> </span>yields<span class="_ _13"> </span>0<span class="_ _13"> </span>otherwise<span class="_ _1"></span>.<span class="_"> </span>Y<span class="_ _7"></span>ou<span class="_ _13"> </span>are</div><div class="t m5 x17 h26 y361 ff7 fs19 fc1 sc0 ls0 ws0">not<span class="_"> </span>allowed<span class="_"> </span>to<span class="_"> </span>use<span class="_"> </span>the<span class="_"> </span><span class="ffd">sizeof<span class="_ _10"> </span></span>operator.<span class="_"> </span>Here<span class="_"> </span>is<span class="_"> </span>a<span class="_"> </span>ﬁrst<span class="_"> </span>attempt:</div><div class="t m5 x2c h2e y1abe ff6 fs20 fc6 sc0 ls0 ws0">1</div><div class="t m5 x2d h2d y1abf ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>The<span class="_ _1f"> </span>following<span class="_ _1f"> </span>code<span class="_ _e"> </span>does<span class="_ _1f"> </span>not<span class="_ _e"> </span>run<span class="_ _1f"> </span>properly<span class="_ _1f"> </span>on<span class="_ _e"> </span>some<span class="_ _1f"> </span>machines<span class="_ _e"> </span>*/</div><div class="t m5 x2c h2d y1ac0 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">int<span class="_ _1f"> </span>bad_int_size_is_32()<span class="_ _e"> </span>{</span></div><div class="t m5 x2c h2d y1ac1 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>Set<span class="_ _1f"> </span>most<span class="_ _1f"> </span>significant<span class="_ _e"> </span>bit<span class="_ _1f"> </span>(msb)<span class="_ _e"> </span>of<span class="_ _1f"> </span>32-bit<span class="_ _1f"> </span>machine<span class="_ _e"> </span>*/</span></div><div class="t m5 x2c h2e y1ac2 ff6 fs20 fc6 sc0 ls0 ws0">4</div><div class="t m5 x142 h2d y1ac3 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>set_ms<span class="ls33">b=1&lt;<span class="_ _41"></span>&lt;3<span class="_ _41"></span>1<span class="_ _41"></span>;</span></div><div class="t m5 x2c h2d y22c ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>Shift<span class="_ _1f"> </span>past<span class="_ _1f"> </span>msb<span class="_ _e"> </span>of<span class="_ _1f"> </span>32-bit<span class="_ _e"> </span>word<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d y1ac4 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">int<span class="_ _e"> </span>beyond_ms<span class="ls33">b=1&lt;<span class="_ _41"></span>&lt;3<span class="_ _41"></span>2<span class="_ _41"></span>;</span></span></div><div class="t m5 x2c h2e y1ac5 ff6 fs20 fc6 sc0 ls0 ws0">7</div><div class="t m5 x2c h2e y1ac6 ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x142 h2d y1ac7 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>set_msb<span class="_ _1f"> </span>is<span class="_ _1f"> </span>nonzero<span class="_ _e"> </span>when<span class="_ _1f"> </span>word<span class="_ _e"> </span>size<span class="_ _1f"> </span>&gt;=<span class="_ _1f"> </span>32</div><div class="t m5 x2c h2d y1ac8 ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _65"> </span><span class="ffd fs1e fc2">beyond_msb<span class="_ _e"> </span>is<span class="_ _1f"> </span>zero<span class="_ _e"> </span>when<span class="_ _1f"> </span>word<span class="_ _1f"> </span>size<span class="_ _e"> </span>&lt;=<span class="_ _1f"> </span>32<span class="_ _1a"> </span>*/</span></div><div class="t m5 x17 h2e y1ac9 ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x142 h2d y1aca ffd fs1e fc2 sc0 ls0 ws0">return<span class="_ _e"> </span>set_msb<span class="_ _1f"> </span>&amp;&amp;<span class="_ _1f"> </span>!beyond_msb;</div><div class="t m5 x17 h2d y1acb ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x26 h26 y1672 ff7 fs19 fc2 sc0 ls0 ws0">When<span class="_ _11"> </span>compiled<span class="_ _16"> </span>and<span class="_ _16"> </span>run<span class="_ _16"> </span>on<span class="_ _16"> </span>a<span class="_ _11"> </span>32-bit<span class="_ _16"> </span>SUN<span class="_ _16"> </span>SP<span class="_ _3"></span>ARC<span class="_ _0"></span>,<span class="_ _16"> </span>however,<span class="_ _16"> </span>this<span class="_ _16"> </span>procedure</div><div class="t m5 x17 h26 y1acc ff7 fs19 fc2 sc0 ls0 ws0">returns<span class="_"> </span>0.<span class="_"> </span>T<span class="_ _1"></span>he<span class="_"> </span>following<span class="_"> </span>compiler<span class="_"> </span>message<span class="_"> </span>gives<span class="_"> </span>us<span class="_"> </span>an<span class="_"> </span>indication<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>problem:</div><div class="t m5 x17 h2d ye95 ffd fs1e fc2 sc0 ls0 ws0">warning:<span class="_ _e"> </span>left<span class="_ _1f"> </span>shift<span class="_ _1f"> </span>count<span class="_ _e"> </span>&gt;=<span class="_ _1f"> </span>width<span class="_ _e"> </span>of<span class="_ _1f"> </span>type</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
