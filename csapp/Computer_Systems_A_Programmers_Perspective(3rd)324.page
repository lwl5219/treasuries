<div id="pf144" class="pf w2 h11" data-page-no="144"><div class="pc pc144 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg144.png"/><div class="t m5 xf8 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>3.10<span class="_ _60"> </span>Combining<span class="_ _10"> </span>Control<span class="_ _10"> </span>and<span class="_ _10"> </span>Data<span class="_ _10"> </span>in<span class="_ _10"> </span>Machine-Level<span class="_ _10"> </span>Programs<span class="_ _3e"> </span><span class="ffe fs1e">323</span></div><div class="t m5 x17 h3f y2e3c ff30 fs27 fc1 sc0 ls0 ws0">Stack frame</div><div class="t m5 x1f5 h3f y2e3d ff30 fs27 fc1 sc0 ls0 ws0">for caller</div><div class="t m5 x17 h3f y2e3e ff30 fs27 fc1 sc0 ls0 ws0">Stack frame</div><div class="t m5 xc h3f y2e3f ff30 fs27 fc1 sc0 ls0 ws0">for </div><div class="t m5 x153 h40 y2e40 ff31 fs28 fc1 sc0 ls0 ws0">echo</div><div class="t m5 x4f h3f y2e41 ff30 fs27 fc1 sc0 ls0 ws0">Return address</div><div class="t m5 x1c4 h3f y2e42 ff30 fs27 fc1 sc0 ls0 ws0">Canary</div><div class="t m5 x1c8 h40 y2e43 ff31 fs28 fc1 sc0 ls170 ws0">%rsp+24</div><div class="t m5 x20a h40 y2e44 ff31 fs28 fc1 sc0 ls170 ws0">[7]</div><div class="t m5 x1c8 h40 y2e45 ff31 fs28 fc1 sc0 ls0 ws8">buf = %rsp</div><div class="t m5 x75 h40 y2e46 ff31 fs28 fc1 sc0 ls170 ws0">[6]<span class="_ _2"></span>[5]<span class="_ _5"></span>[4]<span class="_ _5"></span>[3]<span class="_ _5"></span>[2]<span class="_ _5"></span>[1]<span class="_ _5"></span>[0]</div><div class="t m5 x17 h3a y2e47 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>3.42<span class="_ _c"> </span><span class="fc1">Stack<span class="_ _11"> </span>organization<span class="_ _11"> </span>for<span class="_ _11"> </span><span class="ffd fs19">echo<span class="_ _11"> </span></span>function<span class="_ _11"> </span>with<span class="_ _11"> </span>stack<span class="_ _11"> </span>protector<span class="_ _11"> </span>enabled.<span class="_ _11"> </span><span class="ff6">A</span></span></div><div class="t m5 x17 h34 y2e48 ff6 fs16 fc1 sc0 ls0 ws0">special<span class="_ _11"> </span>“canar<span class="_ _2"></span>y”<span class="_ _11"> </span>value<span class="_ _16"> </span>is<span class="_ _16"> </span>positioned<span class="_ _11"> </span>between<span class="_ _16"> </span>array</div><div class="t m5 x1b3 h3a y2e49 ffd fs19 fc1 sc0 ls0 ws0">buf<span class="_ _11"> </span><span class="ff6 fs16">and<span class="_ _16"> </span>the<span class="_ _16"> </span>saved<span class="_ _11"> </span>state.<span class="_ _16"> </span>The<span class="_ _11"> </span>code</span></div><div class="t m5 x17 h34 y2e4a ff6 fs16 fc1 sc0 ls0 ws0">checks<span class="_ _10"> </span>the<span class="_ _13"> </span>canary<span class="_ _10"> </span>value<span class="_ _10"> </span>to<span class="_ _13"> </span>determine<span class="_ _10"> </span>whether<span class="_ _13"> </span>or<span class="_ _10"> </span>not<span class="_ _10"> </span>the<span class="_ _13"> </span>stack<span class="_ _10"> </span>state<span class="_ _13"> </span>has<span class="_ _10"> </span>been<span class="_ _10"> </span>corrupted.</div><div class="t m5 x17 h26 y2e4b ff7 fs19 fc1 sc0 ls0 ws0">easy<span class="_ _13"> </span>way<span class="_ _13"> </span>for<span class="_ _13"> </span>an<span class="_ _13"> </span>attacker<span class="_ _13"> </span>to<span class="_ _13"> </span>determine<span class="_ _13"> </span>what<span class="_ _13"> </span>it<span class="_ _13"> </span>is<span class="_ _3"></span>.<span class="_ _13"> </span>Before<span class="_ _13"> </span>restoring<span class="_ _13"> </span>the<span class="_ _13"> </span>register<span class="_ _13"> </span>state</div><div class="t m5 x17 h26 y2e4c ff7 fs19 fc1 sc0 ls0 ws0">and<span class="_ _6"> </span>returning<span class="_ _13"> </span>from<span class="_ _6"> </span>the<span class="_ _13"> </span>function,<span class="_ _13"> </span>the<span class="_ _6"> </span>program<span class="_ _6"> </span>checks<span class="_ _13"> </span>if<span class="_ _6"> </span>the<span class="_ _13"> </span>canary<span class="_ _6"> </span>has<span class="_ _13"> </span>been<span class="_ _6"> </span>altered</div><div class="t m5 x17 h26 y2e4d ff7 fs19 fc1 sc0 ls0 ws0">by<span class="_ _16"> </span>some<span class="_ _14"> </span>operation<span class="_ _14"> </span>of<span class="_ _16"> </span>this<span class="_ _14"> </span>function<span class="_ _14"> </span>or<span class="_ _14"> </span>one<span class="_ _16"> </span>that<span class="_ _14"> </span>it<span class="_ _14"> </span>has<span class="_ _16"> </span>called.<span class="_ _14"> </span>If<span class="_ _14"> </span>so<span class="_ _1"></span>,<span class="_ _15"> </span>the<span class="_ _16"> </span>program</div><div class="t m5 x17 h26 y2e4e ff7 fs19 fc1 sc0 ls0 ws0">aborts<span class="_"> </span>with<span class="_"> </span>an<span class="_"> </span>error.</div><div class="t m5 x26 h26 y2e4f ff7 fs19 fc1 sc0 ls0 ws0">Recent<span class="_ _11"> </span>versions<span class="_ _16"> </span>of<span class="_ _11"> </span><span class="ff9">gcc<span class="_ _11"> </span></span>try<span class="_ _16"> </span>to<span class="_ _11"> </span>determine<span class="_ _16"> </span>whether<span class="_ _11"> </span>a<span class="_ _11"> </span>function<span class="_ _16"> </span>is<span class="_ _11"> </span>vulnerable<span class="_ _11"> </span>to</div><div class="t m5 x17 h26 y2e50 ff7 fs19 fc1 sc0 ls0 ws0">a<span class="_"> </span>stack<span class="_ _11"> </span>overﬂow<span class="_ _11"> </span>and<span class="_"> </span>insert<span class="_ _11"> </span>this<span class="_ _11"> </span>type<span class="_"> </span>of<span class="_ _11"> </span>overﬂow<span class="_ _11"> </span>detection<span class="_"> </span>automatically<span class="_ _3"></span>.<span class="_ _11"> </span>In<span class="_ _11"> </span>fact,</div><div class="t m5 x17 h26 y2e51 ff7 fs19 fc1 sc0 ls0 ws0">for<span class="_ _13"> </span>our<span class="_"> </span>earlier<span class="_ _13"> </span>demonstration<span class="_"> </span>of<span class="_ _13"> </span>stack<span class="_"> </span>overﬂow<span class="_ _7"></span>,<span class="_"> </span>we<span class="_"> </span>had<span class="_ _13"> </span>to<span class="_ _13"> </span>give<span class="_"> </span>the<span class="_ _13"> </span>command-line</div><div class="t m5 x17 h26 y2e52 ff7 fs19 fc1 sc0 ls0 ws0">option<span class="_ _6"> </span><span class="ffd">-fno-stack-protector<span class="_ _6"> </span></span>to<span class="_ _6"> </span>prevent<span class="_ _6"> </span><span class="ff9">gcc<span class="_ _13"> </span></span>from<span class="_ _a"> </span>inserting<span class="_ _6"> </span>this<span class="_ _13"> </span>code<span class="_ _1"></span>.<span class="_ _6"> </span>Compiling</div><div class="t m5 x17 h26 y2e53 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _13"> </span>function<span class="_ _13"> </span><span class="ffd">echo<span class="_ _6"> </span></span>without<span class="_ _13"> </span>this<span class="_ _13"> </span>option,<span class="_ _13"> </span>and<span class="_ _13"> </span>hence<span class="_ _13"> </span>with<span class="_ _13"> </span>the<span class="_ _6"> </span>stack<span class="_ _13"> </span>protector<span class="_ _13"> </span>enabled,</div><div class="t m5 x17 h26 y2e54 ff7 fs19 fc1 sc0 ls0 ws0">gives<span class="_"> </span>the<span class="_"> </span>following<span class="_"> </span>assembly<span class="_"> </span>code:</div><div class="t m5 x2e h61 y2e55 ff13 fs35 fc6 sc0 ls0 ws0">void<span class="_ _f"> </span>echo()</div><div class="t m5 x2c h2d y2e56 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">echo:</span></div><div class="t m5 x2c h2d y2e57 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _45"> </span><span class="ffd fs1e fc2">subq<span class="_ _46"> </span>$24,<span class="_ _e"> </span>%rsp<span class="_ _10e"> </span></span><span class="ff13 fs35">Allocate<span class="_ _f"> </span>24<span class="_ _e"> </span>bytes<span class="_ _21"> </span>on<span class="_ _f"> </span>stack</span></div><div class="t m5 x2c h2d y2e58 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>%fs:40,<span class="_ _e"> </span>%rax<span class="_ _7d"> </span></span><span class="ff13 fs35">Retrieve<span class="_ _e"> </span>canary</span></div><div class="t m5 x2c h2d y2e59 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>%rax,<span class="_ _e"> </span>8(%rsp)<span class="_ _10d"> </span></span><span class="ff13 fs35">Store<span class="_ _e"> </span>on<span class="_ _21"> </span>stack</span></div><div class="t m5 x2c h2d y2e5a ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _45"> </span><span class="ffd fs1e fc2">xorl<span class="_ _46"> </span>%eax,<span class="_ _e"> </span>%eax<span class="_ _12e"> </span></span><span class="ff13 fs35">Zero<span class="_ _e"> </span>out<span class="_ _21"> </span>register</span></div><div class="t m5 x2c h2d y2e5b ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>%rsp,<span class="_ _e"> </span>%rdi<span class="_ _12e"> </span></span><span class="ff13 fs35">Compute<span class="_ _e"> </span>buf<span class="_ _21"> </span>as<span class="_ _f"> </span>%rsp</span></div><div class="t m5 x2c h2d y2e5c ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _45"> </span><span class="ffd fs1e fc2">call<span class="_ _46"> </span>gets<span class="_ _e8"> </span></span><span class="ff13 fs35">Call<span class="_ _f"> </span>gets</span></div><div class="t m5 x2c h2d y2e5d ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>%rsp,<span class="_ _e"> </span>%rdi<span class="_ _12e"> </span></span><span class="ff13 fs35">Compute<span class="_ _e"> </span>buf<span class="_ _21"> </span>as<span class="_ _f"> </span>%rsp</span></div><div class="t m5 x2c h2d y2e5e ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _45"> </span><span class="ffd fs1e fc2">call<span class="_ _46"> </span>puts<span class="_ _e8"> </span></span><span class="ff13 fs35">Call<span class="_ _f"> </span>puts</span></div><div class="t m5 x17 h2d y2e5f ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _45"> </span><span class="ffd fs1e fc2">movq<span class="_ _46"> </span>8(%rsp),<span class="_ _e"> </span>%rax<span class="_ _10d"> </span></span><span class="ff13 fs35">Retrieve<span class="_ _e"> </span>canary</span></div><div class="t m5 x17 h2d y2e60 ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _45"> </span><span class="ffd fs1e fc2">xorq<span class="_ _46"> </span>%fs:40,<span class="_ _e"> </span>%rax<span class="_ _7d"> </span></span><span class="ff13 fs35">Compare<span class="_ _e"> </span>to<span class="_ _21"> </span>stored<span class="_ _f"> </span>value</span></div><div class="t m5 x17 h2d y2e61 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _45"> </span><span class="ffd fs1e fc2">je<span class="_ _5a"> </span>.L9<span class="_ _17e"> </span></span><span class="ff13 fs35">If<span class="_ _f"> </span>=,<span class="_ _f"> </span>goto<span class="_ _f"> </span><span class="ff2d">ok</span></span></div><div class="t m5 x17 h2d y2e62 ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _45"> </span><span class="ffd fs1e fc2">call<span class="_ _46"> </span>__stack_chk_fail<span class="_ _5c"> </span></span><span class="ff13 fs35">Stack<span class="_ _f"> </span>corrupted!</span></div><div class="t m5 x17 h2e y2e63 ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x2d h2d y2e64 ffd fs1e fc2 sc0 ls0 ws0">.L9:<span class="_ _15c"> </span><span class="ff2d fs35 fc6">ok:</span></div><div class="t m5 x17 h2d y2e65 ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _45"> </span><span class="ffd fs1e fc2">addq<span class="_ _46"> </span>$24,<span class="_ _e"> </span>%rsp<span class="_ _10e"> </span></span><span class="ff13 fs35">Deallocate<span class="_ _f"> </span>stack<span class="_ _e"> </span>space</span></div><div class="t m5 x17 h2d y2e66 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _45"> </span><span class="ffd fs1e fc2">ret</span></div><div class="t m5 x26 h26 y587 ff7 fs19 fc2 sc0 ls0 ws0">W<span class="_ _3"></span>e<span class="_ _13"> </span>see<span class="_ _13"> </span>that<span class="_ _6"> </span>this<span class="_ _13"> </span>version<span class="_ _13"> </span>of<span class="_ _13"> </span>the<span class="_ _6"> </span>function<span class="_ _13"> </span>retrieves<span class="_ _13"> </span>a<span class="_ _13"> </span>value<span class="_ _6"> </span>from<span class="_ _13"> </span>memory<span class="_ _13"> </span>(line<span class="_ _13"> </span>3)</div><div class="t m5 x17 h26 y588 ff7 fs19 fc2 sc0 ls0 ws0">and<span class="_ _13"> </span>stores<span class="_ _6"> </span>it<span class="_ _13"> </span>on<span class="_ _6"> </span>the<span class="_ _13"> </span>stack<span class="_ _13"> </span>at<span class="_ _6"> </span>offset<span class="_ _13"> </span>8<span class="_ _6"> </span>from<span class="_ _13"> </span><span class="ffd">%rsp</span>,<span class="_ _13"> </span>just<span class="_ _6"> </span>beyond<span class="_ _13"> </span>the<span class="_ _13"> </span>region<span class="_ _6"> </span>allocated<span class="_ _13"> </span>for</div><div class="t m5 x17 h26 y589 ffd fs19 fc2 sc0 ls0 ws0">buf<span class="ff7">.<span class="_ _13"> </span>T<span class="_ _3"></span>he<span class="_ _13"> </span>instruction<span class="_ _13"> </span>argument<span class="_ _6"> </span><span class="ffd">%fs:40<span class="_ _13"> </span></span>is<span class="_ _6"> </span>an<span class="_ _13"> </span>indication<span class="_ _6"> </span>that<span class="_ _13"> </span>the<span class="_ _6"> </span>canary<span class="_ _13"> </span>value<span class="_ _6"> </span>is<span class="_ _13"> </span>read</span></div><div class="t m5 x17 h26 ya77 ff7 fs19 fc2 sc0 ls0 ws0">from<span class="_ _16"> </span>memory<span class="_ _16"> </span>using<span class="_ _14"> </span><span class="ffa">segmented<span class="_ _16"> </span>addressing<span class="_ _2"></span></span>,<span class="_ _14"> </span>an<span class="_ _16"> </span>addressing<span class="_ _14"> </span>mechanism<span class="_ _16"> </span>that<span class="_ _14"> </span>dates</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
