<div id="pfeb" class="pf w2 h11" data-page-no="eb"><div class="pc pceb w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bgeb.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">234<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>3<span class="_ _3d"> </span>Machine-Level<span class="_ _10"> </span>Representation<span class="_ _10"> </span>of<span class="_ _10"> </span>Programs</span></div><div class="t m5 x1d h31 y390 ff7 fs21 fc2 sc0 ls0 ws0">Instruction<span class="_ _26"> </span>Effect<span class="_ _14e"> </span>Description</div><div class="t m5 x1d h32 yc94 ffd fs1e fc2 sc0 ls0 ws0">imulq<span class="_ _1a"> </span><span class="ff11 fs21">S<span class="_ _4c"> </span><span class="ff6">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rdx<span class="ff7 fs21 ls14f">]:<span class="ff6 ls0">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff11">S<span class="_ _10"> </span></span>×<span class="_ _13"> </span><span class="ff6">R<span class="_ _2"></span></span></span>[</span>%rax<span class="ff7 fs21">]<span class="_ _d6"> </span>Signed<span class="_"> </span>full<span class="_"> </span>multiply</span></div><div class="t m5 x1d h32 yc98 ffd fs1e fc2 sc0 ls0 ws0">mulq<span class="_ _3f"> </span><span class="ff11 fs21">S<span class="_ _4c"> </span><span class="ff6">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rdx<span class="ff7 fs21 ls14f">]:<span class="ff6 ls0">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff11">S<span class="_ _10"> </span></span>×<span class="_ _13"> </span><span class="ff6">R<span class="_ _2"></span></span></span>[</span>%rax<span class="ff7 fs21">]<span class="_ _d6"> </span>Unsigned<span class="_"> </span>full<span class="_"> </span>multiply</span></div><div class="t m5 x1d h32 ycd6 ffd fs1e fc2 sc0 ls0 ws0">cqto<span class="_ _10d"> </span><span class="ff6 fs21">R<span class="ff7">[</span></span>%rdx<span class="ff7 fs21 ls14f">]:<span class="_ _2"></span><span class="ff6 ls0">R<span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff6">SignExtend<span class="_ _0"></span><span class="ff11">(<span class="ff6">R<span class="ff7">[<span class="ffd fs1e">%rax</span>]<span class="_ _1"></span><span class="ff11">)<span class="_ _26"> </span><span class="ff7">Convert<span class="_"> </span>to<span class="_"> </span>oct<span class="_"> </span>word</span></span></span></span></span></span></span></span></div><div class="t m5 x1d h32 y23db ffd fs1e fc2 sc0 ls0 ws0">idivq<span class="_ _1a"> </span><span class="ff11 fs21">S<span class="_ _4c"> </span><span class="ff6">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rdx<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff6">R</span></span>[</span>%rdx<span class="ff7 fs21 ls14f">]:<span class="_ _2"></span><span class="ff6 ls0">R<span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _6"> </span>mod<span class="_"> </span><span class="ff11">S<span class="_ _2"></span></span>;<span class="_ _ed"> </span>Signed<span class="_"> </span>divide</span></div><div class="t m5 x20 h31 y23dc ff6 fs21 fc2 sc0 ls0 ws0">R<span class="ff7">[</span></div><div class="t m5 x1a6 h32 ycd8 ffd fs1e fc2 sc0 ls0 ws0">%rax<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff6">R</span></span>[</span>%rdx<span class="ff7 fs21 ls14f">]:<span class="_ _2"></span><span class="ff6 ls0">R<span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _6"> </span><span class="ff12">÷<span class="_ _13"> </span><span class="ff11">S</span></span></span></div><div class="t m5 x1d h32 y23dd ffd fs1e fc2 sc0 ls0 ws0">divq<span class="_ _3f"> </span><span class="ff11 fs21">S<span class="_ _4c"> </span><span class="ff6">R<span class="_ _2"></span><span class="ff7">[</span></span></span>%rdx<span class="ff7 fs21">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff6">R</span></span>[</span>%rdx<span class="ff7 fs21 ls14f">]:<span class="_ _2"></span><span class="ff6 ls0">R<span class="ff7">[</span></span></span>%rax<span class="ff7 fs21">]<span class="_ _6"> </span>mod<span class="_"> </span><span class="ff11">S<span class="_ _2"></span></span>;<span class="_ _ed"> </span>Unsigned<span class="_"> </span>divide</span></div><div class="t m5 x20 h31 y23de ff6 fs21 fc2 sc0 ls0 ws0">R<span class="ff7">[</span></div><div class="t m5 x1a6 h2d ycda ffd fs1e fc2 sc0 ls0 ws0">%rax</div><div class="t m5 x22 h32 y23df ff7 fs21 fc2 sc0 ls0 ws0">]<span class="_ _22"> </span><span class="ff12">←<span class="_ _25"> </span><span class="ff6">R</span></span>[<span class="ffd fs1e">%rdx</span><span class="ls14f">]:<span class="_ _2"></span></span><span class="ff6">R</span>[<span class="ffd fs1e">%rax</span>]<span class="_ _6"> </span><span class="ff12">÷<span class="_ _13"> </span><span class="ff11">S</span></span></div><div class="t m5 x1d h34 y23e0 ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _15"> </span>3.12<span class="_ _66"> </span><span class="fc1">Special<span class="_ _15"> </span>arithmetic<span class="_ _15"> </span>operations.<span class="_ _15"> </span><span class="ff6">These<span class="_ _15"> </span>operations<span class="_ _15"> </span>provide<span class="_ _15"> </span>full<span class="_ _15"> </span>128-bit</span></span></div><div class="t m5 x1d h34 y23e1 ff6 fs16 fc1 sc0 ls0 ws0">multiplication<span class="_ _10"> </span>and<span class="_ _10"> </span>division,<span class="_ _10"> </span>for<span class="_ _10"> </span>both<span class="_ _10"> </span>signed<span class="_ _10"> </span>and<span class="_ _10"> </span>unsigned<span class="_ _10"> </span>numbers.<span class="_ _10"> </span>The<span class="_ _10"> </span>pair<span class="_ _10"> </span>of<span class="_ _10"> </span>registers</div><div class="t m5 x1d h3a y23e2 ffd fs19 fc1 sc0 ls0 ws0">%rdx<span class="_ _10"> </span><span class="ff6 fs16">and<span class="_ _11"> </span></span>%rax<span class="_ _10"> </span><span class="ff6 fs16">are<span class="_ _10"> </span>viewed<span class="_ _11"> </span>as<span class="_ _10"> </span>forming<span class="_ _11"> </span>a<span class="_ _10"> </span>single<span class="_ _11"> </span>128-bit<span class="_ _10"> </span>oct<span class="_ _10"> </span>word.</span></div><div class="t m5 x1d h26 y23e3 ff7 fs19 fc1 sc0 ls0 ws0">describes<span class="_ _6"> </span>instructions<span class="_ _13"> </span>that<span class="_ _6"> </span>support<span class="_ _6"> </span>generating<span class="_ _13"> </span>the<span class="_ _6"> </span>full<span class="_ _6"> </span>128-bit<span class="_ _13"> </span>product<span class="_ _6"> </span>of<span class="_ _6"> </span>two<span class="_ _13"> </span>64-bit</div><div class="t m5 x1d h26 y23e4 ff7 fs19 fc1 sc0 ls0 ws0">numbers<span class="_ _1"></span>,<span class="_"> </span>as<span class="_"> </span>well<span class="_"> </span>as<span class="_"> </span>integer<span class="_"> </span>division.</div><div class="t m5 x29 h26 y23e5 ff7 fs19 fc1 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_"> </span><span class="ffd ls0">imulq<span class="_ _6"> </span><span class="ff7">instruction<span class="_ _13"> </span>has<span class="_ _6"> </span>two<span class="_ _6"> </span>different<span class="_ _13"> </span>forms<span class="_ _6"> </span>One<span class="_ _6"> </span>form,<span class="_ _13"> </span>shown<span class="_ _6"> </span>in<span class="_ _13"> </span>F<span class="_ _1"></span>igure<span class="_ _13"> </span>3.10,</span></span></div><div class="t m5 x1d h26 y23e6 ff7 fs19 fc1 sc0 ls0 ws0">is<span class="_ _15"> </span>as<span class="_ _14"> </span>a<span class="_ _15"> </span>member<span class="_ _15"> </span>of<span class="_ _15"> </span>the<span class="_ _15"> </span><span class="ff9">imul<span class="_ _15"> </span></span>instruction<span class="_ _15"> </span>class<span class="_ _1"></span>.<span class="_ _15"> </span>In<span class="_ _15"> </span>this<span class="_ _14"> </span>form,<span class="_ _21"> </span>it<span class="_ _15"> </span>serves<span class="_ _15"> </span>as<span class="_ _15"> </span>a<span class="_ _15"> </span>“two-</div><div class="t m5 x1d h26 y23e7 ff7 fs19 fc1 sc0 ls0 ws0">operand”<span class="_"> </span>multiply<span class="_ _11"> </span>instruction,<span class="_"> </span>generating<span class="_ _11"> </span>a<span class="_ _11"> </span>64-bit<span class="_"> </span>product<span class="_ _11"> </span>from<span class="_"> </span>two<span class="_ _11"> </span>64-bit<span class="_"> </span>oper<span class="_ _0"></span>-</div><div class="t m5 x1d h26 y23e8 ff7 fs19 fc1 sc0 ls0 ws0">ands<span class="_ _1"></span>.<span class="_ _6"> </span>It<span class="_ _13"> </span>implements<span class="_ _a"> </span>the<span class="_ _13"> </span>operations<span class="_ _6"> </span><span class="ffd">*</span></div><div class="t m5 x16f h69 y23e9 ff7 fs39 fc1 sc0 ls0 ws0">u</div><div class="t m5 x16f h3c y23ea ff7 fs25 fc1 sc0 ls0 ws0">64</div><div class="t m5 x118 h26 y23eb ff7 fs19 fc1 sc0 ls0 ws0">and<span class="_ _6"> </span><span class="ffd">*</span></div><div class="t m5 xf5 h69 y23e9 ff7 fs39 fc1 sc0 ls0 ws0">t</div><div class="t m5 xf5 h3c y23ea ff7 fs25 fc1 sc0 ls0 ws0">64</div><div class="t m5 xbd h26 y23ec ff7 fs19 fc1 sc0 ls0 ws0">described<span class="_ _6"> </span>in<span class="_ _13"> </span>Sections<span class="_ _a"> </span>2.3.4<span class="_ _13"> </span>and<span class="_ _a"> </span>2.3.5.</div><div class="t m5 x1d h26 y23ed ff7 fs19 fc1 sc0 ls0 ws0">(Recall<span class="_ _11"> </span>that<span class="_ _16"> </span>when<span class="_ _16"> </span>truncating<span class="_ _11"> </span>the<span class="_ _16"> </span>product<span class="_ _11"> </span>to<span class="_ _16"> </span>64<span class="_ _16"> </span>bits<span class="_ _3"></span>,<span class="_ _16"> </span>both<span class="_ _16"> </span>unsigned<span class="_ _11"> </span>multiply<span class="_ _16"> </span>and</div><div class="t m5 x1d h26 y23ee ff7 fs19 fc1 sc0 ls0 ws0">two’s-complement<span class="_"> </span>multiply<span class="_"> </span>have<span class="_"> </span>the<span class="_"> </span>same<span class="_"> </span>bit-level<span class="_"> </span>behavior<span class="_ _1"></span>.)</div><div class="t m5 x29 h26 y23ef ff7 fs19 fc1 sc0 ls0 ws0">Additionally<span class="_ _3"></span>,<span class="_ _13"> </span>the<span class="_"> </span>x86-64<span class="_ _13"> </span>instruction<span class="_ _13"> </span>set<span class="_ _13"> </span>includes<span class="_"> </span>two<span class="_ _13"> </span>different<span class="_ _13"> </span>“one-operand”</div><div class="t m5 x1d h26 y23f0 ff7 fs19 fc1 sc0 ls0 ws0">multiply<span class="_ _16"> </span>instructions<span class="_ _16"> </span>to<span class="_ _16"> </span>compute<span class="_ _16"> </span>the<span class="_ _16"> </span>full<span class="_ _14"> </span>128-bit<span class="_ _16"> </span>product<span class="_ _16"> </span>of<span class="_ _16"> </span>two<span class="_ _16"> </span>64-bit<span class="_ _16"> </span>values—</div><div class="t m5 x1d h26 y23f1 ff7 fs19 fc1 sc0 ls0 ws0">one<span class="_ _16"> </span>for<span class="_ _16"> </span>unsigned<span class="_ _14"> </span>(<span class="ffd">mulq</span>)<span class="_ _16"> </span>and<span class="_ _14"> </span>one<span class="_ _16"> </span>for<span class="_ _16"> </span>two’s-complement<span class="_ _16"> </span>(<span class="ffd">imulq</span>)<span class="_ _14"> </span>multiplication.</div><div class="t m5 x1d h26 y23f2 ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_ _14"> </span>both<span class="_ _16"> </span>of<span class="_ _14"> </span>these<span class="_ _14"> </span>instructions<span class="_ _1"></span>,<span class="_ _15"> </span>one<span class="_ _14"> </span>argument<span class="_ _16"> </span>must<span class="_ _14"> </span>be<span class="_ _14"> </span>in<span class="_ _14"> </span>register<span class="_ _14"> </span><span class="ffd">%rax</span>,<span class="_ _15"> </span>and<span class="_ _16"> </span>the</div><div class="t m5 x1d h26 y23f3 ff7 fs19 fc1 sc0 ls0 ws0">other<span class="_ _14"> </span>is<span class="_ _14"> </span>given<span class="_ _14"> </span>as<span class="_ _15"> </span>the<span class="_ _14"> </span>instruction<span class="_ _14"> </span>source<span class="_ _14"> </span>operand.<span class="_ _15"> </span>T<span class="_ _1"></span>he<span class="_ _14"> </span>product<span class="_ _15"> </span>is<span class="_ _14"> </span>then<span class="_ _14"> </span>stored<span class="_ _14"> </span>in</div><div class="t m5 x1d h26 y23f4 ff7 fs19 fc1 sc0 ls0 ws0">registers<span class="_ _14"> </span><span class="ffd">%rdx<span class="_ _15"> </span></span>(high-order<span class="_ _14"> </span>64<span class="_ _15"> </span>bits)<span class="_ _14"> </span>and<span class="_ _15"> </span><span class="ffd">%rax<span class="_ _14"> </span></span>(low-order<span class="_ _14"> </span>64<span class="_ _15"> </span>bits).<span class="_ _14"> </span>Although<span class="_ _15"> </span>the</div><div class="t m5 x1d h26 y23f5 ff7 fs19 fc1 sc0 ls0 ws0">name<span class="_"> </span><span class="ffd">imulq<span class="_ _11"> </span></span>is<span class="_ _11"> </span>used<span class="_ _11"> </span>for<span class="_"> </span>two<span class="_ _11"> </span>distinct<span class="_ _11"> </span>multiplication<span class="_ _11"> </span>operations<span class="_ _1"></span>,<span class="_ _11"> </span>the<span class="_"> </span>assembler<span class="_ _11"> </span>can</div><div class="t m5 x1d h26 y23f6 ff7 fs19 fc1 sc0 ls0 ws0">tell<span class="_"> </span>which<span class="_"> </span>one<span class="_"> </span>is<span class="_"> </span>intended<span class="_"> </span>by<span class="_"> </span>counting<span class="_"> </span>the<span class="_"> </span>number<span class="_"> </span>of<span class="_"> </span>operands<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y23f7 ff7 fs19 fc1 sc0 ls0 ws0">As<span class="_ _13"> </span>an<span class="_ _13"> </span>example<span class="_ _1"></span>,<span class="_ _13"> </span>the<span class="_ _13"> </span>following<span class="_ _13"> </span>C<span class="_ _13"> </span>code<span class="_ _13"> </span>demonstrates<span class="_ _13"> </span>the<span class="_ _6"> </span>generation<span class="_ _13"> </span>of<span class="_ _13"> </span>a<span class="_ _13"> </span>128-bit</div><div class="t m5 x1d h26 y23f8 ff7 fs19 fc1 sc0 ls0 ws0">product<span class="_"> </span>of<span class="_"> </span>two<span class="_"> </span>unsigned<span class="_"> </span>64-bit<span class="_"> </span>numbers<span class="_"> </span><span class="ffd">x<span class="_ _10"> </span></span>and<span class="_"> </span><span class="ffd">y</span>:</div><div class="t m5 x1d h2d y23f9 ffd fs1e fc2 sc0 ls0 ws0">#include<span class="_ _e"> </span>&lt;inttypes.h&gt;</div><div class="t m5 x1d h2d y23fa ffd fs1e fc2 sc0 ls0 ws0">typedef<span class="_ _e"> </span>unsigned<span class="_ _1f"> </span>__int128<span class="_ _1f"> </span>uint128_t;</div><div class="t m5 x1d h2d y23fb ffd fs1e fc2 sc0 ls0 ws0">void<span class="_ _e"> </span>store_uprod(uint128_t<span class="_ _1f"> </span>*dest,<span class="_ _1f"> </span>uint64_t<span class="_ _e"> </span>x,<span class="_ _1f"> </span>uint64_t<span class="_ _e"> </span>y)<span class="_ _1f"> </span>{</div><div class="t m5 x10c h2d y23fc ffd fs1e fc2 sc0 ls0 ws0">*des<span class="ls33">t=x*</span>(uint128_t)<span class="_ _e"> </span>y;</div><div class="t m5 x1d h2d y23fd ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x29 h26 yeef ff7 fs19 fc2 sc0 ls0 ws0">In<span class="_ _13"> </span>this<span class="_ _13"> </span>program,<span class="_ _13"> </span>we<span class="_"> </span>explicitly<span class="_ _13"> </span>declare<span class="_ _13"> </span><span class="ffd">x<span class="_ _13"> </span></span>and<span class="_ _13"> </span><span class="ffd">y<span class="_ _13"> </span></span>to<span class="_ _13"> </span>be<span class="_ _13"> </span>64-bit<span class="_ _13"> </span>numbers<span class="_ _1"></span>,<span class="_"> </span>using<span class="_ _13"> </span>deﬁ-</div><div class="t m5 x1d h26 yf74 ff7 fs19 fc2 sc0 ls0 ws0">nitions<span class="_ _13"> </span>declared<span class="_"> </span>in<span class="_ _13"> </span>the<span class="_ _13"> </span>ﬁle<span class="_"> </span><span class="ffd">inttypes.h<span class="_ _13"> </span></span>,<span class="_"> </span>as<span class="_ _13"> </span>part<span class="_ _13"> </span>of<span class="_"> </span>an<span class="_ _13"> </span>extension<span class="_ _13"> </span>of<span class="_"> </span>the<span class="_ _13"> </span>C<span class="_ _13"> </span>standard.</div><div class="t m5 x1d h26 y23fe ff7 fs19 fc2 sc0 ls0 ws0">Unfortunately<span class="_ _3"></span>,<span class="_ _13"> </span>this<span class="_"> </span>standard<span class="_ _13"> </span>does<span class="_ _13"> </span>not<span class="_ _13"> </span>make<span class="_"> </span>provisions<span class="_ _13"> </span>for<span class="_ _13"> </span>128-bit<span class="_ _13"> </span>values<span class="_ _1"></span>.<span class="_"> </span>Instead,</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
