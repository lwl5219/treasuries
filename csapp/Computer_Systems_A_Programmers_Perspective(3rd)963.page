<div id="pf3c3" class="pf w2 h11" data-page-no="3c3"><div class="pc pc3c3 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3c3.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">962<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>11<span class="_ _3d"> </span>Network<span class="_ _10"> </span>Programming</span></div><div class="t m5 x126 h2d y7ac4 ffd fs1e fc2 sc0 ls0 ws0">#include<span class="_ _e"> </span>&lt;arpa/inet.h&gt;</div><div class="t m5 x126 h2d y7ac5 ffd fs1e fc2 sc0 ls0 ws0">uint32_t<span class="_ _e"> </span>htonl(uint32_t<span class="_ _1f"> </span>hostlong);</div><div class="t m5 x126 h2d y7ac6 ffd fs1e fc2 sc0 ls0 ws0">uint16_t<span class="_ _e"> </span>htons(uint16_t<span class="_ _1f"> </span>hostshort);</div><div class="t m5 xf9 hf1 y7ac7 ff7 fs1f fc2 sc0 ls0 ws0">Returns:<span class="_"> </span>value<span class="_"> </span>in<span class="_"> </span>network<span class="_"> </span>byte<span class="_"> </span>order</div><div class="t m5 x126 h2d y7ac8 ffd fs1e fc2 sc0 ls0 ws0">uint32_t<span class="_ _e"> </span>ntohl(uint32_t<span class="_ _1f"> </span>netlong);</div><div class="t m5 x126 h2d y7ac9 ffd fs1e fc2 sc0 ls0 ws0">uint16_t<span class="_ _e"> </span>ntohs(unit16_t<span class="_ _1f"> </span>netshort);</div><div class="t m5 xdf hf1 y7aca ff7 fs1f fc2 sc0 ls0 ws0">Returns:<span class="_"> </span>value<span class="_"> </span>in<span class="_"> </span>host<span class="_"> </span>byte<span class="_"> </span>order</div><div class="t m5 x1d h26 y7acb ff7 fs19 fc2 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_ _14"> </span><span class="ffd ls0">htonl<span class="_ _11"> </span><span class="ff7">function<span class="_ _16"> </span>converts<span class="_ _16"> </span>an<span class="_ _11"> </span>unsigned<span class="_ _16"> </span>32-bit<span class="_ _11"> </span>integer<span class="_ _16"> </span>from<span class="_ _16"> </span>host<span class="_ _11"> </span>byte<span class="_ _16"> </span>order<span class="_ _11"> </span>to</span></span></div><div class="t m5 x1d h26 y7acc ff7 fs19 fc2 sc0 ls0 ws0">network<span class="_"> </span>byte<span class="_ _13"> </span>order.<span class="_ _13"> </span>T<span class="_ _1"></span>he<span class="_"> </span><span class="ffd">ntohl<span class="_ _10"> </span></span>function<span class="_ _13"> </span>converts<span class="_"> </span>an<span class="_ _13"> </span>unsigned<span class="_"> </span>32-bit<span class="_ _13"> </span>integer<span class="_"> </span>from</div><div class="t m5 x1d h26 y7acd ff7 fs19 fc2 sc0 ls0 ws0">network<span class="_ _11"> </span>byte<span class="_ _16"> </span>order<span class="_ _16"> </span>to<span class="_ _11"> </span>host<span class="_ _16"> </span>byte<span class="_ _11"> </span>order.<span class="_ _11"> </span>The<span class="_"> </span><span class="ffd">htons<span class="_ _16"> </span></span>and<span class="_ _16"> </span><span class="ffd">ntohs<span class="_ _11"> </span></span>functions<span class="_ _16"> </span>perform</div><div class="t m5 x1d h26 y7ace ff7 fs19 fc2 sc0 ls0 ws0">corresponding<span class="_ _14"> </span>conversions<span class="_ _14"> </span>for<span class="_ _14"> </span>unsigned<span class="_ _14"> </span>16-bit<span class="_ _14"> </span>integers<span class="_ _1"></span>.<span class="_ _14"> </span>Note<span class="_ _14"> </span>that<span class="_ _15"> </span>there<span class="_ _14"> </span>are<span class="_ _14"> </span>no</div><div class="t m5 x1d h26 y7acf ff7 fs19 fc2 sc0 ls0 ws0">equivalent<span class="_"> </span>functions<span class="_"> </span>for<span class="_"> </span>manipulating<span class="_"> </span>64-bit<span class="_"> </span>values<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y7ad0 ff7 fs19 fc2 sc0 ls0 ws0">IP<span class="_ _16"> </span>addresses<span class="_ _14"> </span>are<span class="_ _16"> </span>typically<span class="_ _16"> </span>presented<span class="_ _14"> </span>to<span class="_ _16"> </span>humans<span class="_ _14"> </span>in<span class="_ _16"> </span>a<span class="_ _14"> </span>form<span class="_ _16"> </span>known<span class="_ _16"> </span>as<span class="_ _14"> </span><span class="ffa">dotted-</span></div><div class="t m5 x1d h26 y7ad1 ffa fs19 fc2 sc0 ls0 ws0">decimal<span class="_ _16"> </span>notation<span class="ff7">,<span class="_ _15"> </span>where<span class="_ _14"> </span>each<span class="_ _16"> </span>byte<span class="_ _14"> </span>is<span class="_ _14"> </span>represented<span class="_ _14"> </span>by<span class="_ _14"> </span>its<span class="_ _14"> </span>decimal<span class="_ _16"> </span>value<span class="_ _14"> </span>and<span class="_ _14"> </span>sep-</span></div><div class="t m5 x1d h26 y7ad2 ff7 fs19 fc2 sc0 ls0 ws0">arated<span class="_ _21"> </span>from<span class="_ _f"> </span>the<span class="_ _21"> </span>other<span class="_ _f"> </span>bytes<span class="_ _21"> </span>by<span class="_ _f"> </span>a<span class="_ _21"> </span>period.<span class="_ _f"> </span>F<span class="_ _1"></span>or<span class="_ _f"> </span>example<span class="_ _0"></span>,<span class="_ _e"> </span><span class="ffd">128.2.194.242<span class="_ _15"> </span></span>is<span class="_ _f"> </span>the</div><div class="t m5 x1d h26 y7ad3 ff7 fs19 fc2 sc0 ls0 ws0">dotted-decimal<span class="_ _13"> </span>representation<span class="_ _13"> </span>of<span class="_ _13"> </span>the<span class="_ _13"> </span>address<span class="_ _6"> </span><span class="ffd">0x8002c2f2</span>.<span class="_ _13"> </span>On<span class="_ _13"> </span>Linux<span class="_ _13"> </span>systems<span class="_ _1"></span>,<span class="_ _13"> </span>you</div><div class="t m5 x1d h26 y7ad4 ff7 fs19 fc2 sc0 ls0 ws0">can<span class="_ _13"> </span>use<span class="_"> </span>the<span class="_ _13"> </span><span class="ff9">hostname<span class="_ _13"> </span></span>command<span class="_ _13"> </span>to<span class="_ _13"> </span>determine<span class="_"> </span>the<span class="_ _13"> </span>dotted-decimal<span class="_ _13"> </span>address<span class="_"> </span>of<span class="_ _13"> </span>your</div><div class="t m5 x1d h26 y7ad5 ff7 fs19 fc2 sc0 ls0 ws0">own<span class="_"> </span>host:</div><div class="t m5 x1d h2d y7ad6 ffd fs1e fc2 sc0 ls0 ws0">linux&gt;<span class="_ _e"> </span><span class="ff13">hostname<span class="_ _1f"> </span>-i</span></div><div class="t m5 x1d h2d y7ad7 ffd fs1e fc2 sc0 ls0 ws0">128.2.210.175</div><div class="t m5 x29 h26 y7ad8 ff7 fs19 fc2 sc0 ls0 ws0">Application<span class="_"> </span>programs<span class="_ _11"> </span>can<span class="_"> </span>convert<span class="_ _11"> </span>back<span class="_"> </span>and<span class="_ _11"> </span>forth<span class="_ _11"> </span>between<span class="_"> </span>IP<span class="_ _11"> </span>addresses<span class="_"> </span>and</div><div class="t m5 x1d h26 y7ad9 ff7 fs19 fc2 sc0 ls0 ws0">dotted-decimal<span class="_"> </span>strings<span class="_"> </span>using<span class="_"> </span>the<span class="_"> </span>functions<span class="_"> </span><span class="ffd">inet_pton<span class="_ _10"> </span></span>and<span class="_"> </span><span class="ffd">inet_ntop</span>.</div><div class="t m5 x126 h2d y7ada ffd fs1e fc2 sc0 ls0 ws0">#include<span class="_ _e"> </span>&lt;arpa/inet.h&gt;</div><div class="t m5 x126 h2d y7adb ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>inet_pton(AF_INET,<span class="_ _1f"> </span>const<span class="_ _1f"> </span>char<span class="_ _e"> </span>*src,<span class="_ _1f"> </span>void<span class="_ _e"> </span>*dst);</div><div class="t m5 x206 hf2 y7adc ff7 fs1f fc2 sc0 ls0 ws0">Returns:<span class="_"> </span>1<span class="_"> </span>if<span class="_"> </span>OK,<span class="_"> </span>0<span class="_"> </span>if<span class="_"> </span><span class="ffd fs4e">src<span class="_ _13"> </span></span>is<span class="_"> </span>invalid<span class="_"> </span>dotted<span class="_"> </span>decimal,<span class="_ _10"> </span><span class="ff12">−</span>1<span class="_ _6"> </span>on<span class="_"> </span>error</div><div class="t m5 x126 h2d y7add ffd fs1e fc2 sc0 ls0 ws0">const<span class="_ _e"> </span>char<span class="_ _1f"> </span>*inet_ntop(AF_INET,<span class="_ _1f"> </span>const<span class="_ _e"> </span>void<span class="_ _1f"> </span>*src,<span class="_ _e"> </span>char<span class="_ _1f"> </span>*dst,</div><div class="t m5 xdd h2d y7ade ffd fs1e fc2 sc0 ls0 ws0">socklen_t<span class="_ _e"> </span>size);</div><div class="t m5 x9c hf1 y7adf ff7 fs1f fc2 sc0 ls0 ws0">Returns:<span class="_"> </span>pointer<span class="_"> </span>to<span class="_"> </span>a<span class="_"> </span>dotted-decimal<span class="_"> </span>string<span class="_"> </span>if<span class="_"> </span>OK,<span class="_"> </span>NULL<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m5 x1d h26 y2594 ff7 fs19 fc2 sc0 ls0 ws0">In<span class="_ _16"> </span>these<span class="_ _11"> </span>function<span class="_ _16"> </span>names<span class="_ _1"></span>,<span class="_ _16"> </span>the<span class="_ _16"> </span>“<span class="ffd">n</span>”<span class="_ _16"> </span>stands<span class="_ _16"> </span>for<span class="_ _11"> </span><span class="ffa">network<span class="_ _14"> </span></span>and<span class="_ _16"> </span>the<span class="_ _16"> </span>“<span class="ffd">p</span>”<span class="_ _11"> </span>stands<span class="_ _16"> </span>for<span class="_ _16"> </span><span class="ffa">pre-</span></div><div class="t m5 x1d h26 y7ae0 ffa fs19 fc2 sc0 ls0 ws0">sentation<span class="ff7">.<span class="_"> </span>T<span class="_ _1"></span>hey<span class="_"> </span>can<span class="_ _11"> </span>manipulate<span class="_"> </span>either<span class="_"> </span>32-bit<span class="_"> </span>IPv4<span class="_"> </span>addresses<span class="_ _11"> </span>(<span class="ffd">AF_INET</span>),<span class="_"> </span>as<span class="_"> </span>shown</span></div><div class="t m5 x1d h26 y7ae1 ff7 fs19 fc2 sc0 ls0 ws0">here<span class="_ _1"></span>,<span class="_"> </span>or<span class="_"> </span>128-bit<span class="_"> </span>IPv6<span class="_"> </span>addresses<span class="_"> </span>(<span class="ffd">AF_INET6</span>),<span class="_"> </span>which<span class="_"> </span>we<span class="_"> </span>do<span class="_"> </span>not<span class="_"> </span>cover.</div><div class="t m5 x29 h26 y7ae2 ff7 fs19 fc2 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_ _10"> </span><span class="ffd ls0">inet_pton<span class="_ _13"> </span><span class="ff7">function<span class="_ _13"> </span>converts<span class="_"> </span>a<span class="_ _13"> </span>dotted-decimal<span class="_ _13"> </span>string<span class="_ _13"> </span>(</span>src<span class="ff7">)<span class="_ _13"> </span>to<span class="_ _13"> </span>a<span class="_"> </span>binary<span class="_ _13"> </span>IP</span></span></div><div class="t m5 x1d h26 y7ae3 ff7 fs19 fc2 sc0 ls0 ws0">address<span class="_ _6"> </span>in<span class="_ _6"> </span>network<span class="_ _6"> </span>byte<span class="_ _6"> </span>order<span class="_ _6"> </span>(<span class="ffd">dst</span>).<span class="_ _6"> </span>If<span class="_ _6"> </span><span class="ffd">src<span class="_ _6"> </span></span>does<span class="_ _6"> </span>not<span class="_ _6"> </span>point<span class="_ _6"> </span>to<span class="_ _6"> </span>a<span class="_ _6"> </span>valid<span class="_ _6"> </span>dotted-decimal</div><div class="t m5 x1d h46 ycf1 ff7 fs19 fc2 sc0 ls0 ws0">string,<span class="_"> </span>then<span class="_ _13"> </span>it<span class="_"> </span>returns<span class="_"> </span>0.<span class="_"> </span>Any<span class="_"> </span>other<span class="_ _13"> </span>error<span class="_"> </span>returns<span class="_"> </span><span class="ff12">−</span>1<span class="_ _13"> </span>and<span class="_"> </span>sets<span class="_"> </span><span class="ffd">errno</span>.<span class="_ _13"> </span>Similarly<span class="_ _3"></span>,<span class="_"> </span>the</div><div class="t m5 x1d h26 ycf2 ffd fs19 fc2 sc0 ls0 ws0">inet_ntop<span class="_ _11"> </span><span class="ff7">function<span class="_"> </span>converts<span class="_ _11"> </span>a<span class="_ _11"> </span>binary<span class="_ _11"> </span>IP<span class="_ _11"> </span>address<span class="_ _11"> </span>in<span class="_ _11"> </span>network<span class="_"> </span>byte<span class="_ _11"> </span>order<span class="_ _11"> </span>(</span>src<span class="ff7 ls2dc">)t<span class="_ _4a"></span>o</span></div><div class="t m5 x1d h26 ycf3 ff7 fs19 fc2 sc0 ls0 ws0">the<span class="_ _11"> </span>corresponding<span class="_ _16"> </span>dotted-decimal<span class="_ _11"> </span>representation<span class="_ _16"> </span>and<span class="_ _11"> </span>copies<span class="_ _11"> </span>at<span class="_ _16"> </span>most<span class="_ _11"> </span><span class="ffd">size<span class="_ _16"> </span></span>bytes</div><div class="t m5 x1d h26 ycf4 ff7 fs19 fc2 sc0 ls0 ws0">of<span class="_"> </span>the<span class="_"> </span>resulting<span class="_"> </span>null-terminated<span class="_"> </span>string<span class="_"> </span>to<span class="_"> </span><span class="ffd">dst</span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
