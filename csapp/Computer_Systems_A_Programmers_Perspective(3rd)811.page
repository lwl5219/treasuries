<div id="pf32b" class="pf w2 h11" data-page-no="32b"><div class="pc pc32b w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg32b.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">810<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>8<span class="_ _3d"> </span>Exceptional<span class="_ _10"> </span>Control<span class="_ _10"> </span>Flow</span></div><div class="t m5 x1f h2d ye7 ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _20"> </span><span class="ffd fs1e fc2">Sio_putl(--counter);</span></div><div class="t m5 x1b0 h2d yc4d ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _20"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_SETMASK,<span class="_ _e"> </span>&amp;prev_mask,<span class="_ _1f"> </span>NULL);<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Restore<span class="_ _1f"> </span>sigs<span class="_ _e"> </span>*/</span></div><div class="t m5 x1b0 h2e yecb ff6 fs20 fc6 sc0 ls0 ws0">11</div><div class="t m5 x1b0 h2e y31ac ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x33 h2d yecc ffd fs1e fc2 sc0 ls0 ws0">_exit(0);</div><div class="t m5 x1b0 h2d yecd ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2e yece ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x1b0 h2e y69d9 ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x4f h2d yecf ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main()</div><div class="t m5 x1b0 h2d yed0 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x1b0 h2e y20fe ff6 fs20 fc6 sc0 ls0 ws0">17</div><div class="t m5 x33 h2d y1a10 ffd fs1e fc2 sc0 ls0 ws0">pid_t<span class="_ _e"> </span>pid;</div><div class="t m5 x1b0 h2d yed3 ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _20"> </span><span class="ffd fs1e fc2">sigset_t<span class="_ _e"> </span>mask,<span class="_ _1f"> </span>prev_mask;</span></div><div class="t m5 x1b0 h2e yed4 ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x1b0 h2e y31ae ff6 fs20 fc6 sc0 ls0 ws0">20</div><div class="t m5 x33 h2d y462 ffd fs1e fc2 sc0 ls0 ws0">printf(&quot;%ld&quot;,<span class="_ _e"> </span>counter);</div><div class="t m5 x1b0 h2d y26dd ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _20"> </span><span class="ffd fs1e fc2">fflush(stdout);</span></div><div class="t m5 x1b0 h2e y2651 ff6 fs20 fc6 sc0 ls0 ws0">22</div><div class="t m5 x1b0 h2e y5f61 ff6 fs20 fc6 sc0 ls0 ws0">23</div><div class="t m5 x33 h2d yeab ffd fs1e fc2 sc0 ls0 ws0">signal(SIGUSR1,<span class="_ _e"> </span>handler1);</div><div class="t m5 x1b0 h2e y2a37 ff6 fs20 fc6 sc0 ls0 ws0">24</div><div class="t m5 x33 h2d y19a5 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>((pid<span class="_ _1f"> </span>=<span class="_ _1f"> </span>Fork())<span class="_ _e"> </span>==<span class="_ _1f"> </span>0)<span class="_ _e"> </span>{</div><div class="t m5 x1b0 h2d y682 ff6 fs20 fc6 sc0 ls0 ws0">25<span class="_ _70"> </span><span class="ffd fs1e fc2">while(1)<span class="_ _e"> </span>{};</span></div><div class="t m5 x1b0 h2d y19a9 ff6 fs20 fc6 sc0 ls0 ws0">26<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1b0 h2d y418 ff6 fs20 fc6 sc0 ls0 ws0">27<span class="_ _20"> </span><span class="ffd fs1e fc2">Kill(pid,<span class="_ _e"> </span>SIGUSR1);</span></div><div class="t m5 x1b0 h2d y2a38 ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _20"> </span><span class="ffd fs1e fc2">Waitpid(-1,<span class="_ _e"> </span>NULL,<span class="_ _1f"> </span>0);</span></div><div class="t m5 x1b0 h2e y3ed ff6 fs20 fc6 sc0 ls0 ws0">29</div><div class="t m5 x1b0 h2e y69da ff6 fs20 fc6 sc0 ls0 ws0">30</div><div class="t m5 x33 h2d y2656 ffd fs1e fc2 sc0 ls0 ws0">Sigfillset(&amp;mask);</div><div class="t m5 x1b0 h2d y19b0 ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _20"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_BLOCK,<span class="_ _e"> </span>&amp;mask,<span class="_ _1f"> </span>&amp;prev_mask);<span class="_ _1a"> </span>/*<span class="_ _1f"> </span>Block<span class="_ _e"> </span>sigs<span class="_ _1f"> </span>*/</span></div><div class="t m5 x1b0 h2d y2657 ff6 fs20 fc6 sc0 ls0 ws0">32<span class="_ _20"> </span><span class="ffd fs1e fc2">printf(&quot;%ld&quot;,<span class="_ _e"> </span>++counter);</span></div><div class="t m5 x1b0 h2d y2658 ff6 fs20 fc6 sc0 ls0 ws0">33<span class="_ _20"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_SETMASK,<span class="_ _e"> </span>&amp;prev_mask,<span class="_ _1f"> </span>NULL);<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Restore<span class="_ _1f"> </span>sigs<span class="_ _e"> </span>*/</span></div><div class="t m5 x1b0 h2e y2659 ff6 fs20 fc6 sc0 ls0 ws0">34</div><div class="t m5 x1b0 h2e y69db ff6 fs20 fc6 sc0 ls0 ws0">35</div><div class="t m5 x33 h2d y35e ffd fs1e fc2 sc0 ls0 ws0">exit(0);</div><div class="t m5 x1b0 h2d y1a25 ff6 fs20 fc6 sc0 ls0 ws0">36<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x13e h2c y69dc ffa fs16 fc2 sc0 ls0 ws0">code/ecf/signalprob0.c</div><div class="t m5 x1d h42 y69dd ff6 fs29 fc6 sc0 ls0 ws0">Portable<span class="_ _11"> </span>Signal<span class="_ _16"> </span>Handling</div><div class="t m5 x1d h26 y69de ff7 fs19 fc1 sc0 ls0 ws0">Another<span class="_ _6"> </span>ugly<span class="_ _6"> </span>aspect<span class="_ _6"> </span>of<span class="_ _6"> </span>Unix<span class="_ _6"> </span>signal<span class="_ _6"> </span>handling<span class="_ _6"> </span>is<span class="_ _13"> </span>that<span class="_ _a"> </span>different<span class="_ _6"> </span>systems<span class="_ _6"> </span>have<span class="_ _6"> </span>different</div><div class="t m5 x1d h26 y69df ff7 fs19 fc1 sc0 ls0 ws0">signal-handling<span class="_"> </span>semantics<span class="_ _1"></span>.<span class="_"> </span>F<span class="_ _1"></span>or<span class="_"> </span>example:</div><div class="t m5 x75 h3d y69e0 ff14 fs26 fc6 sc0 ls0 ws0">.</div><div class="t m5 x29 h26 y4f64 ffa fs19 fc1 sc0 ls0 ws0">The<span class="_ _13"> </span>semantics<span class="_"> </span>of<span class="_ _13"> </span>the<span class="_"> </span><span class="ffd">signal<span class="_ _13"> </span></span>function<span class="_"> </span>varies<span class="_ _1"></span>.<span class="_ _a"> </span><span class="ff7">Some<span class="_"> </span>older<span class="_ _13"> </span>Unix<span class="_"> </span>systems<span class="_ _13"> </span>restore</span></div><div class="t m5 x29 h26 y69e1 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _13"> </span>action<span class="_ _13"> </span>for<span class="_ _13"> </span>signal<span class="_ _6"> </span><span class="ff11">k<span class="_ _10"> </span></span>to<span class="_ _13"> </span>its<span class="_ _13"> </span>default<span class="_ _13"> </span>after<span class="_ _13"> </span>signal<span class="_ _6"> </span><span class="ff11">k<span class="_ _10"> </span></span>has<span class="_ _13"> </span>been<span class="_ _13"> </span>caught<span class="_ _13"> </span>by<span class="_ _13"> </span>a<span class="_ _13"> </span>handler<span class="_ _1"></span>.</div><div class="t m5 x29 h26 y69e2 ff7 fs19 fc1 sc0 ls0 ws0">On<span class="_ _6"> </span>these<span class="_ _13"> </span>systems<span class="_ _1"></span>,<span class="_ _13"> </span>the<span class="_ _6"> </span>handler<span class="_ _13"> </span>must<span class="_ _6"> </span>explicitly<span class="_ _6"> </span>reinstall<span class="_ _13"> </span>itself<span class="_ _1"></span>,<span class="_ _13"> </span>by<span class="_ _6"> </span>calling<span class="_ _13"> </span><span class="ffd">signal</span>,</div><div class="t m5 x29 h26 y69e3 ff7 fs19 fc1 sc0 ls0 ws0">each<span class="_"> </span>time<span class="_"> </span>it<span class="_"> </span>runs<span class="_ _1"></span>.</div><div class="t m5 x75 h3d y69e4 ff14 fs26 fc6 sc0 ls0 ws0">.</div><div class="t m5 x29 h26 y69e5 ffa fs19 fc1 sc0 ls0 ws0">System<span class="_ _11"> </span>calls<span class="_ _11"> </span>can<span class="_ _16"> </span>be<span class="_"> </span>interrupted.<span class="_ _13"> </span><span class="ff7">System<span class="_ _11"> </span>calls<span class="_ _16"> </span>such<span class="_ _11"> </span>as<span class="_ _11"> </span><span class="ffd">read</span>,<span class="_ _11"> </span><span class="ffd">wait</span>,<span class="_ _16"> </span>and<span class="_ _11"> </span><span class="ffd">accept</span></span></div><div class="t m5 x29 h26 y69e6 ff7 fs19 fc1 sc0 ls0 ws0">that<span class="_ _15"> </span>can<span class="_ _14"> </span>potentially<span class="_ _15"> </span>block<span class="_ _15"> </span>the<span class="_ _15"> </span>process<span class="_ _15"> </span>for<span class="_ _15"> </span>a<span class="_ _15"> </span>long<span class="_ _15"> </span>period<span class="_ _14"> </span>of<span class="_ _15"> </span>time<span class="_ _15"> </span>are<span class="_ _15"> </span>called</div><div class="t m5 x29 h26 y69e7 ffa fs19 fc1 sc0 ls0 ws0">slow<span class="_"> </span>system<span class="_"> </span>calls<span class="ff7">.<span class="_"> </span>On<span class="_ _11"> </span>some<span class="_"> </span>older<span class="_"> </span>versions<span class="_ _11"> </span>of<span class="_"> </span>Unix,<span class="_ _11"> </span>slow<span class="_"> </span>system<span class="_ _11"> </span>calls<span class="_"> </span>that<span class="_ _11"> </span>are</span></div><div class="t m5 x29 h26 y131b ff7 fs19 fc1 sc0 ls0 ws0">interrupted<span class="_ _16"> </span>when<span class="_ _16"> </span>a<span class="_ _16"> </span>handler<span class="_ _16"> </span>catches<span class="_ _16"> </span>a<span class="_ _16"> </span>signal<span class="_ _16"> </span>do<span class="_ _16"> </span>not<span class="_ _16"> </span>resume<span class="_ _16"> </span>when<span class="_ _16"> </span>the<span class="_ _16"> </span>signal</div><div class="t m5 x29 h26 y131c ff7 fs19 fc1 sc0 ls0 ws0">handler<span class="_ _21"> </span>returns<span class="_ _f"> </span>but<span class="_ _f"> </span>instead<span class="_ _f"> </span>return<span class="_ _21"> </span>immediately<span class="_ _f"> </span>to<span class="_ _f"> </span>the<span class="_ _f"> </span>user<span class="_ _21"> </span>with<span class="_ _f"> </span>an<span class="_ _f"> </span>error</div><div class="t m5 x29 h26 y69e8 ff7 fs19 fc1 sc0 ls0 ws0">condition<span class="_ _15"> </span>and<span class="_ _15"> </span><span class="ffd">errno<span class="_ _15"> </span></span>set<span class="_ _15"> </span>to<span class="_ _15"> </span>EINTR.<span class="_ _15"> </span>On<span class="_ _21"> </span>these<span class="_ _15"> </span>systems<span class="_ _1"></span>,<span class="_ _21"> </span>programmers<span class="_ _15"> </span>must</div><div class="t m5 x29 h26 y69e9 ff7 fs19 fc1 sc0 ls0 ws0">include<span class="_"> </span>code<span class="_"> </span>that<span class="_"> </span>manually<span class="_"> </span>restarts<span class="_"> </span>interrupted<span class="_"> </span>system<span class="_"> </span>calls<span class="_ _1"></span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
