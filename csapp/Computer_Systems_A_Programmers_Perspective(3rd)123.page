<div id="pf7b" class="pf w2 h11" data-page-no="7b"><div class="pc pc7b w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg7b.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">122<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>2<span class="_ _3d"> </span>Representing<span class="_ _10"> </span>and<span class="_ _10"> </span>Manipulating<span class="_ _10"> </span>Information</span></div><div class="t m5 x28 h2a y257 fff fs1c fc2 sc0 ls0 ws0">Aside<span class="_ _1b"> </span><span class="ff6 fs19">Security<span class="_ _11"> </span>vulnerability<span class="_ _11"> </span>in<span class="_ _11"> </span><span class="ffd fs2b">getpeername</span></span></div><div class="t m5 x28 h2b y258 ff7 fs1e fc2 sc0 ls0 ws0">In<span class="_ _11"> </span>2002,<span class="_ _16"> </span>programmers<span class="_ _11"> </span>involved<span class="_ _16"> </span>in<span class="_ _11"> </span>the<span class="_ _11"> </span>FreeBSD<span class="_ _11"> </span>open-source<span class="_ _11"> </span>operating<span class="_ _16"> </span>systems<span class="_ _11"> </span>project<span class="_ _11"> </span>realized<span class="_ _16"> </span>that</div><div class="t m5 x28 h2b y259 ff7 fs1e fc2 sc0 ls0 ws0">their<span class="_ _16"> </span>implementation<span class="_ _16"> </span>of<span class="_ _16"> </span>the<span class="_ _14"> </span><span class="ffd">getpeername<span class="_ _16"> </span></span>library<span class="_ _16"> </span>function<span class="_ _16"> </span>had<span class="_ _14"> </span>a<span class="_ _16"> </span>security<span class="_ _16"> </span>vulnerability<span class="_ _3"></span>.<span class="_ _16"> </span>A<span class="_ _16"> </span>simpliﬁed</div><div class="t m5 x28 h2b y25a ff7 fs1e fc2 sc0 ls0 ws0">version<span class="_"> </span>of<span class="_"> </span>their<span class="_"> </span>code<span class="_"> </span>went<span class="_"> </span>something<span class="_"> </span>like<span class="_"> </span>this:</div><div class="t m5 xc6 h2d y1209 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">/*</span></div><div class="t m5 xc6 h2d y120a ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _73"> </span><span class="ffd fs1e fc2">*<span class="_ _1f"> </span>Illustration<span class="_ _e"> </span>of<span class="_ _1f"> </span>code<span class="_ _1f"> </span>vulnerability<span class="_ _e"> </span>similar<span class="_ _1f"> </span>to<span class="_ _e"> </span>that<span class="_ _1f"> </span>found<span class="_ _1f"> </span>in</span></div><div class="t m5 xc6 h2d y120b ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _73"> </span><span class="ffd fs1e fc2">*<span class="_ _1f"> </span>FreeBSD’s<span class="_ _e"> </span>implementation<span class="_ _1f"> </span>of<span class="_ _1f"> </span>getpeername()</span></div><div class="t m5 xc6 h2d y120c ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _73"> </span><span class="ffd fs1e fc2">*/</span></div><div class="t m5 xc6 h2e y120d ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 xc6 h2e y120e ff6 fs20 fc6 sc0 ls0 ws0">6</div><div class="t m5 xef h2d y120f ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Declaration<span class="_ _1f"> </span>of<span class="_ _1f"> </span>library<span class="_ _e"> </span>function<span class="_ _1f"> </span>memcpy<span class="_ _e"> </span>*/</div><div class="t m5 xc6 h2d y1210 ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _1c"> </span><span class="ffd fs1e fc2">void<span class="_ _1f"> </span>*memcpy(void<span class="_ _e"> </span>*dest,<span class="_ _1f"> </span>void<span class="_ _1f"> </span>*src,<span class="_ _e"> </span>size_t<span class="_ _1f"> </span>n);</span></div><div class="t m5 xc6 h2e y1211 ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 xc6 h2e y1212 ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 xef h2d y1213 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Kernel<span class="_ _1f"> </span>memory<span class="_ _1f"> </span>region<span class="_ _e"> </span>holding<span class="_ _1f"> </span>user-accessible<span class="_ _e"> </span>data<span class="_ _1f"> </span>*/</div><div class="t m5 x28 h2d y1214 ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _1c"> </span><span class="ffd fs1e fc2">#define<span class="_ _1f"> </span>KSIZE<span class="_ _e"> </span>1024</span></div><div class="t m5 x28 h2d y1215 ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _1c"> </span><span class="ffd fs1e fc2">char<span class="_ _1f"> </span>kbuf[KSIZE];</span></div><div class="t m5 x28 h2e y1216 ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x28 h2e y1217 ff6 fs20 fc6 sc0 ls0 ws0">13</div><div class="t m5 xef h2d y1218 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Copy<span class="_ _1f"> </span>at<span class="_ _1f"> </span>most<span class="_ _e"> </span>maxlen<span class="_ _1f"> </span>bytes<span class="_ _e"> </span>from<span class="_ _1f"> </span>kernel<span class="_ _1f"> </span>region<span class="_ _e"> </span>to<span class="_ _1f"> </span>user<span class="_ _e"> </span>buffer<span class="_ _1f"> </span>*/</div><div class="t m5 x28 h2d y1219 ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _1c"> </span><span class="ffd fs1e fc2">int<span class="_ _1f"> </span>copy_from_kernel(void<span class="_ _e"> </span>*user_dest,<span class="_ _1f"> </span>int<span class="_ _1f"> </span>maxlen)<span class="_ _e"> </span>{</span></div><div class="t m5 x28 h2d y121a ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _20"> </span><span class="ffd fs1e fc2">/*<span class="_ _e"> </span>Byte<span class="_ _1f"> </span>count<span class="_ _1f"> </span>len<span class="_ _e"> </span>is<span class="_ _1f"> </span>minimum<span class="_ _e"> </span>of<span class="_ _1f"> </span>buffer<span class="_ _1f"> </span>size<span class="_ _e"> </span>and<span class="_ _1f"> </span>maxlen<span class="_ _e"> </span>*/</span></div><div class="t m5 x28 h2d y121b ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _20"> </span><span class="ffd fs1e fc2">int<span class="_ _e"> </span>len<span class="_ _1f"> </span>=<span class="_ _1f"> </span>KSIZE<span class="_ _e"> </span>&lt;<span class="_ _1f"> </span>maxlen<span class="_ _e"> </span>?<span class="_ _1f"> </span>KSIZE<span class="_ _1f"> </span>:<span class="_ _e"> </span>maxlen;</span></div><div class="t m5 x28 h2d y121c ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _20"> </span><span class="ffd fs1e fc2">memcpy(user_dest,<span class="_ _e"> </span>kbuf,<span class="_ _1f"> </span>len);</span></div><div class="t m5 x28 h2d y121d ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _20"> </span><span class="ffd fs1e fc2">return<span class="_ _e"> </span>len;</span></div><div class="t m5 x28 h2d y121e ff6 fs20 fc6 sc0 ls0 ws0">19<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x57 h2b y121f ff7 fs1e fc2 sc0 ls0 ws0">In<span class="_ _13"> </span>this<span class="_ _13"> </span>code<span class="_ _1"></span>,<span class="_ _13"> </span>we<span class="_ _13"> </span>show<span class="_ _13"> </span>the<span class="_ _6"> </span>prototype<span class="_ _13"> </span>for<span class="_ _13"> </span>library<span class="_ _13"> </span>function<span class="_ _6"> </span><span class="ffd">memcpy<span class="_ _13"> </span></span>on<span class="_ _13"> </span>line<span class="_ _13"> </span>7,<span class="_ _13"> </span>which<span class="_ _13"> </span>is<span class="_ _6"> </span>designed<span class="_ _13"> </span>to<span class="_ _13"> </span>copy</div><div class="t m5 x28 h2b y1220 ff7 fs1e fc2 sc0 ls0 ws0">a<span class="_"> </span>speciﬁed<span class="_"> </span>number<span class="_"> </span>of<span class="_"> </span>bytes<span class="_"> </span><span class="ffd">n<span class="_ _10"> </span></span>from<span class="_"> </span>one<span class="_"> </span>region<span class="_"> </span>of<span class="_"> </span>memory<span class="_"> </span>to<span class="_"> </span>another.</div><div class="t m5 x57 h2b y1221 ff7 fs1e fc2 sc0 ls0 ws0">T<span class="_ _1"></span>he<span class="_ _16"> </span>function<span class="_ _11"> </span><span class="ffd">copy_from_kernel</span>,<span class="_ _16"> </span>starting<span class="_ _11"> </span>at<span class="_ _11"> </span>line<span class="_ _16"> </span>14,<span class="_ _11"> </span>is<span class="_ _16"> </span>designed<span class="_ _11"> </span>to<span class="_ _11"> </span>copy<span class="_ _16"> </span>some<span class="_ _11"> </span>of<span class="_ _11"> </span>the<span class="_ _16"> </span>data<span class="_ _11"> </span>main-</div><div class="t m5 x28 h2b y1222 ff7 fs1e fc2 sc0 ls0 ws0">tained<span class="_ _10"> </span>by<span class="_ _11"> </span>the<span class="_ _11"> </span>operating<span class="_ _11"> </span>system<span class="_ _11"> </span>kernel<span class="_ _10"> </span>to<span class="_ _11"> </span>a<span class="_ _11"> </span>designated<span class="_ _11"> </span>region<span class="_ _11"> </span>of<span class="_ _10"> </span>memory<span class="_ _11"> </span>accessible<span class="_ _11"> </span>to<span class="_ _11"> </span>the<span class="_ _11"> </span>user.<span class="_"> </span>Most</div><div class="t m5 x28 h2b y1223 ff7 fs1e fc2 sc0 ls0 ws0">of<span class="_"> </span>the<span class="_"> </span>data<span class="_ _10"> </span>structures<span class="_ _10"> </span>maintained<span class="_ _10"> </span>by<span class="_ _10"> </span>the<span class="_ _10"> </span>kernel<span class="_ _10"> </span>should<span class="_ _10"> </span>not<span class="_ _11"> </span>be<span class="_"> </span>readable<span class="_"> </span>by<span class="_"> </span>a<span class="_ _10"> </span>user,<span class="_"> </span>since<span class="_"> </span>they<span class="_ _10"> </span>may<span class="_ _10"> </span>con-</div><div class="t m5 x28 h2b y1224 ff7 fs1e fc2 sc0 ls0 ws0">tain<span class="_ _13"> </span>sensitive<span class="_ _13"> </span>information<span class="_ _6"> </span>about<span class="_"> </span>other<span class="_ _6"> </span>users<span class="_ _13"> </span>and<span class="_ _13"> </span>about<span class="_ _13"> </span>other<span class="_ _13"> </span>jobs<span class="_ _13"> </span>running<span class="_ _6"> </span>on<span class="_"> </span>the<span class="_ _6"> </span>system,<span class="_"> </span>but<span class="_ _6"> </span>the<span class="_"> </span>region</div><div class="t m5 x28 h2b y1225 ff7 fs1e fc2 sc0 ls0 ws0">shown<span class="_ _13"> </span>as<span class="_ _6"> </span><span class="ffd">kbuf<span class="_ _13"> </span></span>was<span class="_ _13"> </span>intended<span class="_ _13"> </span>to<span class="_ _6"> </span>be<span class="_ _13"> </span>one<span class="_ _13"> </span>that<span class="_ _6"> </span>the<span class="_ _13"> </span>user<span class="_ _13"> </span>could<span class="_ _6"> </span>read.<span class="_ _13"> </span>T<span class="_ _0"></span>he<span class="_ _13"> </span>parameter<span class="_ _6"> </span><span class="ffd">maxlen<span class="_ _13"> </span></span>is<span class="_ _13"> </span>intended<span class="_ _6"> </span>to<span class="_ _13"> </span>be</div><div class="t m5 x28 h2b y1226 ff7 fs1e fc2 sc0 ls0 ws0">the<span class="_"> </span>length<span class="_ _13"> </span>of<span class="_"> </span>the<span class="_"> </span>buffer<span class="_ _13"> </span>allocated<span class="_"> </span>by<span class="_ _13"> </span>the<span class="_"> </span>user<span class="_"> </span>and<span class="_ _13"> </span>indicated<span class="_"> </span>by<span class="_ _13"> </span>argument<span class="_"> </span><span class="ffd">user_dest</span>.<span class="_"> </span>T<span class="_ _1"></span>he<span class="_"> </span>computation</div><div class="t m5 x28 h2b y1227 ff7 fs1e fc2 sc0 ls0 ws0">at<span class="_"> </span>line<span class="_"> </span>16<span class="_"> </span>then<span class="_"> </span>makes<span class="_"> </span>sure<span class="_"> </span>that<span class="_"> </span>no<span class="_"> </span>more<span class="_ _13"> </span>bytes<span class="_"> </span>are<span class="_"> </span>copied<span class="_"> </span>than<span class="_"> </span>are<span class="_"> </span>available<span class="_"> </span>in<span class="_"> </span>either<span class="_"> </span>the<span class="_"> </span>source<span class="_"> </span>or<span class="_"> </span>the</div><div class="t m5 x28 h2b y1228 ff7 fs1e fc2 sc0 ls0 ws0">destination<span class="_"> </span>buffer.</div><div class="t m5 x57 h2b y1229 ff7 fs1e fc2 sc0 ls0 ws0">Suppose<span class="_ _1"></span>,<span class="_ _13"> </span>however,<span class="_ _6"> </span>that<span class="_ _13"> </span>some<span class="_ _a"> </span>malicious<span class="_ _13"> </span>programmer<span class="_ _a"> </span>writes<span class="_ _13"> </span>code<span class="_ _6"> </span>that<span class="_ _6"> </span>calls<span class="_ _13"> </span><span class="ffd">copy_from_kernel<span class="_ _a"> </span></span>with</div><div class="t m5 x28 h2b y122a ff7 fs1e fc2 sc0 ls0 ws0">a<span class="_ _13"> </span>negative<span class="_ _13"> </span>value<span class="_"> </span>of<span class="_ _13"> </span><span class="ffd">maxlen</span>.<span class="_ _13"> </span>T<span class="_ _1"></span>hen<span class="_ _13"> </span>the<span class="_ _13"> </span>minimum<span class="_"> </span>computation<span class="_ _13"> </span>on<span class="_ _13"> </span>line<span class="_ _13"> </span>16<span class="_ _13"> </span>will<span class="_ _13"> </span>compute<span class="_ _13"> </span>this<span class="_ _13"> </span>value<span class="_"> </span>for<span class="_ _13"> </span><span class="ffd">len</span>,</div><div class="t m5 x28 h2b y122b ff7 fs1e fc2 sc0 ls0 ws0">which<span class="_ _13"> </span>will<span class="_ _13"> </span>then<span class="_ _13"> </span>be<span class="_ _13"> </span>passed<span class="_ _13"> </span>as<span class="_ _13"> </span>the<span class="_ _13"> </span>parameter<span class="_ _13"> </span><span class="ffd">n<span class="_ _13"> </span></span>to<span class="_"> </span><span class="ffd">memcpy</span>.<span class="_ _13"> </span>Note<span class="_ _1"></span>,<span class="_ _13"> </span>however,<span class="_ _13"> </span>that<span class="_ _13"> </span>parameter<span class="_ _13"> </span><span class="ffd">n<span class="_ _13"> </span></span>is<span class="_ _13"> </span>declared<span class="_ _13"> </span>as</div><div class="t m5 x28 h2b y122c ff7 fs1e fc2 sc0 ls0 ws0">having<span class="_ _6"> </span>data<span class="_ _13"> </span>type<span class="_ _a"> </span><span class="ffd">size_t</span>.<span class="_ _13"> </span>T<span class="_ _1"></span>his<span class="_ _6"> </span>data<span class="_ _6"> </span>type<span class="_ _13"> </span>is<span class="_ _6"> </span>declared<span class="_ _6"> </span>(via<span class="_ _13"> </span><span class="ffd">typedef</span>)<span class="_ _a"> </span>in<span class="_ _13"> </span>the<span class="_ _a"> </span>library<span class="_ _13"> </span>ﬁle<span class="_ _6"> </span><span class="ffd">stdio.h</span>.<span class="_ _6"> </span>T<span class="_ _3"></span>ypically<span class="_ _3"></span>,<span class="_ _6"> </span>it</div><div class="t m5 x28 h2b y122d ff7 fs1e fc2 sc0 ls0 ws0">is<span class="_ _13"> </span>deﬁned<span class="_"> </span>to<span class="_ _13"> </span>be<span class="_ _13"> </span><span class="ffd">unsigned<span class="_ _13"> </span></span>for<span class="_ _13"> </span>32-bit<span class="_"> </span>programs<span class="_ _13"> </span>and<span class="_ _13"> </span><span class="ffd">unsigned<span class="_ _11"> </span>long<span class="_ _13"> </span></span>for<span class="_"> </span>64-bit<span class="_ _13"> </span>programs<span class="_ _1"></span>.<span class="_ _13"> </span>Since<span class="_"> </span>argument</div><div class="t m5 x28 h2b y122e ffd fs1e fc2 sc0 ls0 ws0">n<span class="_ _10"> </span><span class="ff7">is<span class="_ _13"> </span>unsigned,<span class="_"> </span></span>memcpy<span class="_ _13"> </span><span class="ff7">will<span class="_"> </span>treat<span class="_"> </span>it<span class="_"> </span>as<span class="_"> </span>a<span class="_ _13"> </span>very<span class="_"> </span>large<span class="_"> </span>positive<span class="_ _13"> </span>number<span class="_"> </span>and<span class="_"> </span>attempt<span class="_ _13"> </span>to<span class="_"> </span>copy<span class="_"> </span>that<span class="_"> </span>many<span class="_ _13"> </span>bytes</span></div><div class="t m5 x28 h2b y122f ff7 fs1e fc2 sc0 ls0 ws0">from<span class="_ _16"> </span>the<span class="_ _16"> </span>kernel<span class="_ _16"> </span>region<span class="_ _16"> </span>to<span class="_ _14"> </span>the<span class="_ _16"> </span>user’s<span class="_ _16"> </span>buffer.<span class="_ _11"> </span>Copying<span class="_ _14"> </span>that<span class="_ _16"> </span>many<span class="_ _16"> </span>bytes<span class="_ _16"> </span>(at<span class="_ _16"> </span>least<span class="_ _14"> </span>2</div><div class="t m5 x1f3 h48 y1230 ff7 fs2c fc2 sc0 ls0 ws0">31</div><div class="t m5 x5f h2b y1231 ff7 fs1e fc2 sc0 ls0 ws0">)<span class="_ _16"> </span>will<span class="_ _16"> </span>not<span class="_ _16"> </span>actually</div><div class="t m5 x28 h2b y1232 ff7 fs1e fc2 sc0 ls0 ws0">work,<span class="_ _13"> </span>because<span class="_ _13"> </span>the<span class="_ _13"> </span>program<span class="_ _13"> </span>will<span class="_ _13"> </span>encounter<span class="_ _13"> </span>invalid<span class="_ _13"> </span>addresses<span class="_ _13"> </span>in<span class="_ _13"> </span>the<span class="_ _13"> </span>process<span class="_ _1"></span>,<span class="_"> </span>but<span class="_ _13"> </span>the<span class="_ _13"> </span>program<span class="_ _13"> </span>could<span class="_ _13"> </span>read</div><div class="t m5 x28 h2b y1233 ff7 fs1e fc2 sc0 ls0 ws0">regions<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>kernel<span class="_"> </span>memory<span class="_"> </span>for<span class="_"> </span>which<span class="_"> </span>it<span class="_"> </span>is<span class="_"> </span>not<span class="_"> </span>authorized.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
