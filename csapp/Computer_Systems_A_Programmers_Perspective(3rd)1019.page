<div id="pf3fb" class="pf w2 h11" data-page-no="3fb"><div class="pc pc3fb w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3fb.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">1018<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>12<span class="_ _3d"> </span>Concurrent<span class="_ _10"> </span>Programming</span></div><div class="t m5 x8b h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/conc/echoservers<span class="_ _1"></span>.c</div><div class="t m5 xb h88 y280 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs4e fc2">#include<span class="_ _e"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 xb h2e y35f1 ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 xb h2e y59ec ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x244 h88 ye97 ffd fs4e fc2 sc0 ls0 ws0">typedef<span class="_ _e"> </span>struct<span class="_ _f"> </span>{<span class="_ _e"> </span>/*<span class="_ _e"> </span>Represents<span class="_ _f"> </span>a<span class="_ _e"> </span>pool<span class="_ _e"> </span>of<span class="_ _f"> </span>connected<span class="_ _e"> </span>descriptors<span class="_ _e"> </span>*/</div><div class="t m5 xb h88 y59ed ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>maxfd;<span class="_ _7f"> </span>/*<span class="_ _e"> </span>Largest<span class="_ _f"> </span>descriptor<span class="_ _e"> </span>in<span class="_ _e"> </span>read_set<span class="_ _f"> </span>*/</span></div><div class="t m5 xb h88 y2827 ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _e2"> </span><span class="ffd fs4e fc2">fd_set<span class="_ _e"> </span>read_set;<span class="_ _ea"> </span>/*<span class="_ _e"> </span>Set<span class="_ _e"> </span>of<span class="_ _f"> </span>all<span class="_ _e"> </span>active<span class="_ _e"> </span>descriptors<span class="_ _f"> </span>*/</span></div><div class="t m5 xb h88 y59ee ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _e2"> </span><span class="ffd fs4e fc2">fd_set<span class="_ _e"> </span>ready_set;<span class="_ _e"> </span>/*<span class="_ _f"> </span>Subset<span class="_ _e"> </span>of<span class="_ _e"> </span>descriptors<span class="_ _f"> </span>ready<span class="_ _e"> </span>for<span class="_ _e"> </span>reading<span class="_ _ea"> </span>*/</span></div><div class="t m5 xb h88 y180c ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>nready;<span class="_ _57"> </span>/*<span class="_ _e"> </span>Number<span class="_ _e"> </span>of<span class="_ _e"> </span>ready<span class="_ _f"> </span>descriptors<span class="_ _e"> </span>from<span class="_ _e"> </span>select<span class="_ _f"> </span>*/</span></div><div class="t m5 xb h88 y59ef ff6 fs20 fc6 sc0 ls0 ws0">8<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>maxi;<span class="_ _6d"> </span>/*<span class="_ _f"> </span>High<span class="_ _e"> </span>water<span class="_ _e"> </span>index<span class="_ _f"> </span>into<span class="_ _e"> </span>client<span class="_ _e"> </span>array<span class="_ _e"> </span>*/</span></div><div class="t m5 xb h88 y59f0 ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>clientfd[FD_SETSIZE];<span class="_ _5e"> </span>/*<span class="_ _e"> </span>Set<span class="_ _e"> </span>of<span class="_ _f"> </span>active<span class="_ _e"> </span>descriptors<span class="_ _e"> </span>*/</span></div><div class="t m5 x14 h2e y59f1 ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x37 h88 y59f2 ffd fs4e fc2 sc0 ls0 ws0">rio_t<span class="_ _e"> </span>clientrio[FD_SETSIZE];<span class="_ _f"> </span>/*<span class="_ _e"> </span>Set<span class="_ _e"> </span>of<span class="_ _f"> </span>active<span class="_ _e"> </span>read<span class="_ _e"> </span>buffers<span class="_ _f"> </span>*/</div><div class="t m5 x14 h88 y59f3 ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _1c"> </span><span class="ffd fs4e fc2">}<span class="_ _e"> </span>pool;</span></div><div class="t m5 x14 h2e y59f4 ff6 fs20 fc6 sc0 ls0 ws0">12</div><div class="t m5 x14 h2e y59f5 ff6 fs20 fc6 sc0 ls0 ws0">13</div><div class="t m5 x244 h88 y59f6 ffd fs4e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>byte_cnt<span class="_ _f"> </span>=<span class="_ _e"> </span>0;<span class="_ _e"> </span>/*<span class="_ _f"> </span>Counts<span class="_ _e"> </span>total<span class="_ _e"> </span>bytes<span class="_ _f"> </span>received<span class="_ _e"> </span>by<span class="_ _e"> </span>server<span class="_ _e"> </span>*/</div><div class="t m5 x14 h2e y59f7 ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x14 h2e y7fbb ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x244 h88 y37bd ffd fs4e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(int<span class="_ _f"> </span>argc,<span class="_ _e"> </span>char<span class="_ _e"> </span>**argv)</div><div class="t m5 x14 h88 y59f8 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _1c"> </span><span class="ffd fs4e fc2">{</span></div><div class="t m5 x14 h88 y4b5d ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _e2"> </span><span class="ffd fs4e fc2">int<span class="_ _e"> </span>listenfd,<span class="_ _e"> </span>connfd;</span></div><div class="t m5 x14 h88 y59f9 ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _e2"> </span><span class="ffd fs4e fc2">socklen_t<span class="_ _e"> </span>clientlen;</span></div><div class="t m5 x14 h88 y59fa ff6 fs20 fc6 sc0 ls0 ws0">19<span class="_ _e2"> </span><span class="ffd fs4e fc2">struct<span class="_ _e"> </span>sockaddr_storage<span class="_ _e"> </span>clientaddr;</span></div><div class="t m5 x14 h88 y59fb ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _e2"> </span><span class="ffd fs4e fc2">static<span class="_ _e"> </span>pool<span class="_ _e"> </span>pool;</span></div><div class="t m5 x14 h2e y59fd ff6 fs20 fc6 sc0 ls0 ws0">21</div><div class="t m5 x14 h2e y7df0 ff6 fs20 fc6 sc0 ls0 ws0">22</div><div class="t m5 x37 h88 y59fe ffd fs4e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(argc<span class="_ _f"> </span>!=<span class="_ _e"> </span>2)<span class="_ _e"> </span>{</div><div class="t m5 x14 h88 y59ff ff6 fs20 fc6 sc0 ls0 ws0">23<span class="_ _18b"> </span><span class="ffd fs4e fc2">fprintf(stderr,<span class="_ _e"> </span>&quot;usage:<span class="_ _f"> </span>%s<span class="_ _e"> </span>&lt;port&gt;\n&quot;,<span class="_ _e"> </span>argv[0]);</span></div><div class="t m5 x14 h88 y2568 ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _18b"> </span><span class="ffd fs4e fc2">exit(0);</span></div><div class="t m5 x14 h88 y5a00 ff6 fs20 fc6 sc0 ls0 ws0">25<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x14 h88 y5a01 ff6 fs20 fc6 sc0 ls0 ws0">26<span class="_ _e2"> </span><span class="ffd fs4e fc2">listenfd<span class="_ _e"> </span>=<span class="_ _e"> </span>Open_listenfd(argv[1]);</span></div><div class="t m5 x14 h88 y301c ff6 fs20 fc6 sc0 ls0 ws0">27<span class="_ _e2"> </span><span class="ffd fs4e fc2">init_pool(listenfd,<span class="_ _e"> </span>&amp;pool);</span></div><div class="t m5 x14 h2e y7df1 ff6 fs20 fc6 sc0 ls0 ws0">28</div><div class="t m5 x14 h2e y7fbc ff6 fs20 fc6 sc0 ls0 ws0">29</div><div class="t m5 x37 h88 y5a04 ffd fs4e fc2 sc0 ls0 ws0">while<span class="_ _e"> </span>(1)<span class="_ _f"> </span>{</div><div class="t m5 x14 h88 y5a05 ff6 fs20 fc6 sc0 ls0 ws0">30<span class="_ _18b"> </span><span class="ffd fs4e fc2">/*<span class="_ _e"> </span>Wait<span class="_ _f"> </span>for<span class="_ _e"> </span>listening/connected<span class="_ _e"> </span>descriptor(s)<span class="_ _f"> </span>to<span class="_ _e"> </span>become<span class="_ _e"> </span>ready<span class="_ _e"> </span>*/</span></div><div class="t m5 x14 h88 y5a06 ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _18b"> </span><span class="ffd fs4e fc2">pool.ready_set<span class="_ _e"> </span>=<span class="_ _f"> </span>pool.read_set;</span></div><div class="t m5 x14 h88 y1dd5 ff6 fs20 fc6 sc0 ls0 ws0">32<span class="_ _18b"> </span><span class="ffd fs4e fc2">pool.nready<span class="_ _e"> </span>=<span class="_ _f"> </span>Select(pool.maxfd+1,<span class="_ _e"> </span>&amp;pool.ready_set,<span class="_ _e"> </span>NULL,<span class="_ _f"> </span>NULL,<span class="_ _e"> </span>NULL);</span></div><div class="t m5 x14 h2e y1abf ff6 fs20 fc6 sc0 ls0 ws0">33</div><div class="t m5 x14 h2e y7fbd ff6 fs20 fc6 sc0 ls0 ws0">34</div><div class="t m5 x188 h88 y296f ffd fs4e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>If<span class="_ _f"> </span>listening<span class="_ _e"> </span>descriptor<span class="_ _e"> </span>ready,<span class="_ _f"> </span>add<span class="_ _e"> </span>new<span class="_ _e"> </span>client<span class="_ _f"> </span>to<span class="_ _e"> </span>pool<span class="_ _e"> </span>*/</div><div class="t m5 x14 h88 y5a07 ff6 fs20 fc6 sc0 ls0 ws0">35<span class="_ _18b"> </span><span class="ffd fs4e fc2">if<span class="_ _e"> </span>(FD_ISSET(listenfd,<span class="_ _f"> </span>&amp;pool.ready_set))<span class="_ _e"> </span>{</span></div><div class="t m5 x14 h88 y5a08 ff6 fs20 fc6 sc0 ls0 ws0">36<span class="_ _1eb"> </span><span class="ffd fs4e fc2">clientlen<span class="_ _e"> </span>=<span class="_ _e"> </span>sizeof(struct<span class="_ _f"> </span>sockaddr_storage);</span></div><div class="t m5 x14 h88 y5a0a ff6 fs20 fc6 sc0 ls0 ws0">37<span class="_ _1eb"> </span><span class="ffd fs4e fc2">connfd<span class="_ _e"> </span>=<span class="_ _e"> </span>Accept(listenfd,<span class="_ _f"> </span>(SA<span class="_ _e"> </span>*)&amp;clientaddr,<span class="_ _e"> </span>&amp;clientlen);</span></div><div class="t m5 x14 h88 y55cc ff6 fs20 fc6 sc0 ls0 ws0">38<span class="_ _1eb"> </span><span class="ffd fs4e fc2">add_client(connfd,<span class="_ _e"> </span>&amp;pool);</span></div><div class="t m5 x14 h88 y3028 ff6 fs20 fc6 sc0 ls0 ws0">39<span class="_ _18b"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x14 h2e y55cd ff6 fs20 fc6 sc0 ls0 ws0">40</div><div class="t m5 x14 h2e y55ce ff6 fs20 fc6 sc0 ls0 ws0">41</div><div class="t m5 x188 h88 yc47 ffd fs4e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Echo<span class="_ _f"> </span>a<span class="_ _e"> </span>text<span class="_ _e"> </span>line<span class="_ _f"> </span>from<span class="_ _e"> </span>each<span class="_ _e"> </span>ready<span class="_ _f"> </span>connected<span class="_ _e"> </span>descriptor<span class="_ _e"> </span>*/</div><div class="t m5 x14 h88 y6294 ff6 fs20 fc6 sc0 ls0 ws0">42<span class="_ _18b"> </span><span class="ffd fs4e fc2">check_clients(&amp;pool);</span></div><div class="t m5 x14 h88 y6295 ff6 fs20 fc6 sc0 ls0 ws0">43<span class="_ _e2"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x14 h88 yc0 ff6 fs20 fc6 sc0 ls0 ws0">44<span class="_ _1c"> </span><span class="ffd fs4e fc2">}</span></div><div class="t m5 x8b h2c y7fbe ffa fs16 fc2 sc0 ls0 ws0">code/conc/echoservers<span class="_ _1"></span>.c</div><div class="t m5 x14 h34 y7fbf ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _11"> </span>12.8<span class="_ _c"> </span><span class="fc1">Concurrent<span class="_ _11"> </span>echo<span class="_ _16"> </span>server<span class="_ _11"> </span>based<span class="_ _16"> </span>on<span class="_ _11"> </span>I/O<span class="_ _11"> </span>multiplexing.<span class="_ _16"> </span><span class="ff6">Each<span class="_ _11"> </span>server<span class="_ _16"> </span>iteration<span class="_ _11"> </span>echoes<span class="_ _11"> </span>a<span class="_ _16"> </span>text<span class="_ _11"> </span>line</span></span></div><div class="t m5 x14 h34 y7fc0 ff6 fs16 fc1 sc0 ls0 ws0">from<span class="_ _10"> </span>each<span class="_ _11"> </span>ready<span class="_ _10"> </span>descriptor<span class="_ _1"></span>.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
