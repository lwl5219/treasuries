<div id="pf3ed" class="pf w2 h11" data-page-no="3ed"><div class="pc pc3ed w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3ed.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">1004<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>11<span class="_ _3d"> </span>Network<span class="_ _10"> </span>Programming</span></div><div class="t m5 x1b0 h2d y9c ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _20"> </span><span class="ffd fs1e fc2">else<span class="_ _e"> </span>if<span class="_ _1f"> </span>(rc<span class="_ _1f"> </span>&lt;<span class="_ _e"> </span>0)</span></div><div class="t m5 x1b0 h2d y2825 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _70"> </span><span class="ffd fs1e fc2">unix_error(&quot;inet_pton<span class="_ _e"> </span>error&quot;);</span></div><div class="t m5 x1b0 h2e y2826 ff6 fs20 fc6 sc0 ls0 ws0">18</div><div class="t m5 x1b0 h2e y6bbe ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x33 h2d y249b ffd fs1e fc2 sc0 ls0 ws0">printf(&quot;0x%x\n&quot;,<span class="_ _e"> </span>ntohs(inaddr.s_addr));</div><div class="t m5 x1b0 h2d yecd ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _20"> </span><span class="ffd fs1e fc2">exit(0);</span></div><div class="t m5 x1b0 h2d y2827 ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1ca h2c y669a ffa fs16 fc2 sc0 ls0 ws0">code/netp/global-dd2hex.c</div><div class="t m5 x1d h28 y7e92 ffe fs1e fc6 sc0 ls0 ws0">Solution<span class="_"> </span>to<span class="_"> </span>Problem<span class="_"> </span>11.4<span class="_ _e"> </span><span class="fs16">(page<span class="_"> </span>978)</span></div><div class="t m5 x1d h26 y7e93 ff7 fs19 fc1 sc0 ls0 ws0">Here’s<span class="_"> </span>a<span class="_ _16"> </span>solution.<span class="_ _11"> </span>Notice<span class="_ _16"> </span>how<span class="_ _11"> </span>much<span class="_ _11"> </span>more<span class="_ _16"> </span>difﬁcult<span class="_ _11"> </span>it<span class="_ _16"> </span>is<span class="_ _11"> </span>to<span class="_ _16"> </span>use<span class="_ _11"> </span><span class="ffd">inet_ntop</span>,<span class="_ _16"> </span>which</div><div class="t m5 x1d h26 y7e94 ff7 fs19 fc1 sc0 ls0 ws0">requires<span class="_"> </span>messy<span class="_"> </span>casting<span class="_"> </span>and<span class="_"> </span>deep<span class="_"> </span>structure<span class="_"> </span>references<span class="_ _1"></span>.<span class="_"> </span>T<span class="_ _1"></span>he<span class="_"> </span><span class="ffd">getnameinfo<span class="_ _11"> </span></span>function</div><div class="t m5 x1d h26 y7e95 ff7 fs19 fc1 sc0 ls0 ws0">is<span class="_"> </span>much<span class="_"> </span>simpler<span class="_"> </span>because<span class="_"> </span>it<span class="_"> </span>does<span class="_"> </span>all<span class="_"> </span>of<span class="_"> </span>that<span class="_"> </span>work<span class="_"> </span>for<span class="_"> </span>us<span class="_ _1"></span>.</div><div class="t m5 x16a h2c y7e96 ffa fs16 fc1 sc0 ls0 ws0">code/netp/hostinfo-ntop<span class="_ _1"></span>.c</div><div class="t m5 x5b h2d y19a5 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">#include<span class="_ _1f"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 x5b h2e y4b5d ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 x5b h2e y7e97 ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x140 h2d y7e98 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(int<span class="_ _1f"> </span>argc,<span class="_ _1f"> </span>char<span class="_ _e"> </span>**argv)</div><div class="t m5 x5b h2d y7e99 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x5b h2d y5c7b ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _20"> </span><span class="ffd fs1e fc2">struct<span class="_ _e"> </span>addrinfo<span class="_ _1f"> </span>*p,<span class="_ _1f"> </span>*listp,<span class="_ _e"> </span>hints;</span></div><div class="t m5 x5b h2d y72d4 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">struct<span class="_ _e"> </span>sockaddr_in<span class="_ _1f"> </span>*sockp;</span></div><div class="t m5 x5b h2d y7e9a ff6 fs20 fc6 sc0 ls0 ws0">7<span class="_ _20"> </span><span class="ffd fs1e fc2">char<span class="_ _e"> </span>buf[MAXLINE];</span></div><div class="t m5 x5b h2e y19b0 ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x58 h2d y7e9b ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>rc;</div><div class="t m5 x5b h2e y2657 ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 x1d3 h2e y7e9c ff6 fs20 fc6 sc0 ls0 ws0">10</div><div class="t m5 x58 h2d y2658 ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>(argc<span class="_ _1f"> </span>!=<span class="_ _1f"> </span>2)<span class="_ _e"> </span>{</div><div class="t m5 x1d3 h2d y5c7e ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _70"> </span><span class="ffd fs1e fc2">fprintf(stderr,<span class="_ _e"> </span>&quot;usage:<span class="_ _1f"> </span>%s<span class="_ _1f"> </span>&lt;domain<span class="_ _e"> </span>name&gt;\n&quot;,<span class="_ _1f"> </span>argv[0]);</span></div><div class="t m5 x1d3 h2d y7e9d ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _70"> </span><span class="ffd fs1e fc2">exit(0);</span></div><div class="t m5 x1d3 h2d y5a04 ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1d3 h2e y6bc7 ff6 fs20 fc6 sc0 ls0 ws0">14</div><div class="t m5 x1d3 h2e y7e9e ff6 fs20 fc6 sc0 ls0 ws0">15</div><div class="t m5 x58 h2d y6bc8 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Get<span class="_ _1f"> </span>a<span class="_ _1f"> </span>list<span class="_ _e"> </span>of<span class="_ _1f"> </span>addrinfo<span class="_ _e"> </span>records<span class="_ _1f"> </span>*/</div><div class="t m5 x1d3 h2d y296d ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _20"> </span><span class="ffd fs1e fc2">memset(&amp;hints,<span class="_ _e"> </span>0,<span class="_ _1f"> </span>sizeof(struct<span class="_ _1f"> </span>addrinfo));</span></div><div class="t m5 x1d3 h2d y7e9f ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _20"> </span><span class="ffd fs1e fc2">hints.ai_family<span class="_ _e"> </span>=<span class="_ _1f"> </span>AF_INET;<span class="_ _6f"> </span>/*<span class="_ _1f"> </span>IPv4<span class="_ _e"> </span>only<span class="_ _1f"> </span>*/</span></div><div class="t m5 x1d3 h2d y7ea0 ff6 fs20 fc6 sc0 ls0 ws0">18<span class="_ _20"> </span><span class="ffd fs1e fc2">hints.ai_socktype<span class="_ _e"> </span>=<span class="_ _1f"> </span>SOCK_STREAM;<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Connections<span class="_ _1f"> </span>only<span class="_ _e"> </span>*/</span></div><div class="t m5 x1d3 h2d y55c ff6 fs20 fc6 sc0 ls0 ws0">19<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>((rc<span class="_ _1f"> </span>=<span class="_ _1f"> </span>getaddrinfo(argv[1],<span class="_ _e"> </span>NULL,<span class="_ _1f"> </span>&amp;hints,<span class="_ _e"> </span>&amp;listp))<span class="_ _1f"> </span>!=<span class="_ _1f"> </span>0)<span class="_ _e"> </span>{</span></div><div class="t m5 x1d3 h2e y7ea1 ff6 fs20 fc6 sc0 ls0 ws0">20</div><div class="t m5 xc3 h2d y7ea2 ffd fs1e fc2 sc0 ls0 ws0">fprintf(stderr,<span class="_ _e"> </span>&quot;getaddrinfo<span class="_ _1f"> </span>error:<span class="_ _1f"> </span>%s\n&quot;,<span class="_ _e"> </span>gai_strerror(rc));</div><div class="t m5 x1d3 h2d y722f ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _70"> </span><span class="ffd fs1e fc2">exit(1);</span></div><div class="t m5 x1d3 h2e yc40 ff6 fs20 fc6 sc0 ls0 ws0">22</div><div class="t m5 x58 h2d y2972 ffd fs1e fc2 sc0 ls0 ws0">}</div><div class="t m5 x1d3 h2e y211a ff6 fs20 fc6 sc0 ls0 ws0">23</div><div class="t m5 x1d3 h2e y7ea3 ff6 fs20 fc6 sc0 ls0 ws0">24</div><div class="t m5 x58 h2d yc47 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Walk<span class="_ _1f"> </span>the<span class="_ _1f"> </span>list<span class="_ _e"> </span>and<span class="_ _1f"> </span>display<span class="_ _e"> </span>each<span class="_ _1f"> </span>associated<span class="_ _1f"> </span>IP<span class="_ _e"> </span>address<span class="_ _1f"> </span>*/</div><div class="t m5 x1d3 h2d y2767 ff6 fs20 fc6 sc0 ls0 ws0">25<span class="_ _20"> </span><span class="ffd fs1e fc2">for<span class="_ _e"> </span>(p<span class="_ _1f"> </span>=<span class="_ _1f"> </span>listp;<span class="_ _e"> </span>p;<span class="_ _1f"> </span>p<span class="_ _e"> </span>=<span class="_ _1f"> </span>p-&gt;ai_next)<span class="_ _1f"> </span>{</span></div><div class="t m5 x1d3 h2d y24e1 ff6 fs20 fc6 sc0 ls0 ws0">26<span class="_ _70"> </span><span class="ffd fs1e fc2">sockp<span class="_ _e"> </span>=<span class="_ _1f"> </span>(struct<span class="_ _1f"> </span>sockaddr_in<span class="_ _e"> </span>*)p-&gt;ai_addr;</span></div><div class="t m5 x1d3 h2d y543 ff6 fs20 fc6 sc0 ls0 ws0">27<span class="_ _70"> </span><span class="ffd fs1e fc2">Inet_ntop(AF_INET,<span class="_ _e"> </span>&amp;(sockp-&gt;sin_addr),<span class="_ _1f"> </span>buf,<span class="_ _1f"> </span>MAXLINE);</span></div><div class="t m5 x1d3 h2d ye14 ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _70"> </span><span class="ffd fs1e fc2">printf(&quot;%s\n&quot;,<span class="_ _e"> </span>buf);</span></div><div class="t m5 x1d3 h2d yeef ff6 fs20 fc6 sc0 ls0 ws0">29<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x1d3 h2e yd7a ff6 fs20 fc6 sc0 ls0 ws0">30</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
