<div id="pf32e" class="pf w2 h11" data-page-no="32e"><div class="pc pc32e w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg32e.png"/><div class="t m5 x1e0 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>8.5<span class="_ _60"> </span>Signals<span class="_ _3e"> </span><span class="ffe fs1e">813</span></div><div class="t m5 x25f h2c y27f ffa fs16 fc2 sc0 ls0 ws0">code/ecf/procmask1.c</div><div class="t m5 x2c h2d y280 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">/*<span class="_ _1f"> </span>WARNING:<span class="_ _e"> </span>This<span class="_ _1f"> </span>code<span class="_ _1f"> </span>is<span class="_ _e"> </span>buggy!<span class="_ _1f"> </span>*/</span></div><div class="t m5 x2c h2d y281 ff6 fs20 fc6 sc0 ls0 ws0">2<span class="_ _1c"> </span><span class="ffd fs1e fc2">void<span class="_ _1f"> </span>handler(int<span class="_ _e"> </span>sig)</span></div><div class="t m5 x2c h2d y283 ff6 fs20 fc6 sc0 ls0 ws0">3<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x2c h2d y284 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">int<span class="_ _e"> </span>olderrno<span class="_ _1f"> </span>=<span class="_ _1f"> </span>errno;</span></div><div class="t m5 x2c h2d y285 ff6 fs20 fc6 sc0 ls0 ws0">5<span class="_ _20"> </span><span class="ffd fs1e fc2">sigset_t<span class="_ _e"> </span>mask_all,<span class="_ _1f"> </span>prev_all;</span></div><div class="t m5 x2c h2d y286 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">pid_t<span class="_ _e"> </span>pid;</span></div><div class="t m5 x2c h2e y287 ff6 fs20 fc6 sc0 ls0 ws0">7</div><div class="t m5 x2c h2e y5fd1 ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x142 h2d y4493 ffd fs1e fc2 sc0 ls0 ws0">Sigfillset(&amp;mask_all);</div><div class="t m5 x2c h2d y4a9a ff6 fs20 fc6 sc0 ls0 ws0">9<span class="_ _20"> </span><span class="ffd fs1e fc2">while<span class="_ _e"> </span>((pid<span class="_ _1f"> </span>=<span class="_ _1f"> </span>waitpid(-1,<span class="_ _e"> </span>NULL,<span class="_ _1f"> </span>0))<span class="_ _e"> </span>&gt;<span class="_ _1f"> </span>0)<span class="_ _1f"> </span>{<span class="_ _e"> </span>/*<span class="_ _1f"> </span>Reap<span class="_ _e"> </span>a<span class="_ _1f"> </span>zombie<span class="_ _1f"> </span>child<span class="_ _e"> </span>*/</span></div><div class="t m5 x17 h2d y4a9b ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _70"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_BLOCK,<span class="_ _e"> </span>&amp;mask_all,<span class="_ _1f"> </span>&amp;prev_all);</span></div><div class="t m5 x17 h2d y4a9c ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _70"> </span><span class="ffd fs1e fc2">deletejob(pid);<span class="_ _e"> </span>/*<span class="_ _1f"> </span>Delete<span class="_ _1f"> </span>the<span class="_ _e"> </span>child<span class="_ _1f"> </span>from<span class="_ _e"> </span>the<span class="_ _1f"> </span>job<span class="_ _1f"> </span>list<span class="_ _e"> </span>*/</span></div><div class="t m5 x17 h2d y906 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _70"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_SETMASK,<span class="_ _e"> </span>&amp;prev_all,<span class="_ _1f"> </span>NULL);</span></div><div class="t m5 x17 h2d y4a9d ff6 fs20 fc6 sc0 ls0 ws0">13<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2d y4a9e ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _20"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>(errno<span class="_ _1f"> </span>!=<span class="_ _1f"> </span>ECHILD)</span></div><div class="t m5 x17 h2d y4a9f ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _70"> </span><span class="ffd fs1e fc2">Sio_error(&quot;waitpid<span class="_ _e"> </span>error&quot;);</span></div><div class="t m5 x17 h2d y417 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _20"> </span><span class="ffd fs1e fc2">errno<span class="_ _e"> </span>=<span class="_ _1f"> </span>olderrno;</span></div><div class="t m5 x17 h2d y4aa0 ff6 fs20 fc6 sc0 ls0 ws0">17<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2e yeb4 ff6 fs20 fc6 sc0 ls0 ws0">18</div><div class="t m5 x17 h2e y6997 ff6 fs20 fc6 sc0 ls0 ws0">19</div><div class="t m5 x2d h2d y2a2b ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(int<span class="_ _1f"> </span>argc,<span class="_ _1f"> </span>char<span class="_ _e"> </span>**argv)</div><div class="t m5 x17 h2d y1ab8 ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _1c"> </span><span class="ffd fs1e fc2">{</span></div><div class="t m5 x17 h2e y94f ff6 fs20 fc6 sc0 ls0 ws0">21</div><div class="t m5 x142 h2d y1ada ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>pid;</div><div class="t m5 x17 h2d y4aa1 ff6 fs20 fc6 sc0 ls0 ws0">22<span class="_ _20"> </span><span class="ffd fs1e fc2">sigset_t<span class="_ _e"> </span>mask_all,<span class="_ _1f"> </span>prev_all;</span></div><div class="t m5 x17 h2e y3228 ff6 fs20 fc6 sc0 ls0 ws0">23</div><div class="t m5 x17 h2e y66e1 ff6 fs20 fc6 sc0 ls0 ws0">24</div><div class="t m5 x142 h2d y35d ffd fs1e fc2 sc0 ls0 ws0">Sigfillset(&amp;mask_all);</div><div class="t m5 x17 h2e y4aa3 ff6 fs20 fc6 sc0 ls0 ws0">25</div><div class="t m5 x142 h2d y3229 ffd fs1e fc2 sc0 ls0 ws0">Signal(SIGCHLD,<span class="_ _e"> </span>handler);</div><div class="t m5 x17 h2d y2467 ff6 fs20 fc6 sc0 ls0 ws0">26<span class="_ _20"> </span><span class="ffd fs1e fc2">initjobs();<span class="_ _e"> </span>/*<span class="_ _1f"> </span>Initialize<span class="_ _1f"> </span>the<span class="_ _e"> </span>job<span class="_ _1f"> </span>list<span class="_ _e"> </span>*/</span></div><div class="t m5 x17 h2e y322b ff6 fs20 fc6 sc0 ls0 ws0">27</div><div class="t m5 x17 h2e y66e2 ff6 fs20 fc6 sc0 ls0 ws0">28</div><div class="t m5 x142 h2d y322c ffd fs1e fc2 sc0 ls0 ws0">while<span class="_ _e"> </span>(1)<span class="_ _1f"> </span>{</div><div class="t m5 x17 h2d y441 ff6 fs20 fc6 sc0 ls0 ws0">29<span class="_ _70"> </span><span class="ffd fs1e fc2">if<span class="_ _e"> </span>((pid<span class="_ _1f"> </span>=<span class="_ _1f"> </span>Fork())<span class="_ _e"> </span>==<span class="_ _1f"> </span>0)<span class="_ _e"> </span>{<span class="_ _1f"> </span>/*<span class="_ _1f"> </span>Child<span class="_ _e"> </span>process<span class="_ _1f"> </span>*/</span></div><div class="t m5 x17 h2d y2c5c ff6 fs20 fc6 sc0 ls0 ws0">30<span class="_ _d1"> </span><span class="ffd fs1e fc2">Execve(&quot;/bin/date&quot;,<span class="_ _1f"> </span>argv,<span class="_ _e"> </span>NULL);</span></div><div class="t m5 x17 h2d y322d ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _70"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2d y24a ff6 fs20 fc6 sc0 ls0 ws0">32<span class="_ _70"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_BLOCK,<span class="_ _e"> </span>&amp;mask_all,<span class="_ _1f"> </span>&amp;prev_all);<span class="_ _1f"> </span>/*<span class="_ _e"> </span>Parent<span class="_ _1f"> </span>process<span class="_ _e"> </span>*/</span></div><div class="t m5 x17 h2d y8f9 ff6 fs20 fc6 sc0 ls0 ws0">33<span class="_ _70"> </span><span class="ffd fs1e fc2">addjob(pid);<span class="_ _1a"> </span>/*<span class="_ _e"> </span>Add<span class="_ _1f"> </span>the<span class="_ _1f"> </span>child<span class="_ _e"> </span>to<span class="_ _1f"> </span>the<span class="_ _e"> </span>job<span class="_ _1f"> </span>list<span class="_ _1f"> </span>*/</span></div><div class="t m5 x17 h2d y5fd ff6 fs20 fc6 sc0 ls0 ws0">34<span class="_ _70"> </span><span class="ffd fs1e fc2">Sigprocmask(SIG_SETMASK,<span class="_ _e"> </span>&amp;prev_all,<span class="_ _1f"> </span>NULL);</span></div><div class="t m5 x17 h2d y4aa5 ff6 fs20 fc6 sc0 ls0 ws0">35<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2e y22d4 ff6 fs20 fc6 sc0 ls0 ws0">36</div><div class="t m5 x142 h2d y74d ffd fs1e fc2 sc0 ls0 ws0">exit(0);</div><div class="t m5 x17 h2d y277 ff6 fs20 fc6 sc0 ls0 ws0">37<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x25f h2c y6a09 ffa fs16 fc2 sc0 ls0 ws0">code/ecf/procmask1.c</div><div class="t m5 x17 h34 y6a0a ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _10"> </span>8.39<span class="_ _66"> </span><span class="fc1">A<span class="_"> </span>shell<span class="_ _13"> </span>program<span class="_ _10"> </span>with<span class="_ _13"> </span>a<span class="_"> </span>subtle<span class="_ _13"> </span>synchronization<span class="_"> </span>error<span class="_ _3"></span>.<span class="_ _10"> </span><span class="ff6">If<span class="_ _13"> </span>the<span class="_ _10"> </span>child<span class="_ _13"> </span>terminates<span class="_ _10"> </span>before<span class="_ _10"> </span>the<span class="_ _13"> </span>parent</span></span></div><div class="t m5 x17 h34 y6a0b ff6 fs16 fc1 sc0 ls0 ws0">is<span class="_ _10"> </span>able<span class="_ _11"> </span>to<span class="_ _10"> </span>run,<span class="_ _10"> </span>then</div><div class="t m5 x178 h3a y6a0c ffd fs19 fc1 sc0 ls0 ws0">addjob<span class="_ _10"> </span><span class="ff6 fs16">and<span class="_ _11"> </span></span>deletejob<span class="_ _10"> </span><span class="ff6 fs16">will<span class="_ _10"> </span>be<span class="_ _11"> </span>called<span class="_ _10"> </span>in<span class="_ _11"> </span>the<span class="_ _10"> </span>wrong<span class="_ _11"> </span>order<span class="_ _3"></span>.</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
