<div id="pf2e6" class="pf w2 h11" data-page-no="2e6"><div class="pc pc2e6 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg2e6.png"/><div class="t m5 x23b h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>7.12<span class="_ _60"> </span>Position-Independent<span class="_ _10"> </span>Code<span class="_ _10"> </span>(PIC)<span class="_ _3e"> </span><span class="ffe fs1e">741</span></div><div class="t m5 x58 h3f y61db ff80 fs27 fc1 sc0 ls0 ws0">Code segment </div><div class="t m5 x203 h3f y61dc ff8e fs27 fc1 sc0 ls0 ws0">Global offset table (GOT) </div><div class="t m5 x203 h3f y61dd ff80 fs27 fc1 sc0 ls0 ws0">Data segment </div><div class="t m5 x17 h3f y61de ff8e fs27 fc1 sc0 ls0 ws0">Fixed distance of</div><div class="t m5 x17 h3f y61df ff8d fs27 fc1 sc0 ls0 ws0">0x2008b9<span class="ff8e"> bytes</span></div><div class="t m5 x17 h3f y61e0 ff8e fs27 fc1 sc0 ls0 ws0">at run time</div><div class="t m5 x17 h3f y61e1 ff8e fs27 fc1 sc0 ls0 ws0">between <span class="ff8d">GOT[3]</span></div><div class="t m5 x17 h3f y61e2 ff8e fs27 fc1 sc0 ls0 ws0">and <span class="ff8d">addl</span></div><div class="t m5 x17 h3f y61e3 ff8e fs27 fc1 sc0 ls0 ws0">instruction     </div><div class="t m5 x1a9 h3f y61e4 ff8e fs27 fc1 sc0 ls0 ws0"> </div><div class="t m5 x209 h40 y61e5 ff8d fs28 fc1 sc0 ls0 ws0">GOT[0]: <span class="ff8f">…</span></div><div class="t m5 x209 h40 y61e6 ff8d fs28 fc1 sc0 ls0 ws0">GOT[1]: <span class="ff8f">…</span></div><div class="t m5 x209 h40 y61e7 ff8d fs28 fc1 sc0 ls0 ws0">GOT[2]: <span class="ff8f">…</span></div><div class="t m5 x209 h40 y61e8 ff8d fs28 fc1 sc0 ls0 ws0">GOT[3]: &amp;</div><div class="t m5 xf1 h40 y61e9 ff8d fs27 fc1 sc0 ls0 ws0">addcnt<span class="fs28"> </span></div><div class="t m5 x9b h70 y61ea ff8d fs27 fc1 sc0 ls0 ws0"> </div><div class="t m5 x4b h40 y61eb ff8d fs28 fc1 sc0 ls0 ws0">addvec:</div><div class="t m5 x4b h40 y61ec ff8d fs28 fc1 sc0 ls0 ws0">  mov 0x2008b9(%rip),% rax  # %rax=*GOT[3]=&amp;addcnt</div><div class="t m5 x4b h40 y61ed ff8d fs28 fc1 sc0 ls0 ws0">  addl $0x1,(%rax)          # addcnt++</div><div class="t m5 x17 h3a y61ee ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _16"> </span>7.18<span class="_ _66"> </span><span class="fc1">Using<span class="_ _16"> </span>the<span class="_ _16"> </span>GOT<span class="_ _11"> </span>to<span class="_ _16"> </span>reference<span class="_ _16"> </span>a<span class="_ _11"> </span>global<span class="_ _16"> </span>variable.<span class="_ _16"> </span><span class="ff6">The<span class="_ _16"> </span><span class="ffd fs19">addvec<span class="_ _11"> </span></span>routine<span class="_ _16"> </span>in</span></span></div><div class="t m5 x17 h3a y61ef ffd fs19 fc1 sc0 ls0 ws0">libvector.so<span class="_ _10"> </span><span class="ff6 fs16">references<span class="_ _11"> </span></span>addcnt<span class="_ _10"> </span><span class="ff6 fs16">indirectly<span class="_ _10"> </span>through<span class="_ _11"> </span>the<span class="_ _10"> </span>GOT<span class="_ _11"> </span>for<span class="_ _10"> </span></span>libvector.so<span class="ff6 fs16">.</span></div><div class="t m5 x17 h26 y61f0 ff7 fs19 fc1 sc0 ls0 ws0">object<span class="_ _16"> </span>modules)<span class="_ _16"> </span>in<span class="_ _16"> </span>memory<span class="_ _7"></span>,<span class="_ _14"> </span>the<span class="_ _16"> </span>data<span class="_ _16"> </span>segment<span class="_ _11"> </span>is<span class="_ _16"> </span>always<span class="_ _16"> </span>the<span class="_ _16"> </span>same<span class="_ _16"> </span>distance<span class="_ _16"> </span>from</div><div class="t m5 x17 h26 y61f1 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _13"> </span>code<span class="_ _13"> </span>segment.<span class="_"> </span>T<span class="_ _1"></span>hus<span class="_ _1"></span>,<span class="_"> </span>the<span class="_ _13"> </span><span class="ffa">distance<span class="_ _13"> </span></span>between<span class="_ _13"> </span>any<span class="_"> </span>instruction<span class="_ _13"> </span>in<span class="_ _13"> </span>the<span class="_ _13"> </span>code<span class="_"> </span>segment</div><div class="t m5 x17 h26 y61f2 ff7 fs19 fc1 sc0 ls0 ws0">and<span class="_ _11"> </span>any<span class="_ _16"> </span>variable<span class="_ _11"> </span>in<span class="_ _16"> </span>the<span class="_ _11"> </span>data<span class="_ _11"> </span>segment<span class="_ _16"> </span>is<span class="_ _11"> </span>a<span class="_ _16"> </span>run-time<span class="_ _11"> </span>constant,<span class="_ _16"> </span>independent<span class="_ _11"> </span>of<span class="_ _16"> </span>the</div><div class="t m5 x17 h26 y61f3 ff7 fs19 fc1 sc0 ls0 ws0">absolute<span class="_"> </span>memory<span class="_"> </span>locations<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>code<span class="_"> </span>and<span class="_"> </span>data<span class="_"> </span>segments<span class="_ _1"></span>.</div><div class="t m5 x26 h26 y61f4 ff7 fs19 fc1 sc0 ls0 ws0">Compilers<span class="_ _16"> </span>that<span class="_ _14"> </span>want<span class="_ _16"> </span>to<span class="_ _14"> </span>generate<span class="_ _14"> </span>PIC<span class="_ _16"> </span>references<span class="_ _14"> </span>to<span class="_ _16"> </span>global<span class="_ _14"> </span>variables<span class="_ _14"> </span>exploit</div><div class="t m5 x17 h26 y61f5 ff7 fs19 fc1 sc0 ls0 ws0">this<span class="_ _11"> </span>fact<span class="_ _11"> </span>by<span class="_ _11"> </span>creating<span class="_ _11"> </span>a<span class="_ _11"> </span>table<span class="_ _11"> </span>called<span class="_ _16"> </span>the<span class="_"> </span><span class="ffa">global<span class="_ _11"> </span>offset<span class="_ _11"> </span>table<span class="_ _16"> </span>(GO<span class="_ _3"></span>T)<span class="_"> </span><span class="ff7">at<span class="_"> </span>the<span class="_ _11"> </span>beginning</span></span></div><div class="t m5 x17 h26 y61f6 ff7 fs19 fc1 sc0 ls0 ws0">of<span class="_ _21"> </span>the<span class="_ _21"> </span>data<span class="_ _21"> </span>segment.<span class="_ _21"> </span>The<span class="_ _15"> </span>GOT<span class="_ _21"> </span>contains<span class="_ _21"> </span>an<span class="_ _21"> </span>8-byte<span class="_ _21"> </span>entry<span class="_ _f"> </span>for<span class="_ _21"> </span>each<span class="_ _21"> </span>global<span class="_ _21"> </span>data</div><div class="t m5 x17 h26 y61f7 ff7 fs19 fc1 sc0 ls0 ws0">object<span class="_ _15"> </span>(procedure<span class="_ _15"> </span>or<span class="_ _15"> </span>global<span class="_ _15"> </span>variable)<span class="_ _15"> </span>that<span class="_ _15"> </span>is<span class="_ _15"> </span>referenced<span class="_ _15"> </span>by<span class="_ _15"> </span>the<span class="_ _15"> </span>object<span class="_ _15"> </span>module.</div><div class="t m5 x17 h26 y61f8 ff7 fs19 fc1 sc0 ls0 ws0">T<span class="_ _1"></span>he<span class="_ _14"> </span>compiler<span class="_ _16"> </span>also<span class="_ _16"> </span>generates<span class="_ _14"> </span>a<span class="_ _16"> </span>relocation<span class="_ _14"> </span>record<span class="_ _16"> </span>for<span class="_ _16"> </span>each<span class="_ _14"> </span>entry<span class="_ _16"> </span>in<span class="_ _14"> </span>the<span class="_ _16"> </span>GOT<span class="_ _7"></span>.<span class="_ _14"> </span>At</div><div class="t m5 x17 h26 y61f9 ff7 fs19 fc1 sc0 ls0 ws0">load<span class="_ _16"> </span>time,<span class="_ _16"> </span>the<span class="_ _14"> </span>dynamic<span class="_ _14"> </span>linker<span class="_ _16"> </span>relocates<span class="_ _14"> </span>each<span class="_ _14"> </span>GOT<span class="_ _16"> </span>entry<span class="_ _16"> </span>so<span class="_ _14"> </span>that<span class="_ _14"> </span>it<span class="_ _14"> </span>contains<span class="_ _16"> </span>the</div><div class="t m5 x17 h26 y61fa ff7 fs19 fc1 sc0 ls0 ws0">absolute<span class="_"> </span>address<span class="_ _13"> </span>of<span class="_"> </span>the<span class="_ _13"> </span>object.<span class="_"> </span>Each<span class="_"> </span>object<span class="_ _13"> </span>module<span class="_"> </span>that<span class="_"> </span>references<span class="_ _13"> </span>global<span class="_"> </span>objects</div><div class="t m5 x17 h26 y61fb ff7 fs19 fc1 sc0 ls0 ws0">has<span class="_"> </span>its<span class="_"> </span>own<span class="_"> </span>GOT<span class="_ _7"></span>.</div><div class="t m5 x26 h26 y61fc ff7 fs19 fc1 sc0 ls0 ws0">F<span class="_ _1"></span>igure<span class="_"> </span>7.18<span class="_ _13"> </span>shows<span class="_"> </span>the<span class="_ _13"> </span>GO<span class="_ _0"></span>T<span class="_ _13"> </span>from<span class="_"> </span>our<span class="_ _13"> </span>example<span class="_ _13"> </span><span class="ffd">libvector.so<span class="_ _10"> </span></span>shared<span class="_ _13"> </span>module.</div><div class="t m5 x17 h26 y61fd ff7 fs19 fc1 sc0 lsd ws0">Th<span class="_ _2"></span>e<span class="_ _11"> </span><span class="ffd ls0">addvec<span class="_ _10"> </span><span class="ff7">routine<span class="_"> </span>loads<span class="_"> </span>the<span class="_ _13"> </span>address<span class="_"> </span>of<span class="_"> </span>the<span class="_"> </span>global<span class="_ _13"> </span>variable<span class="_"> </span></span>addcnt<span class="_ _10"> </span><span class="ff7">indirectly<span class="_"> </span>via</span></span></div><div class="t m5 x17 h26 y61fe ffd fs19 fc1 sc0 ls0 ws0">GOT[3]<span class="_ _6"> </span><span class="ff7">and<span class="_ _13"> </span>then<span class="_ _a"> </span>increments<span class="_ _13"> </span></span>addcnt<span class="_ _6"> </span><span class="ff7">in<span class="_ _6"> </span>memory<span class="_ _3"></span>.<span class="_ _13"> </span>T<span class="_ _1"></span>he<span class="_ _6"> </span>key<span class="_ _13"> </span>idea<span class="_ _a"> </span>here<span class="_ _13"> </span>is<span class="_ _6"> </span>that<span class="_ _6"> </span>the<span class="_ _13"> </span>offset</span></div><div class="t m5 x17 h26 y61ff ff7 fs19 fc1 sc0 ls0 ws0">in<span class="_"> </span>the<span class="_"> </span>PC-relative<span class="_"> </span>reference<span class="_"> </span>to<span class="_"> </span><span class="ffd">GOT[3]<span class="_ _10"> </span></span>is<span class="_"> </span>a<span class="_"> </span>run-time<span class="_"> </span>constant.</div><div class="t m5 x26 h26 y6200 ff7 fs19 fc1 sc0 ls0 ws0">Since<span class="_ _6"> </span><span class="ffd">addcnt<span class="_ _6"> </span></span>is<span class="_ _6"> </span>deﬁned<span class="_ _6"> </span>by<span class="_ _6"> </span>the<span class="_ _6"> </span><span class="ffd">libvector.so<span class="_ _13"> </span></span>module<span class="_ _1"></span>,<span class="_ _6"> </span>the<span class="_ _13"> </span>compiler<span class="_ _a"> </span>could<span class="_ _6"> </span>have</div><div class="t m5 x17 h26 y6201 ff7 fs19 fc1 sc0 ls0 ws0">exploited<span class="_ _6"> </span>the<span class="_ _13"> </span>constant<span class="_ _6"> </span>distance<span class="_ _6"> </span>between<span class="_ _13"> </span>the<span class="_ _6"> </span>code<span class="_ _6"> </span>and<span class="_ _13"> </span>data<span class="_ _6"> </span>segments<span class="_ _6"> </span>by<span class="_ _13"> </span>generating</div><div class="t m5 x17 h26 y6202 ff7 fs19 fc1 sc0 ls0 ws0">a<span class="_ _16"> </span>direct<span class="_ _14"> </span>PC-relative<span class="_ _14"> </span>reference<span class="_ _16"> </span>to<span class="_ _14"> </span><span class="ffd">addcnt<span class="_ _14"> </span></span>and<span class="_ _14"> </span>adding<span class="_ _16"> </span>a<span class="_ _14"> </span>relocation<span class="_ _14"> </span>for<span class="_ _16"> </span>the<span class="_ _14"> </span>linker</div><div class="t m5 x17 h26 y6203 ff7 fs19 fc1 sc0 ls0 ws0">to<span class="_ _14"> </span>resolve<span class="_ _14"> </span>when<span class="_ _16"> </span>it<span class="_ _14"> </span>builds<span class="_ _14"> </span>the<span class="_ _14"> </span>shared<span class="_ _14"> </span>module.<span class="_ _16"> </span>However,<span class="_ _14"> </span>if<span class="_ _14"> </span><span class="ffd">addcnt<span class="_ _14"> </span></span>were<span class="_ _14"> </span>deﬁned</div><div class="t m5 x17 h26 y6204 ff7 fs19 fc1 sc0 ls0 ws0">by<span class="_ _16"> </span>another<span class="_ _16"> </span>shared<span class="_ _16"> </span>module<span class="_ _1"></span>,<span class="_ _16"> </span>then<span class="_ _16"> </span>the<span class="_ _16"> </span>indirect<span class="_ _16"> </span>access<span class="_ _16"> </span>through<span class="_ _16"> </span>the<span class="_ _16"> </span>GOT<span class="_ _11"> </span>would<span class="_ _16"> </span>be</div><div class="t m5 x17 h26 y6205 ff7 fs19 fc1 sc0 ls0 ws0">necessary<span class="_ _3"></span>.<span class="_"> </span>In<span class="_"> </span>this<span class="_ _11"> </span>case,<span class="_"> </span>the<span class="_"> </span>compiler<span class="_ _11"> </span>has<span class="_"> </span>chosen<span class="_ _11"> </span>to<span class="_"> </span>use<span class="_ _11"> </span>the<span class="_"> </span>most<span class="_ _11"> </span>general<span class="_"> </span>solution,</div><div class="t m5 x17 h26 y6206 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_"> </span>GOT<span class="_ _7"></span>,<span class="_"> </span>for<span class="_"> </span>all<span class="_"> </span>references<span class="_ _1"></span>.</div><div class="t m5 x17 h42 y464c ff6 fs29 fc6 sc0 ls0 ws0">PIC<span class="_ _11"> </span>Function<span class="_ _16"> </span>Calls</div><div class="t m5 x17 h26 y832 ff7 fs19 fc1 sc0 ls0 ws0">Suppose<span class="_ _16"> </span>that<span class="_ _16"> </span>a<span class="_ _16"> </span>program<span class="_ _16"> </span>calls<span class="_ _16"> </span>a<span class="_ _16"> </span>function<span class="_ _16"> </span>that<span class="_ _16"> </span>is<span class="_ _16"> </span>deﬁned<span class="_ _16"> </span>by<span class="_ _16"> </span>a<span class="_ _16"> </span>shared<span class="_ _16"> </span>library<span class="_ _7"></span>.<span class="_ _16"> </span>T<span class="_ _0"></span>he</div><div class="t m5 x17 h26 y833 ff7 fs19 fc1 sc0 ls0 ws0">compiler<span class="_ _15"> </span>has<span class="_ _15"> </span>no<span class="_ _21"> </span>way<span class="_ _15"> </span>of<span class="_ _21"> </span>predicting<span class="_ _15"> </span>the<span class="_ _15"> </span>run-time<span class="_ _21"> </span>address<span class="_ _15"> </span>of<span class="_ _21"> </span>the<span class="_ _15"> </span>function,<span class="_ _f"> </span>since</div><div class="t m5 x17 h26 y834 ff7 fs19 fc1 sc0 ls0 ws0">the<span class="_ _15"> </span>shared<span class="_ _21"> </span>module<span class="_ _15"> </span>that<span class="_ _21"> </span>deﬁnes<span class="_ _15"> </span>it<span class="_ _21"> </span>could<span class="_ _21"> </span>be<span class="_ _15"> </span>loaded<span class="_ _21"> </span>anywhere<span class="_ _15"> </span>at<span class="_ _21"> </span>run<span class="_ _15"> </span>time.<span class="_ _15"> </span>T<span class="_ _1"></span>he</div><div class="t m5 x17 h26 y835 ff7 fs19 fc1 sc0 ls0 ws0">normal<span class="_ _6"> </span>approach<span class="_ _6"> </span>would<span class="_ _13"> </span>be<span class="_ _6"> </span>to<span class="_ _6"> </span>generate<span class="_ _6"> </span>a<span class="_ _13"> </span>relocation<span class="_ _6"> </span>record<span class="_ _6"> </span>for<span class="_ _6"> </span>the<span class="_ _13"> </span>reference<span class="_ _1"></span>,<span class="_ _13"> </span>which</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
