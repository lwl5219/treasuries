<div id="pf4d" class="pf w2 h11" data-page-no="4d"><div class="pc pc4d w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg4d.png"/><div class="t m5 x14 h28 y9b ffe fs1e fc2 sc0 ls0 ws0">76<span class="_ _1b"> </span><span class="ff6 fs1f">Chapter<span class="_ _10"> </span>2<span class="_ _3d"> </span>Representing<span class="_ _10"> </span>and<span class="_ _10"> </span>Manipulating<span class="_ _10"> </span>Information</span></div><div class="t m5 x29 h26 ye7 ff7 fs19 fc2 sc0 ls0 ws0">Most<span class="_ _11"> </span>64-bit<span class="_ _11"> </span>machines<span class="_ _11"> </span>can<span class="_ _11"> </span>also<span class="_ _16"> </span>run<span class="_"> </span>programs<span class="_ _16"> </span>compiled<span class="_"> </span>for<span class="_ _16"> </span>use<span class="_"> </span>on<span class="_ _16"> </span>32-bit<span class="_"> </span>ma-</div><div class="t m5 x1d h26 y2a7 ff7 fs19 fc2 sc0 ls0 ws0">chines<span class="_ _1"></span>,<span class="_ _13"> </span>a<span class="_ _6"> </span>form<span class="_ _13"> </span>of<span class="_ _a"> </span>backward<span class="_ _13"> </span>compatibility<span class="_ _7"></span>.<span class="_ _13"> </span>So<span class="_ _1"></span>,<span class="_ _13"> </span>for<span class="_ _6"> </span>example,<span class="_ _6"> </span>when<span class="_ _13"> </span>a<span class="_ _6"> </span>program<span class="_ _13"> </span><span class="ffd">prog.c</span></div><div class="t m5 x1d h26 y2a8 ff7 fs19 fc2 sc0 ls0 ws0">is<span class="_"> </span>compiled<span class="_"> </span>with<span class="_"> </span>the<span class="_"> </span>directive</div><div class="t m5 x1d h2d ya07 ffd fs1e fc2 sc0 ls0 ws0">linux&gt;<span class="_ _e"> </span><span class="ff13">gcc<span class="_ _1f"> </span>-m32<span class="_ _1f"> </span>prog.c</span></div><div class="t m5 x1d h26 ya08 ff7 fs19 fc2 sc0 ls0 ws0">then<span class="_"> </span>this<span class="_ _13"> </span>program<span class="_"> </span>will<span class="_ _13"> </span>run<span class="_"> </span>correctly<span class="_ _13"> </span>on<span class="_"> </span>either<span class="_ _13"> </span>a<span class="_"> </span>32-bit<span class="_"> </span>or<span class="_ _13"> </span>a<span class="_"> </span>64-bit<span class="_ _13"> </span>machine.<span class="_ _13"> </span>On<span class="_"> </span>the</div><div class="t m5 x1d h26 ya09 ff7 fs19 fc2 sc0 ls0 ws0">other<span class="_"> </span>hand,<span class="_"> </span>a<span class="_"> </span>program<span class="_"> </span>compiled<span class="_"> </span>with<span class="_"> </span>the<span class="_"> </span>directive</div><div class="t m5 x1d h2d ya0a ffd fs1e fc2 sc0 ls0 ws0">linux&gt;<span class="_ _e"> </span><span class="ff13">gcc<span class="_ _1f"> </span>-m64<span class="_ _1f"> </span>prog.c</span></div><div class="t m5 x1d h26 ya0b ff7 fs19 fc2 sc0 ls0 ws0">will<span class="_ _16"> </span>only<span class="_ _16"> </span>run<span class="_ _16"> </span>on<span class="_ _16"> </span>a<span class="_ _16"> </span>64-bit<span class="_ _16"> </span>machine.<span class="_ _11"> </span>W<span class="_ _1"></span>e<span class="_ _16"> </span>will<span class="_ _16"> </span>therefore<span class="_ _16"> </span>refer<span class="_ _16"> </span>to<span class="_ _16"> </span>programs<span class="_ _16"> </span>as<span class="_ _16"> </span>being</div><div class="t m5 x1d h26 ya0c ff7 fs19 fc2 sc0 ls0 ws0">either<span class="_"> </span>“32-bit<span class="_ _11"> </span>programs”<span class="_"> </span>or<span class="_ _11"> </span>“64-bit<span class="_ _11"> </span>programs<span class="_ _1"></span>,<span class="_ _1"></span>”<span class="_ _11"> </span>since<span class="_"> </span>the<span class="_ _11"> </span>distinction<span class="_ _11"> </span>lies<span class="_"> </span>in<span class="_ _11"> </span>how<span class="_ _11"> </span>a</div><div class="t m5 x1d h26 ya0d ff7 fs19 fc2 sc0 ls0 ws0">program<span class="_"> </span>is<span class="_"> </span>compiled,<span class="_"> </span>rather<span class="_"> </span>than<span class="_"> </span>the<span class="_"> </span>type<span class="_"> </span>of<span class="_"> </span>machine<span class="_"> </span>on<span class="_"> </span>which<span class="_"> </span>it<span class="_"> </span>runs<span class="_ _1"></span>.</div><div class="t m5 x29 h26 ya0e ff7 fs19 fc2 sc0 ls0 ws0">Computers<span class="_ _13"> </span>and<span class="_"> </span>compilers<span class="_ _13"> </span>support<span class="_"> </span>multiple<span class="_ _13"> </span>data<span class="_"> </span>formats<span class="_ _13"> </span>using<span class="_"> </span>different<span class="_ _13"> </span>ways</div><div class="t m5 x1d h26 ya0f ff7 fs19 fc2 sc0 ls0 ws0">to<span class="_ _16"> </span>encode<span class="_ _14"> </span>data,<span class="_ _14"> </span>such<span class="_ _16"> </span>as<span class="_ _14"> </span>integers<span class="_ _16"> </span>and<span class="_ _14"> </span>ﬂoating<span class="_ _16"> </span>point,<span class="_ _14"> </span>as<span class="_ _14"> </span>well<span class="_ _16"> </span>as<span class="_ _14"> </span>different<span class="_ _16"> </span>lengths<span class="_ _1"></span>.</div><div class="t m5 x1d h26 ya10 ff7 fs19 fc2 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_ _11"> </span>example,<span class="_ _11"> </span>many<span class="_ _16"> </span>machines<span class="_ _11"> </span>have<span class="_ _16"> </span>instructions<span class="_ _11"> </span>for<span class="_ _16"> </span>manipulating<span class="_ _16"> </span>single<span class="_ _11"> </span>bytes<span class="_ _1"></span>,<span class="_ _16"> </span>as</div><div class="t m5 x1d h26 ya11 ff7 fs19 fc2 sc0 ls0 ws0">well<span class="_ _14"> </span>as<span class="_ _15"> </span>integers<span class="_ _14"> </span>represented<span class="_ _15"> </span>as<span class="_ _15"> </span>2-,<span class="_ _15"> </span>4-,<span class="_ _21"> </span>and<span class="_ _15"> </span>8-byte<span class="_ _14"> </span>quantities<span class="_ _1"></span>.<span class="_ _15"> </span>T<span class="_ _0"></span>hey<span class="_ _14"> </span>also<span class="_ _15"> </span>support</div><div class="t m5 x1d h26 ya12 ff7 fs19 fc2 sc0 ls0 ws0">ﬂoating-point<span class="_"> </span>numbers<span class="_"> </span>represented<span class="_"> </span>as<span class="_"> </span>4-<span class="_"> </span>and<span class="_"> </span>8-byte<span class="_"> </span>quantities<span class="_ _1"></span>.</div><div class="t m5 x29 h26 ya13 ff7 fs19 fc2 sc0 ls0 ws0">T<span class="_ _1"></span>he<span class="_"> </span>C<span class="_"> </span>language<span class="_ _13"> </span>supports<span class="_"> </span>multiple<span class="_"> </span>data<span class="_"> </span>formats<span class="_ _13"> </span>for<span class="_"> </span>both<span class="_"> </span>integer<span class="_ _13"> </span>and<span class="_"> </span>ﬂoating-</div><div class="t m5 x1d h26 ya14 ff7 fs19 fc2 sc0 ls0 ws0">point<span class="_ _13"> </span>data.<span class="_ _6"> </span>Figure<span class="_ _6"> </span>2.3<span class="_ _13"> </span>shows<span class="_ _13"> </span>the<span class="_ _6"> </span>number<span class="_ _13"> </span>of<span class="_ _13"> </span>bytes<span class="_ _6"> </span>typically<span class="_ _13"> </span>allocated<span class="_ _13"> </span>for<span class="_ _6"> </span>different<span class="_ _13"> </span>C</div><div class="t m5 x1d h26 ya15 ff7 fs19 fc2 sc0 ls0 ws0">data<span class="_ _13"> </span>types<span class="_ _1"></span>.<span class="_ _13"> </span>(W<span class="_ _3"></span>e<span class="_ _13"> </span>discuss<span class="_ _13"> </span>the<span class="_ _13"> </span>relation<span class="_ _13"> </span>between<span class="_ _13"> </span>what<span class="_ _13"> </span>is<span class="_ _13"> </span>guaranteed<span class="_ _13"> </span>by<span class="_ _13"> </span>the<span class="_ _13"> </span>C<span class="_ _13"> </span>standard</div><div class="t m5 x1d h26 ya16 ff7 fs19 fc2 sc0 ls0 ws0">versus<span class="_ _11"> </span>what<span class="_ _16"> </span>is<span class="_ _11"> </span>typical<span class="_ _16"> </span>in<span class="_ _11"> </span>Section<span class="_ _16"> </span>2.2.)<span class="_ _11"> </span>T<span class="_ _0"></span>he<span class="_ _11"> </span>exact<span class="_ _16"> </span>numbers<span class="_ _11"> </span>of<span class="_ _16"> </span>bytes<span class="_ _11"> </span>for<span class="_ _11"> </span>some<span class="_ _16"> </span>data</div><div class="t m5 x1d h26 ya17 ff7 fs19 fc2 sc0 ls0 ws0">types<span class="_ _11"> </span>depends<span class="_ _11"> </span>on<span class="_ _11"> </span>how<span class="_ _11"> </span>the<span class="_ _11"> </span>program<span class="_ _11"> </span>is<span class="_ _11"> </span>compiled.<span class="_ _11"> </span>W<span class="_ _1"></span>e<span class="_"> </span>show<span class="_ _16"> </span>sizes<span class="_"> </span>for<span class="_ _11"> </span>typical<span class="_ _11"> </span>32-bit</div><div class="t m5 x1d h26 ya18 ff7 fs19 fc2 sc0 ls0 ws0">and<span class="_ _13"> </span>64-bit<span class="_ _13"> </span>programs<span class="_ _1"></span>.<span class="_"> </span>Integer<span class="_ _13"> </span>data<span class="_ _13"> </span>can<span class="_ _13"> </span>be<span class="_ _13"> </span>either<span class="_ _13"> </span><span class="ffa">signed<span class="_ _2"></span></span>,<span class="_ _13"> </span>able<span class="_ _13"> </span>to<span class="_"> </span>represent<span class="_ _13"> </span>negative<span class="_ _1"></span>,</div><div class="t m5 x1d h26 ya19 ff7 fs19 fc2 sc0 ls0 ws0">zero<span class="_ _1"></span>,<span class="_ _15"> </span>and<span class="_ _24"> </span>positive<span class="_ _16"> </span>values<span class="_ _1"></span>,<span class="_ _15"> </span>or<span class="_ _16"> </span><span class="ffa">unsigned<span class="_ _2"></span></span>,<span class="_ _14"> </span>only<span class="_ _14"> </span>allowing<span class="_ _14"> </span>nonnegative<span class="_ _16"> </span>values<span class="_ _1"></span>.<span class="_ _14"> </span>Data</div><div class="t m5 x1d h26 ya1a ff7 fs19 fc2 sc0 ls0 ws0">type<span class="_"> </span><span class="ffd">char<span class="_ _13"> </span></span>represents<span class="_"> </span>a<span class="_ _13"> </span>single<span class="_"> </span>byte<span class="_ _1"></span>.<span class="_"> </span>Although<span class="_ _13"> </span>the<span class="_"> </span>name<span class="_ _13"> </span><span class="ffd">char<span class="_ _10"> </span></span>derives<span class="_ _13"> </span>from<span class="_"> </span>the<span class="_ _13"> </span>fact</div><div class="t m5 x1d h26 ya1b ff7 fs19 fc2 sc0 ls0 ws0">that<span class="_ _13"> </span>it<span class="_"> </span>is<span class="_ _13"> </span>used<span class="_ _13"> </span>to<span class="_ _13"> </span>store<span class="_"> </span>a<span class="_ _13"> </span>single<span class="_ _13"> </span>character<span class="_ _13"> </span>in<span class="_"> </span>a<span class="_ _13"> </span>text<span class="_ _13"> </span>string,<span class="_ _13"> </span>it<span class="_ _13"> </span>can<span class="_"> </span>also<span class="_ _13"> </span>be<span class="_ _13"> </span>used<span class="_ _13"> </span>to<span class="_"> </span>store</div><div class="t m5 x1d h26 ya1c ff7 fs19 fc2 sc0 ls0 ws0">integer<span class="_ _13"> </span>values<span class="_ _3"></span>.<span class="_ _13"> </span>Data<span class="_ _13"> </span>types<span class="_ _13"> </span><span class="ffd">short</span>,<span class="_ _13"> </span><span class="ffd">int</span>,<span class="_ _13"> </span>and<span class="_ _13"> </span><span class="ffd">long<span class="_ _13"> </span></span>are<span class="_ _6"> </span>intended<span class="_ _13"> </span>to<span class="_ _13"> </span>provide<span class="_ _13"> </span>a<span class="_ _13"> </span>range<span class="_ _6"> </span>of</div><div class="t m5 x145 h31 ya1d ff7 fs21 fc2 sc0 ls0 ws0">C<span class="_"> </span>declaration<span class="_ _67"> </span>Bytes</div><div class="t m5 x1d h31 ya1e ff7 fs21 fc2 sc0 ls0 ws0">Signed<span class="_ _2d"> </span>Unsigned<span class="_ _54"> </span>32-bit<span class="_ _26"> </span>64-bit</div><div class="t m5 x1d h31 ya1f ff7 fs21 fc2 sc0 ls0 ws0">[<span class="ffd fs1e">signed</span>]<span class="_"> </span><span class="ffd fs1e">char<span class="_ _26"> </span>unsigned<span class="_ _11"> </span>char<span class="_ _68"> </span></span><span class="ls2b">11</span></div><div class="t m5 x1d h31 ya20 ffd fs1e fc2 sc0 ls0 ws0">short<span class="_ _69"> </span>unsigned<span class="_ _11"> </span>short<span class="_ _5c"> </span><span class="ff7 fs21 ls2b">22</span></div><div class="t m5 x1d h31 ya21 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _6a"> </span>unsigned<span class="_ _6b"> </span><span class="ff7 fs21 ls2b">44</span></div><div class="t m5 x1d h31 ya22 ffd fs1e fc2 sc0 ls0 ws0">long<span class="_ _43"> </span>unsigned<span class="_ _10"> </span>long<span class="_ _6c"> </span><span class="ff7 fs21 ls2b">48</span></div><div class="t m5 x1d h31 ya23 ffd fs1e fc2 sc0 ls0 ws0">int32_t<span class="_ _6d"> </span>uint32_t<span class="_ _6b"> </span><span class="ff7 fs21 ls2b">44</span></div><div class="t m5 x1d h31 ya24 ffd fs1e fc2 sc0 ls0 ws0">int64_t<span class="_ _6d"> </span>uint64_t<span class="_ _6b"> </span><span class="ff7 fs21 ls2b">88</span></div><div class="t m5 x1d h2d ya25 ffd fs1e fc2 sc0 ls0 ws0">char<span class="_ _11"> </span>*</div><div class="t m5 xbf h31 ya26 ff7 fs21 fc2 sc0 ls2b ws0">48</div><div class="t m5 x1d h31 ya27 ffd fs1e fc2 sc0 ls0 ws0">float<span class="_ _39"> </span><span class="ff7 fs21 ls2b">44</span></div><div class="t m5 x1d h2d ya28 ffd fs1e fc2 sc0 ls0 ws0">double</div><div class="t m5 xbf h31 ya29 ff7 fs21 fc2 sc0 ls2b ws0">88</div><div class="t m5 x1d h34 ya2a ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_ _6"> </span>2.3<span class="_ _c"> </span><span class="fc1">Typical<span class="_ _a"> </span>sizes<span class="_ _13"> </span>(in<span class="_ _6"> </span>bytes)<span class="_ _6"> </span>of<span class="_ _13"> </span>basic<span class="_ _6"> </span>C<span class="_ _6"> </span>data<span class="_ _13"> </span>types.<span class="_ _6"> </span><span class="ff6">The<span class="_ _6"> </span>number<span class="_ _13"> </span>of<span class="_ _6"> </span>bytes<span class="_ _6"> </span>allocated</span></span></div><div class="t m5 x1d h34 ya2b ff6 fs16 fc1 sc0 ls0 ws0">varies<span class="_ _11"> </span>with<span class="_ _11"> </span>how<span class="_ _16"> </span>the<span class="_ _11"> </span>program<span class="_ _11"> </span>is<span class="_ _11"> </span>compiled.<span class="_ _16"> </span>This<span class="_ _11"> </span>chart<span class="_ _11"> </span>shows<span class="_ _11"> </span>the<span class="_ _16"> </span>values<span class="_ _11"> </span>typical<span class="_ _11"> </span>of<span class="_ _11"> </span>32-bit</div><div class="t m5 x1d h34 ya2c ff6 fs16 fc1 sc0 ls0 ws0">and<span class="_ _10"> </span>64-bit<span class="_ _11"> </span>programs.</div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
