<div id="pf3e0" class="pf w2 h11" data-page-no="3e0"><div class="pc pc3e0 w2 h11"><img class="bi x0 y0 w1 h1" alt="" src="csapp/bg3e0.png"/><div class="t m5 x1c3 h28 y9b ff6 fs1f fc2 sc0 ls0 ws0">Section<span class="_ _10"> </span>11.5<span class="_ _60"> </span>Web<span class="_ _10"> </span>Servers<span class="_ _1b"> </span><span class="ffe fs1e">991</span></div><div class="t m5 x34 h2a y257 fff fs1c fc2 sc0 ls0 ws0">Aside<span class="_ _1b"> </span><span class="ff6 fs19">Passing<span class="_ _11"> </span>arguments<span class="_ _11"> </span>in<span class="_ _11"> </span>HTTP<span class="_ _16"> </span>POST<span class="_ _11"> </span>requests<span class="_ _11"> </span>to<span class="_ _11"> </span>CGI<span class="_ _16"> </span>programs</span></div><div class="t m5 x34 h2b y2d0 ff7 fs1e fc2 sc0 ls0 ws0">F<span class="_ _1"></span>or<span class="_ _10"> </span>POST<span class="_ _11"> </span>requests<span class="_ _1"></span>,<span class="_ _11"> </span>the<span class="_ _10"> </span>child<span class="_ _11"> </span>would<span class="_ _10"> </span>also<span class="_ _11"> </span>need<span class="_ _10"> </span>to<span class="_ _11"> </span>redirect<span class="_ _10"> </span>standard<span class="_ _11"> </span>input<span class="_ _10"> </span>to<span class="_ _11"> </span>the<span class="_ _10"> </span>connected<span class="_ _11"> </span>descriptor.</div><div class="t m5 x34 h2b y2d1 ff7 fs1e fc2 sc0 ls0 ws0">T<span class="_ _1"></span>he<span class="_"> </span>CGI<span class="_"> </span>program<span class="_"> </span>would<span class="_"> </span>then<span class="_"> </span>read<span class="_"> </span>the<span class="_"> </span>arguments<span class="_"> </span>in<span class="_"> </span>the<span class="_"> </span>request<span class="_"> </span>body<span class="_"> </span>from<span class="_"> </span>standard<span class="_"> </span>input.</div><div class="t m5 x23c h2c y7db0 ffa fs16 fc2 sc0 ls0 ws0">code/netp/tiny/cgi-bin/adder<span class="_ _3"></span>.c</div><div class="t m5 x2c h2d y7db1 ff6 fs20 fc6 sc0 ls0 ws0">1<span class="_ _1c"> </span><span class="ffd fs1e fc2">#include<span class="_ _1f"> </span>&quot;csapp.h&quot;</span></div><div class="t m5 x2c h2e y7db2 ff6 fs20 fc6 sc0 ls0 ws0">2</div><div class="t m5 x2c h2e y7db3 ff6 fs20 fc6 sc0 ls0 ws0">3</div><div class="t m5 x2d h2d y7db4 ffd fs1e fc2 sc0 ls0 ws0">int<span class="_ _e"> </span>main(void)<span class="_ _1f"> </span>{</div><div class="t m5 x2c h2d y7db5 ff6 fs20 fc6 sc0 ls0 ws0">4<span class="_ _20"> </span><span class="ffd fs1e fc2">char<span class="_ _e"> </span>*buf,<span class="_ _1f"> </span>*p;</span></div><div class="t m5 x2c h2e y7db6 ff6 fs20 fc6 sc0 ls0 ws0">5</div><div class="t m5 x142 h2d y7db7 ffd fs1e fc2 sc0 ls0 ws0">char<span class="_ _e"> </span>arg1[MAXLINE],<span class="_ _1f"> </span>arg2[MAXLINE],<span class="_ _1f"> </span>content[MAXLINE];</div><div class="t m5 x2c h2d y7db8 ff6 fs20 fc6 sc0 ls0 ws0">6<span class="_ _20"> </span><span class="ffd fs1e fc2">int<span class="_ _e"> </span>n1=0,<span class="_ _1f"> </span>n2=0;</span></div><div class="t m5 x2c h2e y7db9 ff6 fs20 fc6 sc0 ls0 ws0">7</div><div class="t m5 x2c h2e y7dba ff6 fs20 fc6 sc0 ls0 ws0">8</div><div class="t m5 x142 h2d y7dbb ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Extract<span class="_ _1f"> </span>the<span class="_ _1f"> </span>two<span class="_ _e"> </span>arguments<span class="_ _1f"> </span>*/</div><div class="t m5 x2c h2e y7dbc ff6 fs20 fc6 sc0 ls0 ws0">9</div><div class="t m5 x142 h2d y7dbd ffd fs1e fc2 sc0 ls0 ws0">if<span class="_ _e"> </span>((buf<span class="_ _1f"> </span>=<span class="_ _1f"> </span>getenv(&quot;QUERY_STRING&quot;))<span class="_ _e"> </span>!=<span class="_ _1f"> </span>NULL)<span class="_ _e"> </span>{</div><div class="t m5 x17 h2d y7dbe ff6 fs20 fc6 sc0 ls0 ws0">10<span class="_ _70"> </span><span class="ffd fs1e fc2">p<span class="_ _e"> </span>=<span class="_ _1f"> </span>strchr(buf,<span class="_ _1f"> </span>’&amp;’);</span></div><div class="t m5 x17 h2d y7dbf ff6 fs20 fc6 sc0 ls0 ws0">11<span class="_ _70"> </span><span class="ffd fs1e fc2">*p<span class="_ _e"> </span>=<span class="_ _1f"> </span>’\0’;</span></div><div class="t m5 x17 h2d y7dc0 ff6 fs20 fc6 sc0 ls0 ws0">12<span class="_ _70"> </span><span class="ffd fs1e fc2">strcpy(arg1,<span class="_ _e"> </span>buf);</span></div><div class="t m5 x17 h2e y7dc1 ff6 fs20 fc6 sc0 ls0 ws0">13</div><div class="t m5 xc5 h2d y7dc2 ffd fs1e fc2 sc0 ls0 ws0">strcpy(arg2,<span class="_ _e"> </span>p+1);</div><div class="t m5 x17 h2d y7dc3 ff6 fs20 fc6 sc0 ls0 ws0">14<span class="_ _70"> </span><span class="ffd fs1e fc2">n1<span class="_ _e"> </span>=<span class="_ _1f"> </span>atoi(arg1);</span></div><div class="t m5 x17 h2d y7dc4 ff6 fs20 fc6 sc0 ls0 ws0">15<span class="_ _70"> </span><span class="ffd fs1e fc2">n2<span class="_ _e"> </span>=<span class="_ _1f"> </span>atoi(arg2);</span></div><div class="t m5 x17 h2d y7dc5 ff6 fs20 fc6 sc0 ls0 ws0">16<span class="_ _20"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x17 h2e y7dc6 ff6 fs20 fc6 sc0 ls0 ws0">17</div><div class="t m5 x17 h2e y7dc7 ff6 fs20 fc6 sc0 ls0 ws0">18</div><div class="t m5 x142 h2d y7dc8 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Make<span class="_ _1f"> </span>the<span class="_ _1f"> </span>response<span class="_ _e"> </span>body<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2d y7dc9 ff6 fs20 fc6 sc0 ls0 ws0">19<span class="_ _20"> </span><span class="ffd fs1e fc2">sprintf(content,<span class="_ _e"> </span>&quot;QUERY_STRING=%s&quot;,<span class="_ _1f"> </span>buf);</span></div><div class="t m5 x17 h2d y7dca ff6 fs20 fc6 sc0 ls0 ws0">20<span class="_ _20"> </span><span class="ffd fs1e fc2">sprintf(content,<span class="_ _e"> </span>&quot;Welcome<span class="_ _1f"> </span>to<span class="_ _1f"> </span>add.com:<span class="_ _e"> </span>&quot;);</span></div><div class="t m5 x17 h2d y7dcb ff6 fs20 fc6 sc0 ls0 ws0">21<span class="_ _20"> </span><span class="ffd fs1e fc2">sprintf(content,<span class="_ _e"> </span>&quot;%sTHE<span class="_ _1f"> </span>Internet<span class="_ _1f"> </span>addition<span class="_ _e"> </span>portal.\r\n&lt;p&gt;&quot;,<span class="_ _1f"> </span>content);</span></div><div class="t m5 x17 h2d y7dcc ff6 fs20 fc6 sc0 ls0 ws0">22<span class="_ _20"> </span><span class="ffd fs1e fc2">sprintf(content,<span class="_ _e"> </span>&quot;%sThe<span class="_ _1f"> </span>answer<span class="_ _1f"> </span>is:<span class="_ _e"> </span>%d<span class="_ _1f"> </span>+<span class="_ _e"> </span>%d<span class="_ _1f"> </span>=<span class="_ _1f"> </span>%d\r\n&lt;p&gt;&quot;,</span></div><div class="t m5 x17 h2e y7dcd ff6 fs20 fc6 sc0 ls0 ws0">23</div><div class="t m5 x162 h2d y7dce ffd fs1e fc2 sc0 ls0 ws0">content,<span class="_ _e"> </span>n1,<span class="_ _1f"> </span>n2,<span class="_ _1f"> </span>n1<span class="_ _e"> </span>+<span class="_ _1f"> </span>n2);</div><div class="t m5 x17 h2d y7dcf ff6 fs20 fc6 sc0 ls0 ws0">24<span class="_ _20"> </span><span class="ffd fs1e fc2">sprintf(content,<span class="_ _e"> </span>&quot;%sThanks<span class="_ _1f"> </span>for<span class="_ _1f"> </span>visiting!\r\n&quot;,<span class="_ _e"> </span>content);</span></div><div class="t m5 x17 h2e y7dd0 ff6 fs20 fc6 sc0 ls0 ws0">25</div><div class="t m5 x17 h2e y7dd1 ff6 fs20 fc6 sc0 ls0 ws0">26</div><div class="t m5 x142 h2d y7dd2 ffd fs1e fc2 sc0 ls0 ws0">/*<span class="_ _e"> </span>Generate<span class="_ _1f"> </span>the<span class="_ _1f"> </span>HTTP<span class="_ _e"> </span>response<span class="_ _1f"> </span>*/</div><div class="t m5 x17 h2e y7dd3 ff6 fs20 fc6 sc0 ls0 ws0">27</div><div class="t m5 x142 h2d y7dd4 ffd fs1e fc2 sc0 ls0 ws0">printf(&quot;Connection:<span class="_ _e"> </span>close\r\n&quot;);</div><div class="t m5 x17 h2d y7dd5 ff6 fs20 fc6 sc0 ls0 ws0">28<span class="_ _20"> </span><span class="ffd fs1e fc2">printf(&quot;Content-length:<span class="_ _e"> </span>%d\r\n&quot;,<span class="_ _1f"> </span>(int)strlen(content));</span></div><div class="t m5 x17 h2d y7dd6 ff6 fs20 fc6 sc0 ls0 ws0">29<span class="_ _20"> </span><span class="ffd fs1e fc2">printf(&quot;Content-type:<span class="_ _e"> </span>text/html\r\n\r\n&quot;);</span></div><div class="t m5 x17 h2d y7dd7 ff6 fs20 fc6 sc0 ls0 ws0">30<span class="_ _20"> </span><span class="ffd fs1e fc2">printf(&quot;%s&quot;,<span class="_ _e"> </span>content);</span></div><div class="t m5 x17 h2d y7dd8 ff6 fs20 fc6 sc0 ls0 ws0">31<span class="_ _20"> </span><span class="ffd fs1e fc2">fflush(stdout);</span></div><div class="t m5 x17 h2e y7dd9 ff6 fs20 fc6 sc0 ls0 ws0">32</div><div class="t m5 x17 h2e y7dda ff6 fs20 fc6 sc0 ls0 ws0">33</div><div class="t m5 x142 h2d y7ddb ffd fs1e fc2 sc0 ls0 ws0">exit(0);</div><div class="t m5 x17 h2d y7ddc ff6 fs20 fc6 sc0 ls0 ws0">34<span class="_ _1c"> </span><span class="ffd fs1e fc2">}</span></div><div class="t m5 x23c h2c y7ddd ffa fs16 fc2 sc0 ls0 ws0">code/netp/tiny/cgi-bin/adder<span class="_ _3"></span>.c</div><div class="t m5 x17 h2f y7dde ffe fs16 fc6 sc0 ls0 ws0">Figure<span class="_"> </span>11.27<span class="_ _66"> </span><span class="fc1">CGI<span class="_"> </span>program<span class="_"> </span>that<span class="_"> </span>sums<span class="_"> </span>two<span class="_"> </span>integers.</span></div></div><div class="pi" data-data='{"ctm":[2.000000,0.000000,0.000000,2.000000,0.000000,0.000000]}'></div></div>
