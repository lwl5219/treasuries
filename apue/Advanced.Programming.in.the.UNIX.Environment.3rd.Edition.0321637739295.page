<div id="pf127" class="pf w4 h1f" data-page-no="127"><div class="pc pc127 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg127.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.12<span class="_ _238"> </span>Interpreter <span class="_"> </span>Files<span class="_ _1fb"> </span><span class="ff18">261</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">Let’s <span class="_ _23"></span>look <span class="_ _9"></span>at <span class="_ _23"></span>an <span class="_ _23"></span>example <span class="_ _9"></span>to <span class="_ _23"> </span>see <span class="_ _23"></span>what <span class="_ _9"></span>the <span class="_ _23"> </span>kernel <span class="_ _23"></span>does <span class="_ _23"></span>with <span class="_ _9"></span>the <span class="_ _23"></span>arguments <span class="_ _9"></span>to <span class="_ _23"></span>the<span class="_ _35"> </span><span class="ff1a">exec</span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">function when the ﬁle being executed is <span class="_ _2"></span>an interpreter ﬁle and the optional argument on</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">the ﬁrst <span class="_ _2"></span>line <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>interpreter ﬁle.<span class="_ _46"> </span>The <span class="_ _2"></span>program in <span class="_ _2"></span>Figur<span class="lsa30">e8<span class="_ _4f"></span><span class="ls0">.20<span class="_ _66"> </span><span class="ff1a">exec</span>s<span class="_ _66"> </span>an<span class="_ _47"> </span>interpreter ﬁle.</span></span></div><div class="t m0 x32 h4e y2259 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y225a ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/wait.h&gt;</div><div class="t m0 x32 h4e y225b ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y225c ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y225d ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y225e ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h4e y225f ff1a fs28 fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 x9d h4e y2260 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h4e y2261 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {<span class="_ _74"> </span>/* child */</span></div><div class="t m0 x9d h4e y2262 ff1a fs28 fc0 sc0 ls0 ws0">if (execl(&quot;/home/sar/bin/testinterp&quot;,</div><div class="t m0 x10d h4e y2263 ff1a fs28 fc0 sc0 ls0 ws0">&quot;testinterp&quot;, &quot;myarg1&quot;, &quot;MY ARG2&quot;, (char *)0) &lt; 0)</div><div class="t m0 x1f h4e y2264 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;execl error&quot;);</div><div class="t m0 x8a h4e y2265 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y2266 ff1a fs28 fc0 sc0 ls0 ws0">if (waitpid(pid, NULL, 0) &lt; 0)<span class="_ _d9"> </span>/* parent */</div><div class="t m0 x9d h4e y2267 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;waitpid error&quot;);</div><div class="t m0 x8a h4e y2268 ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y2269 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x108 h4f y226a ff18 fs11 fc0 sc0 ls0 ws0">Figure 8.20<span class="_ _5a"> </span><span class="ff19 lsdb">Ap<span class="_ _84"></span><span class="ls293">ro<span class="_ _2"></span><span class="ls0">gram that<span class="_"> </span><span class="ff1a">exec</span>s<span class="_"> </span>an<span class="_"> </span>interpreter ﬁle</span></span></span></div><div class="t m0 x32 h55 y226b ff19 fs2c fc0 sc0 ls0 ws0">The following <span class="_ _2"></span>shows the <span class="_ _2"></span>contents <span class="_ _2"></span>of the <span class="_ _2"></span>one-line interpreter ﬁle <span class="_ _2"></span>that <span class="_ _2"></span>is executed <span class="_ _2"></span>and <span class="_ _2"></span>the</div><div class="t m0 x32 h55 y226c ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">sult from running the pr<span class="_ _0"></span>ogram in Figur<span class="ls142">e8<span class="_ _4f"></span><span class="ls0">.20:</span></span></span></div><div class="t m0 x3f h5d y226d ff1a fs2f fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">cat /home/sar/bin/testinterp</span></div><div class="t m0 x3f h5d y226e ff1a fs2f fc0 sc0 ls0 ws0">#!/home/sar/bin/echoarg foo</div><div class="t m0 x3f h5d y226f ff1a fs2f fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h5d y2270 ff1a fs2f fc0 sc0 ls0 ws0">argv[0]: /home/sar/bin/echoarg</div><div class="t m0 x3f h5d y2271 ff1a fs2f fc0 sc0 ls0 ws0">argv[1]: foo</div><div class="t m0 x3f h5d y2272 ff1a fs2f fc0 sc0 ls0 ws0">argv[2]: /home/sar/bin/testinterp</div><div class="t m0 x3f h5d y2273 ff1a fs2f fc0 sc0 ls0 ws0">argv[3]: myarg1</div><div class="t m0 x3f h5d y2274 ff1a fs2f fc0 sc0 ls0 ws0">argv[4]: MY ARG2</div><div class="t m0 x32 h54 y2275 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _46"> </span>program<span class="_ _60"> </span><span class="ff1a">echoarg<span class="_ _60"> </span></span>(the <span class="_ _46"> </span>interpreter) <span class="_ _59"> </span>just <span class="_ _61"> </span>echoes <span class="_ _46"> </span>each <span class="_ _46"> </span>of <span class="_ _46"> </span>its <span class="_ _46"> </span>command</div><div class="t m0 x17d h55 y2276 ff19 fs2c fc0 sc0 ls0 ws0">-</div><div class="t m0 x61 h55 y2275 ff19 fs2c fc0 sc0 ls0 ws0">line</div><div class="t m0 x32 h54 y2277 ff19 fs2c fc0 sc0 ls0 ws0">arguments. <span class="_"> </span>(This<span class="_"> </span>is <span class="_ _2"></span>the program from Figur<span class="lsa31">e7<span class="_ _4f"></span><span class="ls0">.4.) <span class="_ _66"> </span>Note<span class="_ _66"> </span>that <span class="_ _2"></span>when the <span class="_ _2"></span>kernel<span class="_"> </span><span class="ff1a">exec</span><span class="lsa31">st<span class="_ _d"></span><span class="ls0">he</span></span></span></span></div><div class="t m0 x32 h54 y2278 ff19 fs2c fc0 sc0 ls0 ws0">interpreter <span class="_ _42"> </span>(<span class="ff1a">/home/sar/bin/echoarg</span>),<span class="_ _44"> </span><span class="ff1a">argv[0]<span class="_ _44"> </span></span>is <span class="_ _42"> </span>the<span class="_ _44"> </span><span class="ff1b">pathname<span class="_ _44"> </span></span>of <span class="_ _53"> </span>the <span class="_ _42"> </span>interpreter<span class="_ _6"></span>,</div><div class="t m0 x32 h54 y2279 ff1a fs2c fc0 sc0 ls0 ws0">argv[1]<span class="_ _54"> </span><span class="ff19">is <span class="_ _35"> </span>the <span class="_ _44"> </span>optional <span class="_ _44"> </span>argument <span class="_ _35"> </span>from <span class="_ _35"> </span>the <span class="_ _44"> </span>interpreter <span class="_ _35"> </span>ﬁle, <span class="_ _44"> </span>and <span class="_ _35"> </span>the <span class="_ _44"> </span>remaining</span></div><div class="t m0 x32 h54 y227a ff19 fs2c fc0 sc0 ls0 ws0">arguments ar<span class="lsa32">et<span class="_ _4f"></span><span class="ls0">he<span class="_"> </span><span class="ff1b">pathname<span class="_ _47"> </span></span>(<span class="ff1a">/home/sar/bin/testinterp</span><span class="lsa33">)a<span class="_ _4f"></span><span class="ls0">nd <span class="_ _2"></span>the <span class="_ _2"></span>second <span class="_ _2"></span>and <span class="_ _2"></span>third</span></span></span></span></div><div class="t m0 x32 h54 y227b ff19 fs2c fc0 sc0 ls0 ws0">arguments from the call to<span class="_ _66"> </span><span class="ff1a">execl<span class="_ _66"> </span></span>in <span class="_ _2"></span>the program shown in <span class="_ _2"></span>Figur<span class="lsa34">e8<span class="_ _4f"></span><span class="ls0">.20 <span class="_ _2"></span>(<span class="ff1a">myarg1<span class="_ _66"> </span></span>and<span class="_"> </span><span class="ff1a">MY</span></span></span></div><div class="t m0 x32 h54 y227c ff1a fs2c fc0 sc0 ls0 ws0">ARG2<span class="ff19">). <span class="_"> </span>Both<span class="_"> </span></span>argv[1]<span class="_ _66"> </span><span class="ff19">and<span class="_"> </span></span>argv[2]<span class="_ _80"> </span><span class="ff19">from the call to<span class="_"> </span></span>execl<span class="_ _66"> </span><span class="ff19">have been shifted <span class="_ _2"></span>right two</span></div><div class="t m0 x32 h54 y227d ff19 fs2c fc0 sc0 ls0 ws0">positions. <span class="_ _35"> </span>Note<span class="_ _35"> </span>that <span class="_ _23"></span>the <span class="_ _23"></span>kernel <span class="_ _23"></span>takes <span class="_ _23"></span>the<span class="_ _35"> </span><span class="ff1b">pathname<span class="_ _35"> </span></span>from <span class="_ _9"></span>the<span class="_ _35"> </span><span class="ff1a">execl<span class="_ _35"> </span></span>call <span class="_ _23"> </span>instead <span class="_ _23"> </span>of <span class="_ _23"> </span>the</div><div class="t m0 x32 h54 y227e ff19 fs2c fc0 sc0 ls0 ws0">ﬁrst <span class="_ _2"></span>argument (<span class="ff1a">testinterp</span>), <span class="_ _2"></span>on <span class="_ _2"></span>the <span class="_ _2"></span>assumption <span class="_ _2"></span>that <span class="_ _3"></span>the<span class="_ _66"> </span><span class="ff1b">pathname<span class="_ _47"> </span></span>might <span class="_ _2"></span>contain <span class="_ _2"></span>more</div><div class="t m0 x32 h55 y227f ff19 fs2c fc0 sc0 ls0 ws0">information than the ﬁrst argument.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
