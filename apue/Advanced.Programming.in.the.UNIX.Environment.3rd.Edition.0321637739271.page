<div id="pf10f" class="pf w4 h1f" data-page-no="10f"><div class="pc pc10f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg10f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.5<span class="_ _224"> </span><span class="ff1a">exit<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">237</span></div><div class="t m0 x41 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">signals <span class="_ _47"> </span>generated <span class="_ _47"> </span>by <span class="_ _45"> </span>the <span class="_ _47"> </span>kernel <span class="_ _47"> </span>include <span class="_ _45"> </span>the <span class="_ _47"> </span>process <span class="_ _47"> </span>refer<span class="_ _1"></span>encing <span class="_ _45"> </span>a <span class="_ _47"> </span>memory</div><div class="t m0 x41 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">location not within its address space or trying to divide by 0.</div><div class="t m0 x3f h2a y3eb ff19 fsf fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>The<span class="_ _46"> </span>last <span class="_ _47"> </span>thr<span class="_ _0"></span>ead <span class="_"> </span>responds <span class="_ _66"> </span>to <span class="_ _66"> </span>a <span class="_ _66"> </span>cancellation <span class="_ _47"> </span>r<span class="_ _0"></span>equest. <span class="_ _46"> </span>By<span class="_ _61"> </span>default, <span class="_ _66"> </span>cancellation</div><div class="t m0 x41 h2a y3ec ff19 fsf fc0 sc0 ls0 ws0">occurs <span class="_ _3"></span>in <span class="_ _9"></span>a <span class="_ _3"></span>deferred <span class="_ _3"></span>manner: <span class="_ _3"></span>one <span class="_ _9"></span>thread <span class="_ _3"></span>requests <span class="_ _2"></span>that <span class="_ _9"></span>another <span class="_ _3"></span>be <span class="_ _9"></span>canceled, <span class="_ _3"></span>and</div><div class="t m0 x41 h2a y1ad ff19 fsf fc0 sc0 ls0 ws0">sometime <span class="_ _2"></span>later <span class="_ _2"></span>the <span class="_ _2"></span>target <span class="_ _2"></span>thread terminates.<span class="_ _61"> </span><span class="ls5f">We <span class="_ _80"> </span>d<span class="_ _9"></span></span>iscuss <span class="_ _2"></span>cancellation <span class="_ _2"></span>requests <span class="_ _2"></span>in</div><div class="t m0 x41 h2a y1ae ff19 fsf fc0 sc0 ls0 ws0">detail in Sections 1<span class="_ _1"></span>1.5 and 12.7.</div><div class="t m0 x3f h2a y1fe ff19 fsf fc0 sc0 ls0 ws0">Regardless <span class="_ _9"></span>of <span class="_ _23"></span>how <span class="_ _9"></span>a <span class="_ _23"></span>process <span class="_ _9"></span>terminates, <span class="_ _23"></span>the <span class="_ _9"></span>same <span class="_ _23"></span>code <span class="_ _23"></span>in <span class="_ _9"></span>the <span class="_ _23"></span>kernel <span class="_ _23"></span>is <span class="_ _9"></span>eventually</div><div class="t m0 x32 h2a y1ff ff19 fsf fc0 sc0 ls0 ws0">executed. <span class="_ _45"> </span>This<span class="_ _45"> </span>kernel <span class="_ _23"></span>code <span class="_ _9"></span>closes <span class="_ _9"></span>all <span class="_ _23"></span>the <span class="_ _9"></span>open <span class="_ _23"></span>descriptors <span class="_ _9"></span>for <span class="_ _9"></span>the <span class="_ _23"></span>process, <span class="_ _9"></span>releases <span class="_ _3"></span>the</div><div class="t m0 x32 h2a y200 ff19 fsf fc0 sc0 ls0 ws0">memory that it was using, and so on.</div><div class="t m0 x3f h2a y322 ff19 fsf fc0 sc0 ls0 ws0">For <span class="_ _2"></span>any <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>preceding cases, <span class="_ _2"></span>we <span class="_ _2"></span>want <span class="_ _2"></span>the <span class="_ _2"></span>terminating <span class="_ _3"></span>process to <span class="_ _2"></span>be <span class="_ _2"></span>able <span class="_ _2"></span>to <span class="_ _2"></span>notify</div><div class="t m0 x32 h26 y323 ff19 fsf fc0 sc0 ls0 ws0">its <span class="_ _23"></span>parent <span class="_ _9"></span>how <span class="_ _23"> </span>it <span class="_ _23"></span>terminated.<span class="_ _51"> </span>For <span class="_ _23"></span>the <span class="_ _9"></span>three <span class="_ _23"></span>exit <span class="_ _23"></span>functions <span class="_ _23"></span>(<span class="ff1a">exit</span>,<span class="_ _45"> </span><span class="ff1a">_exit</span><span class="ls97c">,a<span class="_ _b"></span><span class="ls0">nd<span class="_ _45"> </span><span class="ff1a">_Exit</span>),</span></span></div><div class="t m0 x32 h2a y324 ff19 fsf fc0 sc0 ls0 ws0">this <span class="_ _3"></span>is <span class="_ _3"></span>done <span class="_ _3"></span>by <span class="_ _3"></span>passing <span class="_ _3"></span>an <span class="_ _3"></span>exit <span class="_ _3"></span>status <span class="_ _3"></span>as <span class="_ _3"></span>the <span class="_ _3"></span>argument <span class="_ _2"></span>to <span class="_ _3"></span>the <span class="_ _3"></span>function.<span class="_ _16"> </span>In <span class="_ _3"></span>the <span class="_ _3"></span>case <span class="_ _3"></span>of <span class="_ _3"></span>an</div><div class="t m0 x32 h2a y325 ff19 fsf fc0 sc0 ls0 ws0">abnormal <span class="_ _9"></span>termination, <span class="_ _9"></span>however<span class="_ _6"></span><span class="ls97d">,t<span class="_ _8"></span><span class="ls0">he <span class="_ _9"></span>kernel<span class="_ _9"></span><span class="ls9d">—n<span class="_ _6"></span><span class="ls0">ot <span class="_ _9"></span>the <span class="_ _9"></span>process <span class="_ _a"></span>— <span class="_ _a"></span>generates<span class="_ _45"> </span><span class="ls97e">at<span class="_ _b"></span><span class="ls0">ermination</span></span></span></span></span></span></div><div class="t m0 x32 h2a y326 ff19 fsf fc0 sc0 ls0 ws0">status to indicate <span class="_ _2"></span>the reason for the <span class="_ _2"></span>abnormal termination.<span class="_ _61"> </span>In any case, <span class="_ _2"></span>the parent of the</div><div class="t m0 x32 h26 y327 ff19 fsf fc0 sc0 ls0 ws0">process can obtain <span class="_ _2"></span>the termination <span class="_ _2"></span>status <span class="_ _2"></span>from either the<span class="_ _47"> </span><span class="ff1a">wait<span class="_ _80"> </span></span>or <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">waitpid<span class="_ _66"> </span></span>function</div><div class="t m0 x32 h2a y206 ff19 fsf fc0 sc0 ls0 ws0">(described in the next section).</div><div class="t m0 x3f h2a y1f12 ff19 fsf fc0 sc0 ls0 ws0">Note <span class="_ _3"></span>that <span class="_ _9"></span>we <span class="_ _3"></span>differentiate <span class="_ _3"></span>between <span class="_ _9"></span>the <span class="_ _3"></span>exit <span class="_ _9"></span>status, <span class="_ _3"></span>which <span class="_ _9"></span>is <span class="_ _3"></span>the <span class="_ _9"></span>argument <span class="_ _3"></span>to <span class="_ _9"></span>one <span class="_ _3"></span>of</div><div class="t m0 x32 h26 y1f79 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _3"></span>three <span class="_ _2"></span>exit <span class="_ _3"></span>functions <span class="_ _3"></span>or <span class="_ _3"></span>the <span class="_ _3"></span>return <span class="_ _3"></span>value <span class="_ _3"></span>from<span class="_ _66"> </span><span class="ff1a">main</span><span class="ls97f">,a<span class="_ _4f"></span><span class="ls0">nd <span class="_ _3"></span>the <span class="_ _3"></span>termination <span class="_ _3"></span>status.<span class="_ _16"> </span>The</span></span></div><div class="t m0 x32 h26 y1f7a ff19 fsf fc0 sc0 ls0 ws0">exit <span class="_ _23"> </span>status <span class="_ _23"> </span>is <span class="_ _23"> </span>converted <span class="_ _42"> </span>into <span class="_ _23"> </span>a <span class="_ _23"> </span>termination <span class="_ _23"> </span>status <span class="_ _42"> </span>by <span class="_ _23"></span>the <span class="_ _23"> </span>kernel <span class="_ _23"> </span>when<span class="_ _44"> </span><span class="ff1a">_exit<span class="_ _35"> </span></span>is <span class="_ _23"></span>ﬁnally</div><div class="t m0 x32 h2a y1f7b ff19 fsf fc0 sc0 ls0 ws0">called <span class="_ _3"></span>(recall <span class="_ _2"></span>Figur<span class="ls79d">e7<span class="_ _8"></span><span class="ls0">.2). <span class="_ _47"> </span>Figur<span class="ls79d">e8<span class="_ _8"></span><span class="ls0">.4 <span class="_ _3"></span>describes <span class="_ _3"></span>the <span class="_ _3"></span>various <span class="_ _3"></span>ways <span class="_ _3"></span>the <span class="_ _3"></span>parent <span class="_ _3"></span>can <span class="_ _3"></span>examine</span></span></span></span></div><div class="t m0 x32 h2a y1f7c ff19 fsf fc0 sc0 ls0 ws0">the termination <span class="_ _2"></span>status <span class="_ _2"></span>of <span class="_ _2"></span>a <span class="_ _2"></span>child.<span class="_ _46"> </span>If <span class="_ _2"></span>the <span class="_ _2"></span>child <span class="_ _2"></span>terminated <span class="_ _2"></span>normally<span class="_ _4"></span><span class="ls980">,t<span class="_ _d"></span><span class="ls0">he <span class="_ _2"></span>parent can <span class="_ _2"></span>obtain</span></span></div><div class="t m0 x32 h2a y15ef ff19 fsf fc0 sc0 ls0 ws0">the exit status of the child.</div><div class="t m0 x3f h26 y15f0 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _23"></span>we <span class="_ _9"></span>described <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">fork<span class="_ _35"> </span></span>function, <span class="_ _9"></span>it <span class="_ _23"> </span>was <span class="_ _23"></span>obvious <span class="_ _23"></span>that <span class="_ _23"></span>the <span class="_ _23"></span>child <span class="_ _9"></span>has <span class="_ _23"> </span>a <span class="_ _23"> </span>parent</div><div class="t m0 x32 h26 y15f1 ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _3"></span>after <span class="_ _3"></span>the <span class="_ _9"></span>call <span class="_ _9"></span>to<span class="_ _45"> </span><span class="ff1a">fork</span><span class="ls981">.N<span class="_ _26"></span><span class="ls0">ow <span class="_ _9"></span>we’r<span class="ls2f8">et<span class="_ _b"></span><span class="ls0">alking <span class="_ _9"></span>about <span class="_ _3"></span>returning <span class="_ _3"></span>a <span class="_ _9"></span>termination <span class="_ _9"></span>status</span></span></span></span></div><div class="t m0 x32 h2a y15f2 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _3"></span>the <span class="_ _3"></span>parent. <span class="_ _47"> </span>But<span class="_ _47"> </span>what <span class="_ _3"></span>happens <span class="_ _3"></span>if <span class="_ _9"></span>the <span class="_ _3"></span>parent <span class="_ _2"></span>terminates <span class="_ _3"></span>befor<span class="ls8a">et<span class="_ _8"></span><span class="ls0">he <span class="_ _3"></span>child?<span class="_ _16"> </span>The <span class="_ _3"></span>answer</span></span></div><div class="t m0 x32 h26 y15f3 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_"> </span>that <span class="_"> </span>the<span class="_ _46"> </span><span class="ff1a">init<span class="_ _46"> </span></span>process <span class="_"> </span>becomes <span class="_"> </span>the <span class="_"> </span>parent <span class="_"> </span>process <span class="_"> </span>of <span class="_"> </span>any <span class="_"> </span>process <span class="_"> </span>whose <span class="_"> </span>par<span class="_ _0"></span>ent</div><div class="t m0 x32 h26 y15f4 ff19 fsf fc0 sc0 ls0 ws0">terminates. <span class="_ _45"> </span>In<span class="_ _45"> </span>such <span class="_ _3"></span>a <span class="_ _9"></span>case, <span class="_ _9"></span>we <span class="_ _9"></span>say <span class="_ _9"></span>that <span class="_ _9"></span>the <span class="_ _9"></span>process <span class="_ _3"></span>has <span class="_ _9"></span>been <span class="_ _9"></span>inherited <span class="_ _9"></span>by<span class="_ _45"> </span><span class="ff1a">init</span><span class="ls982">.W<span class="_ _62"></span><span class="ls0">hat</span></span></div><div class="t m0 x32 h2a y15f5 ff19 fsf fc0 sc0 ls0 ws0">normally <span class="_ _42"> </span>happens <span class="_ _23"> </span>is <span class="_ _42"> </span>that <span class="_ _42"> </span>whenever <span class="_ _42"> </span>a <span class="_ _42"> </span>process <span class="_ _23"> </span>terminates, <span class="_ _42"> </span>the <span class="_ _42"> </span>kernel <span class="_ _42"> </span>goes <span class="_ _42"> </span>through <span class="_ _23"></span>all</div><div class="t m0 x32 h2a y1f7d ff19 fsf fc0 sc0 ls0 ws0">active <span class="_ _2"></span>processes to <span class="_ _2"></span>see <span class="_ _2"></span>whether <span class="_ _2"></span>the <span class="_ _2"></span>terminating <span class="_ _2"></span>process is <span class="_ _2"></span>the <span class="_ _2"></span>parent of <span class="_ _2"></span>any <span class="_ _2"></span>process <span class="_ _2"></span>that</div><div class="t m0 x32 h2a y1f7e ff19 fsf fc0 sc0 ls0 ws0">still <span class="_ _3"></span>exists.<span class="_ _5a"> </span>If <span class="_ _3"></span>so, <span class="_ _9"></span>the <span class="_ _3"></span>parent <span class="_ _3"></span>process <span class="_ _3"></span>ID <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>surviving <span class="_ _9"></span>process <span class="_ _2"></span>is <span class="_ _9"></span>changed <span class="_ _3"></span>to <span class="_ _9"></span>be <span class="_ _9"></span>1 <span class="_ _3"></span>(the</div><div class="t m0 x32 h26 y1f7f ff19 fsf fc0 sc0 ls0 ws0">process ID of<span class="_"> </span><span class="ff1a">init</span>). <span class="_"> </span>This<span class="_"> </span>way<span class="_ _4"></span><span class="ls44">,w<span class="_ _d"></span><span class="ls0">e’r<span class="ls44">eg<span class="_ _d"></span><span class="ls0">uaranteed that every process has a par<span class="_ _0"></span>ent.</span></span></span></span></div><div class="t m0 x3f h2a y1f80 ff19 fsf fc0 sc0 ls0 ws0">Another <span class="_ _42"> </span>condition <span class="_ _42"> </span>we <span class="_ _42"> </span>have <span class="_ _42"> </span>to <span class="_ _53"> </span>worry <span class="_ _42"> </span>about <span class="_ _42"> </span>is <span class="_ _42"> </span>when <span class="_ _42"> </span>a <span class="_ _53"> </span>child <span class="_ _42"> </span>terminates <span class="_ _42"> </span>befor<span class="ls983">ei<span class="_ _c"></span><span class="ls0">ts</span></span></div><div class="t m0 x32 h2a y1f81 ff19 fsf fc0 sc0 ls0 ws0">parent. <span class="_ _35"> </span>If<span class="_ _4b"> </span>the <span class="_ _42"> </span>child <span class="_ _53"> </span>completely <span class="_ _53"> </span>disappeared, <span class="_ _42"> </span>the <span class="_ _42"> </span>parent <span class="_ _42"> </span>wouldn’t <span class="_ _53"> </span>be <span class="_ _53"> </span>able <span class="_ _42"> </span>to <span class="_ _53"> </span>fetch <span class="_ _53"> </span>its</div><div class="t m0 x32 h2a y1f82 ff19 fsf fc0 sc0 ls0 ws0">termination <span class="_ _23"> </span>status <span class="_ _42"> </span>when <span class="_ _23"></span>and <span class="_ _23"> </span>if <span class="_ _42"> </span>the <span class="_ _23"> </span>parent <span class="_ _23"></span>was <span class="_ _23"> </span>ﬁnally <span class="_ _42"> </span>ready <span class="_ _23"></span>to <span class="_ _23"> </span>check <span class="_ _23"> </span>if <span class="_ _42"> </span>the <span class="_ _23"> </span>child <span class="_ _42"> </span>had</div><div class="t m0 x32 h2a y1f83 ff19 fsf fc0 sc0 ls0 ws0">terminated. <span class="_ _59"> </span>The<span class="_ _4b"> </span>kernel <span class="_"> </span>keeps <span class="_ _e"> </span>a <span class="_"> </span>small <span class="_ _53"> </span>amount <span class="_"> </span>of <span class="_ _e"> </span>information <span class="_"> </span>for <span class="_ _53"> </span>every <span class="_"> </span>terminating</div><div class="t m0 x32 h2a y1f84 ff19 fsf fc0 sc0 ls0 ws0">process, <span class="_ _2"></span>so <span class="_ _3"></span>that <span class="_ _3"></span>the <span class="_ _2"></span>information <span class="_ _3"></span>is <span class="_ _3"></span>available <span class="_ _3"></span>when <span class="_ _3"></span>the <span class="_ _3"></span>parent <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>terminating <span class="_ _3"></span>process</div><div class="t m0 x32 h26 yeb0 ff19 fsf fc0 sc0 ls0 ws0">calls<span class="_ _4b"> </span><span class="ff1a">wait<span class="_ _59"> </span></span>or<span class="_ _4b"> </span><span class="ff1a">waitpid</span><span class="ls984">.M<span class="_ _64"></span><span class="ls0">inimally<span class="_ _6"></span><span class="ls985">,t<span class="_ _55"></span><span class="ls0">his <span class="_ _e"> </span>information <span class="_ _e"> </span>consists <span class="_"> </span>of <span class="_ _53"> </span>the <span class="_"> </span>pr<span class="_ _1"></span>ocess <span class="_"> </span>ID, <span class="_ _53"> </span>the</span></span></span></span></div><div class="t m0 x32 h2a y219 ff19 fsf fc0 sc0 ls0 ws0">termination <span class="_ _23"> </span>status <span class="_ _42"> </span>of <span class="_ _23"> </span>the <span class="_ _42"> </span>process, <span class="_ _23"></span>and <span class="_ _23"> </span>the <span class="_ _42"> </span>amount <span class="_ _42"> </span>of <span class="_ _23"> </span>CPU <span class="_ _42"> </span>time <span class="_ _23"> </span>taken <span class="_ _42"> </span>by <span class="_ _23"> </span>the <span class="_ _42"> </span>process.</div><div class="t m0 x32 h2a y1f85 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>kernel <span class="_ _9"></span>can <span class="_ _3"></span>discar<span class="ls28c">da<span class="_ _b"></span><span class="ls0">ll <span class="_ _9"></span>the <span class="_ _9"></span>memory <span class="_ _9"></span>used <span class="_ _9"></span>by <span class="_ _9"></span>the <span class="_ _9"></span>process <span class="_ _3"></span>and <span class="_ _9"></span>close <span class="_ _9"></span>its <span class="_ _9"></span>open <span class="_ _9"></span>ﬁles.<span class="_ _16"> </span>In</span></span></div><div class="t m0 x32 h2a y1f86 ff19 fsf fc0 sc0 ls0 ws0">UNIX <span class="_ _2"></span>System <span class="_ _3"></span>terminology<span class="_ _6"></span><span class="ls986">,ap<span class="_ _8"></span><span class="ls45">ro<span class="_ _2"></span><span class="ls0">cess <span class="_ _3"></span>that <span class="_ _3"></span>has <span class="_ _3"></span>terminated, <span class="_ _3"></span>but <span class="_ _2"></span>whose <span class="_ _3"></span>parent <span class="_ _3"></span>has <span class="_ _3"></span>not <span class="_ _3"></span>yet</span></span></span></div><div class="t m0 x32 h26 y1f87 ff19 fsf fc0 sc0 ls0 ws0">waited for <span class="_ _2"></span>it, is <span class="_ _2"></span>called a<span class="_ _66"> </span><span class="ff1b">zombie</span><span class="ls987">.T<span class="_ _4a"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">ps</span></span></span></div><div class="t m0 x87 h2a y176 ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x6c h2a y1f87 ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 x1be h2a y176 ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x67 h2a y1f87 ff19 fsf fc0 sc0 ls0 ws0">command prints <span class="_ _2"></span>the state <span class="_ _2"></span>of a <span class="_ _2"></span>zombie process</div><div class="t m0 x32 h26 y1f88 ff19 fsf fc0 sc0 ls0 ws0">as<span class="_ _46"> </span><span class="ff1b">Z</span><span class="ls988">.I<span class="_ _49"></span><span class="ls0">f<span class="_ _61"> </span>we<span class="_ _46"> </span>write <span class="_"> </span>a <span class="_ _66"> </span>long-running <span class="_"> </span>program <span class="_"> </span>that<span class="_ _46"> </span><span class="ff1a">fork</span><span class="ls862">sm<span class="_ _4a"></span><span class="ls0">any <span class="_"> </span>child <span class="_ _66"> </span>processes, <span class="_"> </span>they</span></span></span></span></div><div class="t m0 x32 h2a y1f89 ff19 fsf fc0 sc0 ls0 ws0">become zombies unless we wait for them and fetch their termination status.</div><div class="t m0 x76 h51 y1f8a ff19 fs2a fc0 sc0 ls0 ws0">Some systems provide ways to pr<span class="_ _0"></span>event the creation of zombies, as we describe in Section 10.7.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
