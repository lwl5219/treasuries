<div id="pf28a" class="pf w4 h1f" data-page-no="28a"><div class="pc pc28a w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg28a.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">616<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x1f h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">sprintf(buf, &quot;error: %s\n&quot;, strerror(errno));</div><div class="t m0 x1f h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">send(clfd, buf, strlen(buf), 0);</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x1f h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">while (fgets(buf, BUFLEN, fp) != NULL)</div><div class="t m0 x1ca h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">send(clfd, buf, strlen(buf), 0);</div><div class="t m0 x1f h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">pclose(fp);</div><div class="t m0 x9d h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">close(clfd);</div><div class="t m0 x8a h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y807 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y31b6 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y31b7 ff1a fs2d fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h57 y31b8 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y31b9 ff1a fs2d fc0 sc0 ls0 ws0">struct addrinfo *ailist, *aip;</div><div class="t m0 x8a h57 y31ba ff1a fs2d fc0 sc0 ls0 ws0">struct addrinfo hint;</div><div class="t m0 x8a h57 y31bb ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>sockfd,<span class="_"> </span>err, n;</div><div class="t m0 x8a h57 y2f71 ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>*host;</div><div class="t m0 x8a h57 y351c ff1a fs2d fc0 sc0 ls0 ws0">if (argc != 1)</div><div class="t m0 x9d h57 y351d ff1a fs2d fc0 sc0 ls0 ws0">err_quit(&quot;usage: ruptimed&quot;);</div><div class="t m0 x8a h57 y351e ff1a fs2d fc0 sc0 ls0 ws0">if ((n = sysconf(_SC_HOST_NAME_MAX)) &lt; 0)</div><div class="t m0 x9d h57 y351f ff1a fs2d fc0 sc0 ls15c ws0">n=H<span class="_ _1d"></span><span class="ls0">OST_NAME_MAX; <span class="_"> </span>/*<span class="_"> </span>best guess */</span></div><div class="t m0 x8a h57 y3520 ff1a fs2d fc0 sc0 ls0 ws0">if ((host = malloc(n)) == NULL)</div><div class="t m0 x9d h57 y42b2 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;malloc error&quot;);</div><div class="t m0 x8a h57 y42b3 ff1a fs2d fc0 sc0 ls0 ws0">if (gethostname(host, n) &lt; 0)</div><div class="t m0 x9d h57 y42b4 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;gethostname error&quot;);</div><div class="t m0 x8a h57 y38bf ff1a fs2d fc0 sc0 ls0 ws0">daemonize(&quot;ruptimed&quot;);</div><div class="t m0 x8a h57 y38c0 ff1a fs2d fc0 sc0 ls0 ws0">memset(&amp;hint, 0, sizeof(hint));</div><div class="t m0 x8a h57 y38c1 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_flags = AI_CANONNAME;</div><div class="t m0 x8a h57 y42b5 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_socktype = SOCK_STREAM;</div><div class="t m0 x8a h57 y3f7e ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_canonname = NULL;</div><div class="t m0 x8a h57 y3f7f ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_addr = NULL;</div><div class="t m0 x8a h57 y3f80 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_next = NULL;</div><div class="t m0 x8a h57 y3f81 ff1a fs2d fc0 sc0 ls0 ws0">if ((err = getaddrinfo(host, &quot;ruptime&quot;, &amp;hint, &amp;ailist)) != 0) {</div><div class="t m0 x9d h57 y2f7f ff1a fs2d fc0 sc0 ls0 ws0">syslog(LOG_ERR, &quot;ruptimed: getaddrinfo error: %s&quot;,</div><div class="t m0 x76 h57 y2f80 ff1a fs2d fc0 sc0 ls0 ws0">gai_strerror(err));</div><div class="t m0 x9d h57 y3f82 ff1a fs2d fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x8a h57 y3f83 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y3f84 ff1a fs2d fc0 sc0 ls0 ws0">for (aip = ailist; aip != NULL; aip = aip-&gt;ai_next) {</div><div class="t m0 x9d h57 y3f85 ff1a fs2d fc0 sc0 ls0 ws0">if ((sockfd = initserver(SOCK_STREAM, aip-&gt;ai_addr,</div><div class="t m0 x76 h57 y3f86 ff1a fs2d fc0 sc0 ls0 ws0">aip-&gt;ai_addrlen, QLEN)) &gt;= 0) {</div><div class="t m0 x1f h57 y3f87 ff1a fs2d fc0 sc0 ls0 ws0">serve(sockfd);</div><div class="t m0 x1f h57 y3f88 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x9d h57 y3f89 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y3f8a ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y3f8b ff1a fs2d fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x32 h57 y3f8c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x14e h2d y49e8 ff18 fs10 fc0 sc0 ls0 ws0">Figure 16.17<span class="_ _5a"> </span><span class="ff19">Server program to provide system uptime</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
