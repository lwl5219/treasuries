<div id="pf181" class="pf w4 h1f" data-page-no="181"><div class="pc pc181 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg181.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.14<span class="_ _275"> </span><span class="ff1a">sigaction<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">351</span></div><div class="t m0 xf0 h51 y597 ff19 fs2a fc0 sc0 ls0 ws0">FreeBSD <span class="_"> </span>Linux <span class="_"> </span>Mac<span class="_"> </span>OS X<span class="_ _35"> </span>Solaris</div><div class="t m0 x89 h51 y598 ff19 fs2a fc0 sc0 ls0 ws0">8.0 <span class="_ _d8"> </span>3.2.0<span class="_ _1bb"> </span>10.6.8 <span class="_ _9c"> </span>10</div><div class="t m0 x2b h51 y599 ff19 fs2a fc0 sc0 ls0 ws0">Option<span class="_ _78"> </span>SUS<span class="_ _276"> </span>Description</div><div class="t m0 x21 h5e y59a ff1a fs10 fc0 sc0 ls0 ws0">SA_INTERRUPT<span class="_ _1f2"> </span><span class="ff19">•<span class="_ _277"> </span>System calls interrupted by this signal ar<span class="ls136">en<span class="_ _5"></span><span class="ls0">ot</span></span></span></div><div class="t m0 xcd h2d y59b ff19 fs10 fc0 sc0 ls0 ws0">automatically restarted (the XSI default for</div><div class="t m0 xcd h5e y59c ff1a fs10 fc0 sc0 ls0 ws0">sigaction<span class="ff19">). <span class="_"> </span>See<span class="_"> </span>Section 10.5 for more</span></div><div class="t m0 xcd h2d y59d ff19 fs10 fc0 sc0 ls0 ws0">information.</div><div class="t m0 x21 h5e y2cd3 ff1a fs10 fc0 sc0 ls0 ws0">SA_NOCLDSTOP<span class="_ _210"> </span><span class="ff19 lsb98">•• <span class="_ _1b9"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">If<span class="_"> </span><span class="ff1b">signo<span class="_"> </span></span>is<span class="_"> </span><span class="ff1a">SIGCHLD</span>,<span class="_"> </span>do<span class="_"> </span>not generate this signal</span></span></span></div><div class="t m0 xcd h2d y2cd4 ff19 fs10 fc0 sc0 ls0 ws0">when a child process stops (job contr<span class="_ _0"></span>ol). <span class="_"> </span>This</div><div class="t m0 xcd h2d y2cd5 ff19 fs10 fc0 sc0 ls0 ws0">signal is still generated, of course, when a child</div><div class="t m0 xcd h5e y2cd6 ff19 fs10 fc0 sc0 ls0 ws0">terminates (but see the<span class="_"> </span><span class="ff1a">SA_NOCLDWAIT<span class="_ _53"> </span></span>option</div><div class="t m0 xcd h2d y2cd7 ff19 fs10 fc0 sc0 ls0 ws0">below). <span class="_"> </span>When<span class="_"> </span>the XSI option is supported,</div><div class="t m0 xcd h5e y2cd8 ff1a fs10 fc0 sc0 ls0 ws0">SIGCHLD<span class="_ _53"> </span><span class="ff19">won’t be sent when a stopped child</span></div><div class="t m0 xcd h2d y2cd9 ff19 fs10 fc0 sc0 ls0 ws0">continues if this ﬂag is set.</div><div class="t m0 x21 h5e y2cda ff1a fs10 fc0 sc0 ls0 ws0">SA_NOCLDWAIT<span class="_ _210"> </span><span class="ff19 lsb98">•• <span class="_ _1b9"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">If<span class="_"> </span><span class="ff1b">signo<span class="_"> </span></span>is<span class="_"> </span><span class="ff1a">SIGCHLD</span><span class="ls136">,t<span class="_ _84"></span><span class="ls0">his option prevents the</span></span></span></span></span></div><div class="t m0 xcd h2d y2cdb ff19 fs10 fc0 sc0 ls0 ws0">system from cr<span class="_ _0"></span>eating zombie processes when</div><div class="t m0 xcd h2d y2cdc ff19 fs10 fc0 sc0 ls0 ws0">children of the calling pr<span class="_ _0"></span>ocess terminate.<span class="_ _35"> </span>If it</div><div class="t m0 xcd h5e y2cdd ff19 fs10 fc0 sc0 ls0 ws0">subsequently calls<span class="_"> </span><span class="ff1a">wait</span><span class="ls136">,t<span class="_ _84"></span><span class="ls0">he calling process</span></span></div><div class="t m0 xcd h2d y2cde ff19 fs10 fc0 sc0 ls0 ws0">blocks until all its child processes have</div><div class="t m0 xcd h5e y2cdf ff19 fs10 fc0 sc0 ls0 ws0">terminated and then returns<span class="_"> </span><span class="ff20">−</span><span class="ls136">1w<span class="_ _5"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _e"> </span></span>set</span></span></div><div class="t m0 xcd h5e y2ce0 ff19 fs10 fc0 sc0 ls0 ws0">to<span class="_"> </span><span class="ff1a">ECHILD</span><span class="lsc68">.(<span class="_ _43"></span><span class="ls0">Recall Section 10.7.)</span></span></div><div class="t m0 x21 h5e y2ce1 ff1a fs10 fc0 sc0 ls0 ws0">SA_NODEFER<span class="_ _129"> </span><span class="ff19 lsb98">•• <span class="_ _252"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">When this signal is caught, the signal is not</span></span></span></div><div class="t m0 xcd h2d y2ce2 ff19 fs10 fc0 sc0 ls0 ws0">automatically blocked by the system while the</div><div class="t m0 xcd h2d y2ce3 ff19 fs10 fc0 sc0 ls0 ws0">signal-catching function executes (unless the</div><div class="t m0 xcd h5e y2ce4 ff19 fs10 fc0 sc0 ls0 ws0">signal is also included in<span class="_"> </span><span class="ff1a">sa_mask</span>). <span class="_"> </span>Note<span class="_"> </span>that</div><div class="t m0 xcd h2d y2ce5 ff19 fs10 fc0 sc0 ls0 ws0">this type of operation corresponds to the earlier</div><div class="t m0 xcd h2d y2ce6 ff19 fs10 fc0 sc0 ls0 ws0">unreliable signals.</div><div class="t m0 x21 h5e y2ce7 ff1a fs10 fc0 sc0 ls0 ws0">SA_ONSTACK<span class="_ _28"> </span><span class="ff19">XSI <span class="_ _68"> </span>•<span class="_ _268"> </span><span class="ls22b">•• <span class="_ _a7"></span>•<span class="_ _9e"></span><span class="ls0">If an alternative stack has been declared with</span></span></span></div><div class="t m0 xcd h5e y2ce8 ff1a fs10 fc0 sc0 ls0 ws0">sigaltstack</div><div class="t m0 x1dc h2d y2ce9 ff19 fs10 fc0 sc0 ls0 ws0">(</div><div class="t m0 x1e9 h2d y2ce8 ff19 fs10 fc0 sc0 ls0 ws0">2</div><div class="t m0 x12d h2d y2ce9 ff19 fs10 fc0 sc0 ls0 ws0">)</div><div class="t m0 x195 h2d y2ce8 ff19 fs10 fc0 sc0 ls136 ws0">,t<span class="_ _84"></span><span class="ls0">his signal is delivered to the</span></div><div class="t m0 xcd h2d y2cea ff19 fs10 fc0 sc0 ls0 ws0">process on the alternative stack.</div><div class="t m0 x21 h5e y2ceb ff1a fs10 fc0 sc0 ls0 ws0">SA_RESETHAND<span class="_ _210"> </span><span class="ff19 lsb98">•• <span class="_ _1b9"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">The disposition for this signal is reset to</span></span></span></div><div class="t m0 xcd h5e y2cec ff1a fs10 fc0 sc0 ls0 ws0">SIG_DFL<span class="ff19 ls136">,a<span class="_ _84"></span><span class="ls0">nd the<span class="_"> </span><span class="ff1a">SA_SIGINFO<span class="_ _53"> </span></span>ﬂag is cleared</span></span></div><div class="t m0 xcd h2d y2ced ff19 fs10 fc0 sc0 ls0 ws0">on entry to the signal-catching function.<span class="_ _35"> </span>Note</div><div class="t m0 xcd h2d y2cee ff19 fs10 fc0 sc0 ls0 ws0">that this type of operation corresponds to the</div><div class="t m0 xcd h2d y2cef ff19 fs10 fc0 sc0 ls0 ws0">earlier unreliable signals.<span class="_ _35"> </span>The disposition for</div><div class="t m0 xcd h5e y2cf0 ff19 fs10 fc0 sc0 ls0 ws0">the two signals<span class="_"> </span><span class="ff1a">SIGILL<span class="_ _53"> </span></span>and<span class="_"> </span><span class="ff1a">SIGTRAP<span class="_ _e"> </span></span>can’t be</div><div class="t m0 xcd h2d y2cf1 ff19 fs10 fc0 sc0 ls21d ws0">re<span class="ls0">set automatically<span class="_ _6"></span><span class="ls136">,h<span class="_ _84"></span><span class="ls0">owever<span class="_ _1"></span><span class="lsc68">.S<span class="_ _43"></span><span class="ls0">etting this ﬂag</span></span></span></span></span></div><div class="t m0 xcd h5e y2cf2 ff19 fs10 fc0 sc0 ls0 ws0">can optionally cause<span class="_"> </span><span class="ff1a">sigaction<span class="_ _53"> </span></span>to behave as if</div><div class="t m0 xcd h5e y2cf3 ff1a fs10 fc0 sc0 ls0 ws0">SA_NODEFER<span class="_ _53"> </span><span class="ff19">is also set.</span></div><div class="t m0 x21 h5e y2cf4 ff1a fs10 fc0 sc0 ls0 ws0">SA_RESTART<span class="_ _129"> </span><span class="ff19 lsb98">•• <span class="_ _252"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">System calls interrupted by this signal are</span></span></span></div><div class="t m0 xcd h2d y2cf5 ff19 fs10 fc0 sc0 ls0 ws0">automatically restarted. <span class="_"> </span>(Refer<span class="_"> </span>to Section 10.5.)</div><div class="t m0 x21 h5e y2cf6 ff1a fs10 fc0 sc0 ls0 ws0">SA_SIGINFO<span class="_ _129"> </span><span class="ff19 lsb98">•• <span class="_ _252"></span>•<span class="_ _61"> </span><span class="lsb99">••<span class="_ _261"></span><span class="ls0">This option provides additional information to a</span></span></span></div><div class="t m0 xcd h5e y2cf7 ff19 fs10 fc0 sc0 ls0 ws0">signal handler: a pointer to a<span class="_"> </span><span class="ff1a">siginfo<span class="_ _53"> </span></span>structure</div><div class="t m0 xcd h2d y2cf8 ff19 fs10 fc0 sc0 ls0 ws0">and a pointer to an identiﬁer for the process</div><div class="t m0 xcd h2d y2cf9 ff19 fs10 fc0 sc0 ls0 ws0">context.</div><div class="t m0 x6 h4f y2cfa ff18 fs11 fc0 sc0 ls0 ws0">Figure 10.16<span class="_ _5a"> </span><span class="ff19">Option ﬂags (<span class="ff1a">sa_flags</span><span class="lsdb">)f<span class="_ _84"></span><span class="ls0">or the handling of each signal</span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
