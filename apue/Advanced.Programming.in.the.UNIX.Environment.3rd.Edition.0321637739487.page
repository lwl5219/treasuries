<div id="pf1e7" class="pf w4 h1f" data-page-no="1e7"><div class="pc pc1e7 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1e7.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.8<span class="_ _298"> </span>Threads <span class="_"> </span>and <span class="_"> </span>Signals<span class="_ _1fb"> </span><span class="ff18">453</span></div><div class="t m0 x76 h51 y2a3 ff19 fs2a fc0 sc0 ls0 ws0">Several <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>functions <span class="_ _3"></span>listed <span class="_ _2"></span>in <span class="_ _3"></span>Figur<span class="lsf0c">e1<span class="_ _d"></span><span class="ls0">2.15, <span class="_ _3"></span>such <span class="_ _3"></span>as <span class="_ _3"></span>the <span class="_ _2"></span>ones <span class="_ _3"></span>dealing <span class="_ _3"></span>with <span class="_ _3"></span>message <span class="_ _3"></span>catalogs</span></span></div><div class="t m0 x76 h51 y2a4 ff19 fs2a fc0 sc0 ls0 ws0">and wide character sets, ar<span class="lse9">en<span class="_ _5"></span><span class="ls0">ot discussed further in this text.</span></span></div><div class="t m0 x3f h2a y3858 ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _9"></span>your <span class="_ _9"></span>application <span class="_ _9"></span>doesn’t <span class="_ _3"></span>call <span class="_ _9"></span>one <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>functions <span class="_ _9"></span>in <span class="_ _9"></span>Figur<span class="lsf0d">e1<span class="_ _b"></span><span class="ls0">2.14 <span class="_ _9"></span>or <span class="_ _9"></span>Figur<span class="lsf0d">e1<span class="_ _b"></span><span class="ls0">2.15</span></span></span></span></div><div class="t m0 x32 h2a y3859 ff19 fsf fc0 sc0 ls0 ws0">for <span class="_"> </span>a <span class="_"> </span>long <span class="_ _e"> </span>period <span class="_"> </span>of <span class="_"> </span>time <span class="_"> </span>(if <span class="_ _e"> </span>it <span class="_"> </span>is <span class="_"> </span>compute <span class="_"> </span>bound, <span class="_ _e"> </span>for <span class="_"> </span>example), <span class="_"> </span>then <span class="_"> </span>you <span class="_ _e"> </span>can <span class="_"> </span>call</div><div class="t m0 x32 h26 y385a ff1a fsf fc0 sc0 ls0 ws0">pthread_testcancel<span class="_ _80"> </span><span class="ff19">to add your own cancellation points to the program.</span></div><div class="t m0 x3f h57 y385b ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y385c ff1a fs2d fc0 sc0 ls0 ws0">void pthread_testcancel(void);</div><div class="t m0 x3f h4d y385d ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _9"></span>you <span class="_ _23"></span>call<span class="_ _45"> </span><span class="ff1a">pthread_testcancel</span>,<span class="_ _35"> </span>if<span class="_ _45"> </span>a<span class="_ _45"> </span>cancellation <span class="_ _23"></span>request <span class="_ _9"></span>is <span class="_ _23"></span>pending <span class="_ _9"></span>and <span class="_ _23"></span>if</div><div class="t m0 x32 h49 y385e ff19 fs26 fc0 sc0 ls0 ws0">cancellation <span class="_ _23"> </span>has <span class="_ _42"> </span>not <span class="_ _42"> </span>been <span class="_ _23"> </span>disabled, <span class="_ _42"> </span>the <span class="_ _42"> </span>thr<span class="_ _0"></span>ead <span class="_ _23"> </span>will <span class="_ _42"> </span>be <span class="_ _42"> </span>canceled.<span class="_ _51"> </span>When <span class="_ _42"> </span>cancellation <span class="_ _23"> </span>is</div><div class="t m0 x32 h4d y385f ff19 fs26 fc0 sc0 ls0 ws0">disabled, however<span class="_ _6"></span><span class="lsd3">,c<span class="_ _5"></span><span class="ls0">alls to<span class="_"> </span><span class="ff1a">pthread_testcancel<span class="_ _80"> </span></span>have no effect.</span></span></div><div class="t m0 x3f h4a y3860 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _35"> </span>default <span class="_ _35"> </span>cancellation <span class="_ _44"> </span>type <span class="_ _35"> </span>we <span class="_ _35"> </span>have <span class="_ _35"> </span>been <span class="_ _44"> </span>describing <span class="_ _35"> </span>is <span class="_ _35"> </span>known <span class="_ _44"> </span>as<span class="_ _51"> </span><span class="ff1b">deferred</span></div><div class="t m0 x32 h4d y3861 ff1b fs26 fc0 sc0 ls0 ws0">cancellation<span class="ff19 lsf0e">.A<span class="_ _5d"></span><span class="ls0">fter <span class="_"> </span>a <span class="_"> </span>call <span class="_ _e"> </span>to<span class="_ _59"> </span><span class="ff1a">pthread_cancel</span><span class="lsf0f">,t<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>actual <span class="_"> </span>cancellation <span class="_ _e"> </span>doesn’t <span class="_"> </span>occur</span></span></span></span></div><div class="t m0 x32 h49 y3862 ff19 fs26 fc0 sc0 ls0 ws0">until the thread hits <span class="_ _2"></span>a cancellation point.<span class="_ _61"> </span><span class="ls164">We <span class="_ _53"> </span>c<span class="_ _23"></span></span>an change the cancellation <span class="_ _2"></span>type by <span class="_ _2"></span>calling</div><div class="t m0 x32 h4d y3863 ff1a fs26 fc0 sc0 ls0 ws0">pthread_setcanceltype<span class="ff19">.</span></div><div class="t m0 x3f h4e y3864 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h4e y3865 ff1a fs28 fc0 sc0 ls0 ws0">int pthread_setcanceltype(int<span class="_"> </span><span class="ff1b">type</span><span class="ls1b6">,i<span class="_ _1d"></span><span class="ls0">nt *<span class="ff1b">oldtype</span>);</span></span></div><div class="t m0 x78 h7c y3866 ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h54 y3867 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _5a"> </span><span class="ff1a">pthread_setcanceltype<span class="_"> </span></span>function <span class="_ _47"> </span>sets <span class="_ _45"> </span>the <span class="_ _45"> </span>cancellation <span class="_ _45"> </span>type <span class="_ _45"> </span>to<span class="_ _16"> </span><span class="ff1b">type<span class="_ _5a"> </span></span>(either</div><div class="t m0 x32 h54 y3868 ff1a fs2c fc0 sc0 ls0 ws0">PTHREAD_CANCEL_DEFERRED<span class="_ _47"> </span><span class="ff19">or<span class="_ _66"> </span></span>PTHREAD_CANCEL_ASYNCHRONOUS<span class="ff19 lsf10">)a<span class="_ _4f"></span><span class="ls0">nd <span class="_ _3"></span>returns <span class="_ _2"></span>the</span></span></div><div class="t m0 x32 h60 y3869 ff19 fs2c fc0 sc0 ls0 ws0">previous type in the integer pointed to by<span class="_"> </span><span class="ff1b">oldtype</span>.</div><div class="t m0 x3f h55 y386a ff19 fs2c fc0 sc0 ls0 ws0">Asynchronous <span class="_ _2"></span>cancellation <span class="_ _3"></span>differs <span class="_ _3"></span>from <span class="_ _2"></span>deferred <span class="_ _2"></span>cancellation <span class="_ _9"></span>in <span class="_ _3"></span>that <span class="_ _3"></span>the <span class="_ _3"></span>thread <span class="_ _2"></span>can</div><div class="t m0 x32 h55 y386b ff19 fs2c fc0 sc0 ls0 ws0">be <span class="_ _2"></span>canceled <span class="_ _3"></span>at <span class="_ _3"></span>any <span class="_ _3"></span>time.<span class="_ _16"> </span>The <span class="_ _3"></span>thread <span class="_ _2"></span>doesn’t <span class="_ _3"></span>necessarily <span class="_ _3"></span>need <span class="_ _2"></span>to <span class="_ _3"></span>hit <span class="_ _3"></span>a <span class="_ _3"></span>cancellation <span class="_ _3"></span>point</div><div class="t m0 x32 h55 y386c ff19 fs2c fc0 sc0 ls0 ws0">for it to be canceled.</div><div class="t m0 x35 h99 y386d ff16 fs3b fc0 sc0 ls0 ws0">12.8 <span class="_ _93"> </span>Threads<span class="_ _54"> </span>and <span class="_"> </span>Signals</div><div class="t m0 x32 h55 y386e ff19 fs2c fc0 sc0 ls0 ws0">Dealing <span class="_ _4b"> </span>with <span class="_ _4b"> </span>signals <span class="_ _4b"> </span>can <span class="_ _59"> </span>be <span class="_ _4b"> </span>complicated <span class="_ _4b"> </span>even <span class="_ _4b"> </span>with <span class="_ _4b"> </span>a <span class="_ _59"> </span>process-based <span class="_ _44"> </span>paradigm.</div><div class="t m0 x32 h55 y386f ff19 fs2c fc0 sc0 ls0 ws0">Introducing thr<span class="_ _0"></span>eads into the pictur<span class="_ _0"></span><span class="ls142">em<span class="_ _d"></span><span class="ls0">akes things even mor<span class="ls142">ec<span class="_ _d"></span><span class="ls0">omplicated.</span></span></span></span></div><div class="t m0 x3f h55 y3870 ff19 fs2c fc0 sc0 ls0 ws0">Each <span class="_ _53"> </span>thread <span class="_ _42"> </span>has <span class="_ _53"> </span>its <span class="_ _e"> </span>own <span class="_ _53"> </span>signal <span class="_ _53"> </span>mask, <span class="_ _53"> </span>but <span class="_ _53"> </span>the <span class="_ _53"> </span>signal <span class="_ _e"> </span>disposition <span class="_ _53"> </span>is <span class="_ _53"> </span>shared <span class="_ _53"> </span>by <span class="_ _53"> </span>all</div><div class="t m0 x32 h55 y3871 ff19 fs2c fc0 sc0 ls0 ws0">threads <span class="_ _53"> </span>in <span class="_ _53"> </span>the <span class="_"> </span>pr<span class="_ _1"></span>ocess. <span class="_ _59"> </span>As<span class="_ _4b"> </span><span class="lsf11">ac<span class="_ _55"></span><span class="ls0">onsequence, <span class="_ _e"> </span>individual <span class="_ _e"> </span>threads <span class="_ _53"> </span>can <span class="_ _e"> </span>block <span class="_ _e"> </span>signals, <span class="_ _53"> </span>but</span></span></div><div class="t m0 x32 h55 y3872 ff19 fs2c fc0 sc0 ls0 ws0">when <span class="_ _9"></span>a <span class="_ _9"></span>thread <span class="_ _3"></span>modiﬁes <span class="_ _9"></span>the <span class="_ _9"></span>action <span class="_ _9"></span>associated <span class="_ _9"></span>with <span class="_ _9"></span>a <span class="_ _9"></span>given <span class="_ _9"></span>signal, <span class="_ _9"></span>all <span class="_ _9"></span>threads <span class="_ _3"></span>shar<span class="lsf12">et<span class="_ _b"></span><span class="ls0">he</span></span></div><div class="t m0 x32 h55 y3873 ff19 fs2c fc0 sc0 ls0 ws0">action. <span class="_ _45"> </span>Thus,<span class="_ _35"> </span>if <span class="_ _23"></span>one <span class="_ _9"></span>thread <span class="_ _23"></span>chooses <span class="_ _23"></span>to <span class="_ _9"></span>ignor<span class="lsf13">eag<span class="_ _b"></span><span class="ls0">iven <span class="_ _9"></span>signal, <span class="_ _23"></span>another <span class="_ _23"></span>thr<span class="_ _0"></span>ead <span class="_ _23"></span>can <span class="_ _9"></span>undo</span></span></div><div class="t m0 x32 h55 y3874 ff19 fs2c fc0 sc0 ls0 ws0">that <span class="_ _42"> </span>choice <span class="_ _42"> </span>by <span class="_ _42"> </span>restoring <span class="_ _23"> </span>the <span class="_ _42"> </span>default <span class="_ _42"> </span>disposition <span class="_ _42"> </span>or <span class="_ _53"> </span>installing <span class="_ _42"> </span>a <span class="_ _42"> </span>signal <span class="_ _42"> </span>handler <span class="_ _42"> </span>for <span class="_ _42"> </span>that</div><div class="t m0 x32 h55 y3875 ff19 fs2c fc0 sc0 ls0 ws0">signal.</div><div class="t m0 x3f h55 y3876 ff19 fs2c fc0 sc0 ls0 ws0">Signals <span class="_ _9"></span>ar<span class="lsf14">ed<span class="_ _b"></span><span class="ls0">eliver<span class="_ _0"></span>ed <span class="_ _9"></span>to <span class="_ _23"> </span>a <span class="_ _23"></span>single <span class="_ _9"></span>thread <span class="_ _23"></span>in <span class="_ _9"></span>the <span class="_ _23"></span>process. <span class="_ _45"> </span>If<span class="_ _45"> </span>the <span class="_ _23"></span>signal <span class="_ _23"></span>is <span class="_ _9"></span>related <span class="_ _9"></span>to <span class="_ _23"> </span>a</span></span></div><div class="t m0 x32 h55 y3877 ff19 fs2c fc0 sc0 ls0 ws0">hardwar<span class="_ _0"></span><span class="lsf15">ef<span class="_ _b"></span><span class="ls0">ault, <span class="_ _9"></span>the <span class="_ _9"></span>signal <span class="_ _9"></span>is <span class="_ _9"></span>usually <span class="_ _23"></span>sent <span class="_ _9"></span>to <span class="_ _9"></span>the <span class="_ _9"></span>thread <span class="_ _9"></span>whose <span class="_ _9"></span>action <span class="_ _23"></span>caused <span class="_ _9"></span>the <span class="_ _9"></span>event.</span></span></div><div class="t m0 x32 h55 y3878 ff19 fs2c fc0 sc0 ls0 ws0">Other signals, on the other hand, ar<span class="ls142">ed<span class="_ _4f"></span><span class="ls0">elivered to an arbitrary thread.</span></span></div><div class="t m0 x3f h54 y3879 ff19 fs2c fc0 sc0 ls0 ws0">In Section <span class="_ _2"></span>10.12, we <span class="_ _2"></span>discussed <span class="_ _2"></span>how processes can <span class="_ _2"></span>use <span class="_ _2"></span>the<span class="_"> </span><span class="ff1a">sigprocmask<span class="_ _66"> </span></span>function <span class="_ _2"></span>to</div><div class="t m0 x32 h54 y387a ff19 fs2c fc0 sc0 ls0 ws0">block <span class="_ _3"></span>signals <span class="_ _2"></span>from <span class="_ _3"></span>delivery<span class="_ _4"></span><span class="lsf16">.H<span class="_ _5b"></span><span class="ls0">owever<span class="_ _6"></span><span class="lsf17">,t<span class="_ _4f"></span><span class="ls0">he <span class="_ _3"></span>behavior <span class="_ _3"></span>of<span class="_ _47"> </span><span class="ff1a">sigprocmask<span class="_ _47"> </span></span>is <span class="_ _3"></span>undeﬁned <span class="_ _3"></span>in <span class="_ _3"></span>a</span></span></span></span></div><div class="t m0 x32 h54 y387b ff19 fs2c fc0 sc0 ls0 ws0">multithreaded pr<span class="_ _0"></span>ocess. <span class="_"> </span>Thr<span class="_ _0"></span>eads have to use the<span class="_"> </span><span class="ff1a">pthread_sigmask<span class="_ _80"> </span></span>function instead.</div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892842px;bottom:500.241030px;width:160.044601px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
