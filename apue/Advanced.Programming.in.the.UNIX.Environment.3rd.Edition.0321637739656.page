<div id="pf290" class="pf w4 h1f" data-page-no="290"><div class="pc pc290 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg290.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">622<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Example <span class="_ _84"></span>â€” <span class="_ _84"></span>Connectionless<span class="_"> </span>Ser <span class="_ _d"></span>ver</div><div class="t m0 x32 h26 y3a24 ff19 fsf fc0 sc0 ls0 ws0">The program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _d"></span><span class="ls0">6.20 is the datagram version of the<span class="_"> </span><span class="ff1a">uptime<span class="_ _80"> </span></span>server<span class="_ _1"></span>.</span></span></div><div class="t m0 x32 h4e y4b6 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4b7 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x32 h4e y4a50 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h4e y4b8 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;syslog.h&gt;</div><div class="t m0 x32 h4e y4b9 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y4a51 ff1a fs28 fc0 sc0 ls0 ws0">#define BUFLEN<span class="_ _189"> </span>128</div><div class="t m0 x32 h4e y4a52 ff1a fs28 fc0 sc0 ls0 ws0">#define MAXADDRLEN<span class="_ _d9"> </span>256</div><div class="t m0 x32 h4e y4a53 ff1a fs28 fc0 sc0 ls0 ws0">#ifndef HOST_NAME_MAX</div><div class="t m0 x32 h4e y4a54 ff1a fs28 fc0 sc0 ls0 ws0">#define HOST_NAME_MAX 256</div><div class="t m0 x32 h4e y4a55 ff1a fs28 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h4e y4a56 ff1a fs28 fc0 sc0 ls0 ws0">extern int initserver(int, const struct sockaddr *, socklen_t, int);</div><div class="t m0 x32 h4e y4a57 ff1a fs28 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h4e y4a58 ff1a fs28 fc0 sc0 ls0 ws0">serve(int sockfd)</div><div class="t m0 x32 h4e y4a59 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4a5a ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>n;</div><div class="t m0 x8a h4e y4a5b ff1a fs28 fc0 sc0 ls0 ws0">socklen_t <span class="_ _189"> </span>alen;</div><div class="t m0 x8a h4e y4a5c ff1a fs28 fc0 sc0 ls0 ws0">FILE <span class="_ _bd"> </span>*fp;</div><div class="t m0 x8a h4e y4a5d ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>buf[BUFLEN];</div><div class="t m0 x8a h4e y4a5e ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>abuf[MAXADDRLEN];</div><div class="t m0 x8a h4e y4a5f ff1a fs28 fc0 sc0 ls0 ws0">struct sockaddr *addr = (struct sockaddr *)abuf;</div><div class="t m0 x8a h4e y4a60 ff1a fs28 fc0 sc0 ls0 ws0">set_cloexec(sockfd);</div><div class="t m0 x8a h4e y4a61 ff1a fs28 fc0 sc0 ls0 ws0">for (;;) {</div><div class="t m0 x9d h4e y4a62 ff1a fs28 fc0 sc0 ls0 ws0">alen = MAXADDRLEN;</div><div class="t m0 x9d h4e y4a63 ff1a fs28 fc0 sc0 ls0 ws0">if ((n = recvfrom(sockfd, buf, BUFLEN, 0, addr, &amp;alen)) &lt; 0) {</div><div class="t m0 x1f h4e y4a64 ff1a fs28 fc0 sc0 ls0 ws0">syslog(LOG_ERR, &quot;ruptimed: recvfrom error: %s&quot;,</div><div class="t m0 xae h4e y4a65 ff1a fs28 fc0 sc0 ls0 ws0">strerror(errno));</div><div class="t m0 x1f h4e y4a66 ff1a fs28 fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x9d h4e y4a67 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y4a68 ff1a fs28 fc0 sc0 ls0 ws0">if ((fp = popen(&quot;/usr/bin/uptime&quot;, &quot;r&quot;)) == NULL) {</div><div class="t m0 x1f h4e y4a69 ff1a fs28 fc0 sc0 ls0 ws0">sprintf(buf, &quot;error: %s\n&quot;, strerror(errno));</div><div class="t m0 x1f h4e y4a6a ff1a fs28 fc0 sc0 ls0 ws0">sendto(sockfd, buf, strlen(buf), 0, addr, alen);</div><div class="t m0 x9d h4e y4a6b ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x1f h4e y4a6c ff1a fs28 fc0 sc0 ls0 ws0">if (fgets(buf, BUFLEN, fp) != NULL)</div><div class="t m0 x1ca h4e y4a6d ff1a fs28 fc0 sc0 ls0 ws0">sendto(sockfd, buf, strlen(buf), 0, addr, alen);</div><div class="t m0 x1f h4e y4a6e ff1a fs28 fc0 sc0 ls0 ws0">pclose(fp);</div><div class="t m0 x9d h4e y4a6f ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y4a70 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y4a71 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y4a72 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4a73 ff1a fs28 fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h4e y4a74 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4a75 ff1a fs28 fc0 sc0 ls0 ws0">struct addrinfo *ailist, *aip;</div><div class="t m0 x8a h4e y4a76 ff1a fs28 fc0 sc0 ls0 ws0">struct addrinfo hint;</div><div class="t m0 x8a h4e y4a77 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>sockfd,<span class="_"> </span>err, n;</div><div class="t m0 x8a h4e y4a78 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>*host;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
