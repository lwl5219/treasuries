<div id="pf1e8" class="pf w4 h1f" data-page-no="1e8"><div class="pc pc1e8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1e8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">454<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;signal.h&gt;</div><div class="t m0 x3f h57 y19f8 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_sigmask(int<span class="_"> </span><span class="ff1b">how</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">onst sigset_t *restrict<span class="_"> </span><span class="ff1b">set</span>,</span></span></div><div class="t m0 xa8 h57 y35ad ff1a fs2d fc0 sc0 ls0 ws0">sigset_t *restrict<span class="_"> </span><span class="ff1b">oset</span>);</div><div class="t m0 x78 h5f y35ae ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x3f h4d y387c ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_ _60"> </span><span class="ff1a">pthread_sigmask<span class="_ _60"> </span></span>function <span class="_ _59"> </span>is <span class="_ _46"> </span>identical <span class="_ _46"> </span>to<span class="_ _60"> </span><span class="ff1a">sigprocmask</span><span class="lsf18">,e<span class="_ _5d"></span><span class="ls0">xcept <span class="_ _59"> </span>that</span></span></div><div class="t m0 x32 h4d y387d ff1a fs26 fc0 sc0 ls0 ws0">pthread_sigmask<span class="_ _47"> </span><span class="ff19">works <span class="_ _2"></span>with <span class="_ _3"></span>threads <span class="_ _2"></span>and <span class="_ _3"></span>returns <span class="_ _2"></span>an <span class="_ _3"></span>error <span class="_ _2"></span>code <span class="_ _3"></span>on <span class="_ _3"></span>failur<span class="lsf19">ei<span class="_ _8"></span><span class="ls0">nstead <span class="_ _3"></span>of</span></span></span></div><div class="t m0 x32 h4d y387e ff19 fs26 fc0 sc0 ls0 ws0">setting<span class="_ _47"> </span><span class="ff1a">errno<span class="_ _66"> </span></span>and <span class="_ _3"></span>returning<span class="_ _47"> </span><span class="ff20">−</span>1. <span class="_ _66"> </span>Recall<span class="_ _47"> </span>that <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1b">set<span class="_ _47"> </span></span>argument contains <span class="_ _3"></span>the <span class="_ _3"></span>set <span class="_ _2"></span>of <span class="_ _3"></span>signals</div><div class="t m0 x32 h4a y387f ff19 fs26 fc0 sc0 ls0 ws0">that the <span class="_ _2"></span>thread will use <span class="_ _2"></span>to modify <span class="_ _2"></span>its signal <span class="_ _2"></span>mask.<span class="_ _46"> </span>The<span class="_ _66"> </span><span class="ff1b">how<span class="_ _66"> </span></span>argument can <span class="_ _2"></span>take on <span class="_ _2"></span>one <span class="_ _2"></span>of</div><div class="t m0 x32 h4d y3880 ff19 fs26 fc0 sc0 ls0 ws0">three <span class="_ _45"> </span>values:<span class="_ _51"> </span><span class="ff1a">SIG_BLOCK<span class="_"> </span></span>to <span class="_ _35"> </span>add <span class="_ _45"> </span>the <span class="_ _35"> </span>set <span class="_ _35"> </span>of <span class="_ _45"> </span>signals <span class="_ _35"> </span>to <span class="_ _35"> </span>the <span class="_ _45"> </span>thread’s <span class="_ _45"> </span>signal <span class="_ _35"> </span>mask,</div><div class="t m0 x32 h4d y3881 ff1a fs26 fc0 sc0 ls0 ws0">SIG_SETMASK<span class="_ _48"> </span><span class="ff19">to <span class="_ _4b"> </span>replace <span class="_ _59"> </span>the <span class="_ _4b"> </span>thread’s <span class="_ _4b"> </span>signal <span class="_ _59"> </span>mask <span class="_ _59"> </span>with <span class="_ _4b"> </span>the <span class="_ _59"> </span>set <span class="_ _59"> </span>of <span class="_ _4b"> </span>signals, <span class="_ _59"> </span>or</span></div><div class="t m0 x32 h4d y3882 ff1a fs26 fc0 sc0 ls0 ws0">SIG_UNBLOCK<span class="_ _35"> </span><span class="ff19">to <span class="_ _23"> </span>remove <span class="_ _23"> </span>the <span class="_ _42"> </span>set <span class="_ _23"> </span>of <span class="_ _42"> </span>signals <span class="_ _23"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>thread’s <span class="_ _23"></span>signal <span class="_ _23"> </span>mask.<span class="_ _54"> </span>If <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1b">oset</span></span></div><div class="t m0 x32 h4d y3883 ff19 fs26 fc0 sc0 ls0 ws0">argument <span class="_ _53"> </span>is <span class="_"> </span>not <span class="_ _e"> </span>null, <span class="_"> </span>the <span class="_ _53"> </span>thread’s <span class="_ _e"> </span>previous <span class="_ _e"> </span>signal <span class="_"> </span>mask <span class="_ _53"> </span>is <span class="_"> </span>stor<span class="_ _0"></span>ed <span class="_ _e"> </span>in <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1a">sigset_t</span></div><div class="t m0 x32 h4a y3884 ff19 fs26 fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>e<span class="_ _45"> </span>to<span class="_ _47"> </span>which <span class="_ _9"></span>it <span class="_ _3"></span>points.<span class="_ _5a"> </span><span class="lsf1a">At<span class="_ _b"></span><span class="ls0">hread <span class="_ _3"></span>can <span class="_ _9"></span>get <span class="_ _9"></span>its <span class="_ _3"></span>current <span class="_ _3"></span>signal <span class="_ _9"></span>mask <span class="_ _3"></span>by <span class="_ _9"></span>setting <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1b">set</span></span></span></div><div class="t m0 x32 h4d y3885 ff19 fs26 fc0 sc0 ls0 ws0">argument <span class="_ _47"> </span>to<span class="_ _5a"> </span><span class="ff1a">NULL<span class="_"> </span></span>and <span class="_ _45"> </span>setting <span class="_ _45"> </span>the<span class="_ _5a"> </span><span class="ff1b">oset<span class="_ _5a"> </span></span>argument <span class="_ _47"> </span>to <span class="_ _45"> </span>the <span class="_ _45"> </span>address <span class="_ _45"> </span>of <span class="_ _45"> </span>a<span class="_ _16"> </span><span class="ff1a">sigset_t</span></div><div class="t m0 x32 h4a y3886 ff19 fs26 fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>e. <span class="_"> </span>In<span class="_"> </span>this case, the<span class="_"> </span><span class="ff1b">how<span class="_"> </span></span>argument is ignor<span class="_ _0"></span>ed.</div><div class="t m0 x3f h4d y3887 ff19 fs26 fc0 sc0 lsd3 ws0">At<span class="_ _d"></span><span class="ls0">hread can wait for one or mor<span class="lsd3">es<span class="_ _4f"></span><span class="ls0">ignals to occur by calling<span class="_"> </span><span class="ff1a">sigwait</span>.</span></span></span></div><div class="t m0 x3f h4e y3888 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;signal.h&gt;</div><div class="t m0 x3f h4e y3889 ff1a fs28 fc0 sc0 ls0 ws0">int sigwait(const sigset_t *restrict<span class="_"> </span><span class="ff1b">set</span><span class="ls1b6">,i<span class="_ _1d"></span><span class="ls0">nt *restrict<span class="_"> </span><span class="ff1b">signop</span>);</span></span></div><div class="t m0 x78 h7c y388a ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h60 y388b ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _66"> </span><span class="ff1b">set<span class="_ _47"> </span></span>argument <span class="_ _2"></span>speciﬁes <span class="_ _3"></span>the <span class="_ _2"></span>set <span class="_ _3"></span>of <span class="_ _2"></span>signals <span class="_ _3"></span>for <span class="_ _2"></span>which <span class="_ _3"></span>the <span class="_ _2"></span>thread <span class="_ _2"></span>is <span class="_ _3"></span>waiting.<span class="_ _61"> </span>On <span class="_ _2"></span>return,</div><div class="t m0 x32 h60 y388c ff19 fs2c fc0 sc0 ls0 ws0">the <span class="_"> </span>integer <span class="_ _66"> </span>to <span class="_ _66"> </span>which<span class="_ _46"> </span><span class="ff1b">signop<span class="_ _61"> </span></span>points <span class="_"> </span>will <span class="_ _66"> </span>contain <span class="_ _66"> </span>the <span class="_ _66"> </span>number <span class="_ _66"> </span>of <span class="_ _66"> </span>the <span class="_ _66"> </span>signal <span class="_ _66"> </span>that <span class="_ _66"> </span>was</div><div class="t m0 x32 h55 y388d ff19 fs2c fc0 sc0 ls0 ws0">delivered.</div><div class="t m0 x3f h54 y388e ff19 fs2c fc0 sc0 ls0 ws0">If <span class="_ _23"></span>one <span class="_ _9"></span>of <span class="_ _23"> </span>the <span class="_ _23"></span>signals <span class="_ _23"></span>speciﬁed <span class="_ _9"></span>in <span class="_ _23"> </span>the <span class="_ _23"></span>set <span class="_ _23"></span>is <span class="_ _9"></span>pending <span class="_ _23"> </span>at <span class="_ _23"></span>the <span class="_ _23"></span>time<span class="_ _45"> </span><span class="ff1a">sigwait<span class="_ _35"> </span></span>is <span class="_ _9"></span>called,</div><div class="t m0 x32 h54 y388f ff19 fs2c fc0 sc0 ls0 ws0">then<span class="_ _35"> </span><span class="ff1a">sigwait<span class="_ _44"> </span></span>will <span class="_ _23"> </span>return <span class="_ _23"> </span>without <span class="_ _42"> </span>blocking.<span class="_ _51"> </span>Befor<span class="lsf1b">er<span class="_ _43"></span><span class="ls0">eturning,<span class="_ _35"> </span><span class="ff1a">sigwait<span class="_ _35"> </span></span><span class="ls150">re<span class="_ _2"></span></span>moves <span class="_ _42"> </span>the</span></span></div><div class="t m0 x32 h55 y3890 ff19 fs2c fc0 sc0 ls0 ws0">signal <span class="_ _9"></span>from <span class="_ _9"></span>the <span class="_ _9"></span>set <span class="_ _9"></span>of <span class="_ _23"></span>signals <span class="_ _9"></span>pending <span class="_ _9"></span>for <span class="_ _9"></span>the <span class="_ _23"></span>process. <span class="_ _47"> </span>If<span class="_ _45"> </span>the <span class="_ _23"></span>implementation <span class="_ _9"></span>supports</div><div class="t m0 x32 h54 y3891 ff19 fs2c fc0 sc0 ls0 ws0">queued <span class="_ _9"></span>signals, <span class="_ _23"> </span>and <span class="_ _23"></span>multiple <span class="_ _9"></span>instances <span class="_ _23"></span>of <span class="_ _23"></span>a <span class="_ _9"></span>signal <span class="_ _23"></span>ar<span class="lsf1c">ep<span class="_ _43"></span><span class="ls0">ending,<span class="_ _35"> </span><span class="ff1a">sigwait<span class="_ _45"> </span></span>will <span class="_ _23"></span>r<span class="_ _0"></span>emove</span></span></div><div class="t m0 x32 h55 y3892 ff19 fs2c fc0 sc0 ls0 ws0">only one instance of the signal; the other instances will remain queued.</div><div class="t m0 x3f h55 y3893 ff19 fs2c fc0 sc0 ls155 ws0">To <span class="_ _e"> </span>a<span class="_ _9"></span><span class="ls0">void <span class="_ _2"></span>erroneous <span class="_ _2"></span>behavior<span class="_ _6"></span><span class="lsd56">,a <span class="_ _5b"></span>t<span class="_ _d"></span><span class="ls0">hread must <span class="_ _2"></span>block <span class="_ _2"></span>the <span class="_ _2"></span>signals <span class="_ _2"></span>it <span class="_ _2"></span>is <span class="_ _2"></span>waiting <span class="_ _2"></span>for <span class="_ _3"></span>before</span></span></span></div><div class="t m0 x32 h54 y3894 ff19 fs2c fc0 sc0 ls0 ws0">calling<span class="_ _45"> </span><span class="ff1a">sigwait</span><span class="lsf1d">.T<span class="_ _26"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">sigwait<span class="_ _45"> </span></span>function <span class="_ _23"></span>will <span class="_ _9"></span>atomically <span class="_ _9"></span>unblock <span class="_ _9"></span>the <span class="_ _9"></span>signals <span class="_ _23"></span>and <span class="_ _9"></span>wait</span></span></div><div class="t m0 x32 h54 y3895 ff19 fs2c fc0 sc0 ls0 ws0">until <span class="_ _2"></span>one <span class="_ _3"></span>is <span class="_ _2"></span>delivered. <span class="_ _47"> </span>Befor<span class="lsf1e">er<span class="_ _b"></span><span class="ls0">eturning,<span class="_ _47"> </span><span class="ff1a">sigwait<span class="_ _47"> </span></span>will <span class="_ _2"></span>restor<span class="_ _0"></span><span class="lsf1e">et<span class="_ _8"></span><span class="ls0">he <span class="_ _3"></span>thread’s <span class="_ _2"></span>signal <span class="_ _2"></span>mask.</span></span></span></span></div><div class="t m0 x32 h54 y3896 ff19 fs2c fc0 sc0 ls0 ws0">If <span class="_ _2"></span>the <span class="_ _3"></span>signals <span class="_ _3"></span>ar<span class="lsf1f">en<span class="_ _8"></span><span class="ls0">ot <span class="_ _3"></span>blocked <span class="_ _3"></span>at <span class="_ _3"></span>the <span class="_ _2"></span>time <span class="_ _3"></span>that<span class="_ _47"> </span><span class="ff1a">sigwait<span class="_ _47"> </span></span>is <span class="_ _3"></span>called, <span class="_ _3"></span>then <span class="_ _3"></span>a <span class="_ _3"></span>timing <span class="_ _2"></span>window</span></span></div><div class="t m0 x32 h55 y3897 ff19 fs2c fc0 sc0 ls0 ws0">is opened <span class="_ _2"></span>up <span class="_ _2"></span>wher<span class="lsf20">eo<span class="_ _4f"></span><span class="ls0">ne <span class="_ _2"></span>of <span class="_ _2"></span>the signals <span class="_ _2"></span>can <span class="_ _2"></span>be <span class="_ _2"></span>delivered to <span class="_ _2"></span>the <span class="_ _2"></span>thread before<span class="_"> </span>it<span class="_ _66"> </span>completes</span></span></div><div class="t m0 x32 h54 y3898 ff19 fs2c fc0 sc0 ls0 ws0">its call to<span class="_"> </span><span class="ff1a">sigwait</span>.</div><div class="t m0 x3f h54 y3899 ff19 fs2c fc0 sc0 ls0 ws0">The advantage <span class="_ _2"></span>to <span class="_ _2"></span>using<span class="_"> </span><span class="ff1a">sigwait<span class="_ _66"> </span></span>is <span class="_ _2"></span>that <span class="_ _2"></span>it can <span class="_ _2"></span>simplify <span class="_ _2"></span>signal handling <span class="_ _2"></span>by allowing</div><div class="t m0 x32 h55 y389a ff19 fs2c fc0 sc0 ls0 ws0">us <span class="_ _2"></span>to <span class="_ _2"></span>treat <span class="_ _2"></span>asynchronously generated <span class="_ _2"></span>signals <span class="_ _3"></span>in <span class="_ _2"></span>a <span class="_ _2"></span>synchronous <span class="_ _2"></span>manner<span class="_ _6"></span><span class="lsf21">.W<span class="_ _26"></span><span class="lsf22">ec<span class="_ _4f"></span><span class="ls0">an <span class="_ _2"></span>prevent</span></span></span></div><div class="t m0 x32 h55 y389b ff19 fs2c fc0 sc0 ls0 ws0">the <span class="_ _3"></span>signals <span class="_ _3"></span>from <span class="_ _3"></span>interrupting <span class="_ _3"></span>the <span class="_ _3"></span>threads <span class="_ _3"></span>by <span class="_ _3"></span>adding <span class="_ _9"></span>them <span class="_ _3"></span>to <span class="_ _3"></span>each <span class="_ _9"></span>thread’s <span class="_ _2"></span>signal <span class="_ _3"></span>mask.</div><div class="t m0 x32 h55 y389c ff19 fs2c fc0 sc0 ls0 ws0">Then <span class="_ _2"></span>we <span class="_ _3"></span>can <span class="_ _3"></span>dedicate <span class="_ _2"></span>speciﬁc <span class="_ _3"></span>threads <span class="_ _2"></span>to <span class="_ _3"></span>handling <span class="_ _2"></span>the <span class="_ _3"></span>signals.<span class="_ _61"> </span>These <span class="_ _3"></span>dedicated <span class="_ _3"></span>threads</div><div class="t m0 x32 h55 y389d ff19 fs2c fc0 sc0 ls0 ws0">can <span class="_ _3"></span>make <span class="_ _3"></span>function <span class="_ _3"></span>calls <span class="_ _9"></span>without <span class="_ _3"></span>having <span class="_ _3"></span>to <span class="_ _3"></span>worry <span class="_ _9"></span>about <span class="_ _3"></span>which <span class="_ _3"></span>functions <span class="_ _3"></span>ar<span class="lsf23">es<span class="_ _8"></span><span class="ls0">afe <span class="_ _3"></span>to <span class="_ _3"></span>call</span></span></div><div class="t m0 x32 h55 y389e ff19 fs2c fc0 sc0 ls0 ws0">from <span class="_ _23"></span>a <span class="_ _42"> </span>signal <span class="_ _23"> </span>handler<span class="_ _1"></span><span class="lsf24">,b<span class="_ _43"></span><span class="ls0">ecause <span class="_ _42"> </span>they <span class="_ _23"> </span>ar<span class="lsf24">eb<span class="_ _43"></span><span class="ls0">eing <span class="_ _23"> </span>called <span class="_ _42"> </span>from <span class="_ _23"> </span>normal <span class="_ _42"> </span>thread <span class="_ _23"></span>context, <span class="_ _42"> </span>not</span></span></span></span></div><div class="t m0 x32 h55 y389f ff19 fs2c fc0 sc0 ls0 ws0">from a traditional signal handler interr<span class="_ _0"></span>upting a normal thread’s execution.</div><div class="t m0 x3f h54 y38a0 ff19 fs2c fc0 sc0 ls0 ws0">If <span class="_ _2"></span>multiple <span class="_ _3"></span>threads <span class="_ _2"></span>ar<span class="lsf25">eb<span class="_ _8"></span><span class="ls0">locked <span class="_ _3"></span>in <span class="_ _2"></span>calls <span class="_ _3"></span>to<span class="_ _47"> </span><span class="ff1a">sigwait<span class="_ _47"> </span></span>for <span class="_ _3"></span>the <span class="_ _2"></span>same <span class="_ _3"></span>signal, <span class="_ _3"></span>only <span class="_ _2"></span>one <span class="_ _3"></span>of</span></span></div><div class="t m0 x32 h54 y38a1 ff19 fs2c fc0 sc0 ls0 ws0">the <span class="_ _3"></span>threads <span class="_ _2"></span>will <span class="_ _3"></span>return <span class="_ _3"></span>from<span class="_ _47"> </span><span class="ff1a">sigwait<span class="_ _47"> </span></span>when <span class="_ _3"></span>the <span class="_ _3"></span>signal <span class="_ _3"></span>is <span class="_ _3"></span>delivered. <span class="_ _47"> </span>If<span class="_ _47"> </span><span class="lsf26">as<span class="_ _4f"></span><span class="ls0">ignal <span class="_ _3"></span>is <span class="_ _3"></span>being</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
