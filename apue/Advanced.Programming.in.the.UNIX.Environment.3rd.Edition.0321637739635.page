<div id="pf27b" class="pf w4 h1f" data-page-no="27b"><div class="pc pc27b w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg27b.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.3<span class="_ _2c7"> </span>Addressing<span class="_ _1fb"> </span><span class="ff18">601</span></div><div class="t m0 x32 h2b y12f ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>socket <span class="_ _23"></span>address <span class="_ _9"></span>(<span class="ff1b">addr</span>)<span class="_ _45"> </span>is<span class="_ _35"> </span>translated <span class="_ _9"></span>into <span class="_ _23"></span>a <span class="_ _9"></span>host <span class="_ _23"></span>name <span class="_ _9"></span>and <span class="_ _23"></span>a <span class="_ _9"></span>service <span class="_ _23"></span>name.<span class="_ _5a"> </span>If<span class="_ _35"> </span><span class="ff1b">host<span class="_ _45"> </span></span>is</div><div class="t m0 x32 h2b y130 ff19 fsf fc0 sc0 ls0 ws0">non-null, <span class="_ _42"> </span>it <span class="_ _53"> </span>points <span class="_ _53"> </span>to <span class="_ _53"> </span>a <span class="_ _53"> </span>buffer<span class="_ _44"> </span><span class="ff1b">hostlen<span class="_ _44"> </span></span>bytes <span class="_ _53"> </span>long <span class="_ _42"> </span>that <span class="_ _53"> </span>will <span class="_ _53"> </span>be <span class="_ _53"> </span>used <span class="_ _53"> </span>to <span class="_ _53"> </span>return <span class="_ _42"> </span>the <span class="_ _53"> </span>host</div><div class="t m0 x32 h2b y131 ff19 fsf fc0 sc0 ls0 ws0">name. <span class="_ _66"> </span>Similarly<span class="_ _6"></span><span class="ls133a">,i<span class="_ _4f"></span><span class="ls0">f<span class="_ _47"> </span><span class="ff1b">service<span class="_ _66"> </span></span>is <span class="_ _3"></span>non-null, <span class="_ _2"></span>it <span class="_ _3"></span>points <span class="_ _2"></span>to <span class="_ _3"></span>a <span class="_ _2"></span>buffer<span class="_ _47"> </span><span class="ff1b">servlen<span class="_ _66"> </span></span>bytes <span class="_ _3"></span>long <span class="_ _2"></span>that <span class="_ _3"></span>will <span class="_ _2"></span>be</span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">used to return the service name.</div><div class="t m0 x3f h2b y133 ff19 fsf fc0 sc0 ls0 ws0">The<span class="_ _5a"> </span><span class="ff1b">ﬂags<span class="_ _51"> </span></span>argument <span class="_ _45"> </span>gives <span class="_ _45"> </span>us <span class="_ _35"> </span>some <span class="_ _45"> </span>control <span class="_ _45"> </span>over <span class="_ _45"> </span>how <span class="_ _35"> </span>the <span class="_ _45"> </span>translation <span class="_ _35"> </span>is <span class="_ _45"> </span>done.</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">6.8 summarizes the supported ﬂags.</span></span></div><div class="t m0 x5 h2d y482f ff19 fs10 fc0 sc0 ls0 ws0">Flag <span class="_ _2ca"> </span>Description</div><div class="t m0 x214 h4f y4830 ff1a fs11 fc0 sc0 ls0 ws0">NI_DGRAM<span class="_ _a1"> </span><span class="ff19">The service is datagram based instead of stream based.</span></div><div class="t m0 x214 h4f y4831 ff1a fs11 fc0 sc0 ls0 ws0">NI_NAMEREQD<span class="_ _10b"> </span><span class="ff19">If the host name can’t be found, treat this as an error<span class="_ _1"></span>.</span></div><div class="t m0 x214 h4f y4832 ff1a fs11 fc0 sc0 ls0 ws0">NI_NOFQDN<span class="_ _7d"> </span><span class="ff19">Return only the node name portion of the fully qualiﬁed domain name</span></div><div class="t m0 x39 h2e y4833 ff19 fs11 fc0 sc0 ls0 ws0">for local hosts.</div><div class="t m0 x214 h4f y4834 ff1a fs11 fc0 sc0 ls0 ws0">NI_NUMERICHOST<span class="_ _75"> </span><span class="ff19">Return the numeric form of the host address instead of the name.</span></div><div class="t m0 x214 h4f y4835 ff1a fs11 fc0 sc0 ls0 ws0">NI_NUMERICSCOPE<span class="_ _6e"> </span><span class="ff19">For IPv6, return the numeric form of the scope ID instead of the name.</span></div><div class="t m0 x214 h4f y4836 ff1a fs11 fc0 sc0 ls0 ws0">NI_NUMERICSERV<span class="_ _75"> </span><span class="ff19">Return the numeric form of the service address (i.e., the port number)</span></div><div class="t m0 x39 h2e y4837 ff19 fs11 fc0 sc0 ls0 ws0">instead of the name.</div><div class="t m0 x3d h6d y4838 ff18 fs12 fc0 sc0 ls0 ws0">Figure 16.8<span class="_ _5a"> </span><span class="ff19">Flags for the<span class="_"> </span><span class="ff1a">getnameinfo<span class="_ _e"> </span></span>function</span></div><div class="t m0 x35 h5a y46cc ff16 fs29 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h5c y4839 ff19 fs29 fc0 sc0 ls0 ws0">Figur<span class="lsdd">e1<span class="_ _4f"></span><span class="ls0">6.9 illustrates the use of the<span class="_"> </span><span class="ff1a">getaddrinfo<span class="_ _66"> </span></span>function.</span></span></div><div class="t m0 x32 h65 y483a ff1a fs32 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h65 y483b ff1a fs32 fc0 sc0 ls0 ws0">#if defined(SOLARIS)</div><div class="t m0 x32 h65 y483c ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;netinet/in.h&gt;</div><div class="t m0 x32 h65 y483d ff1a fs32 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h65 y483e ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x32 h65 y483f ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;arpa/inet.h&gt;</div><div class="t m0 x32 h65 y4840 ff1a fs32 fc0 sc0 ls0 ws0">#if defined(BSD)</div><div class="t m0 x32 h65 y4841 ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h65 y4842 ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;netinet/in.h&gt;</div><div class="t m0 x32 h65 y4843 ff1a fs32 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h65 y4844 ff1a fs32 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h65 y4845 ff1a fs32 fc0 sc0 ls0 ws0">print_family(struct addrinfo *aip)</div><div class="t m0 x32 h65 y4846 ff1a fs32 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h65 y4847 ff1a fs32 fc0 sc0 ls0 ws0">printf(&quot; family &quot;);</div><div class="t m0 x8a h65 y4848 ff1a fs32 fc0 sc0 ls0 ws0">switch (aip-&gt;ai_family) {</div><div class="t m0 x8a h65 y4849 ff1a fs32 fc0 sc0 ls0 ws0">case AF_INET:</div><div class="t m0 x9d h65 y484a ff1a fs32 fc0 sc0 ls0 ws0">printf(&quot;inet&quot;);</div><div class="t m0 x9d h65 y484b ff1a fs32 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h65 y484c ff1a fs32 fc0 sc0 ls0 ws0">case AF_INET6:</div><div class="t m0 x9d h65 y484d ff1a fs32 fc0 sc0 ls0 ws0">printf(&quot;inet6&quot;);</div><div class="t m0 x9d h65 y484e ff1a fs32 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h65 y484f ff1a fs32 fc0 sc0 ls0 ws0">case AF_UNIX:</div><div class="t m0 x9d h65 y4850 ff1a fs32 fc0 sc0 ls0 ws0">printf(&quot;unix&quot;);</div><div class="t m0 x9d h65 y4851 ff1a fs32 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h65 y4852 ff1a fs32 fc0 sc0 ls0 ws0">case AF_UNSPEC:</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
