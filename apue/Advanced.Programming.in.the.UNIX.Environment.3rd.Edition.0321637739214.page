<div id="pfd6" class="pf w4 h1f" data-page-no="d6"><div class="pc pcd6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bgd6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">180<span class="_ _1b"> </span><span class="ff19">System <span class="_"> </span>Data <span class="_"> </span>Files <span class="_"> </span>and <span class="_"> </span>Information<span class="_ _114"> </span>Chapter <span class="_"> </span>6</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">Both <span class="_ _2"></span>functions <span class="_ _2"></span>return a <span class="_ _2"></span>pointer <span class="_ _2"></span>to <span class="_ _2"></span>a<span class="_ _66"> </span><span class="ff1a">passwd<span class="_ _66"> </span></span>structur<span class="ls783">et<span class="_ _4f"></span><span class="ls0">hat <span class="_ _2"></span>the <span class="_ _2"></span>functions <span class="_ _2"></span>ﬁll <span class="_ _2"></span>in.<span class="_ _61"> </span>This</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>e<span class="_ _54"> </span>is<span class="_ _54"> </span>usually <span class="_ _4b"> </span>a<span class="_ _54"> </span><span class="ff1a">static<span class="_ _54"> </span></span>variable <span class="_ _44"> </span>within <span class="_ _44"> </span>the <span class="_ _4b"> </span>function, <span class="_ _44"> </span>so <span class="_ _44"> </span>its <span class="_ _44"> </span>contents <span class="_ _44"> </span>are</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">overwritten each time we call either of these functions.</div><div class="t m0 x3f h2a y132 ff19 fsf fc0 sc0 ls0 ws0">These <span class="_ _2"></span>two <span class="_ _2"></span>POSIX.1 <span class="_ _2"></span>functions ar<span class="ls784">eﬁ<span class="_ _4f"></span><span class="ls0">ne <span class="_ _2"></span>if <span class="_ _2"></span>we <span class="_ _2"></span>want <span class="_ _2"></span>to <span class="_ _2"></span>look <span class="_ _2"></span>up <span class="_ _2"></span>either <span class="_ _2"></span>a <span class="_ _2"></span>login <span class="_ _2"></span>name <span class="_ _2"></span>or <span class="_ _2"></span>a</span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">user <span class="_ _47"> </span>ID, <span class="_ _45"> </span>but <span class="_ _47"> </span>some <span class="_ _47"> </span>programs <span class="_ _47"> </span>need <span class="_ _47"> </span>to <span class="_ _45"> </span>go <span class="_ _47"> </span>through <span class="_ _47"> </span>the <span class="_ _47"> </span>entir<span class="ls785">ep<span class="_ _62"></span><span class="ls0">asswor<span class="ls785">dﬁ<span class="_ _62"></span><span class="ls0">le. <span class="_ _16"> </span>Three</span></span></span></span></div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">functions can be used for this purpose:<span class="_"> </span><span class="ff1a">getpwent</span>,<span class="_"> </span><span class="ff1a">setpwent</span><span class="ls44">,a<span class="_ _d"></span><span class="ls0">nd<span class="_"> </span><span class="ff1a">endpwent</span>.</span></span></div><div class="t m0 x3f h57 y1862 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pwd.h&gt;</div><div class="t m0 x3f h57 y1863 ff1a fs2d fc0 sc0 ls0 ws0">struct passwd *getpwent(void);</div><div class="t m0 x1bb h57 y1864 ff19 fs2d fc0 sc0 ls0 ws0">Returns: pointer if OK,<span class="_"> </span><span class="ff1a">NULL<span class="_ _e"> </span></span>on error or end of ﬁle</div><div class="t m0 x3f h57 y1865 ff1a fs2d fc0 sc0 ls0 ws0">void setpwent(void);</div><div class="t m0 x3f h57 y1866 ff1a fs2d fc0 sc0 ls0 ws0">void endpwent(void);</div><div class="t m0 x76 h2d y1867 ff19 fs10 fc0 sc0 ls0 ws0">These <span class="_ _3"></span>three <span class="_ _9"></span>functions <span class="_ _3"></span>ar<span class="ls786">en<span class="_ _4f"></span><span class="ls0">ot <span class="_ _9"></span>part <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>base <span class="_ _9"></span>POSIX.1 <span class="_ _9"></span>standard. <span class="_ _66"> </span>They<span class="_ _66"> </span>ar<span class="ls787">ed<span class="_ _4f"></span><span class="ls0">eﬁned <span class="_ _9"></span>as <span class="_ _3"></span>part <span class="_ _9"></span>of</span></span></span></span></div><div class="t m0 x76 h2d y1868 ff19 fs10 fc0 sc0 ls0 ws0">the <span class="_ _9"></span>XSI <span class="_ _23"> </span>option <span class="_ _9"></span>in <span class="_ _9"> </span>the <span class="_ _23"> </span>Single <span class="_ _9"></span>UNIX <span class="_ _23"> </span>Speciﬁcation.<span class="_ _59"> </span>As <span class="_ _9"> </span>such, <span class="_ _23"> </span>all <span class="_ _9"></span>UNIX <span class="_ _23"> </span>systems <span class="_ _9"></span>ar<span class="ls788">ee<span class="_ _8"></span><span class="ls0">xpected <span class="_ _9"> </span>to</span></span></div><div class="t m0 x76 h2d y1869 ff19 fs10 fc0 sc0 ls0 ws0">provide them.</div><div class="t m0 x3f h4d y186a ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _47"> </span>c<span class="_ _9"></span><span class="ls0">all<span class="_ _35"> </span><span class="ff1a">getpwent<span class="_ _45"> </span></span>to <span class="_ _23"></span>return <span class="_ _9"></span>the <span class="_ _23"> </span>next <span class="_ _23"></span>entry <span class="_ _23"></span>in <span class="_ _23"></span>the <span class="_ _9"></span>passwor<span class="ls789">dﬁ<span class="_ _b"></span><span class="ls0">le. <span class="_ _45"> </span>As<span class="_ _45"> </span>with <span class="_ _23"> </span>the <span class="_ _23"> </span>two</span></span></span></div><div class="t m0 x32 h4d y186b ff19 fs26 fc0 sc0 ls0 ws0">POSIX.1 <span class="_ _3"></span>functions,<span class="_ _45"> </span><span class="ff1a">getpwent<span class="_ _47"> </span></span><span class="lscc">re<span class="_ _2"></span></span>turns <span class="_ _9"></span>a <span class="_ _3"></span>pointer <span class="_ _9"></span>to <span class="_ _3"></span>a <span class="_ _9"></span>structur<span class="ls78a">et<span class="_ _b"></span><span class="ls0">hat <span class="_ _3"></span>it <span class="_ _9"></span>has <span class="_ _3"></span>ﬁlled <span class="_ _9"></span>in.<span class="_ _16"> </span>This</span></span></div><div class="t m0 x32 h49 y186c ff19 fs26 fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>e<span class="_ _47"> </span>is<span class="_ _45"> </span>normally <span class="_ _3"></span>overwritten <span class="_ _3"></span>each <span class="_ _9"></span>time <span class="_ _3"></span>we <span class="_ _3"></span>call <span class="_ _9"></span>this <span class="_ _3"></span>function.<span class="_ _5a"> </span>If <span class="_ _3"></span>this <span class="_ _3"></span>is <span class="_ _9"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _9"></span>call</div><div class="t m0 x32 h49 y186d ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _2"></span>this <span class="_ _3"></span>function, <span class="_ _3"></span>it <span class="_ _3"></span>opens <span class="_ _3"></span>whatever <span class="_ _2"></span>ﬁles <span class="_ _3"></span>it <span class="_ _3"></span>uses.<span class="_ _16"> </span>Ther<span class="ls78b">ei<span class="_ _8"></span><span class="ls0">s<span class="_ _47"> </span>no<span class="_ _47"> </span>o<span class="lscc">rd</span>er <span class="_ _3"></span>implied <span class="_ _3"></span>when <span class="_ _3"></span>we <span class="_ _3"></span>use</span></span></div><div class="t m0 x32 h49 y186e ff19 fs26 fc0 sc0 ls0 ws0">this <span class="_"> </span>function; <span class="_"> </span>the <span class="_"> </span>entries <span class="_ _e"> </span>can <span class="_"> </span>be <span class="_"> </span>in <span class="_"> </span>any <span class="_"> </span>or<span class="_ _0"></span>der<span class="_ _6"></span><span class="ls78c">,b<span class="_ _4a"></span><span class="ls0">ecause <span class="_"> </span>some <span class="_"> </span>systems <span class="_"> </span>use <span class="_"> </span>a <span class="_ _e"> </span>hashed</span></span></div><div class="t m0 x32 h4d y186f ff19 fs26 fc0 sc0 ls0 ws0">version of the ﬁle<span class="_"> </span><span class="ff1a">/etc/passwd</span>.</div><div class="t m0 x3f h4d y1870 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _2"></span>function<span class="_ _47"> </span><span class="ff1a">setpwent<span class="_ _47"> </span></span><span class="lscc">re<span class="_ _2"></span></span>winds <span class="_ _3"></span>whatever <span class="_ _3"></span>ﬁles <span class="_ _2"></span>it <span class="_ _3"></span>uses, <span class="_ _3"></span>and<span class="_ _47"> </span><span class="ff1a">endpwent<span class="_ _47"> </span></span>closes <span class="_ _3"></span>these</div><div class="t m0 x32 h4d y1871 ff19 fs26 fc0 sc0 ls0 ws0">ﬁles. <span class="_ _44"> </span>When<span class="_ _44"> </span>using<span class="_ _35"> </span><span class="ff1a">getpwent</span>,<span class="_ _44"> </span>we<span class="_ _44"> </span>must <span class="_ _53"> </span>always <span class="_ _42"> </span>be <span class="_ _42"> </span>sure<span class="_ _44"> </span>to<span class="_ _44"> </span>close <span class="_ _42"> </span>these <span class="_ _42"> </span>ﬁles <span class="_ _42"> </span>by <span class="_ _42"> </span>calling</div><div class="t m0 x32 h4d y1872 ff1a fs26 fc0 sc0 ls0 ws0">endpwent<span class="_ _80"> </span><span class="ff19">when <span class="_ _2"></span>we’r<span class="ls78d">et<span class="_ _4f"></span><span class="ls0">hrough. <span class="_"> </span>Although<span class="_"> </span><span class="ff1a">getpwent<span class="_ _66"> </span></span>is smart enough to know when <span class="_ _2"></span>it</span></span></span></div><div class="t m0 x32 h49 y1873 ff19 fs26 fc0 sc0 ls0 ws0">has to open its ﬁles (the ﬁrst time we call it), it never knows when we’r<span class="lsd3">et<span class="_ _4f"></span><span class="ls0">hrough.</span></span></div><div class="t m0 x35 h4c y1874 ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h4d y1875 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lsd3">e6<span class="_ _4f"></span><span class="ls0">.2 shows an implementation of the function<span class="_"> </span><span class="ff1a">getpwnam</span>.</span></span></div><div class="t m0 x32 h5d y1876 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pwd.h&gt;</div><div class="t m0 x32 h5d y1877 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;stddef.h&gt;</div><div class="t m0 x32 h5d y1878 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;string.h&gt;</div><div class="t m0 x32 h5d y1879 ff1a fs2f fc0 sc0 ls0 ws0">struct passwd *</div><div class="t m0 x32 h5d y187a ff1a fs2f fc0 sc0 ls0 ws0">getpwnam(const char *name)</div><div class="t m0 x32 h5d y187b ff1a fs2f fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h5d y187c ff1a fs2f fc0 sc0 ls0 ws0">struct passwd<span class="_ _d9"> </span>*ptr;</div><div class="t m0 x8a h5d y187d ff1a fs2f fc0 sc0 ls0 ws0">setpwent();</div><div class="t m0 x8a h5d y187e ff1a fs2f fc0 sc0 ls0 ws0">while ((ptr = getpwent()) != NULL)</div><div class="t m0 x9d h5d y187f ff1a fs2f fc0 sc0 ls0 ws0">if (strcmp(name, ptr-&gt;pw_name) == 0)</div><div class="t m0 x1f h5d y1880 ff1a fs2f fc0 sc0 ls0 ws0">break; <span class="_ _8a"> </span>/*<span class="_"> </span>found a match */</div><div class="t m0 x8a h5d y1881 ff1a fs2f fc0 sc0 ls0 ws0">endpwent();</div><div class="t m0 x8a h5d y1882 ff1a fs2f fc0 sc0 ls0 ws0">return(ptr); <span class="_ _68"> </span>/*<span class="_"> </span>ptr is NULL if no match found */</div><div class="t m0 x32 h5d y1883 ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x59 h6d y1884 ff18 fs12 fc0 sc0 ls0 ws0">Figure 6.2<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">getpwnam<span class="_ _e"> </span></span>function</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
