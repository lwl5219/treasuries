<div id="pf29a" class="pf w4 h1f" data-page-no="29a"><div class="pc pc29a w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg29a.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">632<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>i,<span class="_"> </span>n, err;</div><div class="t m0 x8a h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>fd[2];</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>qid[NQ];</div><div class="t m0 x8a h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">struct pollfd<span class="_ _b7"> </span>pfd[NQ];</div><div class="t m0 x8a h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">struct threadinfo<span class="_ _68"> </span>ti[NQ];</div><div class="t m0 x8a h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">pthread_t <span class="_ _74"> </span>tid[NQ];</div><div class="t m0 x8a h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _227"> </span>buf[MAXMSZ];</div><div class="t m0 x8a h57 y350c ff1a fs2d fc0 sc0 ls0 ws0">for (i = 0; i &lt; NQ; i++) {</div><div class="t m0 x9d h57 y350d ff1a fs2d fc0 sc0 ls0 ws0">if ((qid[i] = msgget((KEY+i), IPC_CREAT|0666)) &lt; 0)</div><div class="t m0 x1f h57 y31b6 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;msgget error&quot;);</div><div class="t m0 x9d h57 y1310 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;queue ID %d is %d\n&quot;, i, qid[i]);</div><div class="t m0 x9d h57 y1336 ff1a fs2d fc0 sc0 ls0 ws0">if (socketpair(AF_UNIX, SOCK_DGRAM, 0, fd) &lt; 0)</div><div class="t m0 x1f h57 y1337 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;socketpair error&quot;);</div><div class="t m0 x9d h57 y1338 ff1a fs2d fc0 sc0 ls0 ws0">pfd[i].fd = fd[0];</div><div class="t m0 x9d h57 y1339 ff1a fs2d fc0 sc0 ls0 ws0">pfd[i].events = POLLIN;</div><div class="t m0 x9d h57 y3929 ff1a fs2d fc0 sc0 ls0 ws0">ti[i].qid = qid[i];</div><div class="t m0 x9d h57 y1316 ff1a fs2d fc0 sc0 ls0 ws0">ti[i].fd = fd[1];</div><div class="t m0 x9d h57 y1317 ff1a fs2d fc0 sc0 ls0 ws0">if ((err = pthread_create(&amp;tid[i], NULL, helper, &amp;ti[i])) != 0)</div><div class="t m0 x1f h57 y1318 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;pthread_create error&quot;);</div><div class="t m0 x8a h57 y1319 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y133f ff1a fs2d fc0 sc0 ls0 ws0">for (;;) {</div><div class="t m0 x9d h57 y1340 ff1a fs2d fc0 sc0 ls0 ws0">if (poll(pfd, NQ, -1) &lt; 0)</div><div class="t m0 x1f h57 y1341 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;poll error&quot;);</div><div class="t m0 x9d h57 y1342 ff1a fs2d fc0 sc0 ls0 ws0">for (i = 0; i &lt; NQ; i++) {</div><div class="t m0 x1f h57 y1343 ff1a fs2d fc0 sc0 ls0 ws0">if (pfd[i].revents &amp; POLLIN) {</div><div class="t m0 x1ca h57 y1344 ff1a fs2d fc0 sc0 ls0 ws0">if ((n = read(pfd[i].fd, buf, sizeof(buf))) &lt; 0)</div><div class="t m0 x36 h57 y1345 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;read error&quot;);</div><div class="t m0 x1ca h57 y1346 ff1a fs2d fc0 sc0 ls0 ws0">buf[n] = 0;</div><div class="t m0 x1ca h57 y1347 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;queue id %d, message %s\n&quot;, qid[i], buf);</div><div class="t m0 x1f h57 y1323 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y1324 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y1325 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y23f2 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y1327 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xe7 h2d y4b35 ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.3<span class="_ _5a"> </span><span class="ff19">Poll for XSI messages using UNIX domain sockets</span></div><div class="t m0 x3f h4d y4b36 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _9"></span>that <span class="_ _9"></span>we <span class="_ _3"></span>use <span class="_ _9"></span>datagram <span class="_ _9"></span>(<span class="ff1a">SOCK_DGRAM</span><span class="lsee2">)s<span class="_ _8"></span><span class="ls0">ockets <span class="_ _9"></span>instead <span class="_ _3"></span>of <span class="_ _9"></span>stream <span class="_ _9"></span>sockets.<span class="_ _5a"> </span>This</span></span></div><div class="t m0 x32 h49 y4b37 ff19 fs26 fc0 sc0 ls0 ws0">allows <span class="_ _2"></span>us <span class="_ _3"></span>to <span class="_ _2"></span>retain <span class="_ _2"></span>message <span class="_ _3"></span>boundaries <span class="_ _3"></span>so <span class="_ _2"></span>when <span class="_ _3"></span>we <span class="_ _3"></span>read from <span class="_ _2"></span>the <span class="_ _3"></span>socket, <span class="_ _3"></span>we <span class="_ _2"></span>read <span class="_ _2"></span>only</div><div class="t m0 x32 h49 y4b38 ff19 fs26 fc0 sc0 ls0 ws0">one message at a time.</div><div class="t m0 x3f h4d y4b39 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _23"></span>technique <span class="_ _23"></span>allows <span class="_ _23"> </span>us <span class="_ _23"> </span>to <span class="_ _23"> </span>use <span class="_ _23"> </span>either<span class="_ _35"> </span><span class="ff1a">poll<span class="_ _35"> </span></span>or<span class="_ _35"> </span><span class="ff1a">select<span class="_ _45"> </span></span>(indirectly) <span class="_ _23"> </span>with <span class="_ _23"> </span>message</div><div class="t m0 x32 h49 y4b3a ff19 fs26 fc0 sc0 ls0 ws0">queues. <span class="_ _45"> </span>As<span class="_ _35"> </span>long <span class="_ _23"></span>as <span class="_ _9"></span>the <span class="_ _23"> </span>costs <span class="_ _23"></span>of <span class="_ _23"></span>one <span class="_ _9"></span>thread <span class="_ _23"></span>per <span class="_ _9"></span>queue <span class="_ _23"> </span>and <span class="_ _23"></span>copying <span class="_ _23"></span>each <span class="_ _9"></span>message <span class="_ _23"> </span>two</div><div class="t m0 x32 h49 y4b3b ff19 fs26 fc0 sc0 ls0 ws0">extra <span class="_ _e"> </span>times <span class="_"> </span>(once <span class="_ _53"> </span>to <span class="_"> </span>write <span class="_ _53"> </span>it <span class="_"> </span>to <span class="_ _e"> </span>the <span class="_ _e"> </span>socket <span class="_"> </span>and <span class="_ _53"> </span>once <span class="_"> </span>to <span class="_ _e"> </span>read <span class="_ _53"> </span>it <span class="_"> </span>fr<span class="_ _0"></span>om <span class="_ _e"> </span>the <span class="_"> </span>socket) <span class="_ _53"> </span>are</div><div class="t m0 x32 h49 y4b3c ff19 fs26 fc0 sc0 ls0 ws0">acceptable, this technique will make it easier to use XSI message queues.</div><div class="t m0 x3f h49 y4b3d ff19 fs26 fc0 sc0 ls164 ws0">We<span class="_ _9"></span><span class="ls0">ll <span class="_ _23"></span>use <span class="_ _23"></span>the <span class="_ _9"></span>program <span class="_ _23"></span>shown <span class="_ _9"></span>in <span class="_ _23"> </span>Figur<span class="ls13a6">e1<span class="_ _43"></span><span class="ls0">7.4 <span class="_ _23"> </span>to <span class="_ _23"></span>send <span class="_ _23"></span>messages <span class="_ _9"></span>to <span class="_ _23"> </span>our <span class="_ _23"> </span>test <span class="_ _23"></span>program</span></span></span></div><div class="t m0 x32 h49 y4b3e ff19 fs26 fc0 sc0 ls0 ws0">from Figur<span class="_ _0"></span><span class="lsd3">e1<span class="_ _d"></span><span class="ls0">7.3.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
