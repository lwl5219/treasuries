<div id="pf235" class="pf w4 h1f" data-page-no="235"><div class="pc pc235 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg235.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>14.9<span class="_ _221"> </span>Summary<span class="_ _1b"> </span><span class="ff18">531</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">system <span class="_ _3"></span>call <span class="_ _9"></span>and <span class="_ _9"></span>extra <span class="_ _3"></span>copying <span class="_ _9"></span>differs <span class="_ _3"></span>from <span class="_ _3"></span>the <span class="_ _9"></span>page <span class="_ _9"></span>fault <span class="_ _3"></span>overhead, <span class="_ _9"></span>then <span class="_ _3"></span>one <span class="_ _9"></span>approach</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">will perform better than the other<span class="_ _6"></span>.</div><div class="t m0 x3f h2a y131 ff19 fsf fc0 sc0 ls0 ws0">On Linux <span class="_ _2"></span>3.2.0, <span class="_ _2"></span>as <span class="_ _2"></span>far <span class="_ _2"></span>as <span class="_ _2"></span>elapsed <span class="_ _2"></span>time <span class="_ _2"></span>is concerned, <span class="_ _2"></span>the <span class="_ _2"></span>two <span class="_ _2"></span>versions <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>program</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">show a large differ<span class="_ _1"></span>ence <span class="_ _2"></span>in clock time: the version <span class="_ _2"></span>using<span class="_"> </span><span class="ff1a">read<span class="_ _66"> </span></span>and<span class="_"> </span><span class="ff1a">write<span class="_ _80"> </span></span>completes <span class="_ _2"></span>four</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">times <span class="_ _53"> </span>faster <span class="_ _e"> </span>than <span class="_ _53"> </span>the <span class="_ _e"> </span>version <span class="_ _53"> </span>using<span class="_ _4b"> </span><span class="ff1a">mmap<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">memcpy</span><span class="ls1122">.H<span class="_ _52"></span><span class="ls0">owever<span class="_ _6"></span>,<span class="_ _4b"> </span>on<span class="_ _4b"> </span>Solaris <span class="_ _53"> </span>10, <span class="_ _e"> </span>the</span></span></div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">version <span class="_ _2"></span>with<span class="_ _47"> </span><span class="ff1a">mmap<span class="_ _47"> </span></span>and<span class="_ _47"> </span><span class="ff1a">memcpy<span class="_ _47"> </span></span>is <span class="_ _3"></span>faster <span class="_ _3"></span>than <span class="_ _3"></span>the <span class="_ _3"></span>version <span class="_ _2"></span>with<span class="_ _47"> </span><span class="ff1a">read<span class="_ _47"> </span></span>and<span class="_ _47"> </span><span class="ff1a">write</span><span class="ls1123">.I<span class="_ _5b"></span><span class="ls1124">ft<span class="_ _8"></span><span class="ls0">he</span></span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">CPU times <span class="_ _2"></span>ar<span class="ls19e">ea<span class="_ _4f"></span><span class="ls0">lmost <span class="_ _2"></span>the <span class="_ _2"></span>same, then <span class="_ _2"></span>why <span class="_ _2"></span>would <span class="_ _2"></span>the <span class="_ _2"></span>clock times <span class="_ _2"></span>differ? <span class="_"> </span>One<span class="_ _47"> </span>possibility</span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _2"></span>that <span class="_ _2"></span>we <span class="_ _2"></span>might <span class="_ _2"></span>have <span class="_ _2"></span>to <span class="_ _3"></span>wait <span class="_ _2"></span>longer <span class="_ _2"></span>for <span class="_ _2"></span>I/O <span class="_ _2"></span>to <span class="_ _2"></span>complete <span class="_ _3"></span>in <span class="_ _2"></span>one <span class="_ _2"></span>version.<span class="_ _61"> </span>This <span class="_ _2"></span>wait <span class="_ _2"></span>time</div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _47"> </span>not <span class="_ _45"> </span>counted <span class="_ _45"> </span>as <span class="_ _47"> </span>CPU <span class="_ _45"> </span>pr<span class="_ _0"></span>ocessing <span class="_ _45"> </span>time.<span class="_ _5f"> </span>Another <span class="_ _47"> </span>possibility <span class="_ _45"> </span>is <span class="_ _45"> </span>that <span class="_ _47"> </span>some <span class="_ _45"> </span>system</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">processing <span class="_ _2"></span>might <span class="_ _3"></span>not <span class="_ _2"></span>be <span class="_ _3"></span>counted <span class="_ _3"></span>against <span class="_ _3"></span>our <span class="_ _3"></span>program <span class="_ _84"></span>— <span class="_ _4"></span>the<span class="_ _66"> </span>processing <span class="_ _2"></span>done <span class="_ _3"></span>by <span class="_ _3"></span>system</div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls0 ws0">daemons <span class="_ _3"></span>to <span class="_ _3"></span>write <span class="_ _3"></span>pages <span class="_ _3"></span>to <span class="_ _3"></span>disk, <span class="_ _3"></span>for <span class="_ _3"></span>example.<span class="_ _61"> </span>As <span class="_ _3"></span>we <span class="_ _3"></span>need <span class="_ _9"></span>to <span class="_ _2"></span>allocate <span class="_ _3"></span>pages <span class="_ _3"></span>for <span class="_ _3"></span>reading</div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _9"></span>writing, <span class="_ _9"></span>these <span class="_ _9"></span>system <span class="_ _9"></span>daemons <span class="_ _9"></span>will <span class="_ _9"></span>help <span class="_ _9"></span>make <span class="_ _9"></span>pages <span class="_ _3"></span>available.<span class="_ _5a"> </span>If <span class="_ _9"></span>the <span class="_ _9"></span>page <span class="_ _9"></span>writes</div><div class="t m0 x32 h2a y254 ff19 fsf fc0 sc0 ls0 ws0">ar<span class="lsa7f">er<span class="_ _b"></span><span class="ls0">andom <span class="_ _3"></span>instead <span class="_ _9"></span>of <span class="_ _9"></span>sequential, <span class="_ _9"></span>then <span class="_ _9"></span>it <span class="_ _9"></span>will <span class="_ _9"></span>take <span class="_ _9"></span>longer <span class="_ _9"></span>to <span class="_ _9"></span>write <span class="_ _9"></span>them <span class="_ _9"></span>out <span class="_ _9"></span>to <span class="_ _9"></span>disk, <span class="_ _9"></span>so</span></span></div><div class="t m0 x32 h2a y255 ff19 fsf fc0 sc0 ls0 ws0">we will need to wait longer befor<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he pages become available for us to reuse.</span></span></div><div class="t m0 x3f h49 y1134 ff19 fs26 fc0 sc0 ls0 ws0">Depending <span class="_ _45"> </span>on <span class="_ _35"> </span>the <span class="_ _45"> </span>system, <span class="_ _35"> </span>memory-mapped <span class="_ _45"> </span>I/O <span class="_ _45"> </span>can <span class="_ _35"> </span>be <span class="_ _45"> </span>mor<span class="ls1125">ee<span class="_ _26"></span><span class="lscc">fﬁ<span class="ls0">cient <span class="_ _35"> </span>when</span></span></span></div><div class="t m0 x32 h49 y40c2 ff19 fs26 fc0 sc0 ls0 ws0">copying one regular ﬁle to another<span class="_ _6"></span><span class="ls1126">.T<span class="_ _4a"></span><span class="ls0">her<span class="lsa4f">ea<span class="_ _4f"></span><span class="lscc">re <span class="_ _3"></span>l<span class="ls0">imitations. <span class="_"> </span>W<span class="_ _6"></span><span class="lsa4f">ec<span class="_ _5"></span><span class="ls0">an’t use this technique to</span></span></span></span></span></span></span></div><div class="t m0 x32 h49 y40c3 ff19 fs26 fc0 sc0 ls0 ws0">copy <span class="_ _9"></span>between <span class="_ _9"></span>certain <span class="_ _9"></span>devices <span class="_ _23"></span>(such <span class="_ _9"></span>as <span class="_ _9"></span>a <span class="_ _9"></span>network <span class="_ _9"></span>device <span class="_ _23"></span>or <span class="_ _9"></span>a <span class="_ _9"></span>terminal <span class="_ _9"></span>device), <span class="_ _9"></span>and <span class="_ _23"></span>we</div><div class="t m0 x32 h49 y40c4 ff19 fs26 fc0 sc0 ls0 ws0">have <span class="_"> </span>to <span class="_"> </span>be <span class="_ _e"> </span>careful <span class="_"> </span>if <span class="_ _e"> </span>the <span class="_"> </span>size <span class="_"> </span>of <span class="_ _e"> </span>the <span class="_"> </span>underlying <span class="_"> </span>ﬁle <span class="_"> </span>could <span class="_ _e"> </span>change <span class="_"> </span>after <span class="_"> </span>we <span class="_"> </span>map <span class="_ _e"> </span>it.</div><div class="t m0 x32 h49 y40c5 ff19 fs26 fc0 sc0 ls0 ws0">Nevertheless, <span class="_ _3"></span>some <span class="_ _9"></span>applications <span class="_ _3"></span>can <span class="_ _9"></span>beneﬁt <span class="_ _3"></span>from <span class="_ _3"></span>memory-mapped <span class="_ _9"></span>I/O, <span class="_ _3"></span>as <span class="_ _9"></span>it <span class="_ _9"></span>can <span class="_ _3"></span>often</div><div class="t m0 x32 h49 y40c6 ff19 fs26 fc0 sc0 ls0 ws0">simplify <span class="_ _2"></span>the <span class="_ _3"></span>algorithms, <span class="_ _3"></span>since <span class="_ _3"></span>we <span class="_ _3"></span>manipulate <span class="_ _3"></span>memory <span class="_ _3"></span>instead <span class="_ _3"></span>of <span class="_ _3"></span>reading <span class="_ _2"></span>and <span class="_ _3"></span>writing <span class="_ _3"></span>a</div><div class="t m0 x32 h49 y40c7 ff19 fs26 fc0 sc0 ls0 ws0">ﬁle. <span class="_ _16"> </span>One<span class="_ _61"> </span>example <span class="_ _45"> </span>is <span class="_ _47"> </span>the <span class="_ _47"> </span>manipulation <span class="_ _47"> </span>of <span class="_ _47"> </span>a <span class="_ _45"> </span>frame <span class="_ _47"> </span>buf<span class="_ _0"></span>fer <span class="_ _47"> </span>device <span class="_ _47"> </span>that <span class="_ _47"> </span>references <span class="_ _47"> </span>a</div><div class="t m0 x32 h49 y40c8 ff19 fs26 fc0 sc0 ls0 ws0">bitmapped display<span class="_ _4"></span>.</div><div class="t m0 x3f h49 y40c9 ff19 fs26 fc0 sc0 ls0 ws0">Krieger<span class="_ _6"></span><span class="ls1127">,S<span class="_ _4a"></span><span class="ls0">tumm, <span class="_"> </span>and <span class="_"> </span>Unrau</span></span></div><div class="t m0 xed h49 y40ca ff19 fs26 fc0 sc0 ls0 ws0">[</div><div class="t m0 xd h49 y40c9 ff19 fs26 fc0 sc0 ls0 ws0">1992</div><div class="t m0 x6c h49 y40ca ff19 fs26 fc0 sc0 ls0 ws0">]</div><div class="t m0 x45 h49 y40c9 ff19 fs26 fc0 sc0 ls0 ws0">describe <span class="_"> </span>an <span class="_"> </span>alternative <span class="_ _66"> </span>to <span class="_"> </span>the <span class="_ _66"> </span>standar<span class="lsbe5">dI<span class="_ _5b"></span><span class="ls0">/O</span></span></div><div class="t m0 x32 h49 y40cb ff19 fs26 fc0 sc0 ls0 ws0">library (Chapter 5) that uses memory-mapped I/O.</div><div class="t m0 x3f h49 y40cc ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _66"> </span>r<span class="_ _9"></span><span class="ls0">eturn <span class="_ _9"></span>to <span class="_ _23"></span>memory-mapped <span class="_ _9"></span>I/O <span class="_ _23"></span>in <span class="_ _9"></span>Section <span class="_ _9"></span>15.9, <span class="_ _23"></span>showing <span class="_ _9"></span>an <span class="_ _23"></span>example <span class="_ _9"></span>of <span class="_ _9"></span>how <span class="_ _23"></span>it</span></div><div class="t m0 x32 h49 y40cd ff19 fs26 fc0 sc0 ls0 ws0">can be used to provide shar<span class="_ _0"></span>ed memory between r<span class="_ _0"></span>elated processes.</div><div class="t m0 x35 h4b y40ce ff16 fs27 fc0 sc0 ls0 ws0">14.9 <span class="_ _93"> </span>Summary</div><div class="t m0 x32 h49 y40cf ff19 fs26 fc0 sc0 ls0 ws0">In <span class="_ _3"></span>this <span class="_ _3"></span>chapter<span class="_ _6"></span><span class="ls1128">,w<span class="_ _4f"></span><span class="ls0">e’ve <span class="_ _3"></span>described <span class="_ _3"></span>numerous <span class="_ _2"></span>advanced <span class="_ _3"></span>I/O <span class="_ _3"></span>functions, <span class="_ _3"></span>many <span class="_ _3"></span>of <span class="_ _3"></span>which <span class="_ _3"></span>are</span></span></div><div class="t m0 x32 h49 y40d0 ff19 fs26 fc0 sc0 ls0 ws0">used in the examples in later chapters:</div><div class="t m0 x3f h49 y40d1 ff19 fs26 fc0 sc0 ls15d ws0">•N<span class="_ _4d"></span><span class="ls0">onblocking I/O<span class="_ _9"></span><span class="ls161">—i<span class="_ _6"></span><span class="ls0">ssuing an I/O operation without letting it block</span></span></span></div><div class="t m0 x3f h49 y40d2 ff19 fs26 fc0 sc0 ls15d ws0">•R<span class="_ _4d"></span><span class="ls0">ecor<span class="ls1129">dl<span class="_ _4a"></span><span class="ls0">ocking <span class="_"> </span>(which <span class="_ _53"> </span>we’ll <span class="_"> </span>look <span class="_ _53"> </span>at <span class="_"> </span>in <span class="_ _53"> </span>mor<span class="ls112a">ed<span class="_ _55"></span><span class="ls0">etail <span class="_ _e"> </span>through <span class="_ _e"> </span>an <span class="_"> </span>example, <span class="_ _53"> </span>the</span></span></span></span></span></div><div class="t m0 x15 h49 y40d3 ff19 fs26 fc0 sc0 ls0 ws0">database library in Chapter 20)</div><div class="t m0 x3f h4d y40d4 ff19 fs26 fc0 sc0 ls15d ws0">•I<span class="_ _4d"></span><span class="ls0">/O <span class="_ _3"></span>multiplexing<span class="_ _9"></span><span class="ls161">—t<span class="_ _6"></span><span class="ls0">he<span class="_ _47"> </span><span class="ff1a">select<span class="_ _47"> </span></span>and<span class="_ _47"> </span><span class="ff1a">poll<span class="_ _47"> </span></span>functions <span class="_ _3"></span>(we’ll <span class="_ _3"></span>use <span class="_ _3"></span>these <span class="_ _3"></span>in <span class="_ _3"></span>many <span class="_ _3"></span>of</span></span></span></div><div class="t m0 x15 h49 y40d5 ff19 fs26 fc0 sc0 ls0 ws0">the later examples)</div><div class="t m0 x3f h49 y40d6 ff19 fs26 fc0 sc0 ls15d ws0">•A<span class="_ _4d"></span><span class="ls0">synchronous I/O</span></div><div class="t m0 x3f h4d y40d7 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">readv<span class="_ _80"> </span></span>and<span class="_"> </span><span class="ff1a">writev<span class="_ _66"> </span></span>functions (also used in many of the later examples)</span></div><div class="t m0 x3f h4d y40d8 ff19 fs26 fc0 sc0 ls15d ws0">•M<span class="_ _4d"></span><span class="ls0">emory-mapped I/O (<span class="ff1a">mmap</span>)</span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.891368px;bottom:508.008878px;width:90.804306px;height:19.680023px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
