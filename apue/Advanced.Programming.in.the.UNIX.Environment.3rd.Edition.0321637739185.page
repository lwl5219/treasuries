<div id="pfb9" class="pf w4 h1f" data-page-no="b9"><div class="pc pcb9 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bgb9.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>5.6<span class="_ _1d8"> </span>Reading <span class="_"> </span>and <span class="_"> </span>W<span class="_ _1"></span>riting <span class="_"> </span>a <span class="_"> </span>Stream<span class="_ _1b"> </span><span class="ff18">151</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _53"> </span>function<span class="_ _44"> </span><span class="ff1a">getchar<span class="_ _44"> </span></span>is <span class="_ _53"> </span>deﬁned <span class="_ _53"> </span>to <span class="_ _53"> </span>be <span class="_ _53"> </span>equivalent <span class="_ _53"> </span>to<span class="_ _4b"> </span><span class="ff1a">getc(stdin)</span><span class="ls690">.T<span class="_ _52"></span><span class="ls0">he <span class="_ _42"> </span>difference</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">between<span class="_"> </span><span class="ff1a">getc<span class="_ _66"> </span></span>and<span class="_ _47"> </span><span class="ff1a">fgetc<span class="_ _66"> </span></span>is that<span class="_ _66"> </span><span class="ff1a">getc<span class="_ _66"> </span></span>can <span class="_ _2"></span>be <span class="_ _2"></span>implemented <span class="_ _2"></span>as a <span class="_ _2"></span>macro, whereas<span class="_"> </span><span class="ff1a">fgetc</span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">cannot be implemented as a macro. <span class="_"> </span>This<span class="_"> </span>means thr<span class="_ _0"></span>ee things.</div><div class="t m0 x3f h26 y344 ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>The<span class="_ _47"> </span>argument <span class="_ _3"></span>to<span class="_ _47"> </span><span class="ff1a">getc<span class="_ _47"> </span></span>should <span class="_ _3"></span>not <span class="_ _3"></span>be <span class="_ _3"></span>an <span class="_ _9"></span>expression <span class="_ _2"></span>with <span class="_ _3"></span>side <span class="_ _3"></span>effects, <span class="_ _3"></span>because <span class="_ _3"></span>it</div><div class="t m0 x41 h2a y345 ff19 fsf fc0 sc0 ls0 ws0">could be evaluated mor<span class="ls44">et<span class="_ _4f"></span><span class="ls0">han once.</span></span></div><div class="t m0 x3f h26 y1541 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Since<span class="_"> </span><span class="ff1a">fgetc<span class="_ _66"> </span></span>is <span class="_ _2"></span>guaranteed to <span class="_ _2"></span>be a <span class="_ _2"></span>function, we <span class="_ _2"></span>can take <span class="_ _2"></span>its address. <span class="_"> </span>This<span class="_"> </span>allows</div><div class="t m0 x41 h26 y940 ff19 fsf fc0 sc0 ls0 ws0">us to pass the address of<span class="_"> </span><span class="ff1a">fgetc<span class="_ _80"> </span></span>as an argument to another function.</div><div class="t m0 x3f h26 y1542 ff19 fsf fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>Calls<span class="_ _66"> </span>to<span class="_ _47"> </span><span class="ff1a">fgetc<span class="_ _66"> </span></span>probably <span class="_ _2"></span>take <span class="_ _2"></span>longer <span class="_ _2"></span>than <span class="_ _3"></span>calls <span class="_ _2"></span>to<span class="_ _47"> </span><span class="ff1a">getc</span>,<span class="_ _66"> </span>as<span class="_ _47"> </span>it<span class="_ _66"> </span>usually <span class="_ _2"></span>takes <span class="_ _2"></span>more</div><div class="t m0 x41 h2a y942 ff19 fsf fc0 sc0 ls0 ws0">time to call a function.</div><div class="t m0 x3f h26 ye85 ff19 fsf fc0 sc0 ls0 ws0">These <span class="_ _3"></span>three <span class="_ _2"></span>functions <span class="_ _3"></span>return <span class="_ _2"></span>the <span class="_ _3"></span>next <span class="_ _3"></span>character <span class="_ _3"></span>as <span class="_ _3"></span>an<span class="_ _47"> </span><span class="ff1a">unsigned <span class="_ _4f"></span>char<span class="_ _47"> </span><span class="ff19">converted <span class="_ _3"></span>to</span></span></div><div class="t m0 x32 h26 y10ce ff19 fsf fc0 sc0 ls0 ws0">an<span class="_ _47"> </span><span class="ff1a">int</span><span class="ls691">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>reason <span class="_ _3"></span>for <span class="_ _9"></span>specifying <span class="_ _3"></span>unsigned <span class="_ _9"></span>is <span class="_ _3"></span>so <span class="_ _9"></span>that <span class="_ _3"></span>the <span class="_ _3"></span>high-order <span class="_ _3"></span>bit, <span class="_ _9"></span>if <span class="_ _3"></span>set, <span class="_ _9"></span>doesn’t</span></span></div><div class="t m0 x32 h2a y1543 ff19 fsf fc0 sc0 ls0 ws0">cause <span class="_ _3"></span>the <span class="_ _3"></span>return <span class="_ _3"></span>value <span class="_ _9"></span>to <span class="_ _3"></span>be <span class="_ _3"></span>negative.<span class="_ _5a"> </span>The <span class="_ _3"></span>reason <span class="_ _3"></span>for <span class="_ _3"></span>requiring <span class="_ _3"></span>an <span class="_ _3"></span>integer <span class="_ _9"></span>return <span class="_ _2"></span>value</div><div class="t m0 x32 h2a y643 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _23"> </span>so <span class="_ _42"> </span>that <span class="_ _42"> </span>all <span class="_ _42"> </span>possible <span class="_ _23"> </span>character <span class="_ _42"> </span>values <span class="_ _42"> </span>can <span class="_ _23"> </span>be <span class="_ _42"> </span>returned, <span class="_ _23"> </span>along <span class="_ _42"> </span>with <span class="_ _42"> </span>an <span class="_ _23"> </span>indication <span class="_ _42"> </span>that</div><div class="t m0 x32 h26 y1544 ff19 fsf fc0 sc0 ls0 ws0">either <span class="_ _9"></span>an <span class="_ _23"> </span>error <span class="_ _9"></span>occurred <span class="_ _9"></span>or <span class="_ _23"></span>the <span class="_ _23"></span>end <span class="_ _9"></span>of <span class="_ _23"></span>ﬁle <span class="_ _9"></span>has <span class="_ _23"> </span>been <span class="_ _23"></span>encounter<span class="_ _0"></span>ed. <span class="_ _45"> </span>The<span class="_ _35"> </span>constant<span class="_ _45"> </span><span class="ff1a">EOF<span class="_ _45"> </span></span>in</div><div class="t m0 x32 h26 y1545 ff1a fsf fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _66"> </span><span class="ff19">is requir<span class="_ _0"></span>ed to be <span class="_ _2"></span>a negative <span class="_ _2"></span>value.<span class="_ _46"> </span>Its value <span class="_ _2"></span>is often<span class="_ _66"> </span><span class="ff20">−</span>1. <span class="_"> </span>This<span class="_ _66"> </span><span class="ls45">re<span class="_ _2"></span></span>presentation</span></div><div class="t m0 x32 h2a y1546 ff19 fsf fc0 sc0 ls0 ws0">also <span class="_ _66"> </span>means <span class="_ _47"> </span>that <span class="_ _66"> </span>we <span class="_ _47"> </span>cannot <span class="_ _66"> </span>stor<span class="ls692">et<span class="_ _1d"></span><span class="ls0">he <span class="_ _47"> </span>return <span class="_"> </span>value <span class="_ _47"> </span>from <span class="_"> </span>these <span class="_ _66"> </span>three <span class="_ _66"> </span>functions <span class="_ _47"> </span>in <span class="_ _66"> </span>a</span></span></div><div class="t m0 x32 h26 y1547 ff19 fsf fc0 sc0 ls0 ws0">character variable and later compar<span class="ls44">et<span class="_ _4f"></span><span class="ls0">his value with the constant<span class="_"> </span><span class="ff1a">EOF</span>.</span></span></div><div class="t m0 x3f h2a y1548 ff19 fsf fc0 sc0 ls0 ws0">Note <span class="_ _2"></span>that <span class="_ _3"></span>these <span class="_ _3"></span>functions <span class="_ _3"></span>return <span class="_ _2"></span>the <span class="_ _3"></span>same <span class="_ _3"></span>value <span class="_ _3"></span>whether <span class="_ _3"></span>an <span class="_ _2"></span>error <span class="_ _3"></span>occurs <span class="_ _2"></span>or <span class="_ _3"></span>the <span class="_ _3"></span>end</div><div class="t m0 x32 h26 y14b2 ff19 fsf fc0 sc0 ls0 ws0">of ﬁle <span class="_ _2"></span>is <span class="_ _2"></span>reached. <span class="_ _66"> </span>T<span class="_ _6"></span><span class="ls693">od<span class="_ _4f"></span><span class="ls0">istinguish <span class="_ _2"></span>between <span class="_ _2"></span>the <span class="_ _2"></span>two, <span class="_ _2"></span>we <span class="_ _2"></span>must <span class="_ _2"></span>call <span class="_ _2"></span>either<span class="_ _66"> </span><span class="ff1a">ferror<span class="_ _47"> </span></span>or<span class="_"> </span><span class="ff1a">feof</span>.</span></span></div><div class="t m0 x3f h57 y1549 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h57 y154a ff1a fs2d fc0 sc0 ls0 ws0">int ferror(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x3f h57 y154b ff1a fs2d fc0 sc0 ls0 ws0">int feof(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x8c h5f y154c ff19 fs2d fc0 sc0 ls0 ws0">Both return: nonzer<span class="_ _0"></span><span class="ls110">o(<span class="_ _5"></span><span class="ls0">true) if condition is true, 0 (false) otherwise</span></span></div><div class="t m0 x3f h57 y154d ff1a fs2d fc0 sc0 ls0 ws0">void clearerr(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x32 h4d y154e ff19 fs26 fc0 sc0 ls0 ws0">In most implementations, two ﬂags ar<span class="lsd3">em<span class="_ _4f"></span><span class="ls0">aintained for each stream in the<span class="_"> </span><span class="ff1a">FILE<span class="_ _80"> </span></span>object:</span></span></div><div class="t m0 x3f h49 y154f ff19 fs26 fc0 sc0 ls694 ws0">•A<span class="_ _49"></span><span class="lsd3">ne<span class="_ _5"></span><span class="ls0">rror ﬂag</span></span></div><div class="t m0 x3f h49 y1550 ff19 fs26 fc0 sc0 ls694 ws0">•A<span class="_ _49"></span><span class="lsd3">ne<span class="_ _5"></span><span class="ls0">nd-of-ﬁle ﬂag</span></span></div><div class="t m0 x32 h4d y1551 ff19 fs26 fc0 sc0 ls0 ws0">Both ﬂags ar<span class="lsd3">ec<span class="_ _4f"></span><span class="ls0">leared by calling<span class="_"> </span><span class="ff1a">clearerr</span>.</span></span></div><div class="t m0 x3f h4d y1552 ff19 fs26 fc0 sc0 ls0 ws0">After reading fr<span class="_ _0"></span>om a str<span class="_ _0"></span>eam, we can push back characters by calling<span class="_"> </span><span class="ff1a">ungetc</span>.</div><div class="t m0 x3f h4e y1553 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h4e y1554 ff1a fs28 fc0 sc0 ls0 ws0">int ungetc(int<span class="_"> </span><span class="ff1b">c</span><span class="ls1b6">,F<span class="_ _1d"></span><span class="ls0">ILE *<span class="ff1b">fp</span>);</span></span></div><div class="t m0 x101 h4e y1555 ff19 fs28 fc0 sc0 ls0 ws0">Returns:<span class="_"> </span><span class="ff1b">c<span class="_"> </span></span>if OK,<span class="_"> </span><span class="ff1a">EOF<span class="_ _e"> </span></span>on error</div><div class="t m0 x32 h55 y1556 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _3"></span>characters <span class="_ _3"></span>that <span class="_ _3"></span>ar<span class="ls695">ep<span class="_ _8"></span><span class="ls0">ushed <span class="_ _3"></span>back <span class="_ _3"></span>ar<span class="ls696">er<span class="_ _b"></span><span class="ls0">eturned <span class="_ _3"></span>by <span class="_ _3"></span>subsequent <span class="_ _3"></span>reads <span class="_ _2"></span>on <span class="_ _3"></span>the <span class="_ _3"></span>stream <span class="_ _3"></span>in</span></span></span></span></div><div class="t m0 x32 h55 y1557 ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">verse <span class="_"> </span>order <span class="_ _53"> </span>of <span class="_"> </span>their <span class="_ _e"> </span>pushing.<span class="_ _48"> </span>Be <span class="_"> </span>aware, <span class="_ _e"> </span>however<span class="_ _6"></span><span class="ls697">,t<span class="_ _55"></span><span class="ls0">hat <span class="_"> </span>although <span class="_ _e"> </span>ISO <span class="_"> </span>C <span class="_ _53"> </span>allows <span class="_"> </span>an</span></span></span></div><div class="t m0 x32 h55 y1558 ff19 fs2c fc0 sc0 ls0 ws0">implementation <span class="_ _3"></span>to <span class="_ _9"></span>support <span class="_ _9"></span>any <span class="_ _9"></span>amount <span class="_ _9"></span>of <span class="_ _3"></span>pushback, <span class="_ _9"></span>an <span class="_ _9"></span>implementation <span class="_ _9"></span>is <span class="_ _9"></span>requir<span class="_ _1"></span>ed <span class="_ _9"></span>to</div><div class="t m0 x32 h55 y1559 ff19 fs2c fc0 sc0 ls0 ws0">provide only a single character of pushback.<span class="_ _46"> </span><span class="ls155">We <span class="_ _53"> </span>s<span class="_ _9"></span></span>hould not count on <span class="_ _2"></span>mor<span class="ls698">et<span class="_ _4f"></span><span class="ls0">han a single</span></span></div><div class="t m0 x32 h55 y155a ff19 fs2c fc0 sc0 ls0 ws0">character<span class="_ _6"></span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
