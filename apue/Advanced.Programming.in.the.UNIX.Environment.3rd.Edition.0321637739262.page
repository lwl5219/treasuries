<div id="pf106" class="pf w4 h1f" data-page-no="106"><div class="pc pc106 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg106.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">228<span class="_ _1b"> </span><span class="ff19">Process <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _222"> </span>Chapter<span class="_ _4b"> </span>8</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">kernel <span class="_ _2"></span>and <span class="_ _3"></span>is <span class="_ _3"></span>known <span class="_ _3"></span>as <span class="_ _2"></span>a <span class="_ _3"></span>system <span class="_ _3"></span>process. <span class="_ _66"> </span>Process <span class="_ _2"></span>ID <span class="_ _3"></span>1 <span class="_ _3"></span>is <span class="_ _2"></span>usually <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">init<span class="_ _47"> </span></span>process <span class="_ _2"></span>and</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">is invoked by <span class="_ _2"></span>the kernel <span class="_ _2"></span>at the <span class="_ _2"></span>end of <span class="_ _2"></span>the bootstrap <span class="_ _2"></span>procedur<span class="_ _1"></span>e. <span class="_ _66"> </span>The<span class="_ _66"> </span>program ﬁle for <span class="_ _2"></span>this</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _3"></span>was<span class="_ _45"> </span><span class="ff1a">/etc/init<span class="_ _45"> </span></span>in <span class="_ _3"></span>older <span class="_ _9"></span>versions <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>UNIX <span class="_ _9"></span>System <span class="_ _9"></span>and <span class="_ _3"></span>is<span class="_ _45"> </span><span class="ff1a">/sbin/init<span class="_ _45"> </span></span>in</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">newer <span class="_ _42"> </span>versions.<span class="_ _51"> </span>This <span class="_ _42"> </span>process <span class="_ _23"> </span>is <span class="_ _42"> </span>responsible <span class="_ _23"> </span>for <span class="_ _42"> </span>bringing <span class="_ _42"> </span>up <span class="_ _23"> </span>a <span class="_ _42"> </span>UNIX <span class="_ _42"> </span>system <span class="_ _42"> </span>after <span class="_ _42"> </span>the</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">kernel <span class="_ _9"></span>has <span class="_ _9"></span>been <span class="_ _3"></span>bootstrapped.<span class="_ _5a"> </span><span class="ff1a">init<span class="_ _45"> </span></span>usually <span class="_ _9"></span>reads <span class="_ _3"></span>the <span class="_ _9"></span>system-dependent <span class="_ _9"></span>initialization</div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">ﬁles <span class="_ _a"></span>— <span class="_ _a"></span>the<span class="_ _16"> </span><span class="ff1a">/etc/rc*<span class="_ _61"> </span></span>ﬁles <span class="_ _47"> </span>or<span class="_ _61"> </span><span class="ff1a">/etc/inittab<span class="_ _61"> </span></span>and <span class="_ _47"> </span>the <span class="_ _47"> </span>ﬁles <span class="_ _47"> </span>in<span class="_ _61"> </span><span class="ff1a">/etc/init.d</span>—and</div><div class="t m0 x32 h26 y135 ff19 fsf fc0 sc0 ls0 ws0">brings <span class="_ _2"></span>the <span class="_ _3"></span>system <span class="_ _3"></span>to <span class="_ _3"></span>a <span class="_ _3"></span>certain <span class="_ _3"></span>state, <span class="_ _3"></span>such <span class="_ _2"></span>as <span class="_ _3"></span>multiuser<span class="_ _1"></span><span class="ls915">.T<span class="_ _1d"></span><span class="ls0">he<span class="_ _47"> </span><span class="ff1a">init<span class="_ _47"> </span></span>process <span class="_ _2"></span>never <span class="_ _3"></span>dies.<span class="_ _16"> </span>It</span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _e"> </span>a <span class="_ _e"> </span>normal <span class="_ _e"> </span>user <span class="_"> </span>pr<span class="_ _1"></span>ocess, <span class="_"> </span>not <span class="_ _53"> </span>a <span class="_"> </span>system <span class="_ _53"> </span>process <span class="_ _53"> </span>within <span class="_"> </span>the <span class="_ _53"> </span>kernel, <span class="_"> </span>like <span class="_ _53"> </span>the <span class="_ _e"> </span>swapper<span class="_ _1"></span>,</div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">although <span class="_ _53"> </span>it <span class="_ _53"> </span>does <span class="_ _53"> </span>run <span class="_ _53"> </span>with <span class="_ _53"> </span>superuser <span class="_ _53"> </span>privileges.<span class="_ _65"> </span>Later <span class="_ _53"> </span>in <span class="_ _53"> </span>this <span class="_ _53"> </span>chapter<span class="_ _1"></span><span class="ls916">,w<span class="_ _c"></span><span class="ls0">e’ll <span class="_ _53"> </span>see <span class="_ _53"> </span>how</span></span></div><div class="t m0 x32 h26 y138 ff1a fsf fc0 sc0 ls0 ws0">init<span class="_ _80"> </span><span class="ff19">becomes the parent process of any orphaned child pr<span class="_ _1"></span>ocess.</span></div><div class="t m0 x76 h52 ybf8 ff19 fs2a fc0 sc0 ls0 ws0">In <span class="_ _2"></span>Mac <span class="_ _3"></span>OS <span class="_ _3"></span>X <span class="_ _3"></span>10.4, <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">init<span class="_ _80"> </span></span>process <span class="_ _3"></span>was <span class="_ _2"></span>replaced <span class="_ _3"></span>with <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">launchd<span class="_ _80"> </span></span>process, <span class="_ _2"></span>which <span class="_ _3"></span>performs</div><div class="t m0 x76 h52 y1e50 ff19 fs2a fc0 sc0 ls0 ws0">the same <span class="_ _2"></span>set <span class="_ _2"></span>of <span class="_ _2"></span>tasks <span class="_ _2"></span>as<span class="_ _80"> </span><span class="ff1a">init</span><span class="ls917">,b<span class="_ _5"></span><span class="ls0">ut <span class="_ _2"></span>has <span class="_ _2"></span>expanded <span class="_ _2"></span>functionality<span class="_ _6"></span><span class="ls918">.S<span class="_ _c"></span><span class="ls0">ee <span class="_ _2"></span>Section <span class="_ _2"></span>5.10 <span class="_ _2"></span>in <span class="_ _2"></span>Singh</span></span></span></span></div><div class="t m0 x58 h51 y1e51 ff19 fs2a fc0 sc0 ls0 ws0">[</div><div class="t m0 x162 h51 y1e50 ff19 fs2a fc0 sc0 ls0 ws0">2006</div><div class="t m0 x163 h51 y1e51 ff19 fs2a fc0 sc0 ls0 ws0">]</div><div class="t m0 x76 h52 y1e52 ff19 fs2a fc0 sc0 ls0 ws0">for a discussion of how<span class="_"> </span><span class="ff1a">launchd<span class="_ _53"> </span></span>operates.</div><div class="t m0 x3f h2a y1e53 ff19 fsf fc0 sc0 ls0 ws0">Each <span class="_ _2"></span>UNIX <span class="_ _2"></span>System <span class="_ _2"></span>implementation <span class="_ _3"></span>has <span class="_ _2"></span>its <span class="_ _2"></span>own <span class="_ _2"></span>set <span class="_ _3"></span>of <span class="_ _2"></span>kernel <span class="_ _2"></span>processes <span class="_ _2"></span>that <span class="_ _2"></span>provide</div><div class="t m0 x32 h2a y1e54 ff19 fsf fc0 sc0 ls0 ws0">operating <span class="_ _23"></span>system <span class="_ _9"></span>services.<span class="_ _51"> </span>For <span class="_ _23"></span>example, <span class="_ _9"></span>on <span class="_ _23"> </span>some <span class="_ _23"></span>virtual <span class="_ _9"></span>memory <span class="_ _23"> </span>implementations <span class="_ _23"></span>of</div><div class="t m0 x32 h2b y1e55 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _66"> </span>UNIX <span class="_ _47"> </span>System, <span class="_"> </span>process <span class="_ _66"> </span>ID <span class="_ _47"> </span>2 <span class="_"> </span>is <span class="_ _47"> </span>the<span class="_ _46"> </span><span class="ff1b">pagedaemon</span><span class="ls919">.T<span class="_ _49"></span><span class="ls0">his <span class="_ _47"> </span>process <span class="_"> </span>is <span class="_ _66"> </span>responsible <span class="_ _66"> </span>for</span></span></div><div class="t m0 x32 h2a y1e56 ff19 fsf fc0 sc0 ls0 ws0">supporting the paging of the virtual memory system.</div><div class="t m0 x3f h2a y1e57 ff19 fsf fc0 sc0 ls0 ws0">In <span class="_ _e"> </span>addition <span class="_ _e"> </span>to <span class="_ _e"> </span>the <span class="_ _e"> </span>process <span class="_ _e"> </span>ID, <span class="_ _e"> </span>ther<span class="ls35a">ea<span class="_ _55"></span><span class="ls45">re <span class="_"> </span>o<span class="_ _2"></span><span class="ls0">ther <span class="_ _e"> </span>identiﬁers <span class="_ _e"> </span>for <span class="_ _e"> </span>every <span class="_ _e"> </span>process. <span class="_ _4b"> </span>The</span></span></span></div><div class="t m0 x32 h2a y1e58 ff19 fsf fc0 sc0 ls0 ws0">following functions return these identiﬁers.</div><div class="t m0 x3f h57 y1e59 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;unistd.h&gt;</div><div class="t m0 x3f h57 y1e5a ff1a fs2d fc0 sc0 ls0 ws0">pid_t getpid(void);</div><div class="t m0 x1c5 h5f y1e5b ff19 fs2d fc0 sc0 ls0 ws0">Returns: process ID of calling pr<span class="_ _0"></span>ocess</div><div class="t m0 x3f h57 y1e5c ff1a fs2d fc0 sc0 ls0 ws0">pid_t getppid(void);</div><div class="t m0 xca h5f y1e5d ff19 fs2d fc0 sc0 ls0 ws0">Returns: parent pr<span class="_ _0"></span>ocess ID of calling process</div><div class="t m0 x3f h57 y1e5e ff1a fs2d fc0 sc0 ls0 ws0">uid_t getuid(void);</div><div class="t m0 x94 h5f y1e5f ff19 fs2d fc0 sc0 ls0 ws0">Returns: real user ID of calling pr<span class="_ _0"></span>ocess</div><div class="t m0 x3f h57 y1e60 ff1a fs2d fc0 sc0 ls0 ws0">uid_t geteuid(void);</div><div class="t m0 x96 h5f y1e61 ff19 fs2d fc0 sc0 ls0 ws0">Returns: effective user ID of calling pr<span class="_ _0"></span>ocess</div><div class="t m0 x3f h57 y1e62 ff1a fs2d fc0 sc0 ls0 ws0">gid_t getgid(void);</div><div class="t m0 x17a h5f y1e63 ff19 fs2d fc0 sc0 ls0 ws0">Returns: real gr<span class="_ _0"></span>oup ID of calling process</div><div class="t m0 x3f h57 y1e64 ff1a fs2d fc0 sc0 ls0 ws0">gid_t getegid(void);</div><div class="t m0 x1b3 h5f y1e65 ff19 fs2d fc0 sc0 ls0 ws0">Returns: effective gr<span class="_ _0"></span>oup ID of calling process</div><div class="t m0 x32 h49 y1e66 ff19 fs26 fc0 sc0 ls0 ws0">Note that <span class="_ _2"></span>none <span class="_ _2"></span>of <span class="_ _2"></span>these <span class="_ _2"></span>functions <span class="_ _2"></span>has <span class="_ _2"></span>an <span class="_ _2"></span>error return. <span class="_ _66"> </span>W<span class="_ _6"></span>e’ll <span class="_ _2"></span>return to <span class="_ _2"></span>the <span class="_ _2"></span>parent process</div><div class="t m0 x32 h4d y1e67 ff19 fs26 fc0 sc0 ls0 ws0">ID <span class="_ _9"></span>in <span class="_ _9"></span>the <span class="_ _9"></span>next <span class="_ _9"></span>section <span class="_ _9"></span>when <span class="_ _9"></span>we <span class="_ _9"></span>discuss <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>function. <span class="_ _47"> </span>The<span class="_ _45"> </span><span class="lscc">re<span class="_ _2"></span></span>al <span class="_ _9"></span>and <span class="_ _9"></span>effective <span class="_ _3"></span>user</div><div class="t m0 x32 h49 y1e68 ff19 fs26 fc0 sc0 ls0 ws0">and group IDs wer<span class="_ _0"></span><span class="lsd3">ed<span class="_ _d"></span><span class="ls0">iscussed in Section 4.4.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
