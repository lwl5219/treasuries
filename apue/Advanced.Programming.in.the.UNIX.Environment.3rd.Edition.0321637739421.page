<div id="pf1a5" class="pf w4 h1f" data-page-no="1a5"><div class="pc pc1a5 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1a5.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.4 <span class="_ _283"> </span>Thread <span class="_"> </span>Cr<span class="_ _0"></span>eation<span class="_ _1b"> </span><span class="ff18">387</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="lsd95">e1<span class="_ _43"></span><span class="ls0">1.2 <span class="_ _3"></span>creates <span class="_ _3"></span>one <span class="_ _9"></span>thread <span class="_ _3"></span>and <span class="_ _3"></span>prints <span class="_ _9"></span>the <span class="_ _3"></span>process <span class="_ _3"></span>and <span class="_ _9"></span>thread <span class="_ _3"></span>IDs <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>new <span class="_ _9"></span>thread</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">and the initial thread.</div><div class="t m0 x32 h4e y3149 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y314a ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x32 h4e y314b ff1a fs28 fc0 sc0 ls0 ws0">pthread_t ntid;</div><div class="t m0 x32 h4e y314c ff1a fs28 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h4e y314d ff1a fs28 fc0 sc0 ls0 ws0">printids(const char *s)</div><div class="t m0 x32 h4e y314e ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y314f ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _189"> </span>pid;</div><div class="t m0 x8a h4e y3150 ff1a fs28 fc0 sc0 ls0 ws0">pthread_t <span class="_ _d9"> </span>tid;</div><div class="t m0 x8a h4e y3151 ff1a fs28 fc0 sc0 ls0 ws0">pid = getpid();</div><div class="t m0 x8a h4e y3152 ff1a fs28 fc0 sc0 ls0 ws0">tid = pthread_self();</div><div class="t m0 x8a h4e y3153 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;%s pid %lu tid %lu (0x%lx)\n&quot;, s, (unsigned long)pid,</div><div class="t m0 x194 h4e y3154 ff1a fs28 fc0 sc0 ls0 ws0">(unsigned long)tid, (unsigned long)tid);</div><div class="t m0 x32 h4e y3155 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y3156 ff1a fs28 fc0 sc0 ls0 ws0">void *</div><div class="t m0 x32 h4e y3157 ff1a fs28 fc0 sc0 ls0 ws0">thr_fn(void *arg)</div><div class="t m0 x32 h4e y3158 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y3159 ff1a fs28 fc0 sc0 ls0 ws0">printids(&quot;new thread: &quot;);</div><div class="t m0 x8a h4e y315a ff1a fs28 fc0 sc0 ls0 ws0">return((void *)0);</div><div class="t m0 x32 h4e y315b ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y315c ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y315d ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y315e ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y315f ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>err;</div><div class="t m0 x8a h4e y3160 ff1a fs28 fc0 sc0 ls0 ws0">err = pthread_create(&amp;ntid, NULL, thr_fn, NULL);</div><div class="t m0 x8a h4e y3161 ff1a fs28 fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 x9d h4e y3162 ff1a fs28 fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t create thread&quot;);</div><div class="t m0 x8a h4e y3163 ff1a fs28 fc0 sc0 ls0 ws0">printids(&quot;main thread:&quot;);</div><div class="t m0 x8a h4e y3164 ff1a fs28 fc0 sc0 ls0 ws0">sleep(1);</div><div class="t m0 x8a h4e y3165 ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y3166 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x11b h2e y3167 ff18 fs11 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.2<span class="_ _d9"> </span><span class="ff19">Printing thread IDs</span></div><div class="t m0 x32 h55 y3168 ff19 fs2c fc0 sc0 ls0 ws0">This <span class="_ _9"></span>example <span class="_ _9"></span>has <span class="_ _9"></span>two <span class="_ _9"></span>oddities, <span class="_ _9"></span>which <span class="_ _23"></span>ar<span class="_ _0"></span><span class="lsd96">en<span class="_ _b"></span><span class="ls0">ecessary <span class="_ _9"></span>to <span class="_ _9"></span>handle <span class="_ _9"></span>races <span class="_ _9"></span>between <span class="_ _9"></span>the <span class="_ _23"></span>main</span></span></div><div class="t m0 x32 h55 y3169 ff19 fs2c fc0 sc0 ls0 ws0">thread <span class="_ _2"></span>and <span class="_ _9"></span>the <span class="_ _3"></span>new <span class="_ _3"></span>thread. <span class="_ _47"> </span>(W<span class="_ _6"></span>e’ll <span class="_ _3"></span>learn <span class="_ _9"></span>better <span class="_ _3"></span>ways <span class="_ _3"></span>to <span class="_ _3"></span>deal <span class="_ _9"></span>with <span class="_ _3"></span>these <span class="_ _3"></span>conditions <span class="_ _9"></span>later</div><div class="t m0 x32 h55 y316a ff19 fs2c fc0 sc0 ls0 ws0">in <span class="_ _2"></span>this <span class="_ _3"></span>chapter<span class="_ _6"></span>.) <span class="_ _47"> </span>The<span class="_ _47"> </span>ﬁrst <span class="_ _3"></span>is <span class="_ _2"></span>the <span class="_ _3"></span>need <span class="_ _2"></span>to <span class="_ _3"></span>sleep <span class="_ _3"></span>in <span class="_ _2"></span>the <span class="_ _3"></span>main <span class="_ _2"></span>thread. <span class="_ _47"> </span>If<span class="_ _66"> </span>it <span class="_ _3"></span>doesn’t <span class="_ _3"></span>sleep, <span class="_ _2"></span>the</div><div class="t m0 x32 h55 y316b ff19 fs2c fc0 sc0 ls0 ws0">main <span class="_ _23"> </span>thread <span class="_ _23"> </span>might <span class="_ _42"> </span>exit, <span class="_ _23"> </span>thereby <span class="_ _42"> </span>terminating <span class="_ _23"> </span>the <span class="_ _42"> </span>entir<span class="lsd97">ep<span class="_ _c"></span><span class="ls150">ro<span class="_ _2"></span><span class="ls0">cess <span class="_ _42"> </span>befor<span class="lsd98">et<span class="_ _43"></span><span class="ls0">he <span class="_ _23"></span>new <span class="_ _23"> </span>thread</span></span></span></span></span></div><div class="t m0 x32 h55 y316c ff19 fs2c fc0 sc0 ls0 ws0">gets <span class="_ _42"> </span>a <span class="_ _53"> </span>chance <span class="_ _53"> </span>to <span class="_ _53"> </span>run. <span class="_ _44"> </span>This<span class="_ _4b"> </span>behavior <span class="_ _53"> </span>is <span class="_ _53"> </span>dependent <span class="_ _42"> </span>on <span class="_ _53"> </span>the <span class="_ _53"> </span>operating <span class="_ _53"> </span>system’s <span class="_ _53"> </span>threads</div><div class="t m0 x32 h55 y316d ff19 fs2c fc0 sc0 ls0 ws0">implementation and scheduling algorithms.</div><div class="t m0 x3f h55 y316e ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _44"> </span>second <span class="_ _35"> </span>oddity <span class="_ _44"> </span>is <span class="_ _44"> </span>that <span class="_ _44"> </span>the <span class="_ _44"> </span>new <span class="_ _44"> </span>thread <span class="_ _35"> </span>obtains <span class="_ _44"> </span>its <span class="_ _44"> </span>thread <span class="_ _35"> </span>ID <span class="_ _44"> </span>by <span class="_ _44"> </span>calling</div><div class="t m0 x32 h54 y316f ff1a fs2c fc0 sc0 ls0 ws0">pthread_self<span class="_ _61"> </span><span class="ff19">instead <span class="_ _47"> </span>of <span class="_ _66"> </span>reading <span class="_ _66"> </span>it <span class="_ _47"> </span>out <span class="_ _47"> </span>of <span class="_ _66"> </span>shared <span class="_ _47"> </span>memory <span class="_ _66"> </span>or <span class="_ _47"> </span>receiving <span class="_ _66"> </span>it <span class="_ _47"> </span>as <span class="_ _66"> </span>an</span></div><div class="t m0 x32 h54 y3170 ff19 fs2c fc0 sc0 ls0 ws0">argument <span class="_"> </span>to <span class="_ _66"> </span>its <span class="_ _66"> </span>thread-start <span class="_ _66"> </span>routine. <span class="_ _46"> </span>Recall<span class="_ _61"> </span>that<span class="_ _46"> </span><span class="ff1a">pthread_create<span class="_ _61"> </span></span>will <span class="_ _66"> </span>return <span class="_ _66"> </span>the</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
