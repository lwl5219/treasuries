<div id="pf156" class="pf w4 h1f" data-page-no="156"><div class="pc pc156 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg156.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">308<span class="_ _1b"> </span><span class="ff19">Process <span class="_"> </span>Relationships<span class="_ _18d"> </span>Chapter <span class="_"> </span>9</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h57 y27e2 ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y27e3 ff1a fs2d fc0 sc0 ls0 ws0">sig_hup(int signo)</div><div class="t m0 x32 h57 y27e4 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y27e5 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;SIGHUP received, pid = %ld\n&quot;, (long)getpid());</div><div class="t m0 x32 h57 y27e6 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y1d35 ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y1d36 ff1a fs2d fc0 sc0 ls0 ws0">pr_ids(char *name)</div><div class="t m0 x32 h57 y1590 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1591 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;%s: pid = %ld, ppid = %ld, pgrp = %ld, tpgrp = %ld\n&quot;,</div><div class="t m0 x9d h57 y1d37 ff1a fs2d fc0 sc0 ls0 ws0">name, (long)getpid(), (long)getppid(), (long)getpgrp(),</div><div class="t m0 x9d h57 y1d38 ff1a fs2d fc0 sc0 ls0 ws0">(long)tcgetpgrp(STDIN_FILENO));</div><div class="t m0 x8a h57 y3cb ff1a fs2d fc0 sc0 ls0 ws0">fflush(stdout);</div><div class="t m0 x32 h57 y3cc ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y27e7 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y27e8 ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h57 y27e9 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y27ea ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>c;</div><div class="t m0 x8a h57 y27eb ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h57 y27ec ff1a fs2d fc0 sc0 ls0 ws0">pr_ids(&quot;parent&quot;);</div><div class="t m0 x8a h57 y27ed ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 x9d h57 y24c8 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h57 y1d40 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid &gt; 0) {<span class="_ _87"> </span>/* parent */</span></div><div class="t m0 x9d h57 y1d41 ff1a fs2d fc0 sc0 ls0 ws0">sleep(5); <span class="_ _189"> </span>/*<span class="_"> </span>sleep to let child stop itself */</div><div class="t m0 x8a h57 y1d42 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {<span class="_ _82"> </span>/* child */</span></div><div class="t m0 x9d h57 y1d43 ff1a fs2d fc0 sc0 ls0 ws0">pr_ids(&quot;child&quot;);</div><div class="t m0 x9d h57 y1d44 ff1a fs2d fc0 sc0 ls0 ws0">signal(SIGHUP, sig_hup);<span class="_ _15"> </span>/* establish signal handler */</div><div class="t m0 x9d h57 y27ee ff1a fs2d fc0 sc0 ls0 ws0">kill(getpid(), SIGTSTP);<span class="_ _15"> </span>/* stop ourself */</div><div class="t m0 x9d h57 y27ef ff1a fs2d fc0 sc0 ls0 ws0">pr_ids(&quot;child&quot;); <span class="_ _68"> </span>/*<span class="_"> </span>prints only if we’re continued */</div><div class="t m0 x9d h57 y27f0 ff1a fs2d fc0 sc0 ls0 ws0">if (read(STDIN_FILENO, &amp;c, 1) != 1)</div><div class="t m0 x1f h57 y27f1 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;read error %d on controlling TTY\n&quot;, errno);</div><div class="t m0 x8a h57 y27f2 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y27f3 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y27f4 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x20e h2d y27f5 ff18 fs10 fc0 sc0 ls0 ws0">Figure 9.12<span class="_ _5a"> </span><span class="ff19">Creating an orphaned process gr<span class="_ _0"></span>oup</span></div><div class="t m0 x32 h49 y27f6 ff19 fs26 fc0 sc0 ls0 ws0">this example) and <span class="_ _2"></span>that the shell <span class="_ _2"></span>stays in <span class="_ _2"></span>its own process group</div><div class="t m0 x1 h49 y27f7 ff19 fs26 fc0 sc0 ls0 ws0">(</div><div class="t m0 xc h49 y27f6 ff19 fs26 fc0 sc0 ls0 ws0">2837</div><div class="t m0 x1ea h49 y27f7 ff19 fs26 fc0 sc0 ls0 ws0">)</div><div class="t m0 xd4 h49 y27f6 ff19 fs26 fc0 sc0 lsb57 ws0">.T<span class="_ _5b"></span><span class="ls0">he <span class="_ _2"></span>child inherits</span></div><div class="t m0 x32 h49 y27f8 ff19 fs26 fc0 sc0 ls0 ws0">the process gr<span class="_ _0"></span>oup of its par<span class="_ _0"></span>ent</div><div class="t m0 x146 h49 y27f9 ff19 fs26 fc0 sc0 ls0 ws0">(</div><div class="t m0 x136 h49 y27f8 ff19 fs26 fc0 sc0 ls0 ws0">6099</div><div class="t m0 xe h49 y27f9 ff19 fs26 fc0 sc0 ls0 ws0">)</div><div class="t m0 x99 h4d y27f8 ff19 fs26 fc0 sc0 ls199 ws0">.A<span class="_ _4a"></span><span class="ls0">fter the<span class="_"> </span><span class="ff1a">fork</span>,</span></div><div class="t m0 x3f h49 y27fa ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _3"></span>parent <span class="_ _3"></span>sleeps <span class="_ _3"></span>for <span class="_ _9"></span>5 <span class="_ _3"></span>seconds.<span class="_ _16"> </span>This <span class="_ _9"></span>is <span class="_ _3"></span>our <span class="_ _3"></span>(imperfect) <span class="_ _9"></span>way <span class="_ _3"></span>of <span class="_ _3"></span>letting <span class="_ _9"></span>the <span class="_ _3"></span>child</span></div><div class="t m0 x15 h49 y27fb ff19 fs26 fc0 sc0 ls0 ws0">execute befor<span class="lsd3">et<span class="_ _4f"></span><span class="ls0">he parent terminates.</span></span></div><div class="t m0 x3f h4d y27fc ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he child establishes a signal <span class="_ _2"></span>handler for the hang-up <span class="_ _2"></span>signal (<span class="ff1a">SIGHUP</span>)<span class="_"> </span>so<span class="_"> </span>we<span class="_"> </span>can</span></div><div class="t m0 x15 h49 y27fd ff19 fs26 fc0 sc0 ls0 ws0">see whether it is sent to the child.<span class="_ _59"> </span>(W<span class="_ _6"></span><span class="lsd3">ed<span class="_ _5"></span><span class="ls0">iscuss signal handlers in Chapter 10.)</span></span></div><div class="t m0 x3f h4d y27fe ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _23"></span>child <span class="_ _23"></span>sends <span class="_ _23"></span>itself <span class="_ _23"></span>the <span class="_ _23"></span>stop <span class="_ _23"></span>signal <span class="_ _23"></span>(<span class="ff1a">SIGTSTP</span><span class="ls60b">)w<span class="_ _43"></span><span class="ls0">ith <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">kill<span class="_ _35"> </span></span>function. <span class="_ _45"> </span>This</span></span></span></div><div class="t m0 x15 h49 y27ff ff19 fs26 fc0 sc0 ls0 ws0">stops <span class="_ _53"> </span>the <span class="_ _53"> </span>child, <span class="_ _53"> </span>similar <span class="_ _e"> </span>to <span class="_ _53"> </span>our <span class="_ _53"> </span>stopping <span class="_ _53"> </span>a <span class="_ _e"> </span>foregr<span class="_ _0"></span>ound <span class="_ _53"> </span>job <span class="_ _53"> </span>with <span class="_ _53"> </span>our <span class="_ _53"> </span>terminal’s</div><div class="t m0 x15 h49 y2800 ff19 fs26 fc0 sc0 ls0 ws0">suspend character (Control</div><div class="t m0 x10 h49 y2801 ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 xc1 h49 y2800 ff19 fs26 fc0 sc0 ls0 ws0">Z).</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
