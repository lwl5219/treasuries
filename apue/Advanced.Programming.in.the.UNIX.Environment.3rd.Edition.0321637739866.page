<div id="pf362" class="pf w4 h1f" data-page-no="362"><div class="pc pc362 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg362.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">832<span class="_ _1b"> </span><span class="ff19">Communicating <span class="_"> </span>with <span class="_"> </span>a <span class="_"> </span>Network <span class="_"> </span>Printer<span class="_ _23b"> </span>Chapter <span class="_"> </span>21</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">608 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">609 <span class="_ _68"> </span>*<span class="_"> </span>Single thread to communicate with the printer.</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">610 <span class="_ _68"> </span>*</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">611 <span class="_ _68"> </span>*<span class="_"> </span>LOCKING: acquires and releases joblock and configlock.</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">612 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">613 <span class="_ _d9"> </span>void<span class="_"> </span>*</div><div class="t m0 x32 h57 y56c7 ff1a fs2d fc0 sc0 ls0 ws0">614 <span class="_ _d9"> </span>printer_thread(void<span class="_"> </span>*arg)</div><div class="t m0 x32 h57 y56c8 ff1a fs2d fc0 sc0 ls0 ws0">615 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56c9 ff1a fs2d fc0 sc0 ls0 ws0">616 <span class="_ _15"> </span>struct<span class="_"> </span>job <span class="_ _8a"> </span>*jp;</div><div class="t m0 x32 h57 y56ca ff1a fs2d fc0 sc0 ls0 ws0">617 <span class="_ _15"> </span>int<span class="_ _166"> </span>hlen, ilen, sockfd, fd, nr, nw, extra;</div><div class="t m0 x32 h57 y56cb ff1a fs2d fc0 sc0 ls0 ws0">618 <span class="_ _15"> </span>char<span class="_ _82"> </span>*icp, *hcp, *p;</div><div class="t m0 x32 h57 y56cc ff1a fs2d fc0 sc0 ls0 ws0">619 <span class="_ _15"> </span>struct<span class="_"> </span>ipp_hdr <span class="_"> </span>*hp;</div><div class="t m0 x32 h57 y56cd ff1a fs2d fc0 sc0 ls0 ws0">620 <span class="_ _15"> </span>struct<span class="_"> </span>stat <span class="_ _15"> </span>sbuf;</div><div class="t m0 x32 h57 y56ce ff1a fs2d fc0 sc0 ls0 ws0">621 <span class="_ _15"> </span>struct<span class="_"> </span>iovec <span class="_ _68"> </span>iov[2];</div><div class="t m0 x32 h57 y56cf ff1a fs2d fc0 sc0 ls0 ws0">622 <span class="_ _15"> </span>char<span class="_ _82"> </span>name[FILENMSZ];</div><div class="t m0 x32 h57 y56d0 ff1a fs2d fc0 sc0 ls0 ws0">623 <span class="_ _15"> </span>char<span class="_ _82"> </span>hbuf[HBUFSZ];</div><div class="t m0 x32 h57 y56d1 ff1a fs2d fc0 sc0 ls0 ws0">624 <span class="_ _15"> </span>char<span class="_ _82"> </span>ibuf[IBUFSZ];</div><div class="t m0 x32 h57 y56d2 ff1a fs2d fc0 sc0 ls0 ws0">625 <span class="_ _15"> </span>char<span class="_ _82"> </span>buf[IOBUFSZ];</div><div class="t m0 x32 h57 y56d3 ff1a fs2d fc0 sc0 ls0 ws0">626 <span class="_ _15"> </span>char<span class="_ _82"> </span>str[64];</div><div class="t m0 x32 h57 y56d4 ff1a fs2d fc0 sc0 ls0 ws0">627 <span class="_ _15"> </span>struct<span class="_"> </span>timespec ts = { 60, 0 };<span class="_ _8a"> </span>/* 1 minute */</div><div class="t m0 x32 h57 y2f2d ff1a fs2d fc0 sc0 ls0 ws0">628 <span class="_ _15"> </span>for<span class="_"> </span>(;;) {</div><div class="t m0 x32 h57 y2f2e ff1a fs2d fc0 sc0 ls0 ws0">629 <span class="_ _186"> </span>/*</div><div class="t m0 x32 h57 y2f2f ff1a fs2d fc0 sc0 ls0 ws0">630 <span class="_ _176"> </span>*<span class="_"> </span>Get a job to print.</div><div class="t m0 x32 h57 y2f30 ff1a fs2d fc0 sc0 ls0 ws0">631 <span class="_ _176"> </span>*/</div><div class="t m0 x32 h57 y56fd ff1a fs2d fc0 sc0 ls0 ws0">632 <span class="_ _186"> </span>pthread_mutex_lock(&amp;joblock);</div><div class="t m0 x32 h57 y5848 ff1a fs2d fc0 sc0 ls0 ws0">633 <span class="_ _186"> </span>while<span class="_"> </span>(jobhead == NULL) {</div><div class="t m0 x32 h57 y5849 ff1a fs2d fc0 sc0 ls0 ws0">634 <span class="_ _82"> </span>log_msg(&quot;printer_thread:<span class="_"> </span>waiting...&quot;);</div><div class="t m0 x32 h57 y5a25 ff1a fs2d fc0 sc0 ls0 ws0">635 <span class="_ _82"> </span>pthread_cond_wait(&amp;jobwait,<span class="_"> </span>&amp;joblock);</div><div class="t m0 x32 h57 y5a26 ff1a fs2d fc0 sc0 ls0 ws0">636 <span class="_ _186"> </span>}</div><div class="t m0 x32 h57 y5a36 ff1a fs2d fc0 sc0 ls0 ws0">637 <span class="_ _186"> </span>remove_job(jp<span class="_"> </span><span class="ls15c">=j<span class="_ _1d"></span><span class="ls0">obhead);</span></span></div><div class="t m0 x32 h57 y5a37 ff1a fs2d fc0 sc0 ls0 ws0">638 <span class="_ _186"> </span>log_msg(&quot;printer_thread:<span class="_"> </span>picked up job %d&quot;, jp-&gt;jobid);</div><div class="t m0 x32 h57 y5a38 ff1a fs2d fc0 sc0 ls0 ws0">639 <span class="_ _186"> </span>pthread_mutex_unlock(&amp;joblock);</div><div class="t m0 x32 h57 y5a39 ff1a fs2d fc0 sc0 ls0 ws0">640 <span class="_ _186"> </span>update_jobno();</div><div class="t m0 x32 h4d y5c59 ff19 fs26 fc0 sc0 ls0 ws0">[608 <span class="_ _a"></span>– <span class="_ _a"></span>627]<span class="_ _65"> </span>The<span class="_ _59"> </span><span class="ff1a">printer_thread<span class="_ _46"> </span></span>function <span class="_"> </span>is <span class="_"> </span>r<span class="_ _0"></span>un <span class="_"> </span>by <span class="_"> </span>the <span class="_"> </span>thr<span class="_ _1"></span>ead <span class="_"> </span>that <span class="_"> </span>communicates</div><div class="t m0 x11a h4d y5c5a ff19 fs26 fc0 sc0 ls0 ws0">with <span class="_ _9"></span>the <span class="_ _9"></span>network <span class="_ _9"></span>printer<span class="_ _6"></span><span class="ls17b9">.W<span class="_ _52"></span><span class="ls0">e’ll <span class="_ _9"></span>use<span class="_ _45"> </span><span class="ff1a">icp<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">ibuf<span class="_ _45"> </span></span>to <span class="_ _3"></span>build <span class="_ _9"></span>the <span class="_ _9"></span>IPP <span class="_ _9"></span>header<span class="_ _1"></span>.</span></span></div><div class="t m0 x11a h4d y5c5b ff19 fs26 fc0 sc0 ls164 ws0">We<span class="_ _9"></span><span class="ls0">’ll <span class="_ _42"> </span>use<span class="_ _35"> </span><span class="ff1a">hcp<span class="_ _35"> </span></span>and<span class="_ _44"> </span><span class="ff1a">hbuf<span class="_ _35"> </span></span>to <span class="_ _23"> </span>build <span class="_ _42"> </span>the <span class="_ _42"> </span>HTTP <span class="_ _23"> </span>header<span class="_ _1"></span><span class="ls17ba">.W<span class="_ _5d"></span><span class="ls17bb">en<span class="_ _43"></span><span class="ls0">eed <span class="_ _42"> </span>to <span class="_ _23"> </span>build <span class="_ _42"> </span>the</span></span></span></span></div><div class="t m0 x11a h49 y5c5c ff19 fs26 fc0 sc0 ls0 ws0">headers <span class="_ _e"> </span>in <span class="_ _e"> </span>separate <span class="_ _e"> </span>buffers. <span class="_ _4b"> </span>The<span class="_ _59"> </span>HTTP <span class="_ _e"> </span>header <span class="_ _e"> </span>includes <span class="_ _e"> </span>a <span class="_ _e"> </span>length <span class="_"> </span>ﬁeld <span class="_ _53"> </span>in</div><div class="t m0 x11a h49 y5c5d ff19 fs26 fc0 sc0 ls0 ws0">ASCII, <span class="_"> </span>and <span class="_ _66"> </span>we <span class="_ _66"> </span>won’t <span class="_ _66"> </span>know <span class="_"> </span>how <span class="_ _66"> </span>much <span class="_ _66"> </span>space <span class="_ _66"> </span>to <span class="_ _66"> </span>reserve <span class="_"> </span>for <span class="_ _66"> </span>it <span class="_ _66"> </span>until <span class="_ _66"> </span>we</div><div class="t m0 x11a h4d y5c5e ff19 fs26 fc0 sc0 ls0 ws0">assemble <span class="_ _23"> </span>the <span class="_ _42"> </span>IPP <span class="_ _23"> </span>header<span class="_ _1"></span><span class="ls1505">.W<span class="_ _64"></span><span class="ls0">e’ll <span class="_ _23"> </span>use<span class="_ _35"> </span><span class="ff1a">writev<span class="_ _44"> </span></span>to <span class="_ _23"> </span>write <span class="_ _42"> </span>these <span class="_ _23"> </span>two <span class="_ _42"> </span>headers <span class="_ _23"> </span>in</span></span></div><div class="t m0 x11a h49 y5c5f ff19 fs26 fc0 sc0 ls0 ws0">one call.</div><div class="t m0 x32 h49 y5c60 ff19 fs26 fc0 sc0 ls0 ws0">[628 <span class="_ _a"></span>– <span class="_ _a"></span>640]<span class="_ _65"> </span>The <span class="_ _9"></span>printer <span class="_ _9"></span>thread <span class="_ _3"></span>runs <span class="_ _9"></span>in <span class="_ _9"></span>an <span class="_ _9"></span>inﬁnite <span class="_ _9"></span>loop <span class="_ _9"></span>that <span class="_ _9"></span>waits <span class="_ _9"></span>for <span class="_ _9"></span>jobs <span class="_ _9"></span>to <span class="_ _9"></span>transmit <span class="_ _9"></span>to</div><div class="t m0 x11a h4d y5c61 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _2"></span>printer<span class="_ _1"></span><span class="ls17bc">.W<span class="_ _7"></span><span class="lsf2a">eu<span class="_ _8"></span><span class="ls0">se <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">joblock<span class="_ _47"> </span></span>mutex <span class="_ _3"></span>to <span class="_ _3"></span>protect <span class="_ _2"></span>the <span class="_ _3"></span>list <span class="_ _3"></span>of <span class="_ _3"></span>jobs.<span class="_ _61"> </span>If <span class="_ _3"></span>a <span class="_ _3"></span>job <span class="_ _3"></span>is</span></span></span></div><div class="t m0 x11a h4d y5c62 ff19 fs26 fc0 sc0 ls0 ws0">not <span class="_ _2"></span>pending, <span class="_ _3"></span>we <span class="_ _3"></span>use<span class="_ _47"> </span><span class="ff1a">pthread_cond_wait<span class="_ _66"> </span></span>to <span class="_ _3"></span>wait <span class="_ _3"></span>for <span class="_ _2"></span>one <span class="_ _3"></span>to <span class="_ _3"></span>arrive.<span class="_ _61"> </span>When</div><div class="t m0 x11a h4d y5c63 ff19 fs26 fc0 sc0 ls15aa ws0">aj<span class="_ _b"></span><span class="ls0">ob <span class="_ _9"></span>is <span class="_ _23"></span>ready<span class="_ _4"></span>,<span class="_ _45"> </span>we<span class="_ _35"> </span>remove <span class="_ _9"></span>it <span class="_ _23"> </span>from <span class="_ _23"></span>the <span class="_ _9"></span>list <span class="_ _23"> </span>by <span class="_ _23"> </span>calling<span class="_ _35"> </span><span class="ff1a">remove_job</span><span class="ls17bd">.W<span class="_ _64"></span><span class="ls17be">es<span class="_ _43"></span><span class="ls0">till</span></span></span></span></div><div class="t m0 x11a h4d y5c64 ff19 fs26 fc0 sc0 ls0 ws0">hold <span class="_ _42"> </span>the <span class="_ _53"> </span>mutex <span class="_ _53"> </span>at <span class="_ _53"> </span>this <span class="_ _42"> </span>point, <span class="_ _53"> </span>so <span class="_ _53"> </span>we <span class="_ _53"> </span>release <span class="_ _42"> </span>it <span class="_ _42"> </span>and <span class="_ _53"> </span>call<span class="_ _44"> </span><span class="ff1a">update_jobno<span class="_ _4b"> </span></span>to</div><div class="t m0 x11a h4d y5c65 ff19 fs26 fc0 sc0 ls0 ws0">write the next job number to<span class="_"> </span><span class="ff1a">/var/spool/printer/jobno</span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
