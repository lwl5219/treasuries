<div id="pf1c1" class="pf w4 h1f" data-page-no="1c1"><div class="pc pc1c1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1c1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">415</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">obtain <span class="_"> </span>the <span class="_"> </span>absolute <span class="_"> </span>time <span class="_ _66"> </span>for <span class="_"> </span>the <span class="_ _66"> </span>timeout <span class="_ _66"> </span>value, <span class="_"> </span>we <span class="_ _66"> </span>can <span class="_"> </span>use <span class="_ _66"> </span>the <span class="_"> </span>following <span class="_ _66"> </span>function</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">(assuming the maximum time blocked is expressed in minutes):</div><div class="t m0 x3f h57 y22a6 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;sys/time.h&gt;</div><div class="t m0 x3f h57 y346b ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x3f h57 y346c ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x3f h57 y346d ff1a fs2d fc0 sc0 ls0 ws0">maketimeout(struct timespec *tsp, long minutes)</div><div class="t m0 x3f h57 y346e ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 xc2 h57 y346f ff1a fs2d fc0 sc0 ls0 ws0">struct timeval now;</div><div class="t m0 xc2 h57 y3470 ff1a fs2d fc0 sc0 ls0 ws0">/* get the current time */</div><div class="t m0 xc2 h57 y3471 ff1a fs2d fc0 sc0 ls0 ws0">gettimeofday(&amp;now, NULL);</div><div class="t m0 xc2 h57 y3472 ff1a fs2d fc0 sc0 ls0 ws0">tsp-&gt;tv_sec = now.tv_sec;</div><div class="t m0 xc2 h57 y3473 ff1a fs2d fc0 sc0 ls0 ws0">tsp-&gt;tv_nsec = now.tv_usec * 1000; /* usec to nsec */</div><div class="t m0 xc2 h57 y3474 ff1a fs2d fc0 sc0 ls0 ws0">/* add the offset to get timeout value */</div><div class="t m0 xc2 h57 y3475 ff1a fs2d fc0 sc0 ls0 ws0">tsp-&gt;tv_sec += minutes * 60;</div><div class="t m0 x3f h57 y3476 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h26 y3477 ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _53"> </span>the <span class="_ _53"> </span>timeout <span class="_ _53"> </span>expires <span class="_ _53"> </span>without <span class="_ _53"> </span>the <span class="_ _e"> </span>condition <span class="_ _53"> </span>occurring,<span class="_ _4b"> </span><span class="ff1a">pthread_cond_timedwait</span></div><div class="t m0 x32 h26 y3478 ff19 fsf fc0 sc0 ls0 ws0">will <span class="_ _e"> </span>reacquir<span class="_ _0"></span><span class="lse34">et<span class="_ _55"></span><span class="ls0">he <span class="_ _e"> </span>mutex <span class="_ _e"> </span>and <span class="_ _e"> </span>return <span class="_ _53"> </span>the <span class="_"> </span>err<span class="_ _0"></span>or<span class="_ _4b"> </span><span class="ff1a">ETIMEDOUT</span><span class="lse35">.W<span class="_ _64"></span><span class="ls0">hen <span class="_ _e"> </span>it <span class="_ _e"> </span>returns <span class="_ _53"> </span>from <span class="_ _e"> </span>a</span></span></span></span></div><div class="t m0 x32 h26 y3479 ff19 fsf fc0 sc0 ls0 ws0">successful <span class="_ _45"> </span>call <span class="_ _45"> </span>to<span class="_ _5a"> </span><span class="ff1a">pthread_cond_wait<span class="_"> </span></span>or<span class="_ _5a"> </span><span class="ff1a">pthread_cond_timedwait</span><span class="lse36">,a</span>thread</div><div class="t m0 x32 h2a y347a ff19 fsf fc0 sc0 ls0 ws0">needs <span class="_ _53"> </span>to <span class="_ _53"> </span>reevaluate <span class="_ _53"> </span>the <span class="_ _53"> </span>condition, <span class="_ _53"> </span>since <span class="_ _53"> </span>another <span class="_ _e"> </span>thread <span class="_ _42"> </span>might <span class="_ _53"> </span>have <span class="_ _e"> </span>run <span class="_ _53"> </span>and <span class="_ _53"> </span>already</div><div class="t m0 x32 h2a y347b ff19 fsf fc0 sc0 ls0 ws0">changed the condition.</div><div class="t m0 x3f h2a y347c ff19 fsf fc0 sc0 ls0 ws0">Ther<span class="lse37">ea<span class="_ _43"></span><span class="ls45">re <span class="_ _42"> </span>t<span class="ls0">wo <span class="_ _23"> </span>functions <span class="_ _23"> </span>to <span class="_ _23"> </span>notify <span class="_ _23"> </span>threads <span class="_ _23"></span>that <span class="_ _23"></span>a <span class="_ _23"></span>condition <span class="_ _23"></span>has <span class="_ _9"></span>been <span class="_ _23"> </span>satisﬁed.<span class="_ _51"> </span>The</span></span></span></div><div class="t m0 x32 h26 y347d ff1a fsf fc0 sc0 ls0 ws0">pthread_cond_signal<span class="_ _16"> </span><span class="ff19">function <span class="_ _45"> </span>will <span class="_ _47"> </span>wake <span class="_ _45"> </span>up <span class="_ _47"> </span>at <span class="_ _45"> </span>least <span class="_ _47"> </span>one <span class="_ _45"> </span>thread <span class="_ _47"> </span>waiting <span class="_ _45"> </span>on <span class="_ _47"> </span>a</span></div><div class="t m0 x32 h26 y347e ff19 fsf fc0 sc0 ls0 ws0">condition, <span class="_ _3"></span>whereas <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">pthread_cond_broadcast<span class="_ _45"> </span></span>function <span class="_ _3"></span>will <span class="_ _3"></span>wake <span class="_ _9"></span>up <span class="_ _9"></span>all <span class="_ _3"></span>threads</div><div class="t m0 x32 h2a y347f ff19 fsf fc0 sc0 ls0 ws0">waiting on a condition.</div><div class="t m0 x76 h52 y3480 ff19 fs2a fc0 sc0 ls0 ws0">The <span class="_ _9"></span>POSIX <span class="_ _9"></span>speciﬁcation <span class="_ _3"></span>allows <span class="_ _9"> </span>for <span class="_ _9"></span>implementations <span class="_ _9"></span>of<span class="_ _47"> </span><span class="ff1a">pthread_cond_signal<span class="_ _66"> </span></span>to <span class="_ _9"></span>wake <span class="_ _9"></span>up</div><div class="t m0 x76 h51 y3481 ff19 fs2a fc0 sc0 ls0 ws0">mor<span class="lse9">et<span class="_ _5"></span><span class="ls0">han one thread, to make the implementation simpler<span class="_ _1"></span>.</span></span></div><div class="t m0 x3f h57 y3482 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y3483 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_cond_signal(pthread_cond_t *<span class="ff1b">cond</span>);</div><div class="t m0 x3f h57 y3484 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_cond_broadcast(pthread_cond_t *<span class="ff1b">cond</span>);</div><div class="t m0 xca h5f y3485 ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h4d y3486 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _e"> </span>we <span class="_ _e"> </span>call<span class="_ _59"> </span><span class="ff1a">pthread_cond_signal<span class="_ _59"> </span></span>or<span class="_ _4b"> </span><span class="ff1a">pthread_cond_broadcast</span>,<span class="_ _59"> </span>we<span class="_ _4b"> </span>a<span class="lscc">re</span></div><div class="t m0 x32 h4a y3487 ff19 fs26 fc0 sc0 ls0 ws0">said <span class="_ _3"></span>to <span class="_ _3"></span>be<span class="_ _47"> </span><span class="ff1b">signaling<span class="_ _45"> </span></span>the <span class="_ _2"></span>thread <span class="_ _3"></span>or <span class="_ _3"></span>condition.<span class="_ _16"> </span><span class="ls164">We <span class="_ _80"> </span>h<span class="_ _23"></span></span>ave <span class="_ _2"></span>to <span class="_ _9"></span>be <span class="_ _3"></span>careful <span class="_ _2"></span>to <span class="_ _3"></span>signal <span class="_ _9"></span>the <span class="_ _3"></span>threads</div><div class="t m0 x32 h49 y3488 ff19 fs26 fc0 sc0 ls0 ws0">only after changing the state of the condition.</div><div class="t m0 x35 h4c y3489 ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h49 y348a ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lse38">e1<span class="_ _b"></span><span class="ls0">1.15 shows <span class="_ _2"></span>an <span class="_ _2"></span>example <span class="_ _2"></span>of <span class="_ _2"></span>how <span class="_ _2"></span>to use <span class="_ _2"></span>a <span class="_ _2"></span>condition <span class="_ _2"></span>variable <span class="_ _2"></span>and <span class="_ _2"></span>a <span class="_ _2"></span>mutex together</span></span></div><div class="t m0 x32 h49 y348b ff19 fs26 fc0 sc0 ls0 ws0">to synchronize thr<span class="_ _0"></span>eads.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
