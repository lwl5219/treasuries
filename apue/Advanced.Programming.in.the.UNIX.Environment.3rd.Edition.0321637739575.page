<div id="pf23f" class="pf w4 h1f" data-page-no="23f"><div class="pc pc23f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg23f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>15.3<span class="_ _2ae"> </span><span class="ff1a">popen<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">pclose<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">541</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>c<span class="_ _9"></span><span class="ls45">re<span class="_ _2"></span><span class="ls0">ate two pipes befor<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">fork</span>,<span class="_"> </span>as<span class="_"> </span>shown in Figur<span class="ls44">e1<span class="_ _d"></span><span class="ls0">5.8. <span class="_"> </span>The<span class="_"> </span>parent writes the</span></span></span></span></span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">character <span class="_ _3"></span>‘<span class="_ _0"></span>‘p’<span class="_ _1"></span><span class="ls1177">’a<span class="_ _4f"></span><span class="ls0">cross <span class="_ _2"></span>the <span class="_ _3"></span>top <span class="_ _3"></span>pipe <span class="_ _3"></span>when<span class="_ _47"> </span><span class="ff1a">TELL_CHILD<span class="_ _47"> </span></span>is <span class="_ _3"></span>called, <span class="_ _9"></span>and <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _9"></span>writes <span class="_ _2"></span>the</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">character <span class="_ _2"></span>‘‘c’<span class="_ _1"></span><span class="ls55e">’a<span class="_ _8"></span><span class="ls0">cross <span class="_ _2"></span>the <span class="_ _3"></span>bottom <span class="_ _2"></span>pipe <span class="_ _3"></span>when<span class="_ _47"> </span><span class="ff1a">TELL_PARENT<span class="_ _66"> </span></span>is <span class="_ _3"></span>called.<span class="_ _61"> </span>The <span class="_ _3"></span>corresponding</span></span></div><div class="t m0 x32 h26 y132 ff1a fsf fc0 sc0 ls0 ws0">WAIT_xxx<span class="_ _80"> </span><span class="ff19">functions do a blocking<span class="_"> </span></span>read<span class="_ _66"> </span><span class="ff19">for the single character<span class="_ _6"></span>.</span></div><div class="t m0 x199 h2d y41ac ff19 fs10 fc0 sc0 ls0 ws0">parent<span class="_ _2b7"> </span>child</div><div class="t m0 x1e h5e y41ad ff1a fs10 fc0 sc0 ls0 ws0">pfd1[1]</div><div class="t m0 x1e h5e y41ae ff1a fs10 fc0 sc0 ls0 ws0">pfd2[0]</div><div class="t m0 x73 h5e y41ad ff1a fs10 fc0 sc0 ls0 ws0">pfd1[0]</div><div class="t m0 x73 h5e y41ae ff1a fs10 fc0 sc0 ls0 ws0">pfd2[1]</div><div class="t m0 x1e7 h2e y41af ff19 fs11 fc0 sc0 ls0 ws0">&quot;p&quot;</div><div class="t m0 x12e h2f y41b0 ff19 fs12 fc0 sc0 ls0 ws0">&quot;c&quot;</div><div class="t m0 xe7 h2f y41b1 ff18 fs12 fc0 sc0 ls0 ws0">Figure 15.8<span class="_ _5a"> </span><span class="ff19">Using two pipes for parent–child synchronization</span></div><div class="t m0 x3f h50 y41b2 ff19 fs29 fc0 sc0 ls0 ws0">Note <span class="_ _3"></span>that <span class="_ _9"></span>each <span class="_ _9"></span>pipe <span class="_ _9"></span>has <span class="_ _3"></span>an <span class="_ _9"></span>extra <span class="_ _9"></span>reader<span class="_ _6"></span><span class="ls1178">,w<span class="_ _b"></span><span class="ls0">hich <span class="_ _9"></span>doesn’t <span class="_ _9"></span>matter<span class="_ _6"></span><span class="ls1179">.T<span class="_ _1d"></span><span class="ls0">hat <span class="_ _3"></span>is, <span class="_ _9"></span>in <span class="_ _9"></span>addition</span></span></span></span></div><div class="t m0 x32 h5c y41b3 ff19 fs29 fc0 sc0 ls0 ws0">to <span class="_ _23"> </span>the <span class="_ _42"> </span>child <span class="_ _42"> </span>reading <span class="_ _23"> </span>from<span class="_ _35"> </span><span class="ff1a">pfd1[0]</span><span class="ls117a">,t<span class="_ _43"></span><span class="ls0">he <span class="_ _23"> </span>parent <span class="_ _42"> </span>has <span class="_ _23"> </span>this <span class="_ _42"> </span>end <span class="_ _42"> </span>of <span class="_ _23"> </span>the <span class="_ _42"> </span>top <span class="_ _42"> </span>pipe <span class="_ _23"> </span>open <span class="_ _42"> </span>for</span></span></div><div class="t m0 x32 h50 y41b4 ff19 fs29 fc0 sc0 lsdf ws0">re<span class="ls0">ading. <span class="_"> </span>This<span class="_"> </span>doesn’t affect us, since the parent doesn’t try to r<span class="_ _0"></span>ead fr<span class="_ _0"></span>om this pipe.</span></div><div class="t m0 x35 h91 y41b5 ff16 fs3a fc0 sc0 ls0 ws0">15.3<span class="_ _6d"> </span><span class="ff1f">popen<span class="_ _54"> </span></span>and<span class="_ _54"> </span><span class="ff1f">pclose<span class="_ _54"> </span></span>Functions</div><div class="t m0 x32 h6e y41b6 ff19 fs31 fc0 sc0 ls0 ws0">Since a <span class="_ _2"></span>common <span class="_ _2"></span>operation <span class="_ _2"></span>is <span class="_ _2"></span>to <span class="_ _2"></span>create a <span class="_ _2"></span>pipe to <span class="_ _2"></span>another <span class="_ _2"></span>process to <span class="_ _2"></span>either <span class="_ _2"></span>read its <span class="_ _2"></span>output</div><div class="t m0 x32 h64 y41b7 ff19 fs31 fc0 sc0 ls0 ws0">or <span class="_ _e"> </span>send <span class="_"> </span>it <span class="_ _53"> </span>input, <span class="_"> </span>the <span class="_ _53"> </span>standar<span class="ls117b">dI<span class="_ _55"></span><span class="ls0">/O <span class="_ _e"> </span>library <span class="_ _e"> </span>has <span class="_"> </span>historically <span class="_ _53"> </span>provided <span class="_ _e"> </span>the<span class="_ _59"> </span><span class="ff1a">popen<span class="_ _4b"> </span></span>and</span></span></div><div class="t m0 x32 h64 y41b8 ff1a fs31 fc0 sc0 ls0 ws0">pclose<span class="_ _80"> </span><span class="ff19">functions. <span class="_"> </span>These<span class="_"> </span>two functions <span class="_ _2"></span>handle all the dirty work that we’ve been doing</span></div><div class="t m0 x32 h64 y41b9 ff19 fs31 fc0 sc0 ls0 ws0">ourselves: <span class="_ _47"> </span>creating <span class="_"> </span>a <span class="_ _47"> </span>pipe,<span class="_ _16"> </span><span class="ff1a">fork</span>ing <span class="_ _47"> </span>a <span class="_ _66"> </span>child, <span class="_ _47"> </span>closing <span class="_ _47"> </span>the <span class="_ _47"> </span>unused <span class="_ _47"> </span>ends <span class="_ _47"> </span>of <span class="_ _66"> </span>the <span class="_ _47"> </span>pipe,</div><div class="t m0 x32 h6e y41ba ff19 fs31 fc0 sc0 ls0 ws0">executing a shell to run the command, and waiting for the command to terminate.</div><div class="t m0 x3f h65 y41bb ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h65 y41bc ff1a fs32 fc0 sc0 ls0 ws0">FILE *popen(const char *<span class="ff1b">cmdstring</span><span class="ls441">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">type</span>);</span></span></div><div class="t m0 x8e h65 y41bd ff19 fs32 fc0 sc0 ls0 ws0">Returns: ﬁle pointer if OK,<span class="_"> </span><span class="ff1a">NULL<span class="_ _e"> </span></span>on error</div><div class="t m0 x3f h65 y41be ff1a fs32 fc0 sc0 ls0 ws0">int pclose(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x5c h15d y41bf ff19 fs32 fc0 sc0 ls0 ws0">Returns: termination status of<span class="_"> </span><span class="ff1b">cmdstring</span><span class="ls443">,o<span class="_ _5"></span><span class="ls0">r<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</span></span></div><div class="t m0 x32 h9b y41c0 ff19 fs49 fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>function<span class="_ _4b"> </span><span class="ff1a">popen<span class="_ _59"> </span></span>does <span class="_ _e"> </span>a<span class="_ _59"> </span><span class="ff1a">fork<span class="_ _4b"> </span></span>and<span class="_ _59"> </span><span class="ff1a">exec<span class="_ _4b"> </span></span>to <span class="_ _e"> </span>execute <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1b">cmdstring<span class="_ _4b"> </span></span>and <span class="_ _e"> </span>returns <span class="_ _e"> </span>a</div><div class="t m0 x32 h9b y41c1 ff19 fs49 fc0 sc0 ls0 ws0">standar<span class="ls4a5">dI<span class="_ _43"></span><span class="ls0">/O <span class="_ _23"></span>ﬁle <span class="_ _23"> </span>pointer<span class="_ _1"></span><span class="ls117c">.I<span class="_ _7"></span><span class="ls0">f<span class="_ _35"> </span><span class="ff1b">type<span class="_ _35"> </span></span>is<span class="_ _44"> </span><span class="ff1a">&quot;r&quot;</span><span class="ls4a5">,t<span class="_ _43"></span><span class="ls0">he <span class="_ _23"> </span>ﬁle <span class="_ _42"> </span>pointer <span class="_ _23"> </span>is <span class="_ _23"> </span>connected <span class="_ _42"> </span>to <span class="_ _23"> </span>the <span class="_ _42"> </span>standard</span></span></span></span></span></span></div><div class="t m0 x32 h9a y41c2 ff19 fs49 fc0 sc0 ls0 ws0">output of<span class="_"> </span><span class="ff1b">cmdstring<span class="_"> </span></span>(Figur<span class="ls48d">e1<span class="_ _4f"></span><span class="ls0">5.9).</span></span></div><div class="t m0 x199 hcb y41c3 ff19 fs15 fc0 sc0 ls0 ws0">parent<span class="_ _1bc"> </span><span class="ff1b">cmdstring<span class="_"> </span></span>(child)</div><div class="t m0 x19b h66 y41c4 ff1a fs15 fc0 sc0 ls0 ws0">fp<span class="_ _b4"> </span><span class="ff1b">stdout</span></div><div class="t m0 x188 h70 y41c5 ff18 fs16 fc0 sc0 ls0 ws0">Figure 15.9<span class="_ _5a"> </span><span class="ff19">Result of<span class="_"> </span><span class="ff1a">fp = popen(<span class="ff1b">cmdstring</span><span class="ls117d">,&quot;<span class="_ _55"></span><span class="ls0">r&quot;)</span></span></span></span></div><div class="t m0 x32 hc8 y41c6 ff19 fs6a fc0 sc0 ls0 ws0">If<span class="_ _47"> </span><span class="ff1b">type<span class="_ _47"> </span></span>is<span class="_ _47"> </span><span class="ff1a">&quot;w&quot;</span><span class="ls117e">,t<span class="_ _4f"></span><span class="ls0">he <span class="_ _3"></span>ﬁle <span class="_ _3"></span>pointer <span class="_ _3"></span>is <span class="_ _3"></span>connected <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>standar<span class="ls117e">di<span class="_ _b"></span><span class="ls0">nput <span class="_ _3"></span>of<span class="_ _45"> </span><span class="ff1b">cmdstring</span>,<span class="_ _47"> </span>as<span class="_ _47"> </span>shown</span></span></span></span></div><div class="t m0 x32 hc5 y41c7 ff19 fs6a fc0 sc0 ls0 ws0">in Figur<span class="ls117f">e1<span class="_ _4f"></span><span class="ls0">5.10.</span></span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.893467px;bottom:776.815222px;width:213.888314px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
