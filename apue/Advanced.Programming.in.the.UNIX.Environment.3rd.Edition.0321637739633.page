<div id="pf279" class="pf w4 h1f" data-page-no="279"><div class="pc pc279 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg279.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.3<span class="_ _2c7"> </span>Addressing<span class="_ _1fb"> </span><span class="ff18">599</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">number <span class="_ _61"> </span>with<span class="_ _50"> </span><span class="ff1a">getservbyname</span><span class="ls1335">,m<span class="_ _49"></span><span class="ls0">ap <span class="_ _61"> </span>a <span class="_ _61"> </span>port <span class="_ _61"> </span>number <span class="_ _61"> </span>to <span class="_ _16"> </span>a <span class="_ _61"> </span>service <span class="_ _61"> </span>name <span class="_ _61"> </span>with</span></span></div><div class="t m0 x32 h26 y130 ff1a fsf fc0 sc0 ls0 ws0">getservbyport<span class="ff19">,<span class="_"> </span>or<span class="_"> </span>scan the services database sequentially with<span class="_"> </span></span>getservent<span class="ff19">.</span></div><div class="t m0 x3f h57 y47ea ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x3f h57 y47eb ff1a fs2d fc0 sc0 ls0 ws0">struct servent *getservbyname(const char *<span class="ff1b">name</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">proto</span>);</span></span></div><div class="t m0 x3f h57 y47ec ff1a fs2d fc0 sc0 ls0 ws0">struct servent *getservbyport(int<span class="_"> </span><span class="ff1b">port</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">proto</span>);</span></span></div><div class="t m0 x3f h57 y47ed ff1a fs2d fc0 sc0 ls0 ws0">struct servent *getservent(void);</div><div class="t m0 x1fe h57 y47ee ff19 fs2d fc0 sc0 ls0 ws0">All return: pointer if OK,<span class="_"> </span><span class="ff1a">NULL<span class="_ _e"> </span></span>on error</div><div class="t m0 x3f h57 y47ef ff1a fs2d fc0 sc0 ls0 ws0">void setservent(int<span class="_"> </span><span class="ff1b">stayopen</span>);</div><div class="t m0 x3f h57 y47f0 ff1a fs2d fc0 sc0 ls0 ws0">void endservent(void);</div><div class="t m0 x32 h4d y47f1 ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">servent<span class="_ _80"> </span></span>structure<span class="_"> </span>is<span class="_"> </span>deﬁned to have at least the following members:</div><div class="t m0 x3f h4e y47f2 ff1a fs28 fc0 sc0 ls0 ws0">struct servent {</div><div class="t m0 xf4 h4e y47f3 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _d9"> </span>*s_name;<span class="_ _8a"> </span>/* service name */</div><div class="t m0 xf4 h4e y47f4 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_"> </span>**s_aliases; <span class="_"> </span>/*<span class="_"> </span>pointer to alternate service name array */</div><div class="t m0 xf4 h4e y47f5 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>s_port; <span class="_ _15"> </span>/*<span class="_"> </span>port number */</div><div class="t m0 xf4 h4e y47f6 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _d9"> </span>*s_proto;<span class="_ _15"> </span>/* name of protocol */</div><div class="t m0 xf4 h4e y47f7 ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 xf4 h4e y47f8 ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 xf4 h4e y47f9 ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 x3f h4e y47fa ff1a fs28 fc0 sc0 ls0 ws0">};</div><div class="t m0 x3f h49 y47fb ff19 fs26 fc0 sc0 ls0 ws0">POSIX.1 <span class="_ _9"></span>deﬁnes <span class="_ _9"></span>several <span class="_ _9"></span>new <span class="_ _23"></span>functions <span class="_ _9"></span>to <span class="_ _9"></span>allow <span class="_ _9"></span>an <span class="_ _9"></span>application <span class="_ _23"></span>to <span class="_ _9"></span>map <span class="_ _9"></span>from <span class="_ _9"></span>a <span class="_ _9"></span>host</div><div class="t m0 x32 h49 y47fc ff19 fs26 fc0 sc0 ls0 ws0">name <span class="_ _42"> </span>and <span class="_ _42"> </span>a <span class="_ _42"> </span>service <span class="_ _23"> </span>name <span class="_ _42"> </span>to <span class="_ _42"> </span>an <span class="_ _42"> </span>address, <span class="_ _42"> </span>and <span class="_ _23"> </span>vice <span class="_ _42"> </span>versa.<span class="_ _54"> </span>These <span class="_ _42"> </span>functions <span class="_ _42"> </span>replace <span class="_ _23"> </span>the</div><div class="t m0 x32 h4d y47fd ff19 fs26 fc0 sc0 ls0 ws0">older<span class="_"> </span><span class="ff1a">gethostbyname<span class="_ _80"> </span></span>and<span class="_"> </span><span class="ff1a">gethostbyaddr<span class="_ _66"> </span></span>functions.</div><div class="t m0 x3f h4d y47fe ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">getaddrinfo<span class="_ _66"> </span></span>function <span class="_ _2"></span>allows us <span class="_ _2"></span>to map <span class="_ _2"></span>a host <span class="_ _2"></span>name and <span class="_ _2"></span>a service <span class="_ _2"></span>name to <span class="_ _2"></span>an</div><div class="t m0 x32 h49 y47ff ff19 fs26 fc0 sc0 ls0 ws0">address.</div><div class="t m0 x3f h4e y4800 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x3f h4e y4801 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x3f h4e y4802 ff1a fs28 fc0 sc0 ls0 ws0">int getaddrinfo(const char *restrict<span class="_"> </span><span class="ff1b">host</span>,</div><div class="t m0 x1dd h4e y4803 ff1a fs28 fc0 sc0 ls0 ws0">const char *restrict<span class="_"> </span><span class="ff1b">service</span>,</div><div class="t m0 x1dd h4e y4804 ff1a fs28 fc0 sc0 ls0 ws0">const struct addrinfo *restrict<span class="_"> </span><span class="ff1b">hint</span>,</div><div class="t m0 x1dd h4e y4805 ff1a fs28 fc0 sc0 ls0 ws0">struct addrinfo **restrict<span class="_"> </span><span class="ff1b ls8f5">re<span class="ls0">s</span></span>);</div><div class="t m0 x113 h7c y4806 ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK, nonzer<span class="ls396">oe<span class="_ _d"></span><span class="ls0">rror code on error</span></span></div><div class="t m0 x3f h4e y4807 ff1a fs28 fc0 sc0 ls0 ws0">void freeaddrinfo(struct addrinfo *<span class="ff1b">ai</span>);</div><div class="t m0 x32 h55 y4808 ff19 fs2c fc0 sc0 ls155 ws0">We <span class="_ _66"> </span>n<span class="_ _9"></span><span class="ls0">eed <span class="_ _23"></span>to <span class="_ _9"></span>provide <span class="_ _9"></span>the <span class="_ _9"></span>host <span class="_ _9"></span>name, <span class="_ _23"></span>the <span class="_ _9"></span>service <span class="_ _9"></span>name, <span class="_ _23"></span>or <span class="_ _9"></span>both.<span class="_ _5a"> </span>If <span class="_ _23"></span>we <span class="_ _9"></span>provide <span class="_ _9"></span>only <span class="_ _9"></span>one</span></div><div class="t m0 x32 h55 y4809 ff19 fs2c fc0 sc0 ls0 ws0">name, <span class="_ _3"></span>the <span class="_ _9"></span>other <span class="_ _3"></span>should <span class="_ _3"></span>be <span class="_ _9"></span>a <span class="_ _3"></span>null <span class="_ _9"></span>pointer<span class="_ _6"></span><span class="ls1336">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>host <span class="_ _9"></span>name <span class="_ _3"></span>can <span class="_ _9"></span>be <span class="_ _3"></span>either <span class="_ _9"></span>a <span class="_ _3"></span>node <span class="_ _3"></span>name <span class="_ _9"></span>or</span></span></div><div class="t m0 x32 h55 y480a ff19 fs2c fc0 sc0 ls0 ws0">the host address in dotted-decimal notation.</div><div class="t m0 x3f h54 y480b ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _45"> </span><span class="ff1a">getaddrinfo<span class="_ _35"> </span></span>function <span class="_ _9"></span>returns <span class="_ _9"></span>a <span class="_ _23"></span>linked <span class="_ _9"></span>list <span class="_ _23"></span>of<span class="_ _45"> </span><span class="ff1a">addrinfo<span class="_ _35"> </span></span>structur<span class="_ _0"></span>es. <span class="_ _45"> </span>W<span class="_ _6"></span><span class="ls1337">ec<span class="_ _b"></span><span class="ls0">an</span></span></div><div class="t m0 x32 h54 y480c ff19 fs2c fc0 sc0 ls0 ws0">use<span class="_ _45"> </span><span class="ff1a">freeaddrinfo<span class="_ _35"> </span></span>to <span class="_ _23"></span>free <span class="_ _9"></span>one <span class="_ _23"></span>or <span class="_ _23"></span>mor<span class="_ _0"></span>e<span class="_ _45"> </span>of<span class="_ _35"> </span>these <span class="_ _23"></span>structur<span class="_ _0"></span>es, <span class="_ _23"></span>depending <span class="_ _9"></span>on <span class="_ _23"> </span>how <span class="_ _23"></span>many</div><div class="t m0 x32 h54 y480d ff19 fs2c fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>es ar<span class="ls142">el<span class="_ _4f"></span><span class="ls0">inked together using the<span class="_"> </span><span class="ff1a">ai_next<span class="_ _66"> </span></span>ﬁeld in the structures.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
