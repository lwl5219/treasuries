<div id="pf289" class="pf w4 h1f" data-page-no="289"><div class="pc pc289 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg289.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.5<span class="_ _2db"> </span>Data <span class="_"> </span>T<span class="_ _6"></span>ransfer<span class="_ _1b"> </span><span class="ff18">615</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t connect to %s&quot;, argv[1]);</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9f h2d y49c1 ff18 fs10 fc0 sc0 ls0 ws0">Figure 16.16<span class="_ _5a"> </span><span class="ff19">Client command to get uptime from server</span></div><div class="t m0 x32 h49 y49c2 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _23"> </span>program <span class="_ _23"> </span>connects <span class="_ _42"> </span>to <span class="_ _42"> </span>a <span class="_ _23"> </span>server<span class="_ _1"></span><span class="ls1367">,r<span class="_ _43"></span><span class="ls0">eads <span class="_ _23"></span>the <span class="_ _42"> </span>string <span class="_ _23"> </span>sent <span class="_ _42"> </span>by <span class="_ _23"> </span>the <span class="_ _42"> </span>server<span class="_ _6"></span><span class="ls1367">,a<span class="_ _43"></span><span class="ls0">nd <span class="_ _42"> </span>prints <span class="_ _42"> </span>the</span></span></span></span></div><div class="t m0 x32 h4d y49c3 ff19 fs26 fc0 sc0 ls0 ws0">string <span class="_ _9"></span>on <span class="_ _23"> </span>the <span class="_ _23"></span>standar<span class="ls710">do<span class="_ _43"></span><span class="ls0">utput. <span class="_ _35"> </span>Since<span class="_ _45"> </span>we’r<span class="ls1368">eu<span class="_ _43"></span><span class="ls0">sing <span class="_ _23"> </span>a<span class="_ _35"> </span><span class="ff1a">SOCK_STREAM<span class="_ _45"> </span></span>socket, <span class="_ _23"></span>we <span class="_ _9"></span>can’t <span class="_ _23"> </span>be</span></span></span></span></div><div class="t m0 x32 h4d y49c4 ff19 fs26 fc0 sc0 ls0 ws0">guaranteed <span class="_ _3"></span>that <span class="_ _3"></span>we <span class="_ _3"></span>will <span class="_ _3"></span>read <span class="_ _2"></span>the <span class="_ _3"></span>entir<span class="ls1369">es<span class="_ _8"></span><span class="ls0">tring <span class="_ _3"></span>in <span class="_ _3"></span>one <span class="_ _3"></span>call <span class="_ _3"></span>to<span class="_ _47"> </span><span class="ff1a">recv</span>,<span class="_ _47"> </span>so<span class="_ _47"> </span>we<span class="_ _47"> </span>need <span class="_ _3"></span>to <span class="_ _3"></span>repeat</span></span></div><div class="t m0 x32 h49 y49c5 ff19 fs26 fc0 sc0 ls0 ws0">the call until it returns 0.</div><div class="t m0 x3f h4d y49c6 ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_ _45"> </span><span class="ff1a">getaddrinfo<span class="_ _45"> </span></span>function <span class="_ _23"></span>might <span class="_ _9"></span>return <span class="_ _9"></span>mor<span class="ls136a">et<span class="_ _b"></span><span class="ls0">han <span class="_ _9"></span>one <span class="_ _23"></span>candidate <span class="_ _9"></span>address <span class="_ _9"></span>for <span class="_ _9"></span>us</span></span></div><div class="t m0 x32 h49 y49c7 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _2"></span>use <span class="_ _2"></span>if <span class="_ _3"></span>the <span class="_ _2"></span>server <span class="_ _3"></span>supports <span class="_ _2"></span>multiple <span class="_ _2"></span>network <span class="_ _3"></span>interfaces <span class="_ _2"></span>or <span class="_ _3"></span>multiple <span class="_ _2"></span>network <span class="_ _2"></span>protocols.</div><div class="t m0 x32 h49 y49c8 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _66"> </span>t<span class="_ _23"></span><span class="ls0">ry <span class="_ _9"></span>each <span class="_ _9"></span>one <span class="_ _23"></span>in <span class="_ _9"></span>turn, <span class="_ _23"></span>giving <span class="_ _9"></span>up <span class="_ _9"></span>when <span class="_ _23"></span>we <span class="_ _9"></span>ﬁnd <span class="_ _23"></span>one <span class="_ _9"></span>that <span class="_ _23"></span>allows <span class="_ _9"></span>us <span class="_ _9"></span>to <span class="_ _23"></span>connect <span class="_ _9"></span>to <span class="_ _23"></span>the</span></div><div class="t m0 x32 h4d y49c9 ff19 fs26 fc0 sc0 ls0 ws0">service. <span class="_ _54"> </span>W<span class="_ _6"></span><span class="ls136b">eu<span class="_ _52"></span><span class="ls0">se <span class="_ _44"> </span>the<span class="_ _51"> </span><span class="ff1a">connect_retry<span class="_ _54"> </span></span>function <span class="_ _44"> </span>from <span class="_ _35"> </span>Figur<span class="ls136c">e1<span class="_ _52"></span><span class="ls0">6.1<span class="_ _1"></span>1<span class="_ _54"> </span>to<span class="_ _54"> </span>establish <span class="_ _35"> </span>a</span></span></span></span></div><div class="t m0 x32 h49 y49ca ff19 fs26 fc0 sc0 ls0 ws0">connection with the server<span class="_ _6"></span>.</div><div class="t m0 x35 h61 y49cb ff16 fs2c fc0 sc0 ls0 ws0">Example <span class="_ _84"></span>— <span class="_ _84"></span>Connection-Oriented<span class="_"> </span>Ser <span class="_ _d"></span>ver</div><div class="t m0 x32 h54 y49cc ff19 fs2c fc0 sc0 ls0 ws0">Figur<span class="ls136d">e1<span class="_ _8"></span><span class="ls0">6.17 <span class="_ _2"></span>shows <span class="_ _2"></span>the <span class="_ _2"></span>server <span class="_ _2"></span>that provides the<span class="_ _47"> </span><span class="ff1a">uptime<span class="_ _66"> </span></span>command’s output <span class="_ _2"></span>to <span class="_ _2"></span>the <span class="_ _2"></span>client</span></span></div><div class="t m0 x32 h55 y49cd ff19 fs2c fc0 sc0 ls0 ws0">program fr<span class="_ _0"></span>om Figur<span class="_ _0"></span><span class="ls142">e1<span class="_ _d"></span><span class="ls0">6.16.</span></span></div><div class="t m0 x32 h62 y49ce ff1a fs30 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h62 y49cf ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x32 h62 y49d0 ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h62 y49d1 ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;syslog.h&gt;</div><div class="t m0 x32 h62 y49d2 ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h62 y49d3 ff1a fs30 fc0 sc0 ls0 ws0">#define BUFLEN<span class="_ _d9"> </span>128</div><div class="t m0 x32 h62 y49d4 ff1a fs30 fc0 sc0 ls0 ws0">#define QLEN 10</div><div class="t m0 x32 h62 y49d5 ff1a fs30 fc0 sc0 ls0 ws0">#ifndef HOST_NAME_MAX</div><div class="t m0 x32 h62 y49d6 ff1a fs30 fc0 sc0 ls0 ws0">#define HOST_NAME_MAX 256</div><div class="t m0 x32 h62 y49d7 ff1a fs30 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h62 y49d8 ff1a fs30 fc0 sc0 ls0 ws0">extern int initserver(int, const struct sockaddr *, socklen_t, int);</div><div class="t m0 x32 h62 y49d9 ff1a fs30 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h62 y49da ff1a fs30 fc0 sc0 ls0 ws0">serve(int sockfd)</div><div class="t m0 x32 h62 y49db ff1a fs30 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h62 y49dc ff1a fs30 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>clfd;</div><div class="t m0 x8a h62 y49dd ff1a fs30 fc0 sc0 ls0 ws0">FILE <span class="_ _68"> </span>*fp;</div><div class="t m0 x8a h62 y49de ff1a fs30 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>buf[BUFLEN];</div><div class="t m0 x8a h62 y49df ff1a fs30 fc0 sc0 ls0 ws0">set_cloexec(sockfd);</div><div class="t m0 x8a h62 y49e0 ff1a fs30 fc0 sc0 ls0 ws0">for (;;) {</div><div class="t m0 x9d h62 y49e1 ff1a fs30 fc0 sc0 ls0 ws0">if ((clfd = accept(sockfd, NULL, NULL)) &lt; 0) {</div><div class="t m0 x1f h62 y49e2 ff1a fs30 fc0 sc0 ls0 ws0">syslog(LOG_ERR, &quot;ruptimed: accept error: %s&quot;,</div><div class="t m0 xae h62 y49e3 ff1a fs30 fc0 sc0 ls0 ws0">strerror(errno));</div><div class="t m0 x1f h62 y49e4 ff1a fs30 fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x9d h62 y49e5 ff1a fs30 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h62 y49e6 ff1a fs30 fc0 sc0 ls0 ws0">set_cloexec(clfd);</div><div class="t m0 x9d h62 y49e7 ff1a fs30 fc0 sc0 ls0 ws0">if ((fp = popen(&quot;/usr/bin/uptime&quot;, &quot;r&quot;)) == NULL) {</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
