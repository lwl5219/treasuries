<div id="pf2ab" class="pf w4 h1f" data-page-no="2ab"><div class="pc pc2ab w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2ab.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>17.4<span class="_ _284"> </span>Passing <span class="_"> </span>File <span class="_"> </span>Descriptors<span class="_ _1fb"> </span><span class="ff18">649</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _47"> </span>we <span class="_ _45"> </span>transmit <span class="_ _47"> </span>credentials, <span class="_ _45"> </span>we <span class="_ _47"> </span>need <span class="_ _45"> </span>to <span class="_ _47"> </span>reserve <span class="_ _47"> </span>space <span class="_ _45"> </span>only <span class="_ _47"> </span>for <span class="_ _45"> </span>the<span class="_ _16"> </span><span class="ff1a">cmsgcred</span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>e. <span class="_ _44"> </span>The<span class="_ _44"> </span>kernel <span class="_ _53"> </span>will <span class="_ _53"> </span>ﬁll <span class="_ _53"> </span>in <span class="_ _42"> </span>this <span class="_ _53"> </span>structur<span class="ls13e6">ef<span class="_ _c"></span><span class="ls0">or <span class="_ _42"> </span>us <span class="_ _53"> </span>to <span class="_ _53"> </span>prevent <span class="_ _42"> </span>an <span class="_ _53"> </span>application <span class="_ _42"> </span>from</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">pretending to have a dif<span class="_ _0"></span>fer<span class="_ _0"></span>ent identity<span class="_ _4"></span>.</div><div class="t m0 x3f h26 y132 ff19 fsf fc0 sc0 ls0 ws0">On Linux, credentials ar<span class="_ _0"></span><span class="ls44">et<span class="_ _d"></span><span class="ls0">ransmitted as a<span class="_"> </span><span class="ff1a">ucred<span class="_ _80"> </span></span>structure:</span></span></div><div class="t m0 x3f h57 y3e1e ff1a fs2d fc0 sc0 ls0 ws0">struct ucred {</div><div class="t m0 xc2 h57 y3e1f ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_"> </span>pid; <span class="_"> </span>/*<span class="_"> </span>sender’s process ID */</div><div class="t m0 xc2 h57 y3e20 ff1a fs2d fc0 sc0 ls0 ws0">uid_t <span class="_"> </span>uid; <span class="_"> </span>/*<span class="_"> </span>sender’s user ID */</div><div class="t m0 xc2 h57 y3e21 ff1a fs2d fc0 sc0 ls0 ws0">gid_t <span class="_"> </span>gid; <span class="_"> </span>/*<span class="_"> </span>sender’s group ID */</div><div class="t m0 x3f h57 y3e22 ff1a fs2d fc0 sc0 ls0 ws0">};</div><div class="t m0 x32 h2a y4cc9 ff19 fsf fc0 sc0 ls0 ws0">Unlike <span class="_ _e"> </span>FreeBSD, <span class="_ _53"> </span>Linux <span class="_"> </span>r<span class="_ _1"></span>equires <span class="_ _e"> </span>that <span class="_ _e"> </span>we <span class="_"> </span>initialize <span class="_ _53"> </span>this <span class="_ _e"> </span>structur<span class="ls13e7">eb<span class="_ _4a"></span><span class="ls0">efor<span class="ls13e7">et<span class="_ _55"></span><span class="ls0">ransmission.</span></span></span></span></div><div class="t m0 x32 h2a y4cca ff19 fsf fc0 sc0 ls0 ws0">The kernel will ensur<span class="ls92d">et<span class="_ _4f"></span><span class="ls0">hat applications either use values that correspond to the caller or</span></span></div><div class="t m0 x32 h2a y4ccb ff19 fsf fc0 sc0 ls0 ws0">have the appropriate privilege to use other values.</div><div class="t m0 x3f h26 y4ccc ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls316">e1<span class="_ _b"></span><span class="ls0">7.15 <span class="_ _3"></span>shows <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">send_fd<span class="_ _47"> </span></span>function <span class="_ _3"></span>updated <span class="_ _3"></span>to <span class="_ _3"></span>include <span class="_ _3"></span>the <span class="_ _3"></span>credentials <span class="_ _3"></span>of <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h2a y4ccd ff19 fsf fc0 sc0 ls0 ws0">sending process.</div><div class="t m0 x32 h4e y4cce ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4ccf ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y4cd0 ff1a fs28 fc0 sc0 ls0 ws0">#if defined(SCM_CREDS)<span class="_ _74"> </span>/* BSD interface */</div><div class="t m0 x32 h4e y4cd1 ff1a fs28 fc0 sc0 ls0 ws0">#define CREDSTRUCT<span class="_ _189"> </span>cmsgcred</div><div class="t m0 x32 h4e y4cd2 ff1a fs28 fc0 sc0 ls0 ws0">#define SCM_CREDTYPE<span class="_ _15"> </span>SCM_CREDS</div><div class="t m0 x32 h4e y4cd3 ff1a fs28 fc0 sc0 ls0 ws0">#elif defined(SCM_CREDENTIALS)<span class="_ _d9"> </span>/* Linux interface */</div><div class="t m0 x32 h4e y4cd4 ff1a fs28 fc0 sc0 ls0 ws0">#define CREDSTRUCT<span class="_ _189"> </span>ucred</div><div class="t m0 x32 h4e y4cd5 ff1a fs28 fc0 sc0 ls0 ws0">#define SCM_CREDTYPE<span class="_ _15"> </span>SCM_CREDENTIALS</div><div class="t m0 x32 h4e y4cd6 ff1a fs28 fc0 sc0 ls0 ws0">#else</div><div class="t m0 x32 h4e y4cd7 ff1a fs28 fc0 sc0 ls0 ws0">#error passing credentials is unsupported!</div><div class="t m0 x32 h4e y4cd8 ff1a fs28 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h4e y4cd9 ff1a fs28 fc0 sc0 ls0 ws0">/* size of control buffer to send/recv one file descriptor */</div><div class="t m0 x32 h4e y4cda ff1a fs28 fc0 sc0 ls0 ws0">#define RIGHTSLEN<span class="_ _68"> </span>CMSG_LEN(sizeof(int))</div><div class="t m0 x32 h4e y4cdb ff1a fs28 fc0 sc0 ls0 ws0">#define CREDSLEN<span class="_ _15"> </span>CMSG_LEN(sizeof(struct CREDSTRUCT))</div><div class="t m0 x32 h4e y4cdc ff1a fs28 fc0 sc0 ls0 ws0">#define CONTROLLEN<span class="_ _d9"> </span>(RIGHTSLEN + CREDSLEN)</div><div class="t m0 x32 h4e y4cdd ff1a fs28 fc0 sc0 ls0 ws0">static struct cmsghdr<span class="_ _68"> </span>*cmptr = NULL;<span class="_ _3a"> </span>/* malloc’ed first time */</div><div class="t m0 x32 h4e y4cde ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h4e y4cdf ff1a fs28 fc0 sc0 ls1b6 ws0">*P<span class="_ _1d"></span><span class="ls0">ass a file descriptor to another process.</span></div><div class="t m0 x140 h4e y4ce0 ff1a fs28 fc0 sc0 ls0 ws0">*<span class="_"> </span>If<span class="_"> </span>fd&lt;0, then -fd is sent back instead as the error status.</div><div class="t m0 x140 h4e y4ce1 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h4e y4ce2 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4ce3 ff1a fs28 fc0 sc0 ls0 ws0">send_fd(int fd, int fd_to_send)</div><div class="t m0 x32 h4e y4ce4 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4ce5 ff1a fs28 fc0 sc0 ls0 ws0">struct CREDSTRUCT<span class="_ _68"> </span>*credp;</div><div class="t m0 x8a h4e y4ce6 ff1a fs28 fc0 sc0 ls0 ws0">struct cmsghdr<span class="_ _189"> </span>*cmp;</div><div class="t m0 x8a h4e y4ce7 ff1a fs28 fc0 sc0 ls0 ws0">struct iovec<span class="_ _186"> </span>iov[1];</div><div class="t m0 x8a h4e y4ce8 ff1a fs28 fc0 sc0 ls0 ws0">struct msghdr<span class="_ _b7"> </span>msg;</div><div class="t m0 x8a h4e y4ce9 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _227"> </span>buf[2];<span class="_"> </span>/* send_fd/recv_ufd 2-byte protocol */</div><div class="t m0 x8a h4e y4cea ff1a fs28 fc0 sc0 ls0 ws0">iov[0].iov_base = buf;</div><div class="t m0 x8a h4e y4ceb ff1a fs28 fc0 sc0 ls0 ws0">iov[0].iov_len <span class="_"> </span>=<span class="_"> </span>2;</div><div class="t m0 x8a h4e y4cec ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_iov <span class="_ _15"> </span>=<span class="_"> </span>iov;</div><div class="t m0 x8a h4e y4ced ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_iovlen <span class="_"> </span>=<span class="_"> </span>1;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
