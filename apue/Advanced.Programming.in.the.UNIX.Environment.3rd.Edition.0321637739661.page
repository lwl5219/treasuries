<div id="pf295" class="pf w4 h1f" data-page-no="295"><div class="pc pc295 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg295.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.8<span class="_ _2dd"> </span>Nonblocking <span class="_"> </span>and <span class="_"> </span>Asynchronous <span class="_"> </span>I/O<span class="_ _1fb"> </span><span class="ff18">627</span></div><div class="t m0 x35 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">16.8 <span class="_ _93"> </span>Nonbloc<span class="_ _0"></span>king <span class="_"> </span>and <span class="_"> </span>Asynchr<span class="_ _1"></span>onous <span class="_"> </span>I/O</div><div class="t m0 x32 h26 y4de ff19 fsf fc0 sc0 ls0 ws0">Normally<span class="_ _4"></span><span class="ls138a">,t<span class="_ _62"></span><span class="ls0">he<span class="_ _5a"> </span><span class="ff1a">recv<span class="_"> </span></span>functions <span class="_ _45"> </span>will <span class="_ _45"> </span>block <span class="_ _45"> </span>when <span class="_ _45"> </span>no <span class="_ _45"> </span>data <span class="_ _45"> </span>is <span class="_ _45"> </span>immediately <span class="_ _45"> </span>available.</span></span></div><div class="t m0 x32 h26 y6d0 ff19 fsf fc0 sc0 ls0 ws0">Similarly<span class="_ _4"></span><span class="ls138b">,t<span class="_ _8"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">send<span class="_ _47"> </span></span>functions <span class="_ _9"></span>will <span class="_ _3"></span>block <span class="_ _9"></span>when <span class="_ _3"></span>there<span class="_ _45"> </span>is<span class="_ _47"> </span>not <span class="_ _9"></span>enough <span class="_ _3"></span>room <span class="_ _3"></span>in <span class="_ _9"></span>the <span class="_ _3"></span>socket’s</span></span></div><div class="t m0 x32 h2a y6d1 ff19 fsf fc0 sc0 ls0 ws0">output <span class="_ _47"> </span>queue <span class="_ _66"> </span>to <span class="_ _47"> </span>send <span class="_ _47"> </span>the <span class="_ _47"> </span>message.<span class="_ _50"> </span>This <span class="_ _47"> </span>behavior <span class="_ _47"> </span>changes <span class="_ _47"> </span>when <span class="_ _47"> </span>the <span class="_ _66"> </span>socket <span class="_ _47"> </span>is <span class="_ _47"> </span>in</div><div class="t m0 x32 h2a y6d2 ff19 fsf fc0 sc0 ls0 ws0">nonblocking <span class="_ _42"> </span>mode.<span class="_ _65"> </span>In <span class="_ _53"> </span>this <span class="_ _53"> </span>case, <span class="_ _53"> </span>these <span class="_ _53"> </span>functions <span class="_ _42"> </span>will <span class="_ _53"> </span>fail <span class="_ _53"> </span>instead <span class="_ _53"> </span>of <span class="_ _53"> </span>blocking, <span class="_ _53"> </span>setting</div><div class="t m0 x32 h26 y6d3 ff1a fsf fc0 sc0 ls0 ws0">errno<span class="_ _80"> </span><span class="ff19">to <span class="_ _2"></span>either<span class="_"> </span></span>EWOULDBLOCK<span class="_ _66"> </span><span class="ff19">or<span class="_"> </span></span>EAGAIN<span class="ff19 ls138c">.W<span class="_ _4a"></span><span class="ls0">hen this happens, we <span class="_ _2"></span>can use either<span class="_ _66"> </span><span class="ff1a">poll</span></span></span></div><div class="t m0 x32 h26 y6d4 ff19 fsf fc0 sc0 ls0 ws0">or<span class="_"> </span><span class="ff1a">select<span class="_ _80"> </span></span>to determine when we can receive or transmit data.</div><div class="t m0 x3f h2a y6d5 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _53"> </span>Single <span class="_ _53"> </span>UNIX <span class="_ _53"> </span>Speciﬁcation <span class="_ _e"> </span>includes <span class="_ _53"> </span>support <span class="_ _53"> </span>for <span class="_ _e"> </span>a <span class="_ _53"> </span>general <span class="_ _53"> </span>asynchronous <span class="_ _53"> </span>I/O</div><div class="t m0 x32 h2a y6d6 ff19 fsf fc0 sc0 ls0 ws0">mechanism <span class="_ _23"> </span>(recall <span class="_ _23"> </span>Section <span class="_ _42"> </span>14.5).<span class="_ _51"> </span>The <span class="_ _42"> </span>socket <span class="_ _23"> </span>mechanism <span class="_ _42"> </span>has <span class="_ _23"> </span>its <span class="_ _42"> </span>own <span class="_ _23"> </span>way <span class="_ _42"> </span>of <span class="_ _23"> </span>handling</div><div class="t m0 x32 h2a y6d7 ff19 fsf fc0 sc0 ls0 ws0">asynchronous <span class="_ _9"></span>I/O, <span class="_ _9"></span>but <span class="_ _23"></span>this <span class="_ _9"></span>isn’t <span class="_ _23"></span>standardized <span class="_ _9"></span>in <span class="_ _9"></span>the <span class="_ _23"></span>Single <span class="_ _9"></span>UNIX <span class="_ _23"></span>Speciﬁcation.<span class="_ _5a"> </span>Some</div><div class="t m0 x32 h2a y6d8 ff19 fsf fc0 sc0 ls0 ws0">texts <span class="_ _42"> </span>refer <span class="_ _42"> </span>to <span class="_ _42"> </span>the <span class="_ _53"> </span>classic <span class="_ _42"> </span>socket-based <span class="_ _53"> </span>asynchronous <span class="_ _42"> </span>I/O <span class="_ _42"> </span>mechanism <span class="_ _42"> </span>as <span class="_ _53"> </span>‘<span class="_ _0"></span>‘signal-based</div><div class="t m0 x32 h2a y6d9 ff19 fsf fc0 sc0 ls0 ws0">I/O’<span class="_ _0"></span>’<span class="_ _4b"> </span>to<span class="_ _59"> </span>distinguish <span class="_ _e"> </span>it <span class="_ _e"> </span>from <span class="_ _e"> </span>the <span class="_ _e"> </span>general <span class="_"> </span>asynchr<span class="_ _1"></span>onous <span class="_"> </span>I/O <span class="_ _53"> </span>mechanism <span class="_"> </span>found <span class="_ _53"> </span>in <span class="_"> </span>the</div><div class="t m0 x32 h2a y6da ff19 fsf fc0 sc0 ls0 ws0">Single UNIX Speciﬁcation.</div><div class="t m0 x3f h26 y6db ff19 fsf fc0 sc0 ls65 ws0">Wi<span class="_ _3"></span><span class="ls0">th <span class="_ _9"></span>socket-based <span class="_ _23"> </span>asynchronous <span class="_ _9"></span>I/O, <span class="_ _23"></span>we <span class="_ _9"></span>can <span class="_ _23"></span>arrange <span class="_ _9"></span>to <span class="_ _23"></span>be <span class="_ _9"></span>sent <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">SIGIO<span class="_ _35"> </span></span>signal</span></div><div class="t m0 x32 h2a y6dc ff19 fsf fc0 sc0 ls0 ws0">when <span class="_ _23"> </span>we <span class="_ _42"> </span>can <span class="_ _42"> </span>read <span class="_ _23"></span>data <span class="_ _23"> </span>from <span class="_ _23"> </span>a <span class="_ _42"> </span>socket <span class="_ _42"> </span>or <span class="_ _23"> </span>when <span class="_ _42"> </span>space <span class="_ _42"> </span>becomes <span class="_ _23"> </span>available <span class="_ _42"> </span>in <span class="_ _23"> </span>a <span class="_ _42"> </span>socket’s</div><div class="t m0 x32 h2a y6dd ff19 fsf fc0 sc0 ls0 ws0">write queue.<span class="_ _59"> </span>Enabling asynchronous I/O is a two-step process.</div><div class="t m0 x3f h2a yc89 ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Establish<span class="_"> </span>socket ownership so signals can be delivered to the pr<span class="_ _0"></span>oper processes.</div><div class="t m0 x3f h2a y4ad9 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Inform<span class="_ _66"> </span>the <span class="_ _2"></span>socket <span class="_ _2"></span>that we <span class="_ _2"></span>want <span class="_ _2"></span>it <span class="_ _2"></span>to signal <span class="_ _2"></span>us <span class="_ _2"></span>when <span class="_ _2"></span>I/O operations <span class="_ _2"></span>won’t <span class="_ _2"></span>block.</div><div class="t m0 x32 h2a y4ada ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>c<span class="_ _9"></span><span class="ls0">an accomplish the ﬁrst step in three ways.</span></div><div class="t m0 x3f h26 y4adb ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Use<span class="_"> </span>the<span class="_"> </span><span class="ff1a">F_SETOWN<span class="_ _80"> </span></span>command with<span class="_"> </span><span class="ff1a">fcntl</span>.</div><div class="t m0 x3f h26 y33d9 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Use<span class="_"> </span>the<span class="_"> </span><span class="ff1a">FIOSETOWN<span class="_ _80"> </span></span>command with<span class="_"> </span><span class="ff1a">ioctl</span>.</div><div class="t m0 x3f h26 y4adc ff19 fsf fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>Use<span class="_"> </span>the<span class="_"> </span><span class="ff1a">SIOCSPGRP<span class="_ _80"> </span></span>command with<span class="_"> </span><span class="ff1a">ioctl</span>.</div><div class="t m0 x32 h2a y6e3 ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _53"> </span>a<span class="_ _9"></span><span class="ls0">ccomplish the second step, we have two choices.</span></div><div class="t m0 x3f h26 y4add ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Use<span class="_"> </span>the<span class="_"> </span><span class="ff1a">F_SETFL<span class="_ _80"> </span></span>command with<span class="_"> </span><span class="ff1a">fcntl<span class="_ _66"> </span></span>and enable the<span class="_"> </span><span class="ff1a">O_ASYNC<span class="_ _80"> </span></span>ﬁle ﬂag.</div><div class="t m0 x3f h26 y4ade ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Use<span class="_"> </span>the<span class="_"> </span><span class="ff1a">FIOASYNC<span class="_ _80"> </span></span>command with<span class="_"> </span><span class="ff1a">ioctl</span>.</div><div class="t m0 x3f h2a y4adf ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _44"> </span>h<span class="_ _23"></span><span class="ls0">ave <span class="_"> </span>several <span class="_"> </span>options, <span class="_"> </span>but <span class="_ _66"> </span>they <span class="_"> </span>ar<span class="ls138d">en<span class="_ _5b"></span><span class="ls0">ot <span class="_ _66"> </span>universally <span class="_"> </span>supported.<span class="_ _50"> </span>Figur<span class="ls138e">e1<span class="_ _5b"></span><span class="ls0">6.23</span></span></span></span></span></div><div class="t m0 x32 h2a y4ae0 ff19 fsf fc0 sc0 ls0 ws0">summarizes <span class="_ _9"></span>the <span class="_ _23"></span>support <span class="_ _9"></span>for <span class="_ _9"></span>these <span class="_ _23"></span>options <span class="_ _9"></span>provided <span class="_ _9"></span>by <span class="_ _9"></span>the <span class="_ _23"></span>platforms <span class="_ _9"></span>discussed <span class="_ _23"></span>in <span class="_ _9"></span>this</div><div class="t m0 x32 h2a y4ae1 ff19 fsf fc0 sc0 ls0 ws0">text.</div><div class="t m0 x201 h2d y4ae2 ff19 fs10 fc0 sc0 ls0 ws0">FreeBSD <span class="_ _7f"> </span>Linux <span class="_ _5e"> </span>Mac<span class="_"> </span>OS X<span class="_ _6e"> </span>Solaris</div><div class="t m0 x109 h2d y4ae3 ff19 fs10 fc0 sc0 ls0 ws0">8.0 <span class="_ _129"> </span>3.2.0<span class="_ _79"> </span>10.6.8 <span class="_ _7a"> </span>10</div><div class="t m0 xdf h2d y4ae4 ff19 fs10 fc0 sc0 ls0 ws0">Mechanism<span class="_ _13d"> </span>POSIX.1</div><div class="t m0 x1a0 h4f y4ae5 ff1a fs11 fc0 sc0 ls0 ws0">fcntl(fd, F_SETOWN, pid)<span class="_ _2de"> </span><span class="ff19 ls138f">••<span class="_ _c"></span><span class="ls1390">•• <span class="_ _217"></span>•</span></span></div><div class="t m0 x1a0 h4f y4ae6 ff1a fs11 fc0 sc0 ls0 ws0">ioctl(fd, FIOSETOWN, pid)<span class="_ _17f"> </span><span class="ff19 ls1391">•• <span class="_ _243"></span>•<span class="_ _45"> </span><span class="ls0">•</span></span></div><div class="t m0 x1a0 h4f y4ae7 ff1a fs11 fc0 sc0 ls0 ws0">ioctl(fd, SIOCSPGRP, pid)<span class="_ _17f"> </span><span class="ff19 ls1391">•• <span class="_ _243"></span>•<span class="_ _45"> </span><span class="ls0">•</span></span></div><div class="t m0 x1a0 h6d y4ae8 ff1a fs12 fc0 sc0 ls0 ws0">fcntl(fd, F_SETFL, flags|O_ASYNC)<span class="_ _2df"> </span><span class="ff19 ls1392">•• <span class="_ _229"></span>•</span></div><div class="t m0 x1a0 h6d y4ae9 ff1a fs12 fc0 sc0 ls0 ws0">ioctl(fd, FIOASYNC, &amp;n);<span class="_ _2e0"> </span><span class="ff19 ls1392">•• <span class="_ _229"></span>•<span class="_ _35"> </span><span class="ls0">•</span></span></div><div class="t m0 x132 h30 y3fee ff18 fs13 fc0 sc0 ls0 ws0">Figure 16.23<span class="_ _5a"> </span><span class="ff19">Socket asynchronous I/O management commands</span></div><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:249.323814px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
