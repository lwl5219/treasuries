<div id="pf288" class="pf w4 h1f" data-page-no="288"><div class="pc pc288 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg288.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">614<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Example <span class="_ _84"></span>— <span class="_ _84"></span>Connection-Oriented<span class="_"> </span>Client</div><div class="t m0 x32 h2a yce9 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls1365">e1<span class="_ _c"></span><span class="ls0">6.16 <span class="_ _42"> </span>shows <span class="_ _42"> </span>a <span class="_ _42"> </span>client <span class="_ _42"> </span>command <span class="_ _42"> </span>that <span class="_ _42"> </span>communicates <span class="_ _42"> </span>with <span class="_ _42"> </span>a <span class="_ _42"> </span>server <span class="_ _42"> </span>to <span class="_ _42"> </span>obtain <span class="_ _42"> </span>the</span></span></div><div class="t m0 x32 h26 yceb ff19 fsf fc0 sc0 ls0 ws0">output <span class="_ _42"> </span>from <span class="_ _23"> </span>a <span class="_ _42"> </span>system’s<span class="_ _44"> </span><span class="ff1a">uptime<span class="_ _35"> </span></span>command. <span class="_ _44"> </span>W<span class="_ _6"></span><span class="ls1366">ec<span class="_ _43"></span><span class="ls0">all <span class="_ _23"> </span>this <span class="_ _42"> </span>service <span class="_ _42"> </span>‘‘r<span class="_ _1"></span>emote <span class="_ _42"> </span>uptime’<span class="ls1366">’(<span class="_ _c"></span><span class="ls0">or</span></span></span></span></div><div class="t m0 x32 h2a y20ea ff19 fsf fc0 sc0 ls124 ws0">‘‘<span class="_ _2"></span><span class="ls4e">ru<span class="ls0">ptime’<span class="ls44">’f<span class="_ _4f"></span><span class="ls0">or short).</span></span></span></span></div><div class="t m0 x32 h4e y2e4d ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4999 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;netdb.h&gt;</div><div class="t m0 x32 h4e y499a ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h4e y499b ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y499c ff1a fs28 fc0 sc0 ls0 ws0">#define BUFLEN<span class="_ _189"> </span>128</div><div class="t m0 x32 h4e y499d ff1a fs28 fc0 sc0 ls0 ws0">extern int connect_retry(int, int, int, const struct sockaddr *,</div><div class="t m0 x8a h4e y499e ff1a fs28 fc0 sc0 ls0 ws0">socklen_t);</div><div class="t m0 x32 h4e y499f ff1a fs28 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h4e y49a0 ff1a fs28 fc0 sc0 ls0 ws0">print_uptime(int sockfd)</div><div class="t m0 x32 h4e y49a1 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y49a2 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>n;</div><div class="t m0 x8a h4e y49a3 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>buf[BUFLEN];</div><div class="t m0 x8a h4e y49a4 ff1a fs28 fc0 sc0 ls0 ws0">while ((n = recv(sockfd, buf, BUFLEN, 0)) &gt; 0)</div><div class="t m0 x9d h4e y49a5 ff1a fs28 fc0 sc0 ls0 ws0">write(STDOUT_FILENO, buf, n);</div><div class="t m0 x8a h4e y49a6 ff1a fs28 fc0 sc0 ls0 ws0">if (n &lt; 0)</div><div class="t m0 x9d h4e y49a7 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;recv error&quot;);</div><div class="t m0 x32 h4e y49a8 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y49a9 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y49aa ff1a fs28 fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h4e y49ab ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y49ac ff1a fs28 fc0 sc0 ls0 ws0">struct addrinfo *ailist, *aip;</div><div class="t m0 x8a h4e y49ad ff1a fs28 fc0 sc0 ls0 ws0">struct addrinfo hint;</div><div class="t m0 x8a h4e y49ae ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>sockfd,<span class="_"> </span>err;</div><div class="t m0 x8a h4e y49af ff1a fs28 fc0 sc0 ls0 ws0">if (argc != 2)</div><div class="t m0 x9d h4e y49b0 ff1a fs28 fc0 sc0 ls0 ws0">err_quit(&quot;usage: ruptime hostname&quot;);</div><div class="t m0 x8a h4e y49b1 ff1a fs28 fc0 sc0 ls0 ws0">memset(&amp;hint, 0, sizeof(hint));</div><div class="t m0 x8a h4e y49b2 ff1a fs28 fc0 sc0 ls0 ws0">hint.ai_socktype = SOCK_STREAM;</div><div class="t m0 x8a h4e y49b3 ff1a fs28 fc0 sc0 ls0 ws0">hint.ai_canonname = NULL;</div><div class="t m0 x8a h4e y49b4 ff1a fs28 fc0 sc0 ls0 ws0">hint.ai_addr = NULL;</div><div class="t m0 x8a h4e y49b5 ff1a fs28 fc0 sc0 ls0 ws0">hint.ai_next = NULL;</div><div class="t m0 x8a h4e y49b6 ff1a fs28 fc0 sc0 ls0 ws0">if ((err = getaddrinfo(argv[1], &quot;ruptime&quot;, &amp;hint, &amp;ailist)) != 0)</div><div class="t m0 x9d h4e y49b7 ff1a fs28 fc0 sc0 ls0 ws0">err_quit(&quot;getaddrinfo error: %s&quot;, gai_strerror(err));</div><div class="t m0 x8a h4e y49b8 ff1a fs28 fc0 sc0 ls0 ws0">for (aip = ailist; aip != NULL; aip = aip-&gt;ai_next) {</div><div class="t m0 x9d h4e y49b9 ff1a fs28 fc0 sc0 ls0 ws0">if ((sockfd = connect_retry(aip-&gt;ai_family, SOCK_STREAM, 0,</div><div class="t m0 x76 h4e y49ba ff1a fs28 fc0 sc0 ls0 ws0">aip-&gt;ai_addr, aip-&gt;ai_addrlen)) &lt; 0) {</div><div class="t m0 x1f h4e y49bb ff1a fs28 fc0 sc0 ls0 ws0">err = errno;</div><div class="t m0 x9d h4e y49bc ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x1f h4e y49bd ff1a fs28 fc0 sc0 ls0 ws0">print_uptime(sockfd);</div><div class="t m0 x1f h4e y49be ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x9d h4e y49bf ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y49c0 ff1a fs28 fc0 sc0 ls0 ws0">}</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
