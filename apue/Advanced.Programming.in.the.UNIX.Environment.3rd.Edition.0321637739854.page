<div id="pf356" class="pf w4 h1f" data-page-no="356"><div class="pc pc356 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg356.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">820<span class="_ _1b"> </span><span class="ff19">Communicating <span class="_"> </span>with <span class="_"> </span>a <span class="_"> </span>Network <span class="_"> </span>Printer<span class="_ _23b"> </span>Chapter <span class="_"> </span>21</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">225 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">226 <span class="_ _68"> </span>*<span class="_"> </span>Get the next job number.</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">227 <span class="_ _68"> </span>*</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">228 <span class="_ _68"> </span>*<span class="_"> </span>LOCKING: acquires and releases joblock.</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">229 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">230 <span class="_ _d9"> </span>int32_t</div><div class="t m0 x32 h57 y56c7 ff1a fs2d fc0 sc0 ls0 ws0">231 <span class="_ _d9"> </span>get_newjobno(void)</div><div class="t m0 x32 h57 y56c8 ff1a fs2d fc0 sc0 ls0 ws0">232 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56c9 ff1a fs2d fc0 sc0 ls0 ws0">233 <span class="_ _15"> </span>int32_t<span class="_"> </span>jobid;</div><div class="t m0 x32 h57 y2f23 ff1a fs2d fc0 sc0 ls0 ws0">234 <span class="_ _15"> </span>pthread_mutex_lock(&amp;joblock);</div><div class="t m0 x32 h57 y2f24 ff1a fs2d fc0 sc0 ls0 ws0">235 <span class="_ _15"> </span>jobid<span class="_"> </span><span class="ls15c">=n<span class="_ _1d"></span><span class="ls0">extjob++;</span></span></div><div class="t m0 x32 h57 y2f25 ff1a fs2d fc0 sc0 ls0 ws0">236 <span class="_ _15"> </span>if<span class="_"> </span>(nextjob &lt;= 0)</div><div class="t m0 x32 h57 y5712 ff1a fs2d fc0 sc0 ls0 ws0">237 <span class="_ _186"> </span>nextjob<span class="_"> </span><span class="ls15c">=1<span class="_ _1d"></span><span class="ls0">;</span></span></div><div class="t m0 x32 h57 y5713 ff1a fs2d fc0 sc0 ls0 ws0">238 <span class="_ _15"> </span>pthread_mutex_unlock(&amp;joblock);</div><div class="t m0 x32 h57 y5714 ff1a fs2d fc0 sc0 ls0 ws0">239 <span class="_ _15"> </span>return(jobid);</div><div class="t m0 x32 h57 y5715 ff1a fs2d fc0 sc0 ls0 ws0">240 <span class="_ _d9"> </span>}</div><div class="t m0 x32 h57 y2c5f ff1a fs2d fc0 sc0 ls0 ws0">241 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y2c60 ff1a fs2d fc0 sc0 ls0 ws0">242 <span class="_ _68"> </span>*<span class="_"> </span>Add a new job to the list of pending jobs.<span class="_ _3a"> </span>Then signal</div><div class="t m0 x32 h57 y2c61 ff1a fs2d fc0 sc0 ls0 ws0">243 <span class="_ _68"> </span>*<span class="_"> </span>the printer thread that a job is pending.</div><div class="t m0 x32 h57 y2c62 ff1a fs2d fc0 sc0 ls0 ws0">244 <span class="_ _68"> </span>*</div><div class="t m0 x32 h57 y5689 ff1a fs2d fc0 sc0 ls0 ws0">245 <span class="_ _68"> </span>*<span class="_"> </span>LOCKING: acquires and releases joblock.</div><div class="t m0 x32 h57 y568a ff1a fs2d fc0 sc0 ls0 ws0">246 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y568b ff1a fs2d fc0 sc0 ls0 ws0">247 <span class="_ _d9"> </span>void</div><div class="t m0 x32 h57 y568c ff1a fs2d fc0 sc0 ls0 ws0">248 <span class="_ _d9"> </span>add_job(struct<span class="_"> </span>printreq *reqp, int32_t jobid)</div><div class="t m0 x32 h57 y568d ff1a fs2d fc0 sc0 ls0 ws0">249 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56fe ff1a fs2d fc0 sc0 ls0 ws0">250 <span class="_ _15"> </span>struct<span class="_"> </span>job <span class="_"> </span>*jp;</div><div class="t m0 x32 h57 y33bb ff1a fs2d fc0 sc0 ls0 ws0">251 <span class="_ _15"> </span>if<span class="_"> </span>((jp = malloc(sizeof(struct job))) == NULL)</div><div class="t m0 x32 h57 y33bc ff1a fs2d fc0 sc0 ls0 ws0">252 <span class="_ _186"> </span>log_sys(&quot;malloc<span class="_"> </span>failed&quot;);</div><div class="t m0 x32 h57 y5784 ff1a fs2d fc0 sc0 ls0 ws0">253 <span class="_ _15"> </span>memcpy(&amp;jp-&gt;req,<span class="_"> </span>reqp, sizeof(struct printreq));</div><div class="t m0 x32 h4d y5785 ff19 fs26 fc0 sc0 ls0 ws0">[225 <span class="_ _a"></span>– <span class="_ _a"></span>240]<span class="_ _65"> </span>The<span class="_ _35"> </span><span class="ff1a">get_newjobno<span class="_ _35"> </span></span>function <span class="_ _42"> </span>is <span class="_ _23"> </span>used <span class="_ _42"> </span>to <span class="_ _42"> </span>get <span class="_ _23"> </span>the <span class="_ _42"> </span>next <span class="_ _23"> </span>job <span class="_ _42"> </span>number<span class="_ _6"></span><span class="ls1505">.W<span class="_ _64"></span><span class="ls1797">eﬁ<span class="_ _43"></span><span class="ls0">rst</span></span></span></div><div class="t m0 x11a h4d y5786 ff19 fs26 fc0 sc0 ls0 ws0">lock <span class="_ _9"></span>the<span class="_ _35"> </span><span class="ff1a">joblock<span class="_ _45"> </span></span>mutex. <span class="_ _45"> </span>W<span class="_ _6"></span><span class="ls1798">ei<span class="_ _b"></span><span class="ls0">ncrement <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">nextjob<span class="_ _35"> </span></span>variable <span class="_ _9"></span>and <span class="_ _23"></span>handle</span></span></div><div class="t m0 x11a h49 y5787 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _9"></span>case <span class="_ _9"></span>where<span class="_ _47"> </span>it<span class="_ _45"> </span>wraps <span class="_ _9"></span>around. <span class="_ _47"> </span>Then<span class="_ _45"> </span>we <span class="_ _9"></span>unlock <span class="_ _3"></span>the <span class="_ _9"></span>mutex <span class="_ _9"></span>and <span class="_ _9"></span>return <span class="_ _3"></span>the</div><div class="t m0 x11a h4d y5788 ff19 fs26 fc0 sc0 ls0 ws0">value<span class="_ _59"> </span><span class="ff1a">nextjob<span class="_ _59"> </span></span>had <span class="_ _e"> </span>before<span class="_ _59"> </span>we<span class="_ _59"> </span>incremented <span class="_ _53"> </span>it.<span class="_ _60"> </span>Multiple <span class="_ _e"> </span>threads <span class="_"> </span>can <span class="_ _53"> </span>call</div><div class="t m0 x11a h4d y5789 ff1a fs26 fc0 sc0 ls0 ws0">get_newjobno<span class="_ _47"> </span><span class="ff19">at <span class="_ _2"></span>the <span class="_ _3"></span>same <span class="_ _3"></span>time; <span class="_ _3"></span>we <span class="_ _3"></span>need <span class="_ _2"></span>to <span class="_ _3"></span>serialize <span class="_ _3"></span>access <span class="_ _3"></span>to <span class="_ _3"></span>the <span class="_ _3"></span>next <span class="_ _2"></span>job</span></div><div class="t m0 x11a h49 y578a ff19 fs26 fc0 sc0 ls0 ws0">number <span class="_ _3"></span>so <span class="_ _9"></span>that <span class="_ _3"></span>each <span class="_ _9"></span>thread <span class="_ _3"></span>gets <span class="_ _3"></span>a <span class="_ _9"></span>unique <span class="_ _3"></span>job <span class="_ _9"></span>number<span class="_ _6"></span><span class="ls1799">.(<span class="_ _1d"></span><span class="ls0">Refer <span class="_ _9"></span>to <span class="_ _3"></span>Figur<span class="ls179a">e1<span class="_ _43"></span><span class="ls0">1.9</span></span></span></span></div><div class="t m0 x11a h49 y578b ff19 fs26 fc0 sc0 ls0 ws0">to see what could happen if we don’t serialize the threads in this case.)</div><div class="t m0 x32 h4d y578c ff19 fs26 fc0 sc0 ls0 ws0">[241 <span class="_ _a"></span>– <span class="_ _a"></span>253]<span class="_ _65"> </span>The<span class="_ _45"> </span><span class="ff1a">add_job<span class="_ _47"> </span></span>function <span class="_ _9"></span>is <span class="_ _9"></span>used <span class="_ _9"></span>to <span class="_ _9"></span>add <span class="_ _9"></span>a <span class="_ _9"></span>new <span class="_ _9"></span>print <span class="_ _3"></span>request <span class="_ _9"></span>to <span class="_ _9"></span>the <span class="_ _9"></span>end <span class="_ _9"></span>of <span class="_ _9"></span>the</div><div class="t m0 x11a h4d y578d ff19 fs26 fc0 sc0 ls0 ws0">list <span class="_ _2"></span>of <span class="_ _2"></span>pending <span class="_ _3"></span>print <span class="_ _2"></span>jobs.<span class="_ _61"> </span><span class="ls164">We <span class="_ _80"> </span>s<span class="_ _9"></span></span>tart <span class="_ _2"></span>by <span class="_ _3"></span>allocating <span class="_ _2"></span>space <span class="_ _2"></span>for <span class="_ _3"></span>the<span class="_ _66"> </span><span class="ff1a">job<span class="_ _47"> </span></span>structure.</div><div class="t m0 x11a h49 y578e ff19 fs26 fc0 sc0 ls0 ws0">If this fails, <span class="_ _2"></span>we log <span class="_ _2"></span>an error message <span class="_ _2"></span>and exit.<span class="_ _46"> </span>At <span class="_ _2"></span>this point, <span class="_ _2"></span>the print <span class="_ _2"></span>request</div><div class="t m0 x11a h49 y578f ff19 fs26 fc0 sc0 ls0 ws0">is <span class="_ _42"> </span>stored <span class="_ _23"> </span>safely <span class="_ _42"> </span>on <span class="_ _42"> </span>disk; <span class="_ _42"> </span>when <span class="_ _42"> </span>the <span class="_ _42"> </span>printer <span class="_ _42"> </span>spooling <span class="_ _23"> </span>daemon <span class="_ _42"> </span>is <span class="_ _42"> </span>restarted, <span class="_ _42"> </span>it</div><div class="t m0 x11a h49 y5790 ff19 fs26 fc0 sc0 ls0 ws0">will pick <span class="_ _2"></span>the request up.<span class="_ _61"> </span>After we <span class="_ _2"></span>allocate <span class="_ _2"></span>memory for <span class="_ _2"></span>the new <span class="_ _2"></span>job, <span class="_ _2"></span>we copy</div><div class="t m0 x11a h49 y5791 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_"> </span>request <span class="_"> </span>structur<span class="ls5d9">ef<span class="_ _5b"></span><span class="lscc">ro<span class="ls5d9">mt<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>client <span class="_ _66"> </span>into <span class="_ _47"> </span>the <span class="_"> </span>job <span class="_ _66"> </span>structure. <span class="_ _46"> </span>Recall<span class="_ _46"> </span>from</span></span></span></span></div><div class="t m0 x11a h4d y5792 ff1a fs26 fc0 sc0 ls0 ws0">print.h<span class="_ _66"> </span><span class="ff19">that <span class="_ _2"></span>a<span class="_ _47"> </span></span>job<span class="_ _66"> </span><span class="ff19">structur<span class="ls503">ec<span class="_ _8"></span><span class="ls0">onsists <span class="_ _2"></span>of <span class="_ _2"></span>a <span class="_ _2"></span>pair <span class="_ _2"></span>of <span class="_ _3"></span>list <span class="_ _2"></span>pointers, <span class="_ _2"></span>a <span class="_ _2"></span>job <span class="_ _2"></span>ID, <span class="_ _2"></span>and</span></span></span></div><div class="t m0 x11a h4d y5793 ff19 fs26 fc0 sc0 lsd3 ws0">ac<span class="_ _d"></span><span class="ls0">opy of the<span class="_"> </span><span class="ff1a">printreq<span class="_ _66"> </span></span>structur<span class="_ _0"></span><span class="lsd3">es<span class="_ _d"></span><span class="ls0">ent to us by the client<span class="_"> </span><span class="ff1a">print<span class="_ _80"> </span></span>command.</span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
