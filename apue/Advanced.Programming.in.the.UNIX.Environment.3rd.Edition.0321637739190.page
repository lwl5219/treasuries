<div id="pfbe" class="pf w4 h1f" data-page-no="be"><div class="pc pcbe w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bgbe.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">156<span class="_ _1b"> </span><span class="ff19">Standar<span class="ls30a">dI<span class="_ _55"></span><span class="ls0">/O <span class="_"> </span>Library<span class="_ _1c9"> </span>Chapter <span class="_"> </span>5</span></span></span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">library <span class="_ _42"> </span>is <span class="_ _53"> </span>not <span class="_ _53"> </span>much <span class="_ _53"> </span>slower <span class="_ _53"> </span>than <span class="_ _53"> </span>calling <span class="_ _53"> </span>the<span class="_ _44"> </span><span class="ff1a">read<span class="_ _4b"> </span></span>and<span class="_ _44"> </span><span class="ff1a">write<span class="_ _44"> </span></span>functions <span class="_ _53"> </span>directly<span class="_ _4"></span><span class="ls6cf">.F<span class="_ _52"></span><span class="ls0">or</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">most <span class="_"> </span>nontrivial <span class="_"> </span>applications, <span class="_"> </span>the <span class="_"> </span>largest <span class="_"> </span>amount <span class="_"> </span>of <span class="_"> </span>user <span class="_"> </span>CPU <span class="_"> </span>time <span class="_"> </span>is <span class="_"> </span>taken <span class="_"> </span>by <span class="_"> </span>the</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">application, not by the standar<span class="ls44">dI<span class="_ _4f"></span><span class="ls0">/O routines.</span></span></div><div class="t m0 x35 h53 y134 ff16 fs2b fc0 sc0 ls0 ws0">5.9 <span class="_ _68"> </span>Binar<span class="ls1c3">yI<span class="_ _52"></span><span class="ls0">/O</span></span></div><div class="t m0 x32 h2a y6d4 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _2"></span>functions <span class="_ _3"></span>from <span class="_ _3"></span>Section <span class="_ _2"></span>5.6 <span class="_ _3"></span>operated <span class="_ _3"></span>with <span class="_ _3"></span>one <span class="_ _3"></span>character <span class="_ _3"></span>at <span class="_ _3"></span>a <span class="_ _3"></span>time, <span class="_ _3"></span>and <span class="_ _2"></span>the <span class="_ _3"></span>functions</div><div class="t m0 x32 h2a y6d5 ff19 fsf fc0 sc0 ls0 ws0">from <span class="_ _3"></span>Section <span class="_ _9"></span>5.7 <span class="_ _9"></span>operated <span class="_ _3"></span>with <span class="_ _9"></span>one <span class="_ _9"></span>line <span class="_ _9"></span>at <span class="_ _9"></span>a <span class="_ _3"></span>time.<span class="_ _5a"> </span>If <span class="_ _9"></span>we’r<span class="ls6d0">ed<span class="_ _b"></span><span class="ls0">oing <span class="_ _9"></span>binary <span class="_ _9"></span>I/O, <span class="_ _3"></span>we <span class="_ _9"></span>often</span></span></div><div class="t m0 x32 h26 y6d6 ff19 fsf fc0 sc0 ls0 ws0">would like to <span class="_ _2"></span>read or write <span class="_ _2"></span>an entir<span class="ls53">es<span class="_ _4f"></span><span class="ls0">tructure<span class="_"> </span>at<span class="_"> </span>a<span class="_ _66"> </span>time. <span class="_"> </span>T<span class="_ _6"></span>o<span class="_ _66"> </span>do<span class="_ _66"> </span>this <span class="_ _2"></span>using<span class="_"> </span><span class="ff1a">getc<span class="_ _66"> </span></span>or<span class="_"> </span><span class="ff1a">putc</span>,</span></span></div><div class="t m0 x32 h2a y6d7 ff19 fsf fc0 sc0 ls0 ws0">we have <span class="_ _2"></span>to <span class="_ _2"></span>loop through the <span class="_ _2"></span>entir<span class="ls6d1">es<span class="_ _4f"></span><span class="ls0">tructure, one <span class="_ _2"></span>byte at <span class="_ _2"></span>a <span class="_ _2"></span>time, reading or <span class="_ _2"></span>writing <span class="_ _2"></span>each</span></span></div><div class="t m0 x32 h26 y6d8 ff19 fsf fc0 sc0 ls0 ws0">byte. <span class="_"> </span>W<span class="_ _6"></span><span class="ls5c1">ec<span class="_ _d"></span><span class="ls0">an’t <span class="_ _2"></span>use <span class="_ _2"></span>the line-at-a-time <span class="_ _2"></span>functions, <span class="_ _2"></span>since<span class="_ _47"> </span><span class="ff1a">fputs<span class="_ _66"> </span></span>stops writing <span class="_ _2"></span>when <span class="_ _2"></span>it <span class="_ _2"></span>hits <span class="_ _2"></span>a</span></span></div><div class="t m0 x32 h26 y6d9 ff19 fsf fc0 sc0 ls0 ws0">null <span class="_ _23"></span>byte, <span class="_ _23"> </span>and <span class="_ _23"> </span>ther<span class="ls6d2">em<span class="_ _43"></span><span class="ls0">ight <span class="_ _23"> </span>be <span class="_ _23"> </span>null <span class="_ _23"> </span>bytes <span class="_ _42"> </span>within <span class="_ _23"></span>the <span class="_ _23"></span>structure. <span class="_ _45"> </span>Similarly<span class="_ _6"></span>,<span class="_ _35"> </span><span class="ff1a">fgets<span class="_ _45"> </span></span>won’t</span></span></div><div class="t m0 x32 h2a y6da ff19 fsf fc0 sc0 ls0 ws0">work <span class="_ _23"></span>correctly <span class="_ _23"></span>on <span class="_ _23"></span>input <span class="_ _23"></span>if <span class="_ _23"> </span>any <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>data <span class="_ _42"> </span>bytes <span class="_ _23"></span>ar<span class="ls6d3">en<span class="_ _43"></span><span class="ls0">ulls <span class="_ _23"></span>or <span class="_ _23"> </span>newlines.<span class="_ _51"> </span>Therefor<span class="_ _0"></span>e, <span class="_ _23"></span>the</span></span></div><div class="t m0 x32 h2a y6db ff19 fsf fc0 sc0 ls0 ws0">following two functions ar<span class="ls44">ep<span class="_ _4f"></span><span class="ls45">ro<span class="_ _2"></span><span class="ls0">vided for binary I/O.</span></span></span></div><div class="t m0 x3f h57 y15d4 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h57 y15d5 ff1a fs2d fc0 sc0 ls0 ws0">size_t fread(void *restrict<span class="_"> </span><span class="ff1b">ptr</span><span class="ls15c">,s<span class="_ _1d"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">size</span><span class="ls15c">,s<span class="_ _5b"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">nobj</span>,</span></span></span></span></div><div class="t m0 xf0 h57 y15d6 ff1a fs2d fc0 sc0 ls0 ws0">FILE *restrict<span class="_"> </span><span class="ff1b">fp</span>);</div><div class="t m0 x3f h57 y15d7 ff1a fs2d fc0 sc0 ls0 ws0">size_t fwrite(const void *restrict<span class="_"> </span><span class="ff1b">ptr</span><span class="ls15c">,s<span class="_ _1d"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">size</span><span class="ls15c">,s<span class="_ _5b"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">nobj</span>,</span></span></span></span></div><div class="t m0 xea h57 y15d8 ff1a fs2d fc0 sc0 ls0 ws0">FILE *restrict<span class="_"> </span><span class="ff1b">fp</span>);</div><div class="t m0 x46 h5f y15d9 ff19 fs2d fc0 sc0 ls0 ws0">Both return: number of objects r<span class="_ _0"></span>ead or written</div><div class="t m0 x32 h49 y15da ff19 fs26 fc0 sc0 ls0 ws0">These functions have two common uses:</div><div class="t m0 x3f h49 y15db ff19 fs26 fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Read<span class="_ _45"> </span>or <span class="_ _23"> </span>write <span class="_ _23"></span>a <span class="_ _9"></span>binary <span class="_ _23"></span>array<span class="_ _4"></span><span class="ls6d4">.F<span class="_ _62"></span><span class="ls0">or <span class="_ _9"></span>example, <span class="_ _23"></span>to <span class="_ _23"></span>write <span class="_ _9"></span>elements <span class="_ _23"></span>2 <span class="_ _9"></span>through <span class="_ _23"></span>5 <span class="_ _9"></span>of <span class="_ _23"></span>a</span></span></div><div class="t m0 x41 h49 y15dc ff19 fs26 fc0 sc0 ls0 ws0">ﬂoating-point array<span class="_ _4"></span>,<span class="_"> </span>we<span class="_"> </span>could write</div><div class="t m0 x7d h4e y15dd ff1a fs28 fc0 sc0 ls0 ws0">float <span class="_ _d9"> </span>data[10];</div><div class="t m0 x7d h4e y15de ff1a fs28 fc0 sc0 ls0 ws0">if (fwrite(&amp;data[2], sizeof(float), 4, fp) != 4)</div><div class="t m0 xb9 h4e y15df ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fwrite error&quot;);</div><div class="t m0 x41 h4a y15e0 ff19 fs26 fc0 sc0 ls0 ws0">Here, <span class="_ _23"> </span>we <span class="_ _42"> </span>specify<span class="_ _44"> </span><span class="ff1b">size<span class="_ _35"> </span></span>as <span class="_ _42"> </span>the <span class="_ _42"> </span>size <span class="_ _42"> </span>of <span class="_ _42"> </span>each <span class="_ _42"> </span>element <span class="_ _42"> </span>of <span class="_ _42"> </span>the <span class="_ _42"> </span>array <span class="_ _42"> </span>and<span class="_ _44"> </span><span class="ff1b">nobj<span class="_ _35"> </span></span>as <span class="_ _42"> </span>the</div><div class="t m0 x41 h49 y15e1 ff19 fs26 fc0 sc0 ls0 ws0">number of elements.</div><div class="t m0 x3f h49 y15e2 ff19 fs26 fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Read<span class="_"> </span>or write a structure. <span class="_"> </span>For<span class="_"> </span>example, we could write</div><div class="t m0 x7d h4e y15e3 ff1a fs28 fc0 sc0 ls0 ws0">struct {</div><div class="t m0 x1d h4e y15e4 ff1a fs28 fc0 sc0 ls0 ws0">short <span class="_"> </span>count;</div><div class="t m0 x1d h4e y15e5 ff1a fs28 fc0 sc0 ls0 ws0">long <span class="_ _d9"> </span>total;</div><div class="t m0 x1d h4e y15e6 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _d9"> </span>name[NAMESIZE];</div><div class="t m0 x7d h4e y15e7 ff1a fs28 fc0 sc0 ls1b6 ws0">}i<span class="_ _1d"></span><span class="ls0">tem;</span></div><div class="t m0 x7d h4e y15e8 ff1a fs28 fc0 sc0 ls0 ws0">if (fwrite(&amp;item, sizeof(item), 1, fp) != 1)</div><div class="t m0 xb9 h4e y15e9 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fwrite error&quot;);</div><div class="t m0 x41 h4a y15ea ff19 fs26 fc0 sc0 ls0 ws0">Here, we <span class="_ _2"></span>specify<span class="_ _66"> </span><span class="ff1b">size<span class="_ _66"> </span></span>as <span class="_ _2"></span>the <span class="_ _2"></span>size <span class="_ _2"></span>of <span class="_ _2"></span>structur<span class="ls6d5">ea<span class="_ _4f"></span><span class="ls0">nd<span class="_ _66"> </span><span class="ff1b">nobj<span class="_ _66"> </span></span>as <span class="_ _2"></span>1 <span class="_ _2"></span>(the <span class="_ _2"></span>number <span class="_ _2"></span>of <span class="_ _2"></span>objects</span></span></div><div class="t m0 x41 h49 y15eb ff19 fs26 fc0 sc0 ls0 ws0">to write).</div><a class="l" href="#pfe" data-dest-detail='[14,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892842px;bottom:1110.288916px;width:96.144592px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
