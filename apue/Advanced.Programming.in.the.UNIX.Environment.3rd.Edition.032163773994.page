<div id="pf5e" class="pf w4 h1f" data-page-no="5e"><div class="pc pc5e w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg5e.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">60<span class="_ _1b"> </span><span class="ff19">UNIX <span class="_"> </span>Standardization <span class="_"> </span>and <span class="_"> </span>Implementations<span class="_ _99"> </span>Chapter <span class="_"> </span>2</span></div><div class="t m0 x35 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">2.10 <span class="_ _93"> </span>Summary</div><div class="t m0 x32 h2a y4de ff19 fsf fc0 sc0 ls0 ws0">Much <span class="_ _9"></span>has <span class="_ _9"></span>happened <span class="_ _9"></span>with <span class="_ _9"></span>the <span class="_ _9"></span>standardization <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>UNIX <span class="_ _9"></span>programming <span class="_ _3"></span>environment</div><div class="t m0 x32 h2a y6d0 ff19 fsf fc0 sc0 ls0 ws0">over the past two and a half decades.<span class="_ _46"> </span><span class="ls5f">We<span class="_ _23"></span></span>’ve described the dominant standards <span class="_ _84"></span>— <span class="_ _4"></span>ISO<span class="_"> </span>C,</div><div class="t m0 x32 h2a y6d1 ff19 fsf fc0 sc0 ls0 ws0">POSIX, <span class="_ _9"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>Single <span class="_ _9"></span>UNIX <span class="_ _9"></span>Speciﬁcation<span class="_ _9"></span><span class="ls9d">—a<span class="_ _1"></span><span class="ls0">nd <span class="_ _9"></span>their <span class="_ _9"></span>effect <span class="_ _3"></span>on <span class="_ _9"></span>the <span class="_ _23"></span>four <span class="_ _3"></span>platforms <span class="_ _23"></span>that</span></span></div><div class="t m0 x32 h2a y6d2 ff19 fsf fc0 sc0 ls0 ws0">we’ll examine in <span class="_ _2"></span>this text<span class="_ _9"></span><span class="ls9d">—F<span class="_ _1"></span><span class="ls45">re<span class="ls0">eBSD, Linux, <span class="_ _2"></span>Mac OS <span class="_ _2"></span>X, and <span class="_ _2"></span>Solaris.<span class="_ _46"> </span>These standards try</span></span></span></div><div class="t m0 x32 h2a y6d3 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _2"></span>deﬁne <span class="_ _3"></span>certain <span class="_ _3"></span>parameters <span class="_ _2"></span>that <span class="_ _3"></span>can <span class="_ _3"></span>change <span class="_ _2"></span>with <span class="_ _3"></span>each <span class="_ _3"></span>implementation, <span class="_ _3"></span>but <span class="_ _2"></span>we’ve <span class="_ _3"></span>seen</div><div class="t m0 x32 h2a y6d4 ff19 fsf fc0 sc0 ls0 ws0">that <span class="_ _45"> </span>these <span class="_ _45"> </span>limits <span class="_ _45"> </span>ar<span class="ls32d">ei<span class="_ _26"></span><span class="ls0">mperfect. <span class="_ _5a"> </span>W<span class="_ _6"></span>e’ll <span class="_ _45"> </span>encounter <span class="_ _35"> </span>many <span class="_ _45"> </span>of <span class="_ _45"> </span>these <span class="_ _45"> </span>limits <span class="_ _45"> </span>and <span class="_ _45"> </span>magic</span></span></div><div class="t m0 x32 h2a y6d5 ff19 fsf fc0 sc0 ls0 ws0">constants as we proceed thr<span class="_ _0"></span>ough the text.</div><div class="t m0 x3f h2a y6d6 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>bibliography <span class="_ _23"></span>speciﬁes <span class="_ _9"></span>how <span class="_ _23"></span>to <span class="_ _9"></span>obtain <span class="_ _23"></span>copies <span class="_ _9"></span>of <span class="_ _23"></span>the <span class="_ _9"></span>standards <span class="_ _9"></span>discussed <span class="_ _23"></span>in <span class="_ _9"></span>this</div><div class="t m0 x32 h2a y6d7 ff19 fsf fc0 sc0 ls0 ws0">chapter<span class="_ _6"></span>.</div><div class="t m0 x32 h53 y9fe ff16 fs2b fc0 sc0 ls0 ws0">Exer<span class="_ _0"></span>cises</div><div class="t m0 x32 h5f y9ff ff18 fs2d fc0 sc0 ls0 ws0">2.1<span class="_ _6e"> </span><span class="ff19 ls32e">We <span class="_ _47"> </span>m<span class="_ _9"></span><span class="ls0">entioned <span class="_ _23"> </span>in <span class="_ _23"> </span>Section <span class="_ _23"> </span>2.8 <span class="_ _23"> </span>that <span class="_ _23"> </span>some <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _42"> </span>primitive <span class="_ _23"> </span>system <span class="_ _23"> </span>data <span class="_ _23"> </span>types <span class="_ _23"> </span>ar<span class="ls32f">ed<span class="_ _b"></span><span class="ls0">eﬁned <span class="_ _9"></span>in</span></span></span></span></div><div class="t m0 x90 h57 ya00 ff19 fs2d fc0 sc0 ls0 ws0">mor<span class="ls330">et<span class="_ _c"></span><span class="ls0">han <span class="_ _53"> </span>one <span class="_ _53"> </span>header<span class="_ _1"></span><span class="ls331">.F<span class="_ _7"></span><span class="ls0">or <span class="_"> </span>example, <span class="_ _42"> </span>in <span class="_ _53"> </span>FreeBSD <span class="_ _42"> </span>8.0,<span class="_ _44"> </span><span class="ff1a">size_t<span class="_ _44"> </span></span>is <span class="_ _53"> </span>deﬁned <span class="_ _53"> </span>in <span class="_"> </span>29 <span class="_ _42"> </span>differ<span class="_ _0"></span>ent</span></span></span></span></div><div class="t m0 x90 h5f ya01 ff19 fs2d fc0 sc0 ls0 ws0">headers. <span class="_ _47"> </span>Because<span class="_ _45"> </span>all <span class="_ _23"></span>29 <span class="_ _9"></span>headers <span class="_ _9"></span>could <span class="_ _23"> </span>be <span class="_ _9"></span>included <span class="_ _23"></span>in <span class="_ _9"></span>a <span class="_ _9"></span>program <span class="_ _23"></span>and <span class="_ _9"></span>because <span class="_ _9"></span>ISO <span class="_ _23"> </span>C <span class="_ _9"></span>does</div><div class="t m0 x90 h57 ya02 ff19 fs2d fc0 sc0 ls0 ws0">not allow multiple<span class="_"> </span><span class="ff1a">typedef</span><span class="ls110">sf<span class="_ _5"></span><span class="ls0">or the same name, how must the headers be written?</span></span></div><div class="t m0 x32 h5f ya03 ff18 fs2d fc0 sc0 ls0 ws0">2.2<span class="_ _6e"> </span><span class="ff19">Examine <span class="_ _66"> </span>your <span class="_ _80"> </span>system’s <span class="_ _66"> </span>headers <span class="_ _66"> </span>and <span class="_ _80"> </span>list <span class="_ _66"> </span>the <span class="_ _66"> </span>actual <span class="_ _80"> </span>data <span class="_ _66"> </span>types <span class="_ _80"> </span>used <span class="_ _66"> </span>to <span class="_ _66"> </span>implement <span class="_ _80"> </span>the</span></div><div class="t m0 x90 h5f ya04 ff19 fs2d fc0 sc0 ls0 ws0">primitive system data types.</div><div class="t m0 x32 h5f ya05 ff18 fs2d fc0 sc0 ls0 ws0">2.3<span class="_ _6e"> </span><span class="ff19">Update <span class="_"> </span>the <span class="_"> </span>program <span class="_ _53"> </span>in <span class="_"> </span>Figur<span class="ls332">e2<span class="_ _55"></span><span class="ls0">.17 <span class="_"> </span>to <span class="_"> </span>avoid <span class="_"> </span>the <span class="_"> </span>needless <span class="_ _53"> </span>processing <span class="_"> </span>that <span class="_"> </span>occurs <span class="_ _53"> </span>when</span></span></span></div><div class="t m0 x90 h57 ya06 ff1a fs2d fc0 sc0 ls0 ws0">sysconf<span class="_ _e"> </span><span class="ff19 ls1e7">re<span class="_ _2"></span><span class="ls0">turns<span class="_"> </span></span></span>LONG_MAX<span class="_ _80"> </span><span class="ff19">as the limit for<span class="_"> </span></span>OPEN_MAX<span class="ff19">.</span></div><a class="l" href="#pfc" data-dest-detail='[12,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:90.803810px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
