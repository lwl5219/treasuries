<div id="pf1b9" class="pf w4 h1f" data-page-no="1b9"><div class="pc pc1b9 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1b9.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">407</span></div><div class="t m0 x1ca h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">tfp = tfp-&gt;f_next;</div><div class="t m0 x1f h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">tfp-&gt;f_next = fp-&gt;f_next;</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x9d h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_destroy(&amp;fp-&gt;f_lock);</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">free(fp);</div><div class="t m0 x8a h57 y804 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x8a h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y807 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x131 h2d y3391 ff18 fs10 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.12<span class="_ _54"> </span><span class="ff19">Simpliﬁed locking</span></div><div class="t m0 x3f h49 y3392 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _2"></span>how <span class="_ _2"></span>much <span class="_ _2"></span>simpler the <span class="_ _2"></span>program <span class="_ _2"></span>in <span class="_ _2"></span>Figur<span class="lse04">e1<span class="_ _b"></span><span class="ls0">1.12 is <span class="_ _2"></span>compared <span class="_ _2"></span>to <span class="_ _2"></span>the <span class="_ _2"></span>program in</span></span></div><div class="t m0 x32 h49 y3393 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lse05">e1<span class="_ _b"></span><span class="ls0">1.1<span class="_ _1"></span>1. <span class="_"> </span>The<span class="_ _66"> </span>lock-ordering issues <span class="_ _2"></span>surrounding the hash <span class="_ _2"></span>list <span class="_ _2"></span>and the <span class="_ _2"></span>refer<span class="_ _0"></span>ence count</span></span></div><div class="t m0 x32 h49 y3394 ff19 fs26 fc0 sc0 ls0 ws0">go <span class="_ _2"></span>away <span class="_ _2"></span>when <span class="_ _2"></span>we <span class="_ _2"></span>use <span class="_ _3"></span>the <span class="_ _2"></span>same <span class="_ _2"></span>lock <span class="_ _2"></span>for <span class="_ _2"></span>both <span class="_ _3"></span>purposes.<span class="_ _61"> </span>Multithreaded softwar<span class="lse06">ed<span class="_ _4f"></span><span class="ls0">esign</span></span></div><div class="t m0 x32 h49 y3395 ff19 fs26 fc0 sc0 ls0 ws0">involves <span class="_ _2"></span>these <span class="_ _3"></span>types <span class="_ _3"></span>of <span class="_ _3"></span>trade-offs. <span class="_ _66"> </span>If<span class="_ _47"> </span>your <span class="_ _3"></span>locking <span class="_ _3"></span>granularity <span class="_ _2"></span>is <span class="_ _3"></span>too <span class="_ _3"></span>coarse, <span class="_ _3"></span>you <span class="_ _3"></span>end <span class="_ _2"></span>up</div><div class="t m0 x32 h49 y3396 ff19 fs26 fc0 sc0 ls0 ws0">with <span class="_ _45"> </span>too <span class="_ _45"> </span>many <span class="_ _45"> </span>threads <span class="_ _45"> </span>blocking <span class="_ _45"> </span>behind <span class="_ _35"> </span>the <span class="_ _45"> </span>same <span class="_ _45"> </span>locks, <span class="_ _45"> </span>with <span class="_ _45"> </span>little <span class="_ _35"> </span>impr<span class="_ _0"></span>ovement</div><div class="t m0 x32 h49 y3397 ff19 fs26 fc0 sc0 ls0 ws0">possible <span class="_ _9"></span>from <span class="_ _9"></span>concurrency<span class="_ _4"></span><span class="lse07">.I<span class="_ _26"></span><span class="lse08">fy<span class="_ _b"></span><span class="ls0">our <span class="_ _9"></span>locking <span class="_ _23"></span>granularity <span class="_ _9"></span>is <span class="_ _9"></span>too <span class="_ _9"></span>ﬁne, <span class="_ _23"></span>then <span class="_ _9"></span>you <span class="_ _9"></span>suffer <span class="_ _9"></span>bad</span></span></span></div><div class="t m0 x32 h49 y3398 ff19 fs26 fc0 sc0 ls0 ws0">performance <span class="_ _9"></span>from <span class="_ _9"></span>excess <span class="_ _9"></span>locking <span class="_ _9"></span>overhead, <span class="_ _9"></span>and <span class="_ _9"></span>you <span class="_ _23"></span>end <span class="_ _9"></span>up <span class="_ _9"></span>with <span class="_ _9"></span>complex <span class="_ _23"></span>code.<span class="_ _5a"> </span>As <span class="_ _9"></span>a</div><div class="t m0 x32 h49 y3399 ff19 fs26 fc0 sc0 ls0 ws0">programmer<span class="_ _6"></span><span class="ls7bd">,y<span class="_ _26"></span><span class="ls0">ou <span class="_ _45"> </span>need <span class="_ _45"> </span>to <span class="_ _45"> </span>ﬁnd <span class="_ _45"> </span>the <span class="_ _35"> </span>corr<span class="_ _0"></span>ect <span class="_ _45"> </span>balance <span class="_ _45"> </span>between <span class="_ _45"> </span>code <span class="_ _45"> </span>complexity <span class="_ _45"> </span>and</span></span></div><div class="t m0 x32 h49 y339a ff19 fs26 fc0 sc0 ls0 ws0">performance, while still satisfying your locking requir<span class="_ _0"></span>ements.</div><div class="t m0 x32 h7d y339b ff16 fs3b fc0 sc0 ls0 ws0">11.6.3<span class="_ _5e"> </span><span class="ff1f">pthread_mutex_timedlock<span class="_ _54"> </span></span>Function</div><div class="t m0 x32 h55 y339c ff19 fs2c fc0 sc0 ls0 ws0">One <span class="_ _3"></span>additional <span class="_ _2"></span>mutex <span class="_ _3"></span>primitive <span class="_ _3"></span>allows <span class="_ _3"></span>us <span class="_ _3"></span>to <span class="_ _3"></span>bound <span class="_ _3"></span>the <span class="_ _3"></span>time <span class="_ _3"></span>that <span class="_ _3"></span>a <span class="_ _3"></span>thread <span class="_ _3"></span>blocks <span class="_ _2"></span>when</div><div class="t m0 x32 h54 y339d ff19 fs2c fc0 sc0 lse09 ws0">am<span class="_ _c"></span><span class="ls0">utex <span class="_ _53"> </span>it <span class="_ _42"> </span>is <span class="_ _53"> </span>trying <span class="_ _42"> </span>to <span class="_ _53"> </span>acquire<span class="_ _44"> </span>is<span class="_ _44"> </span>already <span class="_ _23"> </span>locked.<span class="_ _65"> </span>The<span class="_ _44"> </span><span class="ff1a">pthread_mutex_timedlock</span></span></div><div class="t m0 x32 h54 y339e ff19 fs2c fc0 sc0 ls0 ws0">function <span class="_ _23"> </span>is <span class="_ _23"> </span>equivalent <span class="_ _23"> </span>to<span class="_ _35"> </span><span class="ff1a">pthread_mutex_lock</span><span class="lse0a">,b<span class="_ _b"></span><span class="ls0">ut <span class="_ _23"></span>if <span class="_ _23"></span>the <span class="_ _23"> </span>timeout <span class="_ _23"> </span>value <span class="_ _42"> </span>is <span class="_ _23"></span>reached,</span></span></div><div class="t m0 x32 h54 y339f ff1a fs2c fc0 sc0 ls0 ws0">pthread_mutex_timedlock<span class="_ _45"> </span><span class="ff19">will <span class="_ _23"> </span>return <span class="_ _9"></span>the <span class="_ _23"> </span>error <span class="_ _23"></span>code<span class="_ _45"> </span></span>ETIMEDOUT<span class="_ _35"> </span><span class="ff19">without <span class="_ _9"></span>locking</span></div><div class="t m0 x32 h55 y33a0 ff19 fs2c fc0 sc0 ls0 ws0">the mutex.</div><div class="t m0 x3f h5d y33a1 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h5d y33a2 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;time.h&gt;</div><div class="t m0 x3f h5d y33a3 ff1a fs2f fc0 sc0 ls0 ws0">int pthread_mutex_timedlock(pthread_mutex_t *restrict<span class="_"> </span><span class="ff1b">mutex</span>,</div><div class="t m0 x10f h5d y33a4 ff1a fs2f fc0 sc0 ls0 ws0">const struct timespec *restrict<span class="_"> </span><span class="ff1b">tsptr</span>);</div><div class="t m0 x78 hc2 y33a5 ff19 fs2f fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x3f h50 y33a6 ff19 fs29 fc0 sc0 ls0 ws0">The <span class="_ _3"></span>timeout <span class="_ _3"></span>speciﬁes <span class="_ _3"></span>how <span class="_ _3"></span>long <span class="_ _3"></span>we <span class="_ _3"></span>ar<span class="lse0b">ew<span class="_ _b"></span><span class="ls0">illing <span class="_ _3"></span>to <span class="_ _3"></span>wait <span class="_ _3"></span>in <span class="_ _3"></span>terms <span class="_ _3"></span>of <span class="_ _3"></span>absolute <span class="_ _3"></span>time <span class="_ _3"></span>(as</span></span></div><div class="t m0 x32 h50 y33a7 ff19 fs29 fc0 sc0 ls0 ws0">opposed <span class="_ _2"></span>to <span class="_ _3"></span>relative <span class="_ _2"></span>time; <span class="_ _3"></span>we <span class="_ _2"></span>specify <span class="_ _3"></span>that <span class="_ _3"></span>we <span class="_ _2"></span>ar<span class="lse0c">ew<span class="_ _8"></span><span class="ls0">illing <span class="_ _3"></span>to <span class="_ _3"></span>block <span class="_ _2"></span>until <span class="_ _3"></span>time <span class="_ _3"></span>X <span class="_ _2"></span>instead <span class="_ _3"></span>of</span></span></div><div class="t m0 x32 h50 y33a8 ff19 fs29 fc0 sc0 ls0 ws0">saying <span class="_ _23"></span>that <span class="_ _9"></span>we <span class="_ _23"> </span>ar<span class="lse0d">ew<span class="_ _b"></span><span class="ls0">illing <span class="_ _9"></span>to <span class="_ _23"></span>block <span class="_ _23"></span>for <span class="_ _9"></span>Y <span class="_ _23"> </span>seconds).<span class="_ _51"> </span>The <span class="_ _23"></span>timeout <span class="_ _9"></span>is <span class="_ _23"> </span>represented <span class="_ _9"></span>by <span class="_ _23"> </span>the</span></span></div><div class="t m0 x32 h5c y33a9 ff1a fs29 fc0 sc0 ls0 ws0">timespec<span class="_ _80"> </span><span class="ff19">structure, which describes time in terms of seconds and nanoseconds.</span></div><div class="t m0 x35 h5a y33aa ff16 fs29 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h5c y33ab ff19 fs29 fc0 sc0 ls0 ws0">In <span class="_ _53"> </span>Figur<span class="lse0e">e1<span class="_ _4a"></span><span class="ls0">1.13, <span class="_ _42"> </span>we <span class="_ _53"> </span>see <span class="_ _53"> </span>how <span class="_ _53"> </span>to <span class="_ _53"> </span>use<span class="_ _4b"> </span><span class="ff1a">pthread_mutex_timedlock<span class="_ _44"> </span></span>to <span class="_ _53"> </span>avoid <span class="_ _53"> </span>blocking</span></span></div><div class="t m0 x32 h50 y33ac ff19 fs29 fc0 sc0 ls0 ws0">indeﬁnitely<span class="_ _4"></span>.</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:156.494092px;bottom:668.028903px;width:266.304001px;height:19.679992px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
