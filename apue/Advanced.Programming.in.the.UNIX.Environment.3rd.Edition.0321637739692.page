<div id="pf2b4" class="pf w4 h1f" data-page-no="2b4"><div class="pc pc2b4 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2b4.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">658<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>*ptr,<span class="_"> </span>*argv[MAXARGC];</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>argc;</div><div class="t m0 x8a h57 y1307 ff1a fs2d fc0 sc0 ls0 ws0">if (strtok(buf, WHITE) == NULL)<span class="_ _8a"> </span>/* an argv[0] is required */</div><div class="t m0 x9d h57 y1308 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h57 y3508 ff1a fs2d fc0 sc0 ls0 ws0">argv[argc = 0] = buf;</div><div class="t m0 x8a h57 y3509 ff1a fs2d fc0 sc0 ls0 ws0">while ((ptr = strtok(NULL, WHITE)) != NULL) {</div><div class="t m0 x9d h57 y350a ff1a fs2d fc0 sc0 ls0 ws0">if (++argc &gt;= MAXARGC-1)<span class="_ _15"> </span>/* -1 for room for NULL at end */</div><div class="t m0 x1f h57 y350b ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y350c ff1a fs2d fc0 sc0 ls0 ws0">argv[argc] = ptr;</div><div class="t m0 x8a h57 y350d ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y31b6 ff1a fs2d fc0 sc0 ls0 ws0">argv[++argc] = NULL;</div><div class="t m0 x8a h57 y1310 ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x214 h57 y1311 ff1a fs2d fc0 sc0 ls15c ws0">*S<span class="_ _1d"></span><span class="ls0">ince argv[] pointers point into the user’s buf[],</span></div><div class="t m0 x214 h57 y1312 ff1a fs2d fc0 sc0 ls15c ws0">*u<span class="_ _1d"></span><span class="ls0">ser’s function can just copy the pointers, even</span></div><div class="t m0 x214 h57 y1313 ff1a fs2d fc0 sc0 ls15c ws0">*t<span class="_ _1d"></span><span class="ls0">hough argv[] array will disappear on return.</span></div><div class="t m0 x214 h57 y1314 ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x8a h57 y1315 ff1a fs2d fc0 sc0 ls0 ws0">return((*optfunc)(argc, argv));</div><div class="t m0 x32 h57 y351c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x145 h5e y4d87 ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.23<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">buf_args<span class="_ _e"> </span></span>function</span></div><div class="t m0 x3f h4d y4d88 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _42"> </span>server<span class="_ _3"></span>’s <span class="_ _53"> </span>function <span class="_ _42"> </span>that <span class="_ _42"> </span>is <span class="_ _42"> </span>called <span class="_ _42"> </span>by<span class="_ _44"> </span><span class="ff1a">buf_args<span class="_ _44"> </span></span>is<span class="_ _35"> </span><span class="ff1a">cli_args<span class="_ _44"> </span></span>(Figur<span class="ls11c0">e1<span class="_ _c"></span><span class="ls0">7.24). <span class="_ _44"> </span>It</span></span></div><div class="t m0 x32 h49 y4d89 ff19 fs26 fc0 sc0 ls0 ws0">veriﬁes <span class="_ _2"></span>that <span class="_ _2"></span>the <span class="_ _2"></span>client <span class="_ _3"></span>sent <span class="_ _2"></span>the <span class="_ _2"></span>right <span class="_ _3"></span>number <span class="_ _2"></span>of <span class="_ _2"></span>arguments <span class="_ _2"></span>and <span class="_ _2"></span>stores <span class="_ _2"></span>the <span class="_ _2"></span>pathname <span class="_ _2"></span>and</div><div class="t m0 x32 h49 y4d8a ff19 fs26 fc0 sc0 ls0 ws0">open mode in global variables.</div><div class="t m0 x32 h5d y4d8b ff1a fs2f fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&quot;opend.h&quot;</div><div class="t m0 x32 h5d y4d8c ff1a fs2f fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h5d y4d8d ff1a fs2f fc0 sc0 ls395 ws0">*T<span class="_ _1d"></span><span class="ls0">his function is called by buf_args(), which is called by</span></div><div class="t m0 x140 h5d y4d8e ff1a fs2f fc0 sc0 ls395 ws0">*h<span class="_ _1d"></span><span class="ls0">andle_request(). <span class="_"> </span>buf_args()<span class="_"> </span>has broken up the client’s</span></div><div class="t m0 x140 h5d y4d8f ff1a fs2f fc0 sc0 ls395 ws0">*b<span class="_ _1d"></span><span class="ls0">uffer into an argv[]-style array, which we now process.</span></div><div class="t m0 x140 h5d y4d90 ff1a fs2f fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h5d y4d91 ff1a fs2f fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h5d y4d92 ff1a fs2f fc0 sc0 ls0 ws0">cli_args(int argc, char **argv)</div><div class="t m0 x32 h5d y4d93 ff1a fs2f fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h5d y4d94 ff1a fs2f fc0 sc0 ls0 ws0">if (argc != 3 || strcmp(argv[0], CL_OPEN) != 0) {</div><div class="t m0 x9d h5d y4d95 ff1a fs2f fc0 sc0 ls0 ws0">strcpy(errmsg, &quot;usage: &lt;pathname&gt; &lt;oflag&gt;\n&quot;);</div><div class="t m0 x9d h5d y4d96 ff1a fs2f fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h5d y4d97 ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h5d y4d98 ff1a fs2f fc0 sc0 ls0 ws0">pathname = argv[1];<span class="_ _8a"> </span>/* save ptr to pathname to open */</div><div class="t m0 x8a h5d y4d99 ff1a fs2f fc0 sc0 ls0 ws0">oflag = atoi(argv[2]);</div><div class="t m0 x8a h5d y4d9a ff1a fs2f fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x32 h5d y4d9b ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x145 h6d y4d9c ff18 fs12 fc0 sc0 ls0 ws0">Figure 17.24<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">cli_args<span class="_ _e"> </span></span>function</span></div><div class="t m0 x3f h5c y4d9d ff19 fs29 fc0 sc0 ls0 ws0">This completes <span class="_ _2"></span>the <span class="_ _2"></span>open <span class="_ _2"></span>server <span class="_ _2"></span>that <span class="_ _2"></span>is <span class="_ _2"></span>invoked <span class="_ _2"></span>by <span class="_ _2"></span>a<span class="_ _66"> </span><span class="ff1a">fork<span class="_ _47"> </span></span>and<span class="_"> </span><span class="ff1a">exec<span class="_ _66"> </span></span>from <span class="_ _2"></span>the <span class="_ _2"></span>client.</div><div class="t m0 x32 h5c y4d9e ff19 fs29 fc0 sc0 ls13f6 ws0">As<span class="_ _43"></span><span class="ls0">ingle <span class="_ _23"> </span>fd-pipe <span class="_ _42"> </span>is <span class="_ _23"> </span>created <span class="_ _23"> </span>befor<span class="ls13f7">et<span class="_ _43"></span><span class="ls0">he<span class="_ _35"> </span><span class="ff1a">fork<span class="_ _35"> </span></span>and <span class="_ _23"> </span>is <span class="_ _42"> </span>used <span class="_ _23"> </span>to <span class="_ _23"> </span>communicate <span class="_ _42"> </span>between <span class="_ _23"> </span>the</span></span></span></div><div class="t m0 x32 h50 y4d9f ff19 fs29 fc0 sc0 ls0 ws0">client and the server<span class="_ _6"></span><span class="ls8df">.W<span class="_ _1d"></span><span class="ls0">ith this arrangement, we have one server per client.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
