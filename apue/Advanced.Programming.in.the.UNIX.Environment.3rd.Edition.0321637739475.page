<div id="pf1db" class="pf w4 h1f" data-page-no="1db"><div class="pc pc1db w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1db.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.4<span class="_ _57"> </span>Synchronization <span class="_"> </span>Attributes<span class="_ _1b"> </span><span class="ff18">441</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">clock IDs listed in Figur<span class="ls864">e6<span class="_ _4f"></span><span class="ls0">.8. <span class="_"> </span>W<span class="_ _6"></span><span class="ls864">ec<span class="_ _5"></span><span class="ls0">an use the<span class="_"> </span><span class="ff1a">pthread_condattr_getclock<span class="_ _80"> </span></span>function</span></span></span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _9"></span>retrieve <span class="_ _3"></span>the <span class="_ _9"></span>clock <span class="_ _9"></span>ID <span class="_ _9"></span>that <span class="_ _3"></span>will <span class="_ _9"></span>be <span class="_ _9"></span>used <span class="_ _9"></span>by <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">pthread_cond_timedwait<span class="_ _45"> </span></span>function</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">for <span class="_ _9"></span>the <span class="_ _23"></span>condition <span class="_ _23"></span>variable <span class="_ _9"></span>that <span class="_ _23"></span>was <span class="_ _9"></span>initialized <span class="_ _23"></span>with <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">pthread_condattr_t<span class="_ _45"> </span></span>object.</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>c<span class="_ _9"></span><span class="ls0">an change the clock ID with the<span class="_"> </span><span class="ff1a">pthread_condattr_setclock<span class="_ _66"> </span></span>function.</span></div><div class="t m0 x3f h57 y36ef ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y36f0 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_condattr_getclock(const pthread_condattr_t *</div><div class="t m0 x1cd h57 y36f1 ff1a fs2d fc0 sc0 ls0 ws0">restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x1cd h57 y36f2 ff1a fs2d fc0 sc0 ls0 ws0">clockid_t *restrict<span class="_"> </span><span class="ff1b">clock_id</span>);</div><div class="t m0 x3f h57 y36f3 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_condattr_setclock(pthread_condattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x1cd h57 y36f4 ff1a fs2d fc0 sc0 ls0 ws0">clockid_t<span class="_"> </span><span class="ff1b">clock_id</span>);</div><div class="t m0 xca h5f y36f5 ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h4a y36f6 ff19 fs26 fc0 sc0 ls0 ws0">Curiously<span class="_ _4"></span><span class="lsec3">,t<span class="_ _4f"></span><span class="ls0">he <span class="_ _3"></span>Single <span class="_ _2"></span>UNIX <span class="_ _2"></span>Speciﬁcation <span class="_ _2"></span>doesn’t <span class="_ _2"></span>deﬁne <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1b">clock<span class="_ _47"> </span></span>attribute for <span class="_ _2"></span>any <span class="_ _2"></span>of</span></span></div><div class="t m0 x32 h49 y36f7 ff19 fs26 fc0 sc0 ls0 ws0">the other attribute objects that have a wait function with a timeout.</div><div class="t m0 x32 h4b y36f8 ff16 fs27 fc0 sc0 ls0 ws0">12.4.4 <span class="_ _54"> </span>Barrier<span class="_ _54"> </span>Attributes</div><div class="t m0 x32 h4d y36f9 ff19 fs26 fc0 sc0 ls0 ws0">Barriers <span class="_ _9"></span>have <span class="_ _9"></span>attributes, <span class="_ _23"></span>too.<span class="_ _5a"> </span><span class="ls164">We <span class="_ _66"> </span>c<span class="_ _9"></span></span>an <span class="_ _9"></span>use <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">pthread_barrierattr_init<span class="_ _45"> </span></span>function</div><div class="t m0 x32 h4d y36fa ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _45"> </span>initialize <span class="_ _45"> </span>a <span class="_ _45"> </span>barrier <span class="_ _45"> </span>attributes <span class="_ _45"> </span>object <span class="_ _47"> </span>and <span class="_ _45"> </span>the<span class="_ _5a"> </span><span class="ff1a">pthread_barrierattr_destroy</span></div><div class="t m0 x32 h49 y36fb ff19 fs26 fc0 sc0 ls0 ws0">function to deinitialize a barrier attributes object.</div><div class="t m0 x3f h4e y36fc ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h4e y36fd ff1a fs28 fc0 sc0 ls0 ws0">int pthread_barrierattr_init(pthread_barrierattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 x3f h4e y36fe ff1a fs28 fc0 sc0 ls0 ws0">int pthread_barrierattr_destroy(pthread_barrierattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 xca h7c y36ff ff19 fs28 fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h60 y3700 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>only <span class="_ _e"> </span>barrier <span class="_ _e"> </span>attribute <span class="_"> </span>curr<span class="_ _0"></span>ently <span class="_ _53"> </span>deﬁned <span class="_"> </span>is <span class="_ _53"> </span>the<span class="_ _59"> </span><span class="ff1b">process-shar<span class="_ _0"></span>ed<span class="_ _4b"> </span><span class="ff19">attribute, <span class="_"> </span>which</span></span></div><div class="t m0 x32 h55 y3701 ff19 fs2c fc0 sc0 ls0 ws0">controls whether <span class="_ _3"></span>a <span class="_ _2"></span>barrier <span class="_ _3"></span>can <span class="_ _2"></span>be <span class="_ _3"></span>used <span class="_ _2"></span>by <span class="_ _2"></span>threads <span class="_ _2"></span>from <span class="_ _2"></span>multiple <span class="_ _2"></span>processes <span class="_ _2"></span>or <span class="_ _3"></span>only <span class="_ _2"></span>from</div><div class="t m0 x32 h55 y3702 ff19 fs2c fc0 sc0 ls0 ws0">within <span class="_ _23"> </span>the <span class="_ _42"> </span>process <span class="_ _23"> </span>that <span class="_ _42"> </span>initialized <span class="_ _23"> </span>the <span class="_ _42"> </span>barrier<span class="_ _1"></span><span class="lsec4">.A<span class="_ _52"></span><span class="ls573">sw<span class="_ _43"></span><span class="ls0">ith <span class="_ _42"> </span>the <span class="_ _42"> </span>other <span class="_ _23"> </span>attribute <span class="_ _42"> </span>objects, <span class="_ _42"> </span>we</span></span></span></div><div class="t m0 x32 h54 y3703 ff19 fs2c fc0 sc0 ls0 ws0">have <span class="_ _23"> </span>one <span class="_ _23"> </span>function <span class="_ _42"> </span>to <span class="_ _23"> </span>get <span class="_ _23"> </span>the <span class="_ _42"> </span>attribute <span class="_ _23"></span>(<span class="ff1a">pthread_barrierattr_getpshared</span><span class="lsec5">)v<span class="_ _43"></span><span class="ls0">alue</span></span></div><div class="t m0 x32 h54 y3704 ff19 fs2c fc0 sc0 ls0 ws0">and one function to set the value (<span class="ff1a">pthread_barrierattr_setpshared</span>).</div><div class="t m0 x3f h5d y3705 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h5d y3706 ff1a fs2f fc0 sc0 ls0 ws0">int pthread_barrierattr_getpshared(const pthread_barrierattr_t *</div><div class="t m0 x1cd h5d y3707 ff1a fs2f fc0 sc0 ls0 ws0">restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x1cd h5d y3708 ff1a fs2f fc0 sc0 ls0 ws0">int *restrict<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 x3f h5d y3709 ff1a fs2f fc0 sc0 ls0 ws0">int pthread_barrierattr_setpshared(pthread_barrierattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x1cd h5d y370a ff1a fs2f fc0 sc0 ls0 ws0">int<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 xcb hc2 y370b ff19 fs2f fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:156.492009px;bottom:783.153032px;width:145.811981px;height:19.678986px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
