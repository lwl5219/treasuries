<div id="pf24a" class="pf w4 h1f" data-page-no="24a"><div class="pc pc24a w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg24a.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">552<span class="_ _1b"> </span><span class="ff19">Interprocess <span class="_"> </span>Communication<span class="_ _2c"> </span>Chapter <span class="_"> </span>15</span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _53"> </span>we <span class="_ _53"> </span>invoke <span class="_ _e"> </span>this <span class="_ _53"> </span>new <span class="_ _e"> </span>coprocess <span class="_ _42"> </span>from <span class="_ _53"> </span>the <span class="_ _e"> </span>program <span class="_ _42"> </span>in <span class="_ _e"> </span>Figur<span class="ls885">e1<span class="_ _55"></span><span class="ls0">5.18, <span class="_ _e"> </span>it <span class="_ _53"> </span>no <span class="_ _53"> </span>longer</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">works. <span class="_ _46"> </span>The<span class="_ _46"> </span>problem <span class="_"> </span>is <span class="_"> </span>the <span class="_"> </span>default <span class="_"> </span>standar<span class="lsba7">dI<span class="_ _5b"></span><span class="ls0">/O <span class="_"> </span>buffering. <span class="_ _46"> </span>When<span class="_ _46"> </span>the <span class="_"> </span>program <span class="_"> </span>in</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls478">e1<span class="_ _b"></span><span class="ls0">5.19 <span class="_ _3"></span>is <span class="_ _9"></span>invoked, <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst<span class="_ _45"> </span><span class="ff1a">fgets<span class="_ _47"> </span></span>on <span class="_ _3"></span>the <span class="_ _9"></span>standar<span class="ls11b3">di<span class="_ _b"></span><span class="ls0">nput <span class="_ _3"></span>causes <span class="_ _9"></span>the <span class="_ _3"></span>standar<span class="ls11b3">dI<span class="_ _b"></span><span class="ls0">/O</span></span></span></span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">library <span class="_ _2"></span>to <span class="_ _2"></span>allocate <span class="_ _3"></span>a <span class="_ _2"></span>buffer <span class="_ _2"></span>and <span class="_ _2"></span>choose <span class="_ _2"></span>the <span class="_ _3"></span>type <span class="_ _2"></span>of <span class="_ _2"></span>buffering. <span class="_ _47"> </span>Since<span class="_ _66"> </span>the <span class="_ _2"></span>standar<span class="ls11b4">di<span class="_ _4f"></span><span class="ls0">nput <span class="_ _2"></span>is</span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls11b5 ws0">ap<span class="_ _c"></span><span class="ls0">ipe, <span class="_ _53"> </span>the <span class="_ _42"> </span>standar<span class="ls11b5">dI<span class="_ _c"></span><span class="ls0">/O <span class="_ _53"> </span>library <span class="_ _42"> </span>defaults <span class="_ _53"> </span>to <span class="_ _42"> </span>fully <span class="_ _53"> </span>buffer<span class="_ _0"></span>ed. <span class="_ _44"> </span>The<span class="_ _44"> </span>same <span class="_ _42"> </span>thing <span class="_ _53"> </span>happens</span></span></span></div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">with <span class="_ _9"></span>the <span class="_ _9"></span>standar<span class="ls11b6">do<span class="_ _b"></span><span class="ls0">utput. <span class="_ _45"> </span>While<span class="_ _47"> </span><span class="ff1a">add2<span class="_ _45"> </span></span>is <span class="_ _9"></span>blocked <span class="_ _9"></span>reading <span class="_ _9"></span>from <span class="_ _3"></span>its <span class="_ _9"></span>standar<span class="ls11b6">di<span class="_ _b"></span><span class="ls0">nput, <span class="_ _9"></span>the</span></span></span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _d"></span><span class="ls0">5.18 is blocked reading fr<span class="_ _0"></span>om the pipe.<span class="_ _59"> </span><span class="ls5f">We <span class="_ _53"> </span>h<span class="_ _23"></span></span>ave a deadlock.</span></span></div><div class="t m0 x3f h2a y136 ff19 fsf fc0 sc0 ls0 ws0">Here, <span class="_ _e"> </span>we <span class="_ _e"> </span>have <span class="_"> </span>contr<span class="_ _0"></span>ol <span class="_"> </span>over <span class="_ _53"> </span>the <span class="_"> </span>coprocess <span class="_ _53"> </span>that’s <span class="_"> </span>being <span class="_ _e"> </span>run. <span class="_ _59"> </span>W<span class="_ _6"></span><span class="ls252">ec<span class="_ _4a"></span><span class="ls0">an <span class="_"> </span>change <span class="_ _e"> </span>the</span></span></div><div class="t m0 x32 h26 y137 ff19 fsf fc0 sc0 ls0 ws0">program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _d"></span><span class="ls0">5.19 by adding the following four lines befor<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">while<span class="_ _66"> </span></span>loop:</span></span></span></span></div><div class="t m0 x3f h57 y146f ff1a fs2d fc0 sc0 ls0 ws0">if (setvbuf(stdin, NULL, _IOLBF, 0) != 0)</div><div class="t m0 xc2 h57 y1470 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;setvbuf error&quot;);</div><div class="t m0 x3f h57 y42e4 ff1a fs2d fc0 sc0 ls0 ws0">if (setvbuf(stdout, NULL, _IOLBF, 0) != 0)</div><div class="t m0 xc2 h57 y42e5 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;setvbuf error&quot;);</div><div class="t m0 x32 h26 y42e6 ff19 fsf fc0 sc0 ls0 ws0">These <span class="_ _3"></span>lines <span class="_ _9"></span>cause<span class="_ _47"> </span><span class="ff1a">fgets<span class="_ _45"> </span></span>to <span class="_ _3"></span>return <span class="_ _3"></span>when <span class="_ _9"></span>a <span class="_ _3"></span>line <span class="_ _9"></span>is <span class="_ _9"></span>available <span class="_ _3"></span>and <span class="_ _9"></span>cause<span class="_ _47"> </span><span class="ff1a">printf<span class="_ _45"> </span></span>to <span class="_ _3"></span>do <span class="_ _9"></span>an</div><div class="t m0 x32 h26 y42e7 ff1a fsf fc0 sc0 ls0 ws0">fflush<span class="_ _45"> </span><span class="ff19">when <span class="_ _9"></span>a <span class="_ _9"></span>newline <span class="_ _9"></span>is <span class="_ _9"></span>output <span class="_ _23"></span>(r<span class="_ _0"></span>efer <span class="_ _9"></span>to <span class="_ _9"></span>Section <span class="_ _9"></span>5.4 <span class="_ _9"></span>for <span class="_ _23"></span>the <span class="_ _9"></span>details <span class="_ _9"></span>on <span class="_ _9"></span>standar<span class="ls11b7">dI<span class="_ _b"></span><span class="ls0">/O</span></span></span></div><div class="t m0 x32 h26 y42e8 ff19 fsf fc0 sc0 ls0 ws0">buffering). <span class="_"> </span>Making<span class="_"> </span>these explicit calls to<span class="_"> </span><span class="ff1a">setvbuf<span class="_ _80"> </span></span>ﬁxes the program in Figur<span class="_ _1"></span><span class="ls44">e1<span class="_ _5"></span><span class="ls0">5.19.</span></span></div><div class="t m0 x3f h2a y42e9 ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _42"> </span>we <span class="_ _42"> </span>aren’t <span class="_ _42"> </span>able <span class="_ _42"> </span>to <span class="_ _42"> </span>modify <span class="_ _42"> </span>the <span class="_ _42"> </span>program <span class="_ _23"> </span>that <span class="_ _53"> </span>we’r<span class="lsd04">ep<span class="_ _c"></span><span class="ls0">iping <span class="_ _42"> </span>the <span class="_ _42"> </span>output <span class="_ _42"> </span>into, <span class="_ _42"> </span>other</span></span></div><div class="t m0 x32 h26 y42ea ff19 fsf fc0 sc0 ls0 ws0">techniques <span class="_ _47"> </span>ar<span class="ls10de">er<span class="_ _62"></span><span class="ls0">equired. <span class="_ _61"> </span>For<span class="_ _16"> </span>example, <span class="_ _45"> </span>if <span class="_ _47"> </span>we <span class="_ _47"> </span>use<span class="_ _16"> </span><span class="ff1a">awk</span></span></span></div><div class="t m0 x75 h2a y42eb ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x153 h2a y42ea ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 x170 h2a y42eb ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x12d h2a y42ea ff19 fsf fc0 sc0 ls0 ws0">as <span class="_ _47"> </span>a <span class="_ _45"> </span>copr<span class="_ _0"></span>ocess <span class="_ _47"> </span>from <span class="_ _47"> </span>our</div><div class="t m0 x32 h26 y42ec ff19 fsf fc0 sc0 ls0 ws0">program (instead of the<span class="_"> </span><span class="ff1a">add2<span class="_ _80"> </span></span>program), the following won’t work:</div><div class="t m0 x3f h57 y42ed ff1a fs2d fc0 sc0 ls0 ws0">#! /bin/awk -f</div><div class="t m0 x3f h57 y42ee ff1a fs2d fc0 sc0 ls15c ws0">{p<span class="_ _1d"></span><span class="ls0">rint $1 + $2 }</span></div><div class="t m0 x32 h2a y42ef ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _23"> </span>reason <span class="_ _23"></span>this <span class="_ _23"></span>won’t <span class="_ _23"> </span>work <span class="_ _23"> </span>is <span class="_ _42"> </span>again <span class="_ _23"></span>the <span class="_ _23"></span>standar<span class="ls11b8">dI<span class="_ _43"></span><span class="ls0">/O <span class="_ _23"> </span>buffering. <span class="_ _35"> </span>But<span class="_ _45"> </span>in <span class="_ _42"> </span>this <span class="_ _23"></span>case, <span class="_ _23"> </span>we</span></span></div><div class="t m0 x32 h26 y42f0 ff19 fsf fc0 sc0 ls0 ws0">cannot <span class="_ _53"> </span>change <span class="_ _e"> </span>the <span class="_ _53"> </span>way<span class="_ _4b"> </span><span class="ff1a">awk<span class="_ _4b"> </span></span>works <span class="_ _e"> </span>(unless <span class="_ _53"> </span>we <span class="_ _e"> </span>have <span class="_ _53"> </span>the <span class="_ _e"> </span>source <span class="_ _53"> </span>code <span class="_ _53"> </span>for <span class="_ _e"> </span>it).<span class="_ _65"> </span><span class="ls5f">We <span class="_ _35"> </span>a<span class="_ _9"></span><span class="ls45">re</span></span></div><div class="t m0 x32 h26 y42f1 ff19 fsf fc0 sc0 ls0 ws0">unable <span class="_ _2"></span>to <span class="_ _2"></span>modify <span class="_ _2"></span>the executable <span class="_ _2"></span>of<span class="_ _47"> </span><span class="ff1a">awk<span class="_ _66"> </span></span>in <span class="_ _2"></span>any <span class="_ _2"></span>way <span class="_ _2"></span>to <span class="_ _2"></span>change <span class="_ _2"></span>the <span class="_ _2"></span>way <span class="_ _2"></span>the <span class="_ _2"></span>standar<span class="ls6fd">dI<span class="_ _4f"></span><span class="ls0">/O</span></span></div><div class="t m0 x32 h2a y42f2 ff19 fsf fc0 sc0 ls0 ws0">buffering is handled.</div><div class="t m0 x3f h26 y42f3 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _3"></span>solution <span class="_ _9"></span>for <span class="_ _3"></span>this <span class="_ _3"></span>general <span class="_ _9"></span>problem <span class="_ _3"></span>is <span class="_ _3"></span>to <span class="_ _9"></span>make <span class="_ _3"></span>the <span class="_ _3"></span>coprocess <span class="_ _3"></span>being <span class="_ _9"></span>invoked <span class="_ _3"></span>(<span class="ff1a">awk</span></div><div class="t m0 x32 h2a y42f4 ff19 fsf fc0 sc0 ls0 ws0">in <span class="_"> </span>this <span class="_"> </span>case) <span class="_"> </span>think <span class="_"> </span>that <span class="_"> </span>its <span class="_"> </span>standar<span class="ls11b9">di<span class="_ _5b"></span><span class="ls0">nput <span class="_"> </span>and <span class="_ _66"> </span>standar<span class="ls11b9">do<span class="_ _5b"></span><span class="ls0">utput <span class="_"> </span>ar<span class="ls11b9">ec<span class="_ _4a"></span><span class="ls0">onnected <span class="_"> </span>to <span class="_"> </span>a</span></span></span></span></span></span></div><div class="t m0 x32 h2a y42f5 ff19 fsf fc0 sc0 ls0 ws0">terminal. <span class="_ _35"> </span>That<span class="_ _44"> </span>causes <span class="_ _23"> </span>the <span class="_ _42"> </span>standar<span class="ls11ba">dI<span class="_ _43"></span><span class="ls0">/O <span class="_ _23"> </span>routines <span class="_ _42"> </span>in <span class="_ _23"> </span>the <span class="_ _42"> </span>coprocess <span class="_ _23"> </span>to <span class="_ _42"> </span>line <span class="_ _42"> </span>buffer <span class="_ _23"> </span>these</span></span></div><div class="t m0 x32 h26 y42f6 ff19 fsf fc0 sc0 ls0 ws0">two <span class="_ _3"></span>I/O <span class="_ _3"></span>streams, <span class="_ _3"></span>similar <span class="_ _3"></span>to <span class="_ _3"></span>what <span class="_ _9"></span>we <span class="_ _3"></span>did <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _3"></span>explicit <span class="_ _9"></span>calls <span class="_ _3"></span>to<span class="_ _47"> </span><span class="ff1a">setvbuf<span class="_ _47"> </span></span>previously<span class="_ _4"></span>.</div><div class="t m0 x32 h2a y42f7 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>u<span class="_ _9"></span><span class="ls0">se pseudo terminals to do this in Chapter 19.</span></div><div class="t m0 x35 h4b y42f8 ff16 fs27 fc0 sc0 ls0 ws0">15.5 <span class="_ _93"> </span>FIFOs</div><div class="t m0 x32 h49 y42f9 ff19 fs26 fc0 sc0 ls0 ws0">FIFOs <span class="_ _23"></span>ar<span class="ls63d">es<span class="_ _43"></span><span class="ls0">ometimes <span class="_ _23"></span>called <span class="_ _23"> </span>named <span class="_ _23"> </span>pipes.<span class="_ _51"> </span>Unnamed <span class="_ _23"> </span>pipes <span class="_ _23"> </span>can <span class="_ _42"> </span>be <span class="_ _23"></span>used <span class="_ _23"></span>only <span class="_ _23"></span>between</span></span></div><div class="t m0 x32 h49 y42fa ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">lated <span class="_ _3"></span>processes <span class="_ _2"></span>when <span class="_ _2"></span>a <span class="_ _3"></span>common <span class="_ _2"></span>ancestor <span class="_ _3"></span>has <span class="_ _2"></span>created <span class="_ _2"></span>the <span class="_ _3"></span>pipe.<span class="_ _61"> </span><span class="ls3aa">Wi<span class="_ _3"></span></span>th <span class="_ _3"></span>FIFOs, <span class="_ _2"></span>however<span class="_ _1"></span>,</span></div><div class="t m0 x32 h49 y42fb ff19 fs26 fc0 sc0 ls0 ws0">unrelated pr<span class="_ _0"></span>ocesses can exchange data.</div><div class="t m0 x3f h49 y42fc ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _35"> </span>s<span class="_ _9"></span><span class="ls0">aw <span class="_ _42"> </span>in <span class="_ _e"> </span>Chapter <span class="_ _53"> </span>4 <span class="_ _53"> </span>that <span class="_ _53"> </span>a <span class="_ _53"> </span>FIFO <span class="_ _53"> </span>is <span class="_ _53"> </span>a <span class="_ _53"> </span>type <span class="_ _53"> </span>of <span class="_ _53"> </span>ﬁle.<span class="_ _65"> </span>One <span class="_ _53"> </span>of <span class="_ _53"> </span>the <span class="_ _e"> </span>encodings <span class="_ _53"> </span>of <span class="_ _53"> </span>the</span></div><div class="t m0 x32 h4d y42fd ff1a fs26 fc0 sc0 ls0 ws0">st_mode<span class="_ _47"> </span><span class="ff19">member <span class="_ _2"></span>of <span class="_ _3"></span>the<span class="_ _47"> </span></span>stat<span class="_ _47"> </span><span class="ff19">structur<span class="lsa2c">e(<span class="_ _8"></span><span class="ls0">Section <span class="_ _3"></span>4.2) <span class="_ _3"></span>indicates <span class="_ _2"></span>that <span class="_ _3"></span>a <span class="_ _3"></span>ﬁle <span class="_ _3"></span>is <span class="_ _3"></span>a <span class="_ _3"></span>FIFO.<span class="_ _61"> </span><span class="ls164">We</span></span></span></span></div><div class="t m0 x32 h4d y42fe ff19 fs26 fc0 sc0 ls0 ws0">can test for this with the<span class="_"> </span><span class="ff1a">S_ISFIFO<span class="_ _80"> </span></span>macro.</div><div class="t m0 x3f h4a y42ff ff19 fs26 fc0 sc0 ls0 ws0">Creating a FIFO is similar to creating a ﬁle.<span class="_ _59"> </span>Indeed, the<span class="_"> </span><span class="ff1b">pathname<span class="_"> </span></span>for a FIFO exists in</div><div class="t m0 x32 h49 y4300 ff19 fs26 fc0 sc0 ls0 ws0">the ﬁle system.</div><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:383.268890px;width:70.007698px;height:19.680023px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
