<div id="pf32a" class="pf w4 h1f" data-page-no="32a"><div class="pc pc32a w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg32a.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">776<span class="_ _1b"> </span><span class="ff19 ls30a">AD<span class="_ _55"></span><span class="ls0">atabase <span class="_"> </span>Library<span class="_ _245"> </span>Chapter <span class="_"> </span>20</span></span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">626 <span class="_ _15"> </span>}<span class="_"> </span>else {<span class="_ _1e6"> </span>/* record found */</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">627 <span class="_ _186"> </span>if<span class="_"> </span>(flag == DB_INSERT) {</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">628 <span class="_ _82"> </span>rc<span class="_"> </span><span class="ls15c">=1<span class="_ _1d"></span><span class="ls168d">;/<span class="_ _91"></span><span class="ls15c">*e<span class="_ _5b"></span><span class="ls0">rror, record already in db */</span></span></span></span></div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">629 <span class="_ _82"> </span>db-&gt;cnt_storerr++;</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">630 <span class="_ _82"> </span>goto<span class="_"> </span>doreturn;</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">631 <span class="_ _186"> </span>}</div><div class="t m0 x32 h57 y33ad ff1a fs2d fc0 sc0 ls0 ws0">632 <span class="_ _186"> </span>/*</div><div class="t m0 x32 h57 y33ae ff1a fs2d fc0 sc0 ls0 ws0">633 <span class="_ _176"> </span>*<span class="_"> </span>We are replacing an existing record.<span class="_ _d9"> </span>We know the new</div><div class="t m0 x32 h57 y33af ff1a fs2d fc0 sc0 ls0 ws0">634 <span class="_ _176"> </span>*<span class="_"> </span>key equals the existing key, but we need to check if</div><div class="t m0 x32 h57 y33b0 ff1a fs2d fc0 sc0 ls0 ws0">635 <span class="_ _176"> </span>*<span class="_"> </span>the data records are the same size.</div><div class="t m0 x32 h57 y419a ff1a fs2d fc0 sc0 ls0 ws0">636 <span class="_ _176"> </span>*/</div><div class="t m0 x32 h57 y3b4c ff1a fs2d fc0 sc0 ls0 ws0">637 <span class="_ _186"> </span>if<span class="_"> </span>(datlen != db-&gt;datlen) {</div><div class="t m0 x32 h57 y3b4d ff1a fs2d fc0 sc0 ls0 ws0">638 <span class="_ _82"> </span>_db_dodelete(db);<span class="_ _68"> </span>/* delete the existing record */</div><div class="t m0 x32 h57 y2ad4 ff1a fs2d fc0 sc0 ls0 ws0">639 <span class="_ _82"> </span>/*</div><div class="t m0 x32 h57 y2ad5 ff1a fs2d fc0 sc0 ls0 ws0">640 <span class="_ _166"> </span>*<span class="_"> </span>Reread the chain ptr in the hash table</div><div class="t m0 x32 h57 y2ad6 ff1a fs2d fc0 sc0 ls0 ws0">641 <span class="_ _166"> </span>*<span class="_"> </span>(it may change with the deletion).</div><div class="t m0 x32 h57 y33b1 ff1a fs2d fc0 sc0 ls0 ws0">642 <span class="_ _166"> </span>*/</div><div class="t m0 x32 h57 y33b2 ff1a fs2d fc0 sc0 ls0 ws0">643 <span class="_ _82"> </span>ptrval<span class="_"> </span><span class="ls15c">=_<span class="_ _1d"></span><span class="ls0">db_readptr(db, db-&gt;chainoff);</span></span></div><div class="t m0 x32 h57 y201e ff1a fs2d fc0 sc0 ls0 ws0">644 <span class="_ _82"> </span>/*</div><div class="t m0 x32 h57 y201f ff1a fs2d fc0 sc0 ls0 ws0">645 <span class="_ _166"> </span>*<span class="_"> </span>Append new index and data records to end of files.</div><div class="t m0 x32 h57 y2020 ff1a fs2d fc0 sc0 ls0 ws0">646 <span class="_ _166"> </span>*/</div><div class="t m0 x32 h57 y2021 ff1a fs2d fc0 sc0 ls0 ws0">647 <span class="_ _82"> </span>_db_writedat(db,<span class="_"> </span>data, 0, SEEK_END);</div><div class="t m0 x32 h57 y2022 ff1a fs2d fc0 sc0 ls0 ws0">648 <span class="_ _82"> </span>_db_writeidx(db,<span class="_"> </span>key, 0, SEEK_END, ptrval);</div><div class="t m0 x32 h57 y2023 ff1a fs2d fc0 sc0 ls0 ws0">649 <span class="_ _82"> </span>/*</div><div class="t m0 x32 h57 y2024 ff1a fs2d fc0 sc0 ls0 ws0">650 <span class="_ _166"> </span>*<span class="_"> </span>New record goes to the front of the hash chain.</div><div class="t m0 x32 h57 y2adf ff1a fs2d fc0 sc0 ls0 ws0">651 <span class="_ _166"> </span>*/</div><div class="t m0 x32 h57 y458e ff1a fs2d fc0 sc0 ls0 ws0">652 <span class="_ _82"> </span>_db_writeptr(db,<span class="_"> </span>db-&gt;chainoff, db-&gt;idxoff);</div><div class="t m0 x32 h57 y57d0 ff1a fs2d fc0 sc0 ls0 ws0">653 <span class="_ _82"> </span>db-&gt;cnt_stor3++;</div><div class="t m0 x32 h57 y57d1 ff1a fs2d fc0 sc0 ls0 ws0">654 <span class="_ _186"> </span>}<span class="_"> </span>else {</div><div class="t m0 x32 h49 y5810 ff19 fs26 fc0 sc0 ls0 ws0">[626 <span class="_ _a"></span>– <span class="_ _a"></span>631]<span class="_ _65"> </span>Now <span class="_ _23"></span>we <span class="_ _23"></span>reach <span class="_ _9"></span>the <span class="_ _23"> </span>two <span class="_ _23"> </span>cases <span class="_ _23"> </span>in <span class="_ _23"> </span>which <span class="_ _23"> </span>a <span class="_ _23"> </span>recor<span class="ls16b7">dw<span class="_ _43"></span><span class="ls0">ith <span class="_ _23"></span>the <span class="_ _23"></span>same <span class="_ _23"></span>key <span class="_ _23"></span>already</span></span></div><div class="t m0 x11a h49 y5811 ff19 fs26 fc0 sc0 ls0 ws0">exists <span class="_ _e"> </span>in <span class="_ _e"> </span>the <span class="_ _e"> </span>database.<span class="_ _48"> </span>If <span class="_"> </span>the <span class="_ _53"> </span>caller <span class="_ _e"> </span>isn’t <span class="_"> </span>r<span class="_ _0"></span>eplacing <span class="_ _53"> </span>the <span class="_"> </span>r<span class="_ _0"></span>ecord, <span class="_ _53"> </span>we <span class="_ _e"> </span>set <span class="_"> </span>the</div><div class="t m0 x11a h49 y5812 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turn <span class="_ _47"> </span>code <span class="_ _66"> </span>to <span class="_ _47"> </span>indicate <span class="_ _66"> </span>that <span class="_ _47"> </span>a <span class="_ _66"> </span>recor<span class="ls16b8">de<span class="_ _1d"></span><span class="ls0">xists, <span class="_ _66"> </span>increment <span class="_ _66"> </span>the <span class="_ _47"> </span>count <span class="_ _66"> </span>of <span class="_ _47"> </span>the</span></span></span></div><div class="t m0 x11a h49 y5813 ff19 fs26 fc0 sc0 ls0 ws0">number <span class="_"> </span>of <span class="_"> </span>stor<span class="_ _0"></span><span class="ls16b9">ee<span class="_ _4a"></span><span class="ls0">rrors, <span class="_ _e"> </span>and <span class="_"> </span>jump <span class="_"> </span>to <span class="_"> </span>the <span class="_ _e"> </span>end <span class="_"> </span>of <span class="_"> </span>the <span class="_"> </span>function, <span class="_"> </span>wher<span class="_ _0"></span><span class="ls16ba">ew<span class="_ _4a"></span><span class="ls0">e</span></span></span></span></div><div class="t m0 x11a h49 y5814 ff19 fs26 fc0 sc0 ls0 ws0">handle the common return logic.</div><div class="t m0 x32 h49 y5815 ff19 fs26 fc0 sc0 ls0 ws0">[632 <span class="_ _a"></span>– <span class="_ _a"></span>654]<span class="_ _65"> </span>Case <span class="_ _3"></span>3: <span class="_ _9"></span>an <span class="_ _9"></span>existing <span class="_ _9"></span>recor<span class="_ _1"></span>d<span class="_ _45"> </span>is<span class="_ _45"> </span>being <span class="_ _3"></span>replaced, <span class="_ _3"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>length <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>new <span class="_ _9"></span>data</div><div class="t m0 x11a h4d y5816 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">cor<span class="ls16bb">dd<span class="_ _4f"></span><span class="ls0">iffers from the <span class="_ _2"></span>length of <span class="_ _2"></span>the existing <span class="_ _2"></span>one.<span class="_ _46"> </span><span class="ls164">We <span class="_ _53"> </span>c<span class="_ _23"></span></span>all<span class="_"> </span><span class="ff1a">_db_dodelete<span class="_ _66"> </span></span>to</span></span></span></div><div class="t m0 x11a h49 y5817 ff19 fs26 fc0 sc0 ls0 ws0">delete <span class="_ _23"> </span>the <span class="_ _42"> </span>existing <span class="_ _23"> </span>record. <span class="_ _35"> </span>Recall<span class="_ _35"> </span>that <span class="_ _42"> </span>this <span class="_ _23"> </span>places <span class="_ _42"> </span>the <span class="_ _23"> </span>deleted <span class="_ _42"> </span>recor<span class="_ _0"></span>d<span class="_ _35"> </span>at<span class="_ _35"> </span>the</div><div class="t m0 x11a h49 y5818 ff19 fs26 fc0 sc0 ls0 ws0">head <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>free list.<span class="_ _61"> </span>Then <span class="_ _2"></span>we <span class="_ _2"></span>append <span class="_ _2"></span>the <span class="_ _2"></span>new <span class="_ _2"></span>record<span class="_"> </span>to<span class="_ _66"> </span>the <span class="_ _2"></span>ends <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>data</div><div class="t m0 x11a h4d y5819 ff19 fs26 fc0 sc0 ls0 ws0">and <span class="_ _9"></span>index <span class="_ _23"></span>ﬁles <span class="_ _9"></span>by <span class="_ _23"></span>calling<span class="_ _45"> </span><span class="ff1a">_db_writedat<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">_db_writeidx</span><span class="ls16bc">.(<span class="_ _62"></span><span class="ls0">Ther<span class="lsf37">ea<span class="_ _b"></span><span class="lscc">re</span></span></span></span></div><div class="t m0 x11a h49 y581a ff19 fs26 fc0 sc0 ls0 ws0">other ways to handle this case.<span class="_ _46"> </span><span class="ls164">We <span class="_ _53"> </span>c<span class="_ _23"></span></span>ould try to ﬁnd a deleted recor<span class="_ _0"></span><span class="ls166b">dt<span class="_ _d"></span><span class="ls0">hat has</span></span></div><div class="t m0 x11a h49 y581b ff19 fs26 fc0 sc0 ls0 ws0">the correct data <span class="_ _2"></span>size.)<span class="_ _61"> </span>The new <span class="_ _2"></span>record<span class="_"> </span>is<span class="_"> </span>added <span class="_ _2"></span>to the <span class="_ _2"></span>front of <span class="_ _2"></span>the <span class="_ _2"></span>hash chain</div><div class="t m0 x11a h4d y581c ff19 fs26 fc0 sc0 ls0 ws0">by <span class="_"> </span>calling<span class="_ _4b"> </span><span class="ff1a">_db_writeptr</span><span class="ls16bd">.T<span class="_ _64"></span><span class="ls0">he<span class="_ _59"> </span><span class="ff1a">cnt_stor3<span class="_ _59"> </span></span>counter <span class="_"> </span>in <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1a">DB<span class="_ _59"> </span></span>structure</span></span></div><div class="t m0 x11a h49 y581d ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">cords the number of times we’ve executed this case.</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
