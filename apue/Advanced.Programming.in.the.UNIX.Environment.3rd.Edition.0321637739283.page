<div id="pf11b" class="pf w4 h1f" data-page-no="11b"><div class="pc pc11b w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg11b.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.10<span class="_ _22f"> </span><span class="ff1a">exec<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">249</span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">In the <span class="_ _2"></span>program shown in <span class="_ _2"></span>Figur<span class="ls9da">e8<span class="_ _4f"></span><span class="ls0">.13, the <span class="_ _2"></span>parent goes ﬁrst.<span class="_ _61"> </span>The child <span class="_ _2"></span>goes <span class="_ _2"></span>ﬁrst if <span class="_ _2"></span>we</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">change the lines following the<span class="_"> </span><span class="ff1a">fork<span class="_ _80"> </span></span>to be</div><div class="t m0 x3f h57 y1c09 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {</span></div><div class="t m0 xc2 h57 y1c0a ff1a fs2d fc0 sc0 ls0 ws0">charatatime(&quot;output from child\n&quot;);</div><div class="t m0 xc2 h57 y1c0b ff1a fs2d fc0 sc0 ls0 ws0">TELL_PARENT(getppid());</div><div class="t m0 x3f h57 y1c0c ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 xc2 h57 y1c0d ff1a fs2d fc0 sc0 ls0 ws0">WAIT_CHILD(); <span class="_ _b7"> </span>/*<span class="_"> </span>child goes first */</div><div class="t m0 xc2 h57 y1c0e ff1a fs2d fc0 sc0 ls0 ws0">charatatime(&quot;output from parent\n&quot;);</div><div class="t m0 x3f h57 y1d56 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h2a y20d0 ff19 fsf fc0 sc0 ls0 ws0">Exercise 8.4 continues this example.</div><div class="t m0 x35 h7b y20d1 ff16 fs27 fc0 sc0 ls0 ws0">8.10<span class="_ _6d"> </span><span class="ff1f">exec<span class="_ _54"> </span></span>Functions</div><div class="t m0 x32 h4d y20d2 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _53"> </span>m<span class="_ _9"></span><span class="ls0">entioned <span class="_ _2"></span>in Section <span class="_ _2"></span>8.3 that one <span class="_ _2"></span>use of the<span class="_ _66"> </span><span class="ff1a">fork<span class="_ _66"> </span></span>function is <span class="_ _2"></span>to create a new <span class="_ _2"></span>process</span></div><div class="t m0 x32 h4d y20d3 ff19 fs26 fc0 sc0 ls0 ws0">(the <span class="_ _3"></span>child) <span class="_ _3"></span>that <span class="_ _9"></span>then <span class="_ _3"></span>causes <span class="_ _9"></span>another <span class="_ _3"></span>program <span class="_ _2"></span>to <span class="_ _9"></span>be <span class="_ _3"></span>executed <span class="_ _9"></span>by <span class="_ _3"></span>calling <span class="_ _3"></span>one <span class="_ _9"></span>of <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">exec</span></div><div class="t m0 x32 h4d y20d4 ff19 fs26 fc0 sc0 ls0 ws0">functions. <span class="_ _45"> </span>When<span class="_ _35"> </span><span class="ls6e8">ap<span class="_ _b"></span><span class="lscc">ro<span class="ls0">cess <span class="_ _23"></span>calls <span class="_ _9"></span>one <span class="_ _23"> </span>of <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>functions, <span class="_ _23"></span>that <span class="_ _9"></span>process <span class="_ _9"></span>is <span class="_ _23"> </span>completely</span></span></span></div><div class="t m0 x32 h4d y20d5 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">placed <span class="_ _47"> </span>by <span class="_ _66"> </span>the <span class="_ _47"> </span>new <span class="_ _47"> </span>program, <span class="_"> </span>and <span class="_ _47"> </span>the <span class="_ _66"> </span>new <span class="_ _47"> </span>program <span class="_"> </span>starts <span class="_ _47"> </span>executing <span class="_ _66"> </span>at <span class="_ _47"> </span>its<span class="_ _61"> </span><span class="ff1a">main</span></span></div><div class="t m0 x32 h4d y20d6 ff19 fs26 fc0 sc0 ls0 ws0">function. <span class="_ _66"> </span>The<span class="_ _47"> </span>process ID <span class="_ _3"></span>does <span class="_ _2"></span>not <span class="_ _2"></span>change <span class="_ _3"></span>across an<span class="_ _47"> </span><span class="ff1a">exec</span><span class="ls9db">,b<span class="_ _4f"></span><span class="ls0">ecause <span class="_ _2"></span>a <span class="_ _2"></span>new <span class="_ _3"></span>process is <span class="_ _2"></span>not</span></span></div><div class="t m0 x32 h4d y20d7 ff19 fs26 fc0 sc0 ls0 ws0">created;<span class="_ _46"> </span><span class="ff1a">exec<span class="_ _16"> </span></span>merely <span class="_"> </span>replaces <span class="_ _47"> </span>the <span class="_ _66"> </span>current <span class="_ _47"> </span>process <span class="_ _84"></span>— <span class="_ _a"></span>its<span class="_ _16"> </span>text, <span class="_ _47"> </span>data, <span class="_ _66"> </span>heap, <span class="_ _47"> </span>and <span class="_ _47"> </span>stack</div><div class="t m0 x32 h49 y20d8 ff19 fs26 fc0 sc0 ls0 ws0">segments <span class="_ _a"></span>— <span class="_ _a"></span>with<span class="_"> </span><span class="lsd3">ab<span class="_ _5"></span><span class="ls0">rand-new program fr<span class="_ _1"></span>om disk.</span></span></div><div class="t m0 x3f h4d y20d9 ff19 fs26 fc0 sc0 ls0 ws0">Ther<span class="ls9dc">ea<span class="_ _b"></span><span class="lscc">re <span class="_ _9"></span>s<span class="_ _2"></span><span class="ls0">even <span class="_ _3"></span>different<span class="_ _47"> </span><span class="ff1a">exec<span class="_ _47"> </span></span>functions, <span class="_ _3"></span>but <span class="_ _3"></span>we’ll <span class="_ _3"></span>often <span class="_ _3"></span>simply <span class="_ _9"></span>refer <span class="_ _2"></span>to <span class="_ _3"></span>‘‘the<span class="_ _66"> </span><span class="ff1a">exec</span></span></span></span></div><div class="t m0 x32 h49 y20da ff19 fs26 fc0 sc0 ls0 ws0">function,’<span class="_ _0"></span><span class="ls9dd">’w<span class="_ _55"></span><span class="ls0">hich <span class="_ _e"> </span>means <span class="_ _53"> </span>that <span class="_ _53"> </span>we <span class="_ _e"> </span>could <span class="_ _53"> </span>use <span class="_ _53"> </span>any <span class="_ _e"> </span>of <span class="_ _53"> </span>the <span class="_ _53"> </span>seven <span class="_ _e"> </span>functions.<span class="_ _65"> </span>These <span class="_ _53"> </span>seven</span></span></div><div class="t m0 x32 h4d y20db ff19 fs26 fc0 sc0 ls0 ws0">functions <span class="_ _23"></span>round <span class="_ _9"></span>out <span class="_ _23"> </span>the <span class="_ _23"></span>UNIX <span class="_ _23"></span>System <span class="_ _23"></span>process <span class="_ _9"></span>control <span class="_ _23"></span>primitives.<span class="_ _5a"> </span><span class="ls3aa">Wi<span class="_ _3"></span></span>th<span class="_ _35"> </span><span class="ff1a">fork</span>,<span class="_ _35"> </span>we<span class="_ _45"> </span>can</div><div class="t m0 x32 h4d y20dc ff19 fs26 fc0 sc0 ls0 ws0">create <span class="_ _2"></span>new <span class="_ _3"></span>processes; <span class="_ _2"></span>and <span class="_ _3"></span>with <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">exec<span class="_ _47"> </span></span>functions, <span class="_ _3"></span>we <span class="_ _3"></span>can <span class="_ _3"></span>initiate <span class="_ _3"></span>new <span class="_ _3"></span>programs. <span class="_ _66"> </span>The</div><div class="t m0 x32 h4d y20dd ff1a fs26 fc0 sc0 ls0 ws0">exit<span class="_ _47"> </span><span class="ff19">function <span class="_ _2"></span>and <span class="_ _3"></span>the<span class="_ _47"> </span></span>wait<span class="_ _47"> </span><span class="ff19">functions <span class="_ _2"></span>handle <span class="_ _3"></span>termination <span class="_ _2"></span>and <span class="_ _3"></span>waiting <span class="_ _3"></span>for <span class="_ _2"></span>termination.</span></div><div class="t m0 x32 h49 y20de ff19 fs26 fc0 sc0 ls0 ws0">These <span class="_ _42"> </span>ar<span class="ls9de">et<span class="_ _c"></span><span class="ls0">he <span class="_ _42"> </span>only <span class="_ _53"> </span>process <span class="_ _23"> </span>control <span class="_ _42"> </span>primitives <span class="_ _42"> </span>we <span class="_ _42"> </span>need.<span class="_ _54"> </span><span class="ls164">We<span class="_ _23"></span></span>’ll <span class="_ _42"> </span>use <span class="_ _42"> </span>these <span class="_ _42"> </span>primitives <span class="_ _42"> </span>in</span></span></div><div class="t m0 x32 h4d y20df ff19 fs26 fc0 sc0 ls0 ws0">later sections to build additional functions, such as<span class="_"> </span><span class="ff1a">popen<span class="_ _80"> </span></span>and<span class="_"> </span><span class="ff1a">system</span>.</div><div class="t m0 x140 h4e y20e0 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;unistd.h&gt;</div><div class="t m0 x140 h4e y20e1 ff1a fs28 fc0 sc0 ls0 ws0">int execl(const char *<span class="ff1b">pathname</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">arg0</span><span class="ls1b6">,.<span class="_ _1d"></span><span class="ls0">.. /* (char *)0 */ );</span></span></span></span></div><div class="t m0 x140 h4e y20e2 ff1a fs28 fc0 sc0 ls0 ws0">int execv(const char *<span class="ff1b">pathname</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">har *const<span class="_"> </span><span class="ff1b">argv</span>[]);</span></span></div><div class="t m0 x140 h4e y20e3 ff1a fs28 fc0 sc0 ls0 ws0">int execle(const char *<span class="ff1b">pathname</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">arg0</span><span class="ls1b6">,.<span class="_ _1d"></span><span class="ls0">..</span></span></span></span></div><div class="t m0 x148 h4e y20e4 ff1a fs28 fc0 sc0 ls0 ws0">/* (char *)0, char *const<span class="_"> </span><span class="ff1b">envp</span>[] */ );</div><div class="t m0 x140 h4e y20e5 ff1a fs28 fc0 sc0 ls0 ws0">int execve(const char *<span class="ff1b">pathname</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">har *const<span class="_"> </span><span class="ff1b">argv</span>[], char *const<span class="_"> </span><span class="ff1b">envp</span>[]);</span></span></div><div class="t m0 x140 h4e y20e6 ff1a fs28 fc0 sc0 ls0 ws0">int execlp(const char *<span class="ff1b">ﬁlename</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">onst char *<span class="ff1b">arg0</span><span class="ls1b6">,.<span class="_ _1d"></span><span class="ls0">.. /* (char *)0 */ );</span></span></span></span></div><div class="t m0 x140 h4e y20e7 ff1a fs28 fc0 sc0 ls0 ws0">int execvp(const char *<span class="ff1b">ﬁlename</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">har *const<span class="_"> </span><span class="ff1b">argv</span>[]);</span></span></div><div class="t m0 x140 h4e y20e8 ff1a fs28 fc0 sc0 ls0 ws0">int fexecve(int<span class="_"> </span><span class="ff1b">fd</span><span class="ls1b6">,c<span class="_ _1d"></span><span class="ls0">har *const<span class="_"> </span><span class="ff1b">argv</span>[], char *const<span class="_"> </span><span class="ff1b">envp</span>[]);</span></span></div><div class="t m0 x67 h7c y20e9 ff19 fs28 fc0 sc0 ls0 ws0">All seven return:<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>err<span class="_ _0"></span>or<span class="_ _6"></span>,<span class="_"> </span>no<span class="_"> </span>return on success</div><a class="l" href="#pff" data-dest-detail='[15,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:915.200980px;width:128.807701px;height:19.680023px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
