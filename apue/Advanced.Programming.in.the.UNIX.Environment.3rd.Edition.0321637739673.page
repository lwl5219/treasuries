<div id="pf2a1" class="pf w4 h1f" data-page-no="2a1"><div class="pc pc2a1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2a1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>17.3<span class="_ _282"> </span>Unique <span class="_"> </span>Connections<span class="_ _1b"> </span><span class="ff18">639</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">if ((name = malloc(sizeof(un.sun_path + 1))) == NULL)</div><div class="t m0 x9d h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">len = sizeof(un);</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">if ((clifd = accept(listenfd, (struct sockaddr *)&amp;un, &amp;len)) &lt; 0) {</div><div class="t m0 x9d h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">free(name);</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">return(-2); <span class="_ _15"> </span>/*<span class="_"> </span>often errno=EINTR, if signal caught */</div><div class="t m0 x8a h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y350b ff1a fs2d fc0 sc0 ls0 ws0">/* obtain the client’s uid from its calling address */</div><div class="t m0 x8a h57 y350c ff1a fs2d fc0 sc0 ls0 ws0">len -= offsetof(struct sockaddr_un, sun_path); /* len of pathname */</div><div class="t m0 x8a h57 y350d ff1a fs2d fc0 sc0 ls0 ws0">memcpy(name, un.sun_path, len);</div><div class="t m0 x8a h57 y31b6 ff1a fs2d fc0 sc0 ls0 ws0">name[len] = 0;<span class="_ _74"> </span>/* null terminate */</div><div class="t m0 x8a h57 y31b7 ff1a fs2d fc0 sc0 ls0 ws0">if (stat(name, &amp;statbuf) &lt; 0) {</div><div class="t m0 x9d h57 y31b8 ff1a fs2d fc0 sc0 ls0 ws0">rval = -3;</div><div class="t m0 x9d h57 y31b9 ff1a fs2d fc0 sc0 ls0 ws0">goto errout;</div><div class="t m0 x8a h57 y31ba ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y1314 ff1a fs2d fc0 sc0 ls0 ws0">#ifdef <span class="_"> </span>S_ISSOCK<span class="_ _15"> </span>/* not defined for SVR4 */</div><div class="t m0 x8a h57 y1315 ff1a fs2d fc0 sc0 ls0 ws0">if (S_ISSOCK(statbuf.st_mode) == 0) {</div><div class="t m0 x9d h57 y351c ff1a fs2d fc0 sc0 ls0 ws0">rval = -4;<span class="_ _189"> </span>/* not a socket */</div><div class="t m0 x9d h57 y351d ff1a fs2d fc0 sc0 ls0 ws0">goto errout;</div><div class="t m0 x8a h57 y351e ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y351f ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x8a h57 y131a ff1a fs2d fc0 sc0 ls0 ws0">if ((statbuf.st_mode &amp; (S_IRWXG | S_IRWXO)) ||</div><div class="t m0 x9d h57 y131b ff1a fs2d fc0 sc0 ls0 ws0">(statbuf.st_mode &amp; S_IRWXU) != S_IRWXU) {</div><div class="t m0 x76 h57 y131c ff1a fs2d fc0 sc0 ls0 ws0">rval = -5;<span class="_ _15"> </span>/* is not rwx------ */</div><div class="t m0 x76 h57 y131d ff1a fs2d fc0 sc0 ls0 ws0">goto errout;</div><div class="t m0 x8a h57 y131e ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y1344 ff1a fs2d fc0 sc0 ls0 ws0">staletime = time(NULL) - STALE;</div><div class="t m0 x8a h57 y1345 ff1a fs2d fc0 sc0 ls0 ws0">if (statbuf.st_atime &lt; staletime ||</div><div class="t m0 x9d h57 y1346 ff1a fs2d fc0 sc0 ls0 ws0">statbuf.st_ctime &lt; staletime ||</div><div class="t m0 x9d h57 y1347 ff1a fs2d fc0 sc0 ls0 ws0">statbuf.st_mtime &lt; staletime) {</div><div class="t m0 x76 h57 y1323 ff1a fs2d fc0 sc0 ls0 ws0">rval = -6;<span class="_ _15"> </span>/* i-node is too old */</div><div class="t m0 x76 h57 y1324 ff1a fs2d fc0 sc0 ls0 ws0">goto errout;</div><div class="t m0 x8a h57 y1325 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y23f2 ff1a fs2d fc0 sc0 ls0 ws0">if (uidptr != NULL)</div><div class="t m0 x9d h57 y1327 ff1a fs2d fc0 sc0 ls0 ws0">*uidptr = statbuf.st_uid;<span class="_ _68"> </span>/* return uid of caller */</div><div class="t m0 x8a h57 y1328 ff1a fs2d fc0 sc0 ls0 ws0">unlink(name); <span class="_ _189"> </span>/*<span class="_"> </span>we’re done with pathname now */</div><div class="t m0 x8a h57 y1329 ff1a fs2d fc0 sc0 ls0 ws0">free(name);</div><div class="t m0 x8a h57 y132a ff1a fs2d fc0 sc0 ls0 ws0">return(clifd);</div><div class="t m0 x32 h57 y170d ff1a fs2d fc0 sc0 ls0 ws0">errout:</div><div class="t m0 x8a h57 y3acc ff1a fs2d fc0 sc0 ls0 ws0">err = errno;</div><div class="t m0 x8a h57 y132d ff1a fs2d fc0 sc0 ls0 ws0">close(clifd);</div><div class="t m0 x8a h57 y132e ff1a fs2d fc0 sc0 ls0 ws0">free(name);</div><div class="t m0 x8a h57 y132f ff1a fs2d fc0 sc0 ls0 ws0">errno = err;</div><div class="t m0 x8a h57 y1330 ff1a fs2d fc0 sc0 ls0 ws0">return(rval);</div><div class="t m0 x32 h57 y1331 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x209 h5e y4bd6 ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.9<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">serv_accept<span class="_ _e"> </span></span>function</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
