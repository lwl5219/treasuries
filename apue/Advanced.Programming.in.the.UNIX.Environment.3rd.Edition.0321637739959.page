<div id="pf3bf" class="pf w4 h1f" data-page-no="3bf"><div class="pc pc3bf w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3bf.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Appendix <span class="_"> </span>C<span class="_ _86"> </span>Chapter <span class="_"> </span>1<span class="_ _1"></span><span class="ls1849">1S<span class="_ _52"></span><span class="ls0">olutions<span class="_ _1b"> </span><span class="ff18">925</span></span></span></div><div class="t m0 x32 h2a y12f ff18 fsf fc0 sc0 ls0 ws0">10.10<span class="_ _5f"> </span><span class="ff19">On one system used <span class="_ _2"></span>by the author<span class="_ _1"></span><span class="ls184a">,t<span class="_ _d"></span><span class="ls0">he value for the number <span class="_ _2"></span>of seconds increased</span></span></span></div><div class="t m0 xe2 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">by <span class="_ _9"></span>1 <span class="_ _23"> </span>about <span class="_ _23"></span>every <span class="_ _9"></span>60</div><div class="t m0 x39 h2a y5cd ff19 fsf fc0 sc0 ls0 ws0">–</div><div class="t m0 x145 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">90 <span class="_ _9"></span>minutes.<span class="_ _51"> </span>This <span class="_ _9"></span>skew <span class="_ _23"> </span>occurs <span class="_ _23"></span>because <span class="_ _9"></span>each <span class="_ _23"></span>call <span class="_ _23"></span>to<span class="_ _45"> </span><span class="ff1a">sleep</span></div><div class="t m0 xe2 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">schedules <span class="_ _23"> </span>an <span class="_ _23"> </span>event <span class="_ _42"> </span>for <span class="_ _23"> </span>a <span class="_ _23"> </span>time <span class="_ _42"> </span>in <span class="_ _23"></span>the <span class="_ _23"> </span>future, <span class="_ _23"></span>but <span class="_ _23"> </span>is <span class="_ _42"> </span>not <span class="_ _23"></span>awakened <span class="_ _23"> </span>exactly <span class="_ _23"> </span>when</div><div class="t m0 xe2 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">that <span class="_ _23"></span>event <span class="_ _23"></span>occurs <span class="_ _23"></span>(because <span class="_ _9"></span>of <span class="_ _23"> </span>CPU <span class="_ _23"> </span>scheduling).<span class="_ _51"> </span>In <span class="_ _23"> </span>addition, <span class="_ _23"></span>a <span class="_ _23"></span>ﬁnite <span class="_ _23"></span>amount <span class="_ _23"></span>of</div><div class="t m0 xe2 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">time is requir<span class="_ _0"></span>ed for our pr<span class="_ _0"></span>ocess to start running and call<span class="_"> </span><span class="ff1a">sleep<span class="_ _80"> </span></span>again.</div><div class="t m0 xe2 h26 y31e ff19 fsf fc0 sc0 ls2de ws0">Ap<span class="_ _4f"></span><span class="ls45">ro<span class="ls0">gram <span class="_ _3"></span>such <span class="_ _2"></span>as <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">cron<span class="_ _66"> </span></span>daemon <span class="_ _2"></span>has <span class="_ _2"></span>to <span class="_ _2"></span>fetch <span class="_ _3"></span>the <span class="_ _2"></span>current time <span class="_ _2"></span>every <span class="_ _3"></span>minute,</span></span></div><div class="t m0 xe2 h2a y31f ff19 fsf fc0 sc0 ls0 ws0">as <span class="_ _3"></span>well <span class="_ _9"></span>as <span class="_ _9"></span>to <span class="_ _3"></span>set <span class="_ _9"></span>its <span class="_ _9"></span>ﬁrst <span class="_ _3"></span>sleep <span class="_ _9"></span>period <span class="_ _9"></span>so <span class="_ _9"></span>that <span class="_ _3"></span>it <span class="_ _9"></span>wakes <span class="_ _9"></span>up <span class="_ _3"></span>at <span class="_ _9"></span>the <span class="_ _9"></span>beginning <span class="_ _3"></span>of <span class="_ _9"></span>the</div><div class="t m0 xe2 h26 y320 ff19 fsf fc0 sc0 ls0 ws0">next <span class="_ _2"></span>minute.<span class="_ _16"> </span>(Convert <span class="_ _2"></span>the <span class="_ _3"></span>current <span class="_ _2"></span>time <span class="_ _3"></span>to <span class="_ _2"></span>the <span class="_ _3"></span>local <span class="_ _2"></span>time <span class="_ _3"></span>and <span class="_ _3"></span>look <span class="_ _2"></span>at <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">tm_sec</span></div><div class="t m0 xe2 h2a y321 ff19 fsf fc0 sc0 ls0 ws0">value.) <span class="_"> </span>Every<span class="_"> </span>minute, it sets the next sleep period so that it’ll wake up at the next</div><div class="t m0 xe2 h26 ya23 ff19 fsf fc0 sc0 ls0 ws0">minute. <span class="_ _46"> </span>Most<span class="_ _61"> </span>of <span class="_ _66"> </span>the <span class="_ _47"> </span>calls <span class="_"> </span>will <span class="_ _47"> </span>probably <span class="_"> </span>be<span class="_ _46"> </span><span class="ff1a">sleep(60)</span><span class="ls14bc">,w<span class="_ _4a"></span><span class="ls0">ith <span class="_"> </span>an <span class="_ _66"> </span>occasional</span></span></div><div class="t m0 xe2 h26 ya24 ff1a fsf fc0 sc0 ls0 ws0">sleep(59)<span class="_ _4b"> </span><span class="ff19">to <span class="_ _53"> </span>resynchronize <span class="_ _53"> </span>with <span class="_ _e"> </span>the <span class="_ _53"> </span>next <span class="_ _e"> </span>minute.<span class="_ _48"> </span>But <span class="_ _53"> </span>if <span class="_ _e"> </span>at <span class="_ _e"> </span>some <span class="_ _e"> </span>point <span class="_ _e"> </span>the</span></div><div class="t m0 xe2 h2a y34a ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _53"> </span>takes <span class="_"> </span>a <span class="_ _e"> </span>long <span class="_"> </span>time <span class="_ _e"> </span>executing <span class="_ _e"> </span>commands <span class="_"> </span>or <span class="_ _e"> </span>if <span class="_"> </span>the <span class="_ _53"> </span>system <span class="_"> </span>gets <span class="_ _e"> </span>heavily</div><div class="t m0 xe2 h2a ya65 ff19 fsf fc0 sc0 ls0 ws0">loaded <span class="_ _3"></span>and <span class="_ _9"></span>scheduling <span class="_ _3"></span>delays <span class="_ _9"></span>hold <span class="_ _3"></span>up <span class="_ _9"></span>the <span class="_ _3"></span>process, <span class="_ _3"></span>the <span class="_ _9"></span>sleep <span class="_ _3"></span>value <span class="_ _9"></span>can <span class="_ _3"></span>be <span class="_ _9"></span>much</div><div class="t m0 xe2 h2a ya66 ff19 fsf fc0 sc0 ls0 ws0">less than 60.</div><div class="t m0 x32 h2a y327 ff18 fsf fc0 sc0 ls0 ws0">10.1<span class="_ _0"></span>1<span class="_ _1a3"> </span><span class="ff19">Under <span class="_ _47"> </span>Linux <span class="_ _66"> </span>3.2.0, <span class="_ _47"> </span>Mac <span class="_ _66"> </span>OS <span class="_ _47"> </span>X <span class="_ _47"> </span>10.6.8, <span class="_ _66"> </span>and <span class="_ _47"> </span>Solaris <span class="_ _66"> </span>10, <span class="_ _47"> </span>the <span class="_ _66"> </span>signal <span class="_ _47"> </span>handler <span class="_ _47"> </span>for</span></div><div class="t m0 xe2 h26 y206 ff1a fsf fc0 sc0 ls0 ws0">SIGXFSZ<span class="_ _45"> </span><span class="ff19">is <span class="_ _23"> </span>never <span class="_ _23"></span>called.<span class="_ _5a"> </span>But<span class="_ _35"> </span></span>write<span class="_ _45"> </span><span class="ff19 ls45">re<span class="_ _2"></span><span class="ls0">turns <span class="_ _23"></span>a <span class="_ _9"></span>count <span class="_ _23"> </span>of <span class="_ _23"></span>24 <span class="_ _23"></span>as <span class="_ _9"></span>soon <span class="_ _23"></span>as <span class="_ _23"></span>the <span class="_ _9"></span>ﬁle’s</span></span></div><div class="t m0 xe2 h2a y1f12 ff19 fsf fc0 sc0 ls0 ws0">size reaches 1,024 bytes.</div><div class="t m0 xe2 h2a y619b ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _47"> </span>the <span class="_ _47"> </span>ﬁle’s <span class="_ _47"> </span>size <span class="_ _47"> </span>has <span class="_ _66"> </span>reached <span class="_ _47"> </span>1,000 <span class="_ _47"> </span>bytes <span class="_ _47"> </span>under <span class="_ _47"> </span>FreeBSD <span class="_ _66"> </span>8.0, <span class="_ _47"> </span>the <span class="_ _47"> </span>signal</div><div class="t m0 xe2 h26 y4f9f ff19 fsf fc0 sc0 ls0 ws0">handler <span class="_ _e"> </span>is <span class="_ _e"> </span>called <span class="_ _e"> </span>on <span class="_ _e"> </span>the <span class="_ _e"> </span>next <span class="_ _e"> </span>attempt <span class="_ _e"> </span>to <span class="_"> </span>write <span class="_ _53"> </span>100 <span class="_ _e"> </span>bytes, <span class="_ _e"> </span>and <span class="_ _e"> </span>the<span class="_ _4b"> </span><span class="ff1a">write<span class="_ _59"> </span></span>call</div><div class="t m0 xe2 h26 y4fa0 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turns<span class="_"> </span><span class="ff20">−</span><span class="ls44">1w<span class="_ _5"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>set to<span class="_"> </span><span class="ff1a">EFBIG<span class="_ _66"> </span></span>(‘<span class="_ _1"></span>‘File too big’’).</span></span></span></div><div class="t m0 xe2 h26 y15ef ff19 fsf fc0 sc0 ls0 ws0">On all <span class="_ _2"></span>four <span class="_ _2"></span>platforms, <span class="_ _2"></span>if <span class="_ _2"></span>we <span class="_ _2"></span>attempt <span class="_ _2"></span>an <span class="_ _2"></span>additional<span class="_ _66"> </span><span class="ff1a">write<span class="_ _66"> </span></span>at <span class="_ _2"></span>the <span class="_ _2"></span>current ﬁle <span class="_ _2"></span>offset</div><div class="t m0 xe2 h26 y15f0 ff19 fsf fc0 sc0 ls0 ws0">(the <span class="_ _9"></span>end <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>ﬁle), <span class="_ _9"></span>we <span class="_ _9"></span>will <span class="_ _9"></span>receive<span class="_ _47"> </span><span class="ff1a">SIGXFSZ<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">write<span class="_ _45"> </span></span>will <span class="_ _9"></span>fail, <span class="_ _9"></span>returning<span class="_ _47"> </span><span class="ff20">−</span>1</div><div class="t m0 xe2 h26 y15f1 ff19 fsf fc0 sc0 ls0 ws0">with<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>set to<span class="_"> </span><span class="ff1a">EFBIG</span>.</div><div class="t m0 x32 h2a y619c ff18 fsf fc0 sc0 ls0 ws0">10.12<span class="_ _5f"> </span><span class="ff19">The <span class="_ _9"></span>results <span class="_ _3"></span>depend <span class="_ _3"></span>on <span class="_ _9"></span>the <span class="_ _9"></span>implementation <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>standar<span class="lsdfe">dI<span class="_ _b"></span><span class="ls0">/O <span class="_ _3"></span>library: <span class="_ _9"></span>how <span class="_ _9"></span>the</span></span></span></div><div class="t m0 xe2 h26 y619d ff1a fsf fc0 sc0 ls0 ws0">fwrite<span class="_ _80"> </span><span class="ff19">function handles an interrupted<span class="_"> </span></span>write<span class="ff19">.</span></div><div class="t m0 xe2 h26 y619e ff19 fsf fc0 sc0 ls0 ws0">On <span class="_ _3"></span>Linux <span class="_ _9"></span>3.2.0, <span class="_ _9"></span>for <span class="_ _9"></span>example, <span class="_ _3"></span>when <span class="_ _9"></span>we <span class="_ _9"></span>use <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">fwrite<span class="_ _45"> </span></span>function <span class="_ _3"></span>to <span class="_ _9"></span>write <span class="_ _9"></span>a <span class="_ _3"></span>large</div><div class="t m0 xe2 h26 y210 ff19 fsf fc0 sc0 ls0 ws0">buffer<span class="_ _6"></span><span class="ls184b">,t<span class="_ _b"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">fwrite<span class="_ _45"> </span></span>function <span class="_ _9"></span>calls<span class="_ _45"> </span><span class="ff1a">write<span class="_ _35"> </span></span>dir<span class="_ _0"></span>ectly <span class="_ _9"></span>for <span class="_ _23"></span>the <span class="_ _9"></span>same <span class="_ _9"></span>number <span class="_ _23"></span>of <span class="_ _9"></span>bytes.</span></span></div><div class="t m0 xe2 h26 y211 ff19 fsf fc0 sc0 ls0 ws0">While <span class="_ _9"></span>in <span class="_ _9"></span>the <span class="_ _9"></span>middle <span class="_ _23"></span>of <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">write<span class="_ _45"> </span></span>system <span class="_ _9"></span>call, <span class="_ _9"></span>the <span class="_ _23"></span>alarm <span class="_ _9"></span>ﬁres, <span class="_ _3"></span>but <span class="_ _23"></span>we <span class="_ _9"></span>don’t <span class="_ _9"></span>see</div><div class="t m0 xe2 h2a y212 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _23"> </span>signal <span class="_ _23"> </span>until <span class="_ _42"> </span>the <span class="_ _23"> </span>write <span class="_ _23"> </span>completes.<span class="_ _51"> </span>It <span class="_ _42"> </span>appears <span class="_ _23"> </span>as <span class="_ _23"> </span>if <span class="_ _42"> </span>the <span class="_ _23"></span>kernel <span class="_ _23"> </span>is <span class="_ _42"> </span>blocking <span class="_ _23"></span>the</div><div class="t m0 xe2 h26 y213 ff19 fsf fc0 sc0 ls0 ws0">signal while we are<span class="_"> </span>in<span class="_"> </span>the middle of the<span class="_"> </span><span class="ff1a">write<span class="_ _80"> </span></span>system call.</div><div class="t m0 xe2 h26 y619f ff19 fsf fc0 sc0 ls0 ws0">In <span class="_ _9"></span>contrast, <span class="_ _23"> </span>on <span class="_ _23"></span>Solaris <span class="_ _23"></span>10, <span class="_ _9"></span>the<span class="_ _35"> </span><span class="ff1a">fwrite<span class="_ _45"> </span></span>function <span class="_ _23"></span>calls<span class="_ _45"> </span><span class="ff1a">write<span class="_ _35"> </span></span>in <span class="_ _9"></span>8 <span class="_ _23"></span>KB <span class="_ _23"></span>increments</div><div class="t m0 xe2 h2a y61a0 ff19 fsf fc0 sc0 ls0 ws0">until the entir<span class="ls9c3">ea<span class="_ _4f"></span><span class="ls0">mount is <span class="_ _2"></span>written.<span class="_ _46"> </span>When the alarm ﬁres, it is caught, interrupting</span></span></div><div class="t m0 xe2 h26 y61a1 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _42"> </span>call <span class="_ _23"> </span>to<span class="_ _44"> </span><span class="ff1a">fwrite</span><span class="lsd35">.A<span class="_ _52"></span><span class="ls0">fter <span class="_ _42"> </span>we <span class="_ _42"> </span>return <span class="_ _23"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>signal <span class="_ _42"> </span>handler<span class="_ _6"></span>,<span class="_ _44"> </span>we<span class="_ _35"> </span>return <span class="_ _42"> </span>to <span class="_ _23"> </span>the</span></span></div><div class="t m0 xe2 h26 y5056 ff19 fsf fc0 sc0 ls0 ws0">loop inside the<span class="_"> </span><span class="ff1a">fwrite<span class="_ _80"> </span></span>function and continue writing in 8 KB increments.</div><div class="t m0 x35 h27 y61a2 ff16 fsf fc0 sc0 ls0 ws0">Chapter <span class="_"> </span>11</div><div class="t m0 x32 h2a y1cbf ff18 fsf fc0 sc0 ls124 ws0">11<span class="_ _2"></span><span class="ls0">.1<span class="_ _9b"> </span><span class="ff19 ls9c3">Av<span class="_ _4f"></span><span class="ls0">ersion <span class="_ _2"></span>of the program that allocates the memory dynamically instead of using</span></span></span></div><div class="t m0 xe2 h2a y1cc0 ff19 fsf fc0 sc0 ls0 ws0">an automatic variable is shown in Figur<span class="ls44">eC<span class="_ _4f"></span><span class="ls0">.12.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
