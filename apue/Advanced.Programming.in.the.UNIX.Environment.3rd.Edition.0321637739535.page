<div id="pf217" class="pf w4 h1f" data-page-no="217"><div class="pc pc217 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg217.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>14.4<span class="_ _2a5"> </span>I/O <span class="_"> </span>Multiplexing<span class="_ _1b"> </span><span class="ff18">501</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">network connection is disconnected by the<span class="_"> </span><span class="ff1a">telnetd<span class="_ _66"> </span></span>daemon), then the child terminates</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _2"></span>the <span class="_ _3"></span>parent is <span class="_ _3"></span>notiﬁed <span class="_ _2"></span>by <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">SIGCHLD<span class="_ _66"> </span></span>signal. <span class="_ _47"> </span>But<span class="_ _47"> </span>if <span class="_ _2"></span>the <span class="_ _2"></span>parent <span class="_ _2"></span>terminates <span class="_ _3"></span>(the <span class="_ _2"></span>user</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">enters <span class="_ _23"></span>an <span class="_ _23"></span>end-of-ﬁle <span class="_ _23"></span>character <span class="_ _23"></span>at <span class="_ _23"></span>the <span class="_ _23"> </span>terminal), <span class="_ _23"> </span>then <span class="_ _23"> </span>the <span class="_ _23"> </span>parent <span class="_ _23"></span>has <span class="_ _23"></span>to <span class="_ _23"></span>tell <span class="_ _23"></span>the <span class="_ _23"></span>child <span class="_ _23"></span>to</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">stop. <span class="_ _45"> </span>W<span class="_ _6"></span><span class="ls103e">ec<span class="_ _b"></span><span class="ls0">an <span class="_ _23"></span>use <span class="_ _9"></span>a <span class="_ _23"></span>signal <span class="_ _23"></span>for <span class="_ _9"></span>this <span class="_ _23"> </span>(<span class="ff1a">SIGUSR1</span><span class="ls103e">,f<span class="_ _b"></span><span class="ls0">or <span class="_ _9"></span>example), <span class="_ _23"> </span>but <span class="_ _23"></span>it <span class="_ _23"></span>does <span class="_ _9"></span>complicate <span class="_ _23"> </span>the</span></span></span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">program somewhat.</div><div class="t m0 x3f h2a y134 ff19 fsf fc0 sc0 ls0 ws0">Instead <span class="_ _2"></span>of <span class="_ _2"></span>two <span class="_ _2"></span>processes, <span class="_ _2"></span>we <span class="_ _2"></span>could <span class="_ _2"></span>use <span class="_ _2"></span>two <span class="_ _3"></span>threads in <span class="_ _2"></span>a <span class="_ _3"></span>single <span class="_ _2"></span>process. <span class="_"> </span>This<span class="_ _47"> </span>avoids</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _2"></span>termination <span class="_ _2"></span>complexity<span class="_ _4"></span><span class="ls118">,b<span class="_ _d"></span><span class="ls0">ut <span class="_ _2"></span>requir<span class="_ _0"></span>es that <span class="_ _3"></span>we <span class="_ _2"></span>deal <span class="_ _2"></span>with <span class="_ _2"></span>synchronization between <span class="_ _2"></span>the</span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">threads, which could add mor<span class="_ _0"></span><span class="ls44">ec<span class="_ _d"></span><span class="ls0">omplexity than it saves.</span></span></div><div class="t m0 x3f h2a y137 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _80"> </span>c<span class="_ _9"></span><span class="ls0">ould <span class="_ _3"></span>use <span class="_ _9"></span>nonblocking <span class="_ _3"></span>I/O <span class="_ _3"></span>in <span class="_ _3"></span>a <span class="_ _3"></span>single <span class="_ _9"></span>process <span class="_ _2"></span>by <span class="_ _3"></span>setting <span class="_ _3"></span>both <span class="_ _9"></span>descriptors <span class="_ _3"></span>to <span class="_ _3"></span>be</span></div><div class="t m0 x32 h26 y138 ff19 fsf fc0 sc0 ls0 ws0">nonblocking and issuing a<span class="_"> </span><span class="ff1a">read<span class="_ _66"> </span></span>on the ﬁrst descriptor<span class="_ _1"></span><span class="ls103f">.I<span class="_ _4a"></span><span class="ls1040">fd<span class="_ _d"></span><span class="ls0">ata is present, we read it and</span></span></span></div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls0 ws0">process it.<span class="_ _46"> </span>If <span class="_ _2"></span>ther<span class="ls8e9">ei<span class="_ _4f"></span><span class="ls0">s<span class="_"> </span>no<span class="_ _66"> </span>data <span class="_ _2"></span>to <span class="_ _2"></span>read, the call <span class="_ _2"></span>returns immediately<span class="_ _6"></span><span class="ls4b9">.W<span class="_ _7"></span><span class="ls1041">et<span class="_ _d"></span><span class="ls0">hen <span class="_ _2"></span>do the <span class="_ _2"></span>same</span></span></span></span></span></div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">thing <span class="_ _23"></span>with <span class="_ _9"></span>the <span class="_ _23"></span>second <span class="_ _23"></span>descriptor<span class="_ _6"></span><span class="ls1042">.A<span class="_ _26"></span><span class="ls0">fter <span class="_ _23"></span>this, <span class="_ _23"></span>we <span class="_ _9"></span>wait <span class="_ _23"> </span>for <span class="_ _23"></span>some <span class="_ _9"></span>amount <span class="_ _23"> </span>of <span class="_ _23"></span>time <span class="_ _23"></span>(a <span class="_ _9"></span>few</span></span></div><div class="t m0 x32 h2a y254 ff19 fsf fc0 sc0 ls0 ws0">seconds, perhaps) <span class="_ _2"></span>and <span class="_ _2"></span>then <span class="_ _2"></span>try to <span class="_ _2"></span>read <span class="_ _2"></span>from the <span class="_ _2"></span>ﬁrst <span class="_ _2"></span>descriptor <span class="_ _2"></span>again.<span class="_ _46"> </span>This <span class="_ _2"></span>type <span class="_ _2"></span>of <span class="_ _2"></span>loop</div><div class="t m0 x32 h2b y255 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _2"></span>called<span class="_ _47"> </span><span class="ff1b">polling</span><span class="ls1043">.T<span class="_ _5b"></span><span class="ls0">he <span class="_ _2"></span>problem <span class="_ _3"></span>is <span class="_ _2"></span>that <span class="_ _3"></span>it <span class="_ _3"></span>wastes <span class="_ _3"></span>CPU <span class="_ _3"></span>time.<span class="_ _61"> </span>Most <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>time, <span class="_ _3"></span>ther<span class="ls78f">ew<span class="_ _b"></span><span class="ls0">on’t</span></span></span></span></div><div class="t m0 x32 h26 y13b ff19 fsf fc0 sc0 ls0 ws0">be <span class="_ _9"></span>data <span class="_ _23"></span>to <span class="_ _9"></span>read, <span class="_ _9"></span>so <span class="_ _9"></span>we <span class="_ _23"></span>waste <span class="_ _9"></span>time <span class="_ _23"></span>performing <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">read<span class="_ _35"> </span></span>system <span class="_ _9"></span>calls.<span class="_ _5a"> </span><span class="ls5f">We <span class="_ _47"> </span>a<span class="_ _9"></span></span>lso <span class="_ _9"></span>have <span class="_ _23"></span>to</div><div class="t m0 x32 h2a y13c ff19 fsf fc0 sc0 ls0 ws0">guess <span class="_ _9"></span>how <span class="_ _9"></span>long <span class="_ _23"></span>to <span class="_ _9"></span>wait <span class="_ _23"></span>each <span class="_ _9"></span>time <span class="_ _9"></span>around <span class="_ _9"></span>the <span class="_ _9"></span>loop.<span class="_ _51"> </span>Although <span class="_ _9"></span>it <span class="_ _9"></span>works <span class="_ _23"></span>on <span class="_ _9"></span>any <span class="_ _9"></span>system</div><div class="t m0 x32 h2a y256 ff19 fsf fc0 sc0 ls0 ws0">that supports nonblocking I/O, polling should be avoided on a multitasking system.</div><div class="t m0 x3f h2b y257 ff19 fsf fc0 sc0 ls0 ws0">Another technique is <span class="_ _2"></span>called<span class="_"> </span><span class="ff1b">asynchronous I/O</span><span class="ls1044">.W<span class="_ _1d"></span><span class="ls0">ith this <span class="_ _2"></span>technique, we tell <span class="_ _2"></span>the kernel</span></span></div><div class="t m0 x32 h2a y258 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _9"></span>notify <span class="_ _9"></span>us <span class="_ _9"></span>with <span class="_ _3"></span>a <span class="_ _9"></span>signal <span class="_ _9"></span>when <span class="_ _9"></span>a <span class="_ _9"></span>descriptor <span class="_ _9"></span>is <span class="_ _9"></span>ready <span class="_ _9"></span>for <span class="_ _3"></span>I/O.<span class="_ _5a"> </span>Ther<span class="ls633">ea<span class="_ _b"></span><span class="ls45">re <span class="_ _23"> </span>t<span class="_ _2"></span><span class="ls0">wo <span class="_ _9"></span>problems</span></span></span></div><div class="t m0 x32 h2a y161 ff19 fsf fc0 sc0 ls0 ws0">with <span class="_ _35"> </span>this <span class="_ _45"> </span>approach. <span class="_ _51"> </span>First,<span class="_ _5a"> </span>although <span class="_ _35"> </span>systems <span class="_ _35"> </span>provide <span class="_ _45"> </span>their <span class="_ _35"> </span>own <span class="_ _35"> </span>limited <span class="_ _45"> </span>forms <span class="_ _35"> </span>of</div><div class="t m0 x32 h2a y162 ff19 fsf fc0 sc0 ls0 ws0">asynchronous <span class="_ _44"> </span>I/O, <span class="_ _44"> </span>POSIX <span class="_ _4b"> </span>chose <span class="_ _44"> </span>to <span class="_ _4b"> </span>standardize <span class="_ _44"> </span>a <span class="_ _44"> </span>different <span class="_ _44"> </span>set <span class="_ _44"> </span>of <span class="_ _4b"> </span>interfaces, <span class="_ _44"> </span>so</div><div class="t m0 x32 h2a y1db ff19 fsf fc0 sc0 ls0 ws0">portability <span class="_ _53"> </span>can <span class="_"> </span>be <span class="_ _42"> </span>an <span class="_"> </span>issue.<span class="_ _54"> </span>(In <span class="_ _e"> </span>the <span class="_ _e"> </span>past, <span class="_ _e"> </span>POSIX <span class="_ _e"> </span>asynchronous <span class="_ _53"> </span>I/O <span class="_ _e"> </span>was <span class="_ _e"> </span>an <span class="_ _e"> </span>optional</div><div class="t m0 x32 h2a y25a ff19 fsf fc0 sc0 ls0 ws0">facility <span class="_ _3"></span>in <span class="_ _3"></span>the <span class="_ _9"></span>Single <span class="_ _3"></span>UNIX <span class="_ _3"></span>Speciﬁcation, <span class="_ _3"></span>but <span class="_ _9"></span>these <span class="_ _3"></span>interfaces <span class="_ _3"></span>ar<span class="ls1045">er<span class="_ _b"></span><span class="ls0">equired <span class="_ _3"></span>as <span class="_ _3"></span>of <span class="_ _3"></span>SUSv4.)</span></span></div><div class="t m0 x32 h26 y164 ff19 fsf fc0 sc0 ls0 ws0">System <span class="_ _2"></span>V <span class="_ _2"></span>provides <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">SIGPOLL<span class="_ _47"> </span></span>signal <span class="_ _2"></span>to <span class="_ _2"></span>support <span class="_ _3"></span>a <span class="_ _2"></span>limited <span class="_ _2"></span>form <span class="_ _3"></span>of <span class="_ _2"></span>asynchronous <span class="_ _2"></span>I/O,</div><div class="t m0 x32 h2a y25b ff19 fsf fc0 sc0 ls0 ws0">but <span class="_ _42"> </span>this <span class="_ _42"> </span>signal <span class="_ _53"> </span>works <span class="_ _42"> </span>only <span class="_ _42"> </span>if <span class="_ _53"> </span>the <span class="_ _42"> </span>descriptor <span class="_ _42"> </span>refers <span class="_ _42"> </span>to <span class="_ _42"> </span>a <span class="_ _42"> </span>STREAMS <span class="_ _53"> </span>device.<span class="_ _54"> </span>BSD <span class="_ _42"> </span>has <span class="_ _42"> </span>a</div><div class="t m0 x32 h26 y165 ff19 fsf fc0 sc0 ls0 ws0">similar <span class="_ _23"> </span>signal,<span class="_ _35"> </span><span class="ff1a">SIGIO</span><span class="lsc40">,b<span class="_ _43"></span><span class="ls0">ut <span class="_ _42"> </span>it <span class="_ _23"> </span>has <span class="_ _23"> </span>similar <span class="_ _42"> </span>limitations: <span class="_ _23"> </span>it <span class="_ _23"> </span>works <span class="_ _42"> </span>only <span class="_ _23"> </span>on <span class="_ _23"> </span>descriptors <span class="_ _42"> </span>that</span></span></div><div class="t m0 x32 h2a y167 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">fer to terminal devices or networks.</span></div><div class="t m0 x3f h2a y168 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>second <span class="_ _e"> </span>problem <span class="_ _e"> </span>with <span class="_ _e"> </span>this <span class="_"> </span>technique <span class="_ _53"> </span>is <span class="_"> </span>that <span class="_ _53"> </span>the <span class="_ _e"> </span>limited <span class="_"> </span>forms <span class="_ _53"> </span>use <span class="_"> </span>only <span class="_ _53"> </span>one</div><div class="t m0 x32 h26 y169 ff19 fsf fc0 sc0 ls0 ws0">signal <span class="_ _2"></span>per <span class="_ _2"></span>process <span class="_ _2"></span>(<span class="ff1a">SIGPOLL<span class="_ _47"> </span></span>or<span class="_ _66"> </span><span class="ff1a">SIGIO</span>). <span class="_ _47"> </span>If<span class="_ _47"> </span>we <span class="_ _2"></span>enable <span class="_ _2"></span>this <span class="_ _3"></span>signal <span class="_ _2"></span>for <span class="_ _3"></span>two <span class="_ _2"></span>descriptors <span class="_ _2"></span>(in</div><div class="t m0 x32 h2a y16a ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _2"></span>example <span class="_ _2"></span>we’ve <span class="_ _3"></span>been <span class="_ _2"></span>talking <span class="_ _2"></span>about, <span class="_ _3"></span>reading from <span class="_ _2"></span>two <span class="_ _2"></span>descriptors), <span class="_ _3"></span>the <span class="_ _2"></span>occurrence <span class="_ _2"></span>of</div><div class="t m0 x32 h2a y16b ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _16"> </span>signal <span class="_ _5a"> </span>doesn’t <span class="_ _5a"> </span>tell <span class="_ _5a"> </span>us <span class="_ _16"> </span>which <span class="_ _5a"> </span>descriptor <span class="_ _5a"> </span>is <span class="_ _5a"> </span>r<span class="_ _0"></span>eady<span class="_ _4"></span><span class="ls1046">.A<span class="_ _18c"></span><span class="ls0">lthough <span class="_ _16"> </span>the <span class="_ _5a"> </span>POSIX.1</span></span></div><div class="t m0 x32 h2a y16c ff19 fsf fc0 sc0 ls0 ws0">asynchronous <span class="_ _3"></span>I/O <span class="_ _9"></span>interfaces <span class="_ _9"></span>allow <span class="_ _9"></span>us <span class="_ _9"></span>to <span class="_ _9"></span>select <span class="_ _9"></span>which <span class="_ _9"></span>signal <span class="_ _9"></span>to <span class="_ _9"></span>use <span class="_ _9"></span>for <span class="_ _9"></span>notiﬁcation, <span class="_ _9"></span>the</div><div class="t m0 x32 h2a y16d ff19 fsf fc0 sc0 ls0 ws0">number <span class="_ _53"> </span>of <span class="_ _e"> </span>signals <span class="_ _53"> </span>we <span class="_ _e"> </span>can <span class="_ _53"> </span>use <span class="_ _e"> </span>is <span class="_ _53"> </span>still <span class="_ _e"> </span>far <span class="_ _53"> </span>less <span class="_ _e"> </span>than <span class="_ _53"> </span>the <span class="_ _e"> </span>number <span class="_ _53"> </span>of <span class="_ _e"> </span>possible <span class="_ _53"> </span>open <span class="_ _e"> </span>ﬁle</div><div class="t m0 x32 h2a y25c ff19 fsf fc0 sc0 ls0 ws0">descriptors. <span class="_ _44"> </span>T<span class="_ _6"></span><span class="ls4f4">od<span class="_ _c"></span><span class="ls0">etermine <span class="_ _53"> </span>which <span class="_ _53"> </span>descriptor <span class="_ _53"> </span>is <span class="_ _42"> </span>ready<span class="_ _4"></span>,<span class="_ _4b"> </span>we<span class="_ _44"> </span>would <span class="_ _53"> </span>need <span class="_ _42"> </span>to <span class="_ _53"> </span>set <span class="_ _53"> </span>each <span class="_ _53"> </span>ﬁle</span></span></div><div class="t m0 x32 h2a y25d ff19 fsf fc0 sc0 ls0 ws0">descriptor <span class="_ _47"> </span>to <span class="_ _45"> </span>nonblocking <span class="_ _47"> </span>mode <span class="_ _45"> </span>and <span class="_ _47"> </span>try <span class="_ _45"> </span>the <span class="_ _47"> </span>descriptors <span class="_ _45"> </span>in <span class="_ _47"> </span>sequence.<span class="_ _5f"> </span><span class="ls5f">We <span class="_ _46"> </span>d<span class="_ _9"></span></span>iscuss</div><div class="t m0 x32 h2a y1805 ff19 fsf fc0 sc0 ls0 ws0">asynchronous I/O in Section 14.5.</div><div class="t m0 x3f h2b y1807 ff19 fsf fc0 sc0 lsa8 ws0">Ab<span class="_ _55"></span><span class="ls0">etter <span class="_ _e"> </span>technique <span class="_ _e"> </span>is <span class="_"> </span>to <span class="_ _53"> </span>use<span class="_ _59"> </span><span class="ff1b">I/O <span class="_ _e"> </span>multiplexing</span><span class="ls1047">.T<span class="_ _49"></span><span class="ls0">o<span class="_ _4b"> </span>do<span class="_ _4b"> </span>this, <span class="_"> </span>we <span class="_ _53"> </span>build <span class="_"> </span>a <span class="_ _53"> </span>list <span class="_"> </span>of <span class="_ _53"> </span>the</span></span></span></div><div class="t m0 x32 h2a y1808 ff19 fsf fc0 sc0 ls0 ws0">descriptors <span class="_"> </span>that <span class="_"> </span>we <span class="_ _e"> </span>ar<span class="ls1048">ei<span class="_ _4a"></span><span class="ls0">nterested <span class="_ _e"> </span>in <span class="_"> </span>(usually <span class="_"> </span>mor<span class="ls1049">et<span class="_ _5b"></span><span class="ls0">han <span class="_"> </span>one <span class="_"> </span>descriptor) <span class="_"> </span>and <span class="_"> </span>call <span class="_ _e"> </span>a</span></span></span></span></div><div class="t m0 x32 h2a y1809 ff19 fsf fc0 sc0 ls0 ws0">function <span class="_ _47"> </span>that <span class="_ _45"> </span>doesn’t <span class="_ _47"> </span>return <span class="_ _47"> </span>until <span class="_ _45"> </span>one <span class="_ _47"> </span>of <span class="_ _45"> </span>the <span class="_ _47"> </span>descriptors <span class="_ _47"> </span>is <span class="_ _45"> </span>ready <span class="_ _47"> </span>for <span class="_ _47"> </span>I/O.<span class="_ _1a3"> </span>Three</div><div class="t m0 x32 h26 y180a ff19 fsf fc0 sc0 ls0 ws0">functions <span class="_ _a"></span>—<span class="_ _9"></span><span class="ff1a">poll</span>,<span class="_ _45"> </span><span class="ff1a">pselect</span><span class="ls104a">,a<span class="_ _b"></span><span class="ls0">nd<span class="_ _45"> </span><span class="ff1a">select<span class="_ _3"></span></span><span class="ls9d">—a<span class="_ _1"></span><span class="ls0">llow <span class="_ _3"></span>us <span class="_ _3"></span>to <span class="_ _9"></span>perform <span class="_ _3"></span>I/O <span class="_ _9"></span>multiplexing.<span class="_ _16"> </span>On</span></span></span></span></div><div class="t m0 x32 h2a y180b ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turn from these functions, we ar<span class="ls44">et<span class="_ _4f"></span><span class="ls0">old which descriptors ar<span class="ls44">er<span class="_ _4f"></span><span class="ls0">eady for I/O.</span></span></span></span></span></div><div class="t m0 x76 h52 y3d78 ff19 fs2a fc0 sc0 ls0 ws0">POSIX <span class="_ _9"></span>speciﬁes <span class="_ _9"></span>that<span class="_ _47"> </span><span class="ff1a">&lt;sys/select.h&gt;<span class="_ _66"> </span></span>be <span class="_ _9"> </span>included <span class="_ _23"> </span>to <span class="_ _9"></span>pull <span class="_ _9"></span>the <span class="_ _9"></span>information <span class="_ _9"></span>for<span class="_ _47"> </span><span class="ff1a">select<span class="_ _66"> </span></span>into</div><div class="t m0 x76 h52 y3d79 ff19 fs2a fc0 sc0 ls0 ws0">your <span class="_ _42"> </span>program. <span class="_ _45"> </span>Older<span class="_ _35"> </span>systems <span class="_ _42"> </span>requir<span class="_ _0"></span><span class="ls104b">et<span class="_ _b"></span><span class="ls0">hat <span class="_ _23"> </span>you <span class="_"> </span>include<span class="_ _45"> </span><span class="ff1a">&lt;sys/types.h&gt;</span>,<span class="_ _45"> </span><span class="ff1a">&lt;sys/time.h&gt;</span>,</span></span></div><div class="t m0 x76 h52 y3d7a ff19 fs2a fc0 sc0 ls0 ws0">and<span class="_"> </span><span class="ff1a">&lt;unistd.h&gt;</span><span class="ls10f">.C<span class="_ _43"></span><span class="ls0">heck the<span class="_"> </span><span class="ff1a">select<span class="_ _53"> </span></span>manual page to see what your system supports.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
