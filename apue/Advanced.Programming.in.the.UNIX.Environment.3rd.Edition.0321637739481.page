<div id="pf1e1" class="pf w4 h1f" data-page-no="1e1"><div class="pc pc1e1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1e1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.6<span class="_ _293"> </span>Thread</div><div class="t m0 xd3 h24 y37ae ff19 fs0 fc0 sc0 ls0 ws0">-</div><div class="t m0 xd4 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Speciﬁc <span class="_"> </span>Data<span class="_ _1b"> </span><span class="ff18">447</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls45 ws0">ro<span class="ls0">utines,<span class="_ _47"> </span><span class="ff1a">errno<span class="_ _66"> </span></span>is <span class="_ _2"></span>redeﬁned <span class="_ _2"></span>as <span class="_ _2"></span>thread-private data.<span class="_ _61"> </span>Thus <span class="_ _2"></span>one <span class="_ _2"></span>thread <span class="_ _2"></span>making <span class="_ _2"></span>a <span class="_ _2"></span>call <span class="_ _2"></span>that</span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">sets<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>doesn’t affect the value of<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>for the other threads in the process.</div><div class="t m0 x3f h2a y131 ff19 fsf fc0 sc0 ls0 ws0">Recall <span class="_ _42"> </span>that <span class="_ _23"> </span>all <span class="_ _42"> </span>threads <span class="_ _42"> </span>in <span class="_ _23"> </span>a <span class="_ _42"> </span>process <span class="_ _42"> </span>have <span class="_ _23"> </span>access <span class="_ _42"> </span>to <span class="_ _42"> </span>the <span class="_ _42"> </span>entir<span class="ls3e8">ea<span class="_ _c"></span><span class="ls0">ddress <span class="_ _42"> </span>space <span class="_ _42"> </span>of <span class="_ _23"> </span>the</span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">process. <span class="_ _47"> </span>Other<span class="_ _45"> </span>than <span class="_ _23"></span>using <span class="_ _9"></span>registers, <span class="_ _3"></span>there<span class="_ _45"> </span>is<span class="_ _45"> </span>no<span class="_ _45"> </span>way <span class="_ _9"></span>for <span class="_ _9"></span>one <span class="_ _9"></span>thread <span class="_ _9"></span>to <span class="_ _9"></span>prevent <span class="_ _9"></span>another</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">from <span class="_ _42"> </span>accessing <span class="_ _53"> </span>its <span class="_ _e"> </span>data.<span class="_ _65"> </span>This <span class="_ _53"> </span>is <span class="_ _53"> </span>true <span class="_ _53"> </span>even <span class="_ _53"> </span>for <span class="_ _e"> </span>thread-speciﬁc <span class="_ _42"> </span>data.<span class="_ _65"> </span>Even <span class="_ _e"> </span>though <span class="_ _53"> </span>the</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">underlying <span class="_ _23"> </span>implementation <span class="_ _23"> </span>doesn’t <span class="_ _23"> </span>prevent <span class="_ _23"> </span>access, <span class="_ _23"> </span>the <span class="_ _42"> </span>functions <span class="_ _23"></span>provided <span class="_ _23"></span>to <span class="_ _23"></span>manage</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">thread-speciﬁc data <span class="_ _2"></span>promote data <span class="_ _2"></span>separation among <span class="_ _2"></span>threads by <span class="_ _2"></span>making <span class="_ _2"></span>it <span class="_ _2"></span>mor<span class="ls5c1">ed<span class="_ _4f"></span><span class="ls0">ifﬁcult</span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">for threads to gain access to thr<span class="_ _0"></span>ead-speciﬁc data fr<span class="_ _0"></span>om other threads.</div><div class="t m0 x3f h2b y137 ff19 fsf fc0 sc0 ls0 ws0">Befor<span class="lseed">ea<span class="_ _b"></span><span class="ls0">llocating <span class="_ _3"></span>thread-speciﬁc <span class="_ _9"></span>data, <span class="_ _9"></span>we <span class="_ _9"></span>need <span class="_ _9"></span>to <span class="_ _9"></span>create <span class="_ _9"></span>a<span class="_ _45"> </span><span class="ff1b">key<span class="_ _45"> </span></span>to <span class="_ _3"></span>associate <span class="_ _9"></span>with <span class="_ _23"></span>the</span></span></div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">data. <span class="_ _51"> </span>The<span class="_ _51"> </span>key <span class="_ _35"> </span>will <span class="_ _35"> </span>be <span class="_ _35"> </span>used <span class="_ _35"> </span>to <span class="_ _35"> </span>gain <span class="_ _35"> </span>access <span class="_ _35"> </span>to <span class="_ _35"> </span>the <span class="_ _35"> </span>thread-speciﬁc <span class="_ _35"> </span>data.<span class="_ _98"> </span><span class="ls5f">We <span class="_ _16"> </span>u<span class="_ _9"></span></span>se</div><div class="t m0 x32 h26 y139 ff1a fsf fc0 sc0 ls0 ws0">pthread_key_create<span class="_ _80"> </span><span class="ff19">to create such a key<span class="_ _4"></span>.</span></div><div class="t m0 xb8 h57 y37af ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 xb8 h57 y37b0 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_key_create(pthread_key_t *<span class="ff1b">keyp</span><span class="ls15c">,v<span class="_ _1d"></span><span class="ls0">oid (*<span class="ff1b">destructor</span>)(void *));</span></span></div><div class="t m0 xdb h5f y37b1 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h4a y37b2 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _2"></span>key <span class="_ _3"></span>created <span class="_ _2"></span>is <span class="_ _2"></span>stored <span class="_ _2"></span>in <span class="_ _3"></span>the <span class="_ _3"></span>memory <span class="_ _2"></span>location <span class="_ _3"></span>pointed <span class="_ _2"></span>to <span class="_ _3"></span>by<span class="_ _47"> </span><span class="ff1b">keyp</span><span class="lseee">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>same <span class="_ _3"></span>key <span class="_ _2"></span>can</span></span></div><div class="t m0 x32 h49 y37b3 ff19 fs26 fc0 sc0 ls0 ws0">be <span class="_ _45"> </span>used <span class="_ _45"> </span>by <span class="_ _45"> </span>all <span class="_ _45"> </span>threads <span class="_ _47"> </span>in <span class="_ _45"> </span>the <span class="_ _45"> </span>process, <span class="_ _45"> </span>but <span class="_ _45"> </span>each <span class="_ _45"> </span>thread <span class="_ _45"> </span>will <span class="_ _45"> </span>associate <span class="_ _45"> </span>a <span class="_ _45"> </span>dif<span class="_ _0"></span>ferent</div><div class="t m0 x32 h49 y37b4 ff19 fs26 fc0 sc0 ls0 ws0">thread-speciﬁc data <span class="_ _2"></span>address <span class="_ _2"></span>with <span class="_ _2"></span>the <span class="_ _2"></span>key<span class="_ _4"></span><span class="lseef">.W<span class="_ _5b"></span><span class="ls0">hen <span class="_ _3"></span>the <span class="_ _2"></span>key <span class="_ _2"></span>is <span class="_ _2"></span>created, the <span class="_ _3"></span>data <span class="_ _2"></span>address for</span></span></div><div class="t m0 x32 h49 y37b5 ff19 fs26 fc0 sc0 ls0 ws0">each thread is set to a null value.</div><div class="t m0 x3f h4d y37b6 ff19 fs26 fc0 sc0 ls0 ws0">In <span class="_ _44"> </span>addition <span class="_ _35"> </span>to <span class="_ _44"> </span>creating <span class="_ _44"> </span>a <span class="_ _35"> </span>key<span class="_ _6"></span>,<span class="_ _54"> </span><span class="ff1a">pthread_key_create<span class="_ _54"> </span></span>associates <span class="_ _44"> </span>an <span class="_ _44"> </span>optional</div><div class="t m0 x32 h49 y37b7 ff19 fs26 fc0 sc0 ls0 ws0">destructor function with <span class="_ _2"></span>the key<span class="_ _6"></span><span class="ls91b">.W<span class="_ _5b"></span><span class="ls0">hen <span class="_ _2"></span>the thread exits, <span class="_ _2"></span>if the <span class="_ _2"></span>data address has <span class="_ _2"></span>been set</span></span></div><div class="t m0 x32 h49 y37b8 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _9"></span>a <span class="_ _9"></span>non-null <span class="_ _9"></span>value, <span class="_ _23"></span>the <span class="_ _9"></span>destructor <span class="_ _3"></span>function <span class="_ _23"></span>is <span class="_ _9"></span>called <span class="_ _9"></span>with <span class="_ _9"></span>the <span class="_ _9"></span>data <span class="_ _9"></span>address <span class="_ _9"></span>as <span class="_ _9"></span>the <span class="_ _23"></span>only</div><div class="t m0 x32 h4a y37b9 ff19 fs26 fc0 sc0 ls0 ws0">argument. <span class="_ _45"> </span>If<span class="_ _35"> </span><span class="ff1b">destructor<span class="_ _35"> </span></span>is <span class="_ _23"> </span>null, <span class="_ _42"> </span>then <span class="_ _23"></span>no <span class="_ _23"> </span>destructor <span class="_ _23"> </span>function <span class="_ _23"> </span>is <span class="_ _42"> </span>associated <span class="_ _23"></span>with <span class="_ _23"></span>the <span class="_ _23"> </span>key<span class="_ _6"></span>.</div><div class="t m0 x32 h4d y37ba ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _9"></span>the <span class="_ _23"></span>thr<span class="_ _0"></span>ead <span class="_ _9"></span>exits <span class="_ _23"></span>normally<span class="_ _4"></span><span class="lsef0">,e<span class="_ _b"></span><span class="ls0">ither <span class="_ _9"></span>by <span class="_ _23"></span>calling<span class="_ _45"> </span><span class="ff1a">pthread_exit<span class="_ _45"> </span></span>or <span class="_ _23"></span>by <span class="_ _9"></span>returning, <span class="_ _9"></span>the</span></span></div><div class="t m0 x32 h49 y37bb ff19 fs26 fc0 sc0 ls0 ws0">destructor <span class="_ _42"> </span>is <span class="_ _42"> </span>called.<span class="_ _54"> </span>Also, <span class="_ _42"> </span>if <span class="_ _42"> </span>the <span class="_ _42"> </span>thread <span class="_ _23"> </span>is <span class="_ _53"> </span>canceled, <span class="_ _42"> </span>the <span class="_ _42"> </span>destructor <span class="_ _42"> </span>is <span class="_ _42"> </span>called, <span class="_ _42"> </span>but <span class="_ _42"> </span>only</div><div class="t m0 x32 h4d y37bc ff19 fs26 fc0 sc0 ls0 ws0">after <span class="_ _9"></span>the <span class="_ _23"></span>last <span class="_ _9"></span>cleanup <span class="_ _23"></span>handler <span class="_ _9"></span>returns. <span class="_ _45"> </span>But<span class="_ _35"> </span>if <span class="_ _9"></span>the <span class="_ _23"></span>thread <span class="_ _9"></span>calls<span class="_ _45"> </span><span class="ff1a">exit</span>,<span class="_ _35"> </span><span class="ff1a">_exit</span>,<span class="_ _45"> </span><span class="ff1a">_Exit</span><span class="lsef1">,o<span class="_ _b"></span><span class="ls0">r</span></span></div><div class="t m0 x32 h4d y37bd ff1a fs26 fc0 sc0 ls0 ws0">abort<span class="ff19">,<span class="_"> </span>or<span class="_"> </span>otherwise exits abnormally<span class="_ _4"></span><span class="lsd3">,t<span class="_ _5"></span><span class="ls0">he destructor is not called.</span></span></span></div><div class="t m0 x3f h4d y37be ff19 fs26 fc0 sc0 ls0 ws0">Threads <span class="_ _53"> </span>typically <span class="_"> </span>use<span class="_ _44"> </span><span class="ff1a">malloc<span class="_ _59"> </span></span>to <span class="_ _e"> </span>allocate <span class="_"> </span>memory <span class="_ _53"> </span>for <span class="_"> </span>their <span class="_ _53"> </span>thread-speciﬁc <span class="_ _53"> </span>data.</div><div class="t m0 x32 h49 y37bf ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>destructor <span class="_"> </span>function <span class="_ _53"> </span>usually <span class="_"> </span>frees <span class="_ _53"> </span>the <span class="_"> </span>memory <span class="_ _e"> </span>that <span class="_"> </span>was <span class="_ _e"> </span>allocated.<span class="_ _48"> </span>If <span class="_"> </span>the <span class="_ _e"> </span>thread</div><div class="t m0 x32 h49 y37c0 ff19 fs26 fc0 sc0 ls0 ws0">exited <span class="_ _53"> </span>without <span class="_ _53"> </span>freeing <span class="_ _53"> </span>the <span class="_ _53"> </span>memory<span class="_ _4"></span><span class="lsef2">,t<span class="_ _c"></span><span class="ls0">hen <span class="_ _e"> </span>the <span class="_ _53"> </span>memory <span class="_ _53"> </span>would <span class="_ _53"> </span>be <span class="_ _e"> </span>lost<span class="_ _9"></span><span class="ls161">—l<span class="_ _6"></span><span class="ls0">eaked <span class="_ _53"> </span>by <span class="_ _e"> </span>the</span></span></span></span></div><div class="t m0 x32 h49 y37c1 ff19 fs26 fc0 sc0 ls0 ws0">process.</div><div class="t m0 x3f h49 y37c2 ff19 fs26 fc0 sc0 lsef3 ws0">At<span class="_ _43"></span><span class="ls0">hread <span class="_ _23"></span>can <span class="_ _23"></span>allocate <span class="_ _23"></span>multiple <span class="_ _23"></span>keys <span class="_ _23"></span>for <span class="_ _9"></span>thread-speciﬁc <span class="_ _23"></span>data.<span class="_ _51"> </span>Each <span class="_ _23"></span>key <span class="_ _23"></span>can <span class="_ _9"></span>have <span class="_ _23"> </span>a</span></div><div class="t m0 x32 h49 y37c3 ff19 fs26 fc0 sc0 ls0 ws0">destructor <span class="_ _3"></span>associated <span class="_ _3"></span>with <span class="_ _9"></span>it.<span class="_ _16"> </span>Ther<span class="lsef4">ec<span class="_ _b"></span><span class="ls0">an <span class="_ _9"></span>be <span class="_ _3"></span>a <span class="_ _9"></span>differ<span class="_ _0"></span>ent <span class="_ _3"></span>destructor <span class="_ _3"></span>function <span class="_ _9"></span>for <span class="_ _3"></span>each <span class="_ _9"></span>key<span class="_ _4"></span>,</span></span></div><div class="t m0 x32 h49 y37c4 ff19 fs26 fc0 sc0 ls0 ws0">or all <span class="_ _2"></span>of the <span class="_ _2"></span>keys can <span class="_ _2"></span>use the <span class="_ _2"></span>same function.<span class="_ _61"> </span>Each operating <span class="_ _2"></span>system implementation <span class="_ _2"></span>can</div><div class="t m0 x32 h4d y37c5 ff19 fs26 fc0 sc0 ls0 ws0">place <span class="_ _3"></span>a <span class="_ _9"></span>limit <span class="_ _9"></span>on <span class="_ _3"></span>the <span class="_ _9"></span>number <span class="_ _3"></span>of <span class="_ _9"></span>keys <span class="_ _9"></span>a <span class="_ _3"></span>process <span class="_ _3"></span>can <span class="_ _9"></span>allocate <span class="_ _9"></span>(recall<span class="_ _47"> </span><span class="ff1a">PTHREAD_KEYS_MAX</span></div><div class="t m0 x32 h49 y37c6 ff19 fs26 fc0 sc0 ls0 ws0">from Figur<span class="_ _0"></span><span class="lsd3">e1<span class="_ _d"></span><span class="ls0">2.1).</span></span></div><div class="t m0 x3f h49 y37c7 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _53"> </span>a <span class="_ _e"> </span>thread <span class="_ _53"> </span>exits, <span class="_ _e"> </span>the <span class="_ _e"> </span>destructors <span class="_ _53"> </span>for <span class="_ _e"> </span>its <span class="_ _e"> </span>thread-speciﬁc <span class="_ _53"> </span>data <span class="_ _e"> </span>ar<span class="lsef5">ec<span class="_ _55"></span><span class="ls0">alled <span class="_ _e"> </span>in <span class="_ _53"> </span>an</span></span></div><div class="t m0 x32 h49 y37c8 ff19 fs26 fc0 sc0 ls0 ws0">implementation-deﬁned <span class="_ _9"></span>order<span class="_ _6"></span><span class="lsef6">.I<span class="_ _62"></span><span class="ls0">t<span class="_ _45"> </span>is<span class="_ _45"> </span>possible <span class="_ _9"></span>for <span class="_ _9"></span>the <span class="_ _9"></span>destructor <span class="_ _9"></span>to <span class="_ _9"></span>call <span class="_ _9"></span>another <span class="_ _9"></span>function</span></span></div><div class="t m0 x32 h49 y37c9 ff19 fs26 fc0 sc0 ls0 ws0">that <span class="_ _2"></span>creates <span class="_ _3"></span>new <span class="_ _3"></span>thread-speciﬁc <span class="_ _2"></span>data <span class="_ _3"></span>and <span class="_ _3"></span>associate <span class="_ _2"></span>it <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _3"></span>key<span class="_ _6"></span><span class="lsef7">.A<span class="_ _1d"></span><span class="ls0">fter <span class="_ _3"></span>all <span class="_ _3"></span>destructors</span></span></div><div class="t m0 x32 h49 y37ca ff19 fs26 fc0 sc0 ls0 ws0">ar<span class="lsef8">ec<span class="_ _5b"></span><span class="ls0">alled, <span class="_"> </span>the <span class="_"> </span>system <span class="_"> </span>will <span class="_"> </span>check <span class="_"> </span>whether <span class="_"> </span>any <span class="_"> </span>non-null <span class="_ _e"> </span>thread-speciﬁc <span class="_"> </span>values <span class="_"> </span>wer<span class="_ _0"></span>e</span></span></div><div class="t m0 x32 h49 y37cb ff19 fs26 fc0 sc0 ls0 ws0">associated <span class="_ _2"></span>with <span class="_ _2"></span>the <span class="_ _2"></span>keys <span class="_ _2"></span>and, <span class="_ _3"></span>if <span class="_ _2"></span>so, <span class="_ _2"></span>call <span class="_ _2"></span>the <span class="_ _2"></span>destructors <span class="_ _2"></span>again.<span class="_ _61"> </span>This <span class="_ _3"></span>process repeats <span class="_ _2"></span>until</div><div class="t m0 x32 h49 y37cc ff19 fs26 fc0 sc0 ls0 ws0">either <span class="_ _42"> </span>all <span class="_ _42"> </span>keys <span class="_ _42"> </span>for <span class="_ _53"> </span>the <span class="_ _42"> </span>thread <span class="_ _42"> </span>have <span class="_ _42"> </span>null <span class="_ _42"> </span>thread-speciﬁc <span class="_ _42"> </span>data <span class="_ _42"> </span>values <span class="_ _42"> </span>or <span class="_ _42"> </span>a <span class="_ _42"> </span>maximum <span class="_ _53"> </span>of</div><div class="t m0 x32 h4d y37cd ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_DESTRUCTOR_ITERATIONS<span class="_ _80"> </span><span class="ff19">(Figur<span class="lsd3">e1<span class="_ _d"></span><span class="ls0">2.1) attempts have been made.</span></span></span></div><div class="t m0 x3f h49 y37ce ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _45"> </span>c<span class="_ _9"></span><span class="ls0">an <span class="_ _23"> </span>break <span class="_ _42"> </span>the <span class="_ _23"> </span>association <span class="_ _42"> </span>of <span class="_ _42"> </span>a <span class="_ _23"> </span>key <span class="_ _42"> </span>with <span class="_ _42"> </span>the <span class="_ _42"> </span>thr<span class="_ _0"></span>ead-speciﬁc <span class="_ _42"> </span>data <span class="_ _23"> </span>values <span class="_ _42"> </span>for <span class="_ _42"> </span>all</span></div><div class="t m0 x32 h4d y37cf ff19 fs26 fc0 sc0 ls0 ws0">threads by calling<span class="_"> </span><span class="ff1a">pthread_key_delete</span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
