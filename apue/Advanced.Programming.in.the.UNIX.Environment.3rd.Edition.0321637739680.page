<div id="pf2a8" class="pf w4 h1f" data-page-no="2a8"><div class="pc pc2a8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2a8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">646<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h57 y2012 ff1a fs2d fc0 sc0 ls0 ws0">/* size of control buffer to send/recv one file descriptor */</div><div class="t m0 x32 h57 y2013 ff1a fs2d fc0 sc0 ls0 ws0">#define CONTROLLEN<span class="_ _d9"> </span>CMSG_LEN(sizeof(int))</div><div class="t m0 x32 h57 y27e5 ff1a fs2d fc0 sc0 ls0 ws0">static struct cmsghdr<span class="_ _68"> </span>*cmptr = NULL;<span class="_ _3a"> </span>/* malloc’ed first time */</div><div class="t m0 x32 h57 y4c77 ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y348d ff1a fs2d fc0 sc0 ls15c ws0">*P<span class="_ _1d"></span><span class="ls0">ass a file descriptor to another process.</span></div><div class="t m0 x140 h57 y4c78 ff1a fs2d fc0 sc0 ls0 ws0">*<span class="_"> </span>If<span class="_"> </span>fd&lt;0, then -fd is sent back instead as the error status.</div><div class="t m0 x140 h57 y3b0a ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y4c79 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y4c7a ff1a fs2d fc0 sc0 ls0 ws0">send_fd(int fd, int fd_to_send)</div><div class="t m0 x32 h57 y4c7b ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y4c7c ff1a fs2d fc0 sc0 ls0 ws0">struct iovec<span class="_ _15"> </span>iov[1];</div><div class="t m0 x8a h57 y2019 ff1a fs2d fc0 sc0 ls0 ws0">struct msghdr<span class="_ _68"> </span>msg;</div><div class="t m0 x8a h57 y201a ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>buf[2];<span class="_"> </span>/* send_fd()/recv_fd() 2-byte protocol */</div><div class="t m0 x8a h57 y3cf ff1a fs2d fc0 sc0 ls0 ws0">iov[0].iov_base = buf;</div><div class="t m0 x8a h57 y3d0 ff1a fs2d fc0 sc0 ls0 ws0">iov[0].iov_len <span class="_"> </span>=<span class="_"> </span>2;</div><div class="t m0 x8a h57 y3d1 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_iov <span class="_ _15"> </span>=<span class="_"> </span>iov;</div><div class="t m0 x8a h57 y1cca ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_iovlen <span class="_"> </span>=<span class="_"> </span>1;</div><div class="t m0 x8a h57 y1ccb ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_name <span class="_ _68"> </span>=<span class="_"> </span>NULL;</div><div class="t m0 x8a h57 y2315 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_namelen = 0;</div><div class="t m0 x8a h57 y4c7d ff1a fs2d fc0 sc0 ls0 ws0">if (fd_to_send &lt; 0) {</div><div class="t m0 x9d h57 y4c7e ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control <span class="_ _68"> </span>=<span class="_"> </span>NULL;</div><div class="t m0 x9d h57 y4c7f ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = 0;</div><div class="t m0 x9d h57 y4c80 ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = -fd_to_send;<span class="_ _68"> </span>/* nonzero status means error */</div><div class="t m0 x9d h57 y2025 ff1a fs2d fc0 sc0 ls0 ws0">if (buf[1] == 0)</div><div class="t m0 x1f h57 y2026 ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = 1; /* -256, etc. would screw up protocol */</div><div class="t m0 x8a h57 y2027 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x9d h57 y2028 ff1a fs2d fc0 sc0 ls0 ws0">if (cmptr == NULL &amp;&amp; (cmptr = malloc(CONTROLLEN)) == NULL)</div><div class="t m0 x1f h57 y2029 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y202a ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_level <span class="_"> </span>=<span class="_"> </span>SOL_SOCKET;</div><div class="t m0 x9d h57 y4c81 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_type <span class="_ _d9"> </span>=<span class="_"> </span>SCM_RIGHTS;</div><div class="t m0 x9d h57 y4c82 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_len <span class="_ _68"> </span>=<span class="_"> </span>CONTROLLEN;</div><div class="t m0 x9d h57 y4c83 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control <span class="_ _68"> </span>=<span class="_"> </span>cmptr;</div><div class="t m0 x9d h57 y4c84 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = CONTROLLEN;</div><div class="t m0 x9d h57 y4c85 ff1a fs2d fc0 sc0 ls0 ws0">*(int *)CMSG_DATA(cmptr) = fd_to_send;<span class="_ _189"> </span>/* the fd to pass */</div><div class="t m0 x9d h57 y4c86 ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = 0;<span class="_ _8a"> </span>/* zero status means OK */</div><div class="t m0 x8a h57 y4c87 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y4c88 ff1a fs2d fc0 sc0 ls0 ws0">buf[0] = 0;<span class="_ _176"> </span>/* null byte flag to recv_fd() */</div><div class="t m0 x8a h57 y4c89 ff1a fs2d fc0 sc0 ls0 ws0">if (sendmsg(fd, &amp;msg, 0) != 2)</div><div class="t m0 x9d h57 y4c8a ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h57 y4c8b ff1a fs2d fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x32 h57 y4c8c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x10c h2d y4c8d ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.13<span class="_ _5a"> </span><span class="ff19">Sending a ﬁle descriptor over a UNIX domain socket</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
