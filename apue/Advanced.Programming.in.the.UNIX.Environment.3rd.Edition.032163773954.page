<div id="pf36" class="pf w4 h1f" data-page-no="36"><div class="pc pc36 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg36.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">20<span class="_ _1b"> </span><span class="ff19">UNIX <span class="_"> </span>System <span class="_"> </span>Overview<span class="_ _85"> </span>Chapter <span class="_"> </span>1</span></div><div class="t m0 x35 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">1.10 <span class="_ _93"> </span>Time<span class="_ _54"> </span><span class="ls1b9">Va<span class="_ _3"></span></span>lues</div><div class="t m0 x32 h2a y4de ff19 fsf fc0 sc0 ls0 ws0">Historically<span class="_ _4"></span><span class="ls44">,U<span class="_ _5"></span><span class="ls0">NIX systems have maintained two differ<span class="_ _1"></span>ent time values:</span></span></div><div class="t m0 x3f h2a y4df ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Calendar<span class="_ _61"> </span>time. <span class="_ _61"> </span>This<span class="_ _61"> </span>value <span class="_ _66"> </span>counts <span class="_ _47"> </span>the <span class="_ _66"> </span>number <span class="_ _47"> </span>of <span class="_ _66"> </span>seconds <span class="_ _47"> </span>since <span class="_ _66"> </span>the <span class="_ _47"> </span>Epoch:</div><div class="t m0 x41 h2a y4e0 ff19 fsf fc0 sc0 ls0 ws0">00:00:00 <span class="_ _42"> </span>January <span class="_ _23"> </span>1, <span class="_ _42"> </span>1970, <span class="_ _42"> </span>Coordinated <span class="_ _23"> </span>Universal <span class="_ _42"> </span>T<span class="_ _1"></span>ime</div><div class="t m0 xba h2a y4e1 ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 xbb h2a y4e0 ff19 fsf fc0 sc0 ls0 ws0">UTC</div><div class="t m0 xbc h2a y4e1 ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 xbd h2a y4e0 ff19 fsf fc0 sc0 ls1ba ws0">.(<span class="_ _52"></span><span class="ls0">Older <span class="_ _42"> </span>manuals</span></div><div class="t m0 x41 h2a y4e2 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">fer <span class="_ _23"></span>to <span class="_ _23"></span>UTC <span class="_ _9"></span>as <span class="_ _23"></span>Greenwich <span class="_ _9"></span>Mean <span class="_ _23"></span>T<span class="_ _1"></span>ime.) <span class="_ _45"> </span>These<span class="_ _35"> </span>time <span class="_ _9"></span>values <span class="_ _23"></span>ar<span class="ls1bb">eu<span class="_ _43"></span><span class="ls0">sed <span class="_ _23"></span>to <span class="_ _9"></span>record</span></span></span></div><div class="t m0 x41 h2a y4e3 ff19 fsf fc0 sc0 ls0 ws0">the time when a ﬁle was last modiﬁed, for example.</div><div class="t m0 x41 h26 y4e4 ff19 fsf fc0 sc0 ls0 ws0">The primitive system data type<span class="_"> </span><span class="ff1a">time_t<span class="_ _80"> </span></span>holds these time values.</div><div class="t m0 x3f h2a y4e5 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Process <span class="_ _9"></span>time.<span class="_ _5a"> </span>This <span class="_ _23"></span>is <span class="_ _9"></span>also <span class="_ _23"></span>called <span class="_ _9"></span>CPU <span class="_ _23"></span>time <span class="_ _9"></span>and <span class="_ _23"></span>measures <span class="_ _9"></span>the <span class="_ _9"></span>central <span class="_ _23"></span>processor</div><div class="t m0 x41 h2a y4e6 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">sources <span class="_ _53"> </span>used <span class="_ _e"> </span>by <span class="_ _53"> </span>a <span class="_ _e"> </span>process. <span class="_ _4b"> </span>Process <span class="_ _42"> </span>time <span class="_ _e"> </span>is <span class="_ _e"> </span>measured <span class="_ _53"> </span>in <span class="_ _53"> </span>clock <span class="_ _e"> </span>ticks, <span class="_ _e"> </span>which</span></div><div class="t m0 x41 h2a y4e7 ff19 fsf fc0 sc0 ls0 ws0">have historically been 50, 60, or 100 ticks per second.</div><div class="t m0 x41 h26 y4e8 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _3"></span>primitive <span class="_ _9"></span>system <span class="_ _3"></span>data <span class="_ _9"></span>type<span class="_ _45"> </span><span class="ff1a">clock_t<span class="_ _47"> </span></span>holds <span class="_ _9"></span>these <span class="_ _3"></span>time <span class="_ _9"></span>values.<span class="_ _16"> </span>(W<span class="_ _6"></span>e’ll <span class="_ _9"></span>show</div><div class="t m0 x41 h26 y4e9 ff19 fsf fc0 sc0 ls0 ws0">how <span class="_ _3"></span>to <span class="_ _3"></span>obtain <span class="_ _3"></span>the <span class="_ _3"></span>number <span class="_ _3"></span>of <span class="_ _3"></span>clock <span class="_ _3"></span>ticks <span class="_ _3"></span>per <span class="_ _3"></span>second <span class="_ _3"></span>with <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">sysconf<span class="_ _47"> </span></span>function</div><div class="t m0 x41 h2a y4ea ff19 fsf fc0 sc0 ls0 ws0">in Section 2.5.4.)</div><div class="t m0 x3f h2a y4eb ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _9"></span>we <span class="_ _9"></span>measur<span class="ls1bc">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>execution <span class="_ _9"></span>time <span class="_ _23"></span>of <span class="_ _9"></span>a <span class="_ _9"></span>process, <span class="_ _9"></span>as <span class="_ _9"></span>in <span class="_ _23"></span>Section <span class="_ _9"></span>3.9, <span class="_ _9"></span>we’ll <span class="_ _9"></span>see <span class="_ _23"></span>that</span></span></div><div class="t m0 x32 h2a y4ec ff19 fsf fc0 sc0 ls0 ws0">the UNIX System maintains three values for a pr<span class="_ _0"></span>ocess:</div><div class="t m0 x3f h2a y4ed ff19 fsf fc0 sc0 ls1bd ws0">•C<span class="_ _49"></span><span class="ls0">lock time</span></div><div class="t m0 x3f h2a y4ee ff19 fsf fc0 sc0 ls1bd ws0">•U<span class="_ _49"></span><span class="ls0">ser CPU time</span></div><div class="t m0 x3f h2a y4ef ff19 fsf fc0 sc0 ls1bd ws0">•S<span class="_ _49"></span><span class="ls0">ystem CPU time</span></div><div class="t m0 x32 h2b y4f0 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _2"></span>clock <span class="_ _3"></span>time, <span class="_ _2"></span>sometimes <span class="_ _3"></span>called<span class="_ _47"> </span><span class="ff1b">wall <span class="_ _2"></span>clock <span class="_ _3"></span>time</span>,<span class="_ _47"> </span>is<span class="_ _66"> </span>the <span class="_ _3"></span>amount <span class="_ _2"></span>of <span class="_ _3"></span>time <span class="_ _2"></span>the <span class="_ _3"></span>process <span class="_ _2"></span>takes</div><div class="t m0 x32 h2a y4f1 ff19 fsf fc0 sc0 ls0 ws0">to run, and its value depends on the number of other processes being run on the system.</div><div class="t m0 x32 h2a y4f2 ff19 fsf fc0 sc0 ls0 ws0">Whenever we <span class="_ _2"></span>report the clock time, <span class="_ _2"></span>the measurements ar<span class="ls1be">em<span class="_ _4f"></span><span class="ls0">ade <span class="_ _2"></span>with no <span class="_ _2"></span>other activities</span></span></div><div class="t m0 x32 h2a y4f3 ff19 fsf fc0 sc0 ls0 ws0">on the system.</div><div class="t m0 x3f h2a y4f4 ff19 fsf fc0 sc0 ls0 ws0">The user CPU time <span class="_ _2"></span>is the CPU <span class="_ _2"></span>time attributed to <span class="_ _2"></span>user instructions. <span class="_"> </span>The<span class="_"> </span>system <span class="_ _2"></span>CPU</div><div class="t m0 x32 h2a y4f5 ff19 fsf fc0 sc0 ls0 ws0">time <span class="_ _3"></span>is <span class="_ _3"></span>the <span class="_ _3"></span>CPU <span class="_ _3"></span>time <span class="_ _3"></span>attributed <span class="_ _3"></span>to <span class="_ _3"></span>the <span class="_ _3"></span>kernel <span class="_ _3"></span>when <span class="_ _3"></span>it <span class="_ _3"></span>executes <span class="_ _9"></span>on <span class="_ _2"></span>behalf <span class="_ _9"></span>of <span class="_ _2"></span>the <span class="_ _9"></span>pr<span class="_ _0"></span>ocess.</div><div class="t m0 x32 h26 y4f6 ff19 fsf fc0 sc0 ls0 ws0">For example, <span class="_ _2"></span>whenever a <span class="_ _2"></span>process executes a <span class="_ _2"></span>system service, <span class="_ _2"></span>such as<span class="_ _66"> </span><span class="ff1a">read<span class="_ _66"> </span></span>or<span class="_"> </span><span class="ff1a">write</span><span class="ls1bf">,t<span class="_ _d"></span><span class="ls0">he</span></span></div><div class="t m0 x32 h2a y4f7 ff19 fsf fc0 sc0 ls0 ws0">time <span class="_ _9"></span>spent <span class="_ _9"></span>within <span class="_ _23"></span>the <span class="_ _9"></span>kernel <span class="_ _23"></span>performing <span class="_ _9"></span>that <span class="_ _9"></span>system <span class="_ _23"></span>service <span class="_ _9"></span>is <span class="_ _9"></span>charged <span class="_ _9"></span>to <span class="_ _9"></span>the <span class="_ _23"></span>process.</div><div class="t m0 x32 h2b y4f8 ff19 fsf fc0 sc0 ls0 ws0">The sum of user CPU time and system CPU time is often called the<span class="_"> </span><span class="ff1b">CPU time</span>.</div><div class="t m0 x3f h2a y4f9 ff19 fsf fc0 sc0 ls0 ws0">It <span class="_ _42"> </span>is <span class="_ _53"> </span>easy <span class="_ _53"> </span>to <span class="_ _53"> </span>measur<span class="ls1c0">et<span class="_ _c"></span><span class="ls0">he <span class="_ _42"> </span>clock <span class="_ _53"> </span>time, <span class="_ _53"> </span>user <span class="_ _53"> </span>time, <span class="_ _53"> </span>and <span class="_ _53"> </span>system <span class="_ _42"> </span>time <span class="_ _53"> </span>of <span class="_ _53"> </span>any <span class="_ _53"> </span>process:</span></span></div><div class="t m0 x32 h26 y4fa ff19 fsf fc0 sc0 ls0 ws0">simply <span class="_ _3"></span>execute <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">time</span></div><div class="t m0 xbe h2a y4fb ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 xbf h2a y4fa ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 xa7 h2a y4fb ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 xc0 h26 y4fa ff19 fsf fc0 sc0 ls0 ws0">command, <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _3"></span>argument <span class="_ _2"></span>to <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1a">time<span class="_ _47"> </span></span>command <span class="_ _3"></span>being</div><div class="t m0 x32 h2a y4fc ff19 fsf fc0 sc0 ls0 ws0">the command we want to measure. <span class="_"> </span>For<span class="_"> </span>example:</div><div class="t m0 x3f h57 y4fd ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">cd /usr/include</span></div><div class="t m0 x3f h57 y4fe ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">time -p grep _POSIX_SOURCE */*.h &gt; /dev/null</span></div><div class="t m0 x3f h57 y4ff ff1a fs2d fc0 sc0 ls0 ws0">real <span class="_ _68"> </span>0m0.81s</div><div class="t m0 x3f h57 y500 ff1a fs2d fc0 sc0 ls0 ws0">user <span class="_ _68"> </span>0m0.11s</div><div class="t m0 x3f h57 y501 ff1a fs2d fc0 sc0 ls0 ws0">sys <span class="_ _15"> </span>0m0.07s</div><div class="t m0 x32 h26 y502 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>output <span class="_ _3"></span>format <span class="_ _9"></span>from <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">time<span class="_ _47"> </span></span>command <span class="_ _9"></span>depends <span class="_ _9"></span>on <span class="_ _9"></span>the <span class="_ _9"></span>shell <span class="_ _3"></span>being <span class="_ _9"></span>used, <span class="_ _9"></span>because</div><div class="t m0 x32 h26 y503 ff19 fsf fc0 sc0 ls0 ws0">some <span class="_ _2"></span>shells <span class="_ _2"></span>don’t <span class="_ _2"></span>run<span class="_"> </span><span class="ff1a">/usr/bin/time</span><span class="ls1c1">,b<span class="_ _d"></span><span class="ls0">ut <span class="_ _2"></span>instead <span class="_ _2"></span>have <span class="_ _2"></span>a <span class="_ _2"></span>separate <span class="_ _2"></span>built-in <span class="_ _2"></span>function <span class="_ _2"></span>to</span></span></div><div class="t m0 x32 h2a y504 ff19 fsf fc0 sc0 ls0 ws0">measur<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he time it takes commands to run.</span></span></div><div class="t m0 x3f h2a y505 ff19 fsf fc0 sc0 ls0 ws0">In <span class="_ _23"></span>Section <span class="_ _23"></span>8.17, <span class="_ _23"></span>we’ll <span class="_ _23"></span>see <span class="_ _23"></span>how <span class="_ _23"> </span>to <span class="_ _23"> </span>obtain <span class="_ _23"> </span>these <span class="_ _23"> </span>three <span class="_ _23"></span>times <span class="_ _23"></span>from <span class="_ _9"></span>a <span class="_ _23"> </span>running <span class="_ _23"> </span>process.</div><div class="t m0 x32 h2a y506 ff19 fsf fc0 sc0 ls0 ws0">The general topic of times and dates is covered in Section 6.10.</div><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:108.647804px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
