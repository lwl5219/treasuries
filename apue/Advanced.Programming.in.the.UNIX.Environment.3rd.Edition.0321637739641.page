<div id="pf281" class="pf w4 h1f" data-page-no="281"><div class="pc pc281 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg281.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.4<span class="_ _1f"> </span>Connection <span class="_"> </span>Establishment<span class="_ _1b"> </span><span class="ff18">607</span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">There<span class="_ _44"> </span>is<span class="_ _59"> </span>a<span class="_ _4b"> </span>p<span class="ls45">ro<span class="_ _2"></span></span>blem <span class="_ _e"> </span>with <span class="_ _e"> </span>the <span class="_ _e"> </span>code <span class="_ _e"> </span>shown <span class="_ _e"> </span>in <span class="_ _e"> </span>Figur<span class="ls256">e1<span class="_ _55"></span><span class="ls0">6.10: <span class="_ _e"> </span>it <span class="_ _e"> </span>isn’t <span class="_ _e"> </span>portable.<span class="_ _48"> </span>This</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">technique <span class="_ _23"></span>works <span class="_ _9"></span>on <span class="_ _23"> </span>Linux <span class="_ _23"></span>and <span class="_ _23"></span>Solaris, <span class="_ _23"></span>but <span class="_ _9"></span>doesn’t <span class="_ _23"> </span>work <span class="_ _23"></span>as <span class="_ _23"></span>expected <span class="_ _9"></span>on <span class="_ _23"> </span>FreeBSD <span class="_ _23"></span>and</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">Mac <span class="_"> </span>OS <span class="_"> </span>X.<span class="_ _48"> </span>If <span class="_"> </span>the <span class="_"> </span>ﬁrst <span class="_"> </span>connection <span class="_ _e"> </span>attempt <span class="_"> </span>fails, <span class="_"> </span>BSD</div><div class="t m0 x104 h2a y48ae ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x181 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">based <span class="_"> </span>socket <span class="_"> </span>implementations</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">continue <span class="_ _2"></span>to <span class="_ _2"></span>fail <span class="_ _2"></span>successive <span class="_ _2"></span>connection <span class="_ _2"></span>attempts <span class="_ _2"></span>when <span class="_ _2"></span>the <span class="_ _2"></span>same <span class="_ _2"></span>socket <span class="_ _2"></span>descriptor <span class="_ _2"></span>is <span class="_ _2"></span>used</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">with <span class="_ _9"></span>TCP<span class="_ _4"></span><span class="ls1348">.T<span class="_ _62"></span><span class="ls0">his <span class="_ _9"></span>is <span class="_ _23"></span>a <span class="_ _9"></span>case <span class="_ _23"></span>of <span class="_ _9"></span>a <span class="_ _9"></span>protocol-speciﬁc <span class="_ _9"></span>behavior <span class="_ _23"></span>leaking <span class="_ _9"></span>through <span class="_ _9"></span>the <span class="_ _23"></span>(protocol-</span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">independent) <span class="_ _2"></span>socket <span class="_ _3"></span>interface <span class="_ _3"></span>and <span class="_ _3"></span>becoming <span class="_ _2"></span>visible <span class="_ _3"></span>to <span class="_ _3"></span>applications.<span class="_ _16"> </span>The <span class="_ _3"></span>reason <span class="_ _2"></span>for <span class="_ _2"></span>this</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _9"></span>historical, <span class="_ _9"></span>and <span class="_ _23"></span>thus <span class="_ _9"></span>the <span class="_ _9"></span>Single <span class="_ _23"></span>UNIX <span class="_ _9"></span>Speciﬁcation <span class="_ _9"></span>warns <span class="_ _23"></span>that <span class="_ _9"></span>the <span class="_ _9"></span>state <span class="_ _23"></span>of <span class="_ _9"></span>a <span class="_ _9"></span>socket <span class="_ _23"></span>is</div><div class="t m0 x32 h26 y136 ff19 fsf fc0 sc0 ls0 ws0">undeﬁned if<span class="_"> </span><span class="ff1a">connect<span class="_ _80"> </span></span>fails.</div><div class="t m0 x3f h26 y137 ff19 fsf fc0 sc0 ls0 ws0">Because <span class="_ _9"></span>of <span class="_ _23"></span>this, <span class="_ _23"></span>portable <span class="_ _9"></span>applications <span class="_ _23"></span>need <span class="_ _9"></span>to <span class="_ _23"></span>close <span class="_ _23"></span>the <span class="_ _9"></span>socket <span class="_ _23"></span>if<span class="_ _45"> </span><span class="ff1a">connect<span class="_ _35"> </span></span>fails. <span class="_ _45"> </span>If</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">we want to <span class="_ _2"></span>retry<span class="_ _4"></span>,<span class="_"> </span>we<span class="_ _66"> </span>have <span class="_ _2"></span>to open <span class="_ _2"></span>a new <span class="_ _2"></span>socket.<span class="_ _46"> </span>This mor<span class="ls1f7">ep<span class="_ _d"></span><span class="ls0">ortable technique is <span class="_ _2"></span>shown</span></span></div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls0 ws0">in Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">6.1<span class="_ _0"></span>1.</span></span></div><div class="t m0 x32 h4e y4163 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4164 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y48af ff1a fs28 fc0 sc0 ls0 ws0">#define MAXSLEEP 128</div><div class="t m0 x32 h4e y48b0 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y48b1 ff1a fs28 fc0 sc0 ls0 ws0">connect_retry(int domain, int type, int protocol,</div><div class="t m0 xae h4e y48b2 ff1a fs28 fc0 sc0 ls0 ws0">const struct sockaddr *addr, socklen_t alen)</div><div class="t m0 x32 h4e y48b3 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y48b4 ff1a fs28 fc0 sc0 ls0 ws0">int numsec, fd;</div><div class="t m0 x8a h4e y48b5 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x214 h4e y48b6 ff1a fs28 fc0 sc0 ls1b6 ws0">*T<span class="_ _1d"></span><span class="ls0">ry to connect with exponential backoff.</span></div><div class="t m0 x214 h4e y48b7 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x8a h4e y48b8 ff1a fs28 fc0 sc0 ls0 ws0">for (numsec = 1; numsec &lt;= MAXSLEEP; numsec &lt;&lt;= 1) {</div><div class="t m0 x9d h4e y48b9 ff1a fs28 fc0 sc0 ls0 ws0">if ((fd = socket(domain, type, protocol)) &lt; 0)</div><div class="t m0 x1f h4e y48ba ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h4e y48bb ff1a fs28 fc0 sc0 ls0 ws0">if (connect(fd, addr, alen) == 0) {</div><div class="t m0 x1f h4e y48bc ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 xb1 h4e y48bd ff1a fs28 fc0 sc0 ls1b6 ws0">*C<span class="_ _1d"></span><span class="ls0">onnection accepted.</span></div><div class="t m0 xb1 h4e y48be ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x1f h4e y48bf ff1a fs28 fc0 sc0 ls0 ws0">return(fd);</div><div class="t m0 x9d h4e y48c0 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y48c1 ff1a fs28 fc0 sc0 ls0 ws0">close(fd);</div><div class="t m0 x9d h4e y48c2 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x175 h4e y48c3 ff1a fs28 fc0 sc0 ls1b6 ws0">*D<span class="_ _1d"></span><span class="ls0">elay before trying again.</span></div><div class="t m0 x175 h4e y48c4 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x9d h4e y48c5 ff1a fs28 fc0 sc0 ls0 ws0">if (numsec &lt;= MAXSLEEP/2)</div><div class="t m0 x1f h4e y48c6 ff1a fs28 fc0 sc0 ls0 ws0">sleep(numsec);</div><div class="t m0 x8a h4e y48c7 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y48c8 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x32 h4e y48c9 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x209 h2e y48ca ff18 fs11 fc0 sc0 ls0 ws0">Figure 16.1<span class="_ _0"></span>1<span class="_ _5a"> </span><span class="ff19">Portable connect with retry</span></div><div class="t m0 x32 h55 y48cb ff19 fs2c fc0 sc0 ls0 ws0">Note <span class="_ _2"></span>that <span class="_ _3"></span>because <span class="_ _3"></span>we <span class="_ _3"></span>might <span class="_ _3"></span>have <span class="_ _2"></span>to <span class="_ _3"></span>establish <span class="_ _3"></span>a <span class="_ _3"></span>new <span class="_ _3"></span>socket, <span class="_ _3"></span>it <span class="_ _2"></span>makes <span class="_ _3"></span>no <span class="_ _3"></span>sense <span class="_ _3"></span>to <span class="_ _3"></span>pass <span class="_ _2"></span>a</div><div class="t m0 x32 h54 y48cc ff19 fs2c fc0 sc0 ls0 ws0">socket <span class="_ _9"></span>descriptor <span class="_ _23"> </span>to <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">connect_retry<span class="_ _35"> </span></span>function. <span class="_ _45"> </span>Instead<span class="_ _35"> </span>of <span class="_ _9"></span>returning <span class="_ _9"></span>an <span class="_ _23"></span>indication</div><div class="t m0 x32 h55 y48cd ff19 fs2c fc0 sc0 ls0 ws0">of success, we now return a connected socket descriptor to the caller<span class="_ _6"></span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
