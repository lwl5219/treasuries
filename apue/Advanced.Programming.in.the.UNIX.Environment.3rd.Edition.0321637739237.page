<div id="pfed" class="pf w4 h1f" data-page-no="ed"><div class="pc pced w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bged.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>7.5<span class="_ _8e"> </span>Environment <span class="_"> </span>List<span class="_ _1b"> </span><span class="ff18">203</span></div><div class="t m0 x35 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">7.4 <span class="_ _68"> </span>Command</div><div class="t m0 x1b0 h53 y1b79 ff16 fs2b fc0 sc0 ls0 ws0">-</div><div class="t m0 x1d h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">Line <span class="_"> </span>Arguments</div><div class="t m0 x32 h26 y4de ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _23"> </span>a <span class="_ _23"> </span>program <span class="_ _23"> </span>is <span class="_ _23"> </span>executed, <span class="_ _42"> </span>the <span class="_ _23"></span>process <span class="_ _23"></span>that <span class="_ _23"></span>does <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>can <span class="_ _42"> </span>pass <span class="_ _23"></span>command</div><div class="t m0 x17d h2a y1b7a ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x61 h2a y4de ff19 fsf fc0 sc0 ls0 ws0">line</div><div class="t m0 x32 h2a y6d0 ff19 fsf fc0 sc0 ls0 ws0">arguments <span class="_ _e"> </span>to <span class="_"> </span>the <span class="_ _e"> </span>new <span class="_"> </span>pr<span class="_ _0"></span>ogram. <span class="_ _59"> </span>This<span class="_ _59"> </span>is <span class="_"> </span>part <span class="_ _e"> </span>of <span class="_"> </span>the <span class="_ _e"> </span>normal <span class="_"> </span>operation <span class="_ _e"> </span>of <span class="_"> </span>the <span class="_ _e"> </span>UNIX</div><div class="t m0 x32 h2a y6d1 ff19 fsf fc0 sc0 ls0 ws0">system shells.<span class="_ _46"> </span><span class="ls5f">We <span class="_ _e"> </span>h<span class="_ _9"></span></span>ave <span class="_ _2"></span>already seen this <span class="_ _2"></span>in many <span class="_ _2"></span>of the <span class="_ _2"></span>examples <span class="_ _2"></span>from earlier chapters.</div><div class="t m0 x35 h27 y6d3 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y6d5 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>program <span class="_ _9"></span>in <span class="_ _23"></span>Figur<span class="_ _0"></span><span class="ls852">e7<span class="_ _b"></span><span class="ls0">.4 <span class="_ _9"></span>echoes <span class="_ _9"></span>all <span class="_ _23"></span>its <span class="_ _9"></span>command</span></span></div><div class="t m0 x177 h2a y1b7b ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x117 h2a y6d5 ff19 fsf fc0 sc0 ls0 ws0">line <span class="_ _9"></span>arguments <span class="_ _9"></span>to <span class="_ _23"></span>standar<span class="_ _0"></span><span class="ls852">do<span class="_ _b"></span><span class="ls0">utput.</span></span></div><div class="t m0 x32 h26 y6d6 ff19 fsf fc0 sc0 ls0 ws0">Note that the normal<span class="_"> </span><span class="ff1a">echo</span></div><div class="t m0 xa7 h2a y1b7c ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x7 h2a y6d6 ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 x145 h2a y1b7c ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x66 h2a y6d6 ff19 fsf fc0 sc0 ls0 ws0">program doesn’t echo the zer<span class="_ _0"></span>oth ar<span class="_ _0"></span>gument.</div><div class="t m0 x32 h4e y1b7d ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y1b7e ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y1b7f ff1a fs28 fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h4e y1b80 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y1b81 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>i;</div><div class="t m0 x8a h4e y1b82 ff1a fs28 fc0 sc0 ls0 ws0">for (i = 0; i &lt; argc; i++)<span class="_ _189"> </span>/* echo all command-line args */</div><div class="t m0 x9d h4e y1b83 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;argv[%d]: %s\n&quot;, i, argv[i]);</div><div class="t m0 x8a h4e y1b84 ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y1b85 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x1e4 h2e y1b86 ff18 fs11 fc0 sc0 ls0 ws0">Figure 7.4<span class="_ _5a"> </span><span class="ff19">Echo all command</span></div><div class="t m0 x67 h2e y1b87 ff19 fs11 fc0 sc0 ls0 ws0">-</div><div class="t m0 x1e7 h2e y1b86 ff19 fs11 fc0 sc0 ls0 ws0">line arguments to standar<span class="_ _0"></span><span class="lsdb">do<span class="_ _84"></span><span class="ls0">utput</span></span></div><div class="t m0 x32 h54 y1b88 ff19 fs2c fc0 sc0 ls0 ws0">If we compile this program and name the executable<span class="_"> </span><span class="ff1a">echoarg</span>,<span class="_"> </span>we<span class="_"> </span>have</div><div class="t m0 x3f h5d y1b89 ff1a fs2f fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./echoarg arg1 TEST foo</span></div><div class="t m0 x3f h5d y1b8a ff1a fs2f fc0 sc0 ls0 ws0">argv[0]: ./echoarg</div><div class="t m0 x3f h5d y1b8b ff1a fs2f fc0 sc0 ls0 ws0">argv[1]: arg1</div><div class="t m0 x3f h5d y1b8c ff1a fs2f fc0 sc0 ls0 ws0">argv[2]: TEST</div><div class="t m0 x3f h5d y1b8d ff1a fs2f fc0 sc0 ls0 ws0">argv[3]: foo</div><div class="t m0 x32 h54 y1b8e ff19 fs2c fc0 sc0 ls155 ws0">We <span class="_ _e"> </span>a<span class="_ _9"></span><span class="ls150">re <span class="_ _3"></span>g<span class="_ _2"></span><span class="ls0">uaranteed <span class="_ _2"></span>by <span class="_ _2"></span>both <span class="_ _2"></span>ISO <span class="_ _2"></span>C <span class="_ _2"></span>and <span class="_ _2"></span>POSIX.1 <span class="_ _2"></span>that<span class="_"> </span><span class="ff1a">argv[argc]<span class="_ _47"> </span></span>is a <span class="_ _2"></span>null <span class="_ _2"></span>pointer<span class="_ _1"></span><span class="ls853">.T<span class="_ _5b"></span><span class="ls0">his</span></span></span></span></div><div class="t m0 x32 h55 y1b8f ff19 fs2c fc0 sc0 ls0 ws0">lets us alternatively code the argument-pr<span class="_ _0"></span>ocessing loop as</div><div class="t m0 x3f h5d y1b90 ff1a fs2f fc0 sc0 ls0 ws0">for (i = 0; argv[i] != NULL; i++)</div><div class="t m0 x35 h59 y1b91 ff16 fs2e fc0 sc0 ls0 ws0">7.5 <span class="_ _68"> </span>En<span class="_ _1"></span>vironment <span class="_"> </span>List</div><div class="t m0 x32 h5b y1b92 ff19 fs29 fc0 sc0 ls0 ws0">Each <span class="_ _59"> </span>program <span class="_ _59"> </span>is <span class="_ _59"> </span>also <span class="_ _46"> </span>passed <span class="_ _59"> </span>an<span class="_ _60"> </span><span class="ff1b">environment <span class="_ _59"> </span>list</span><span class="ls854">.L<span class="_ _4e"></span><span class="ls0">ike <span class="_ _59"> </span>the <span class="_ _46"> </span>argument <span class="_ _4b"> </span>list, <span class="_ _46"> </span>the</span></span></div><div class="t m0 x32 h50 y1b93 ff19 fs29 fc0 sc0 ls0 ws0">environment <span class="_ _53"> </span>list <span class="_"> </span>is <span class="_ _e"> </span>an <span class="_"> </span>array <span class="_ _53"> </span>of <span class="_"> </span>character <span class="_ _e"> </span>pointers, <span class="_"> </span>with <span class="_ _53"> </span>each <span class="_"> </span>pointer <span class="_ _e"> </span>containing <span class="_"> </span>the</div><div class="t m0 x32 h50 y1b94 ff19 fs29 fc0 sc0 ls0 ws0">address <span class="_ _2"></span>of <span class="_ _2"></span>a <span class="_ _3"></span>null-terminated <span class="_ _3"></span>C <span class="_ _2"></span>string.<span class="_ _16"> </span>The <span class="_ _3"></span>address <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _3"></span>array <span class="_ _3"></span>of <span class="_ _2"></span>pointers <span class="_ _3"></span>is <span class="_ _3"></span>contained</div><div class="t m0 x32 h5c y1b95 ff19 fs29 fc0 sc0 ls0 ws0">in the global variable<span class="_"> </span><span class="ff1a">environ</span>:</div><div class="t m0 x3f h62 y1b96 ff1a fs30 fc0 sc0 ls0 ws0">extern char **environ;</div><div class="t m0 x32 h50 y1b97 ff19 fs29 fc0 sc0 ls0 ws0">For <span class="_ _9"></span>example, <span class="_ _23"></span>if <span class="_ _9"></span>the <span class="_ _9"></span>environment <span class="_ _9"></span>consisted <span class="_ _23"></span>of <span class="_ _9"></span>ﬁve <span class="_ _9"></span>strings, <span class="_ _23"></span>it <span class="_ _9"></span>could <span class="_ _23"></span>look <span class="_ _9"></span>like <span class="_ _9"></span>Figur<span class="ls855">e7<span class="_ _b"></span><span class="ls0">.5.</span></span></div><div class="t m0 x32 h5c y1b98 ff19 fs29 fc0 sc0 ls0 ws0">Here<span class="_"> </span>we<span class="_ _66"> </span>explicitly <span class="_ _2"></span>show <span class="_ _2"></span>the null <span class="_ _2"></span>bytes <span class="_ _2"></span>at <span class="_ _2"></span>the <span class="_ _2"></span>end <span class="_ _2"></span>of each <span class="_ _2"></span>string.<span class="_ _61"> </span><span class="lse2">We<span class="_ _9"></span></span>’ll <span class="_ _2"></span>call<span class="_ _66"> </span><span class="ff1a">environ<span class="_ _47"> </span></span>the</div><a class="l" href="#pfe" data-dest-detail='[14,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:193.163811px;height:20.760010px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="#pfe" data-dest-detail='[14,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.893259px;bottom:355.378809px;width:136.632401px;height:19.680008px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
