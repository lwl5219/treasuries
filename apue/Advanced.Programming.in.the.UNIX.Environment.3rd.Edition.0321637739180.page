<div id="pfb4" class="pf w4 h1f" data-page-no="b4"><div class="pc pcb4 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bgb4.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">146<span class="_ _1b"> </span><span class="ff19">Standar<span class="ls30a">dI<span class="_ _55"></span><span class="ls0">/O <span class="_"> </span>Library<span class="_ _1c9"> </span>Chapter <span class="_"> </span>5</span></span></span></div><div class="t m0 x41 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">or (b) <span class="_ _2"></span>a line-buffered stream (that requires data to <span class="_ _2"></span>be requested from the <span class="_ _2"></span>kernel),</div><div class="t m0 x41 h2b y130 ff1b fsf fc0 sc0 ls0 ws0">all<span class="_ _45"> </span><span class="ff19">line-buf<span class="_ _0"></span>fered <span class="_ _3"></span>output <span class="_ _9"></span>streams <span class="_ _3"></span>ar<span class="ls1b0">eﬂ<span class="_ _b"></span><span class="ls0">ushed. <span class="_ _45"> </span>The<span class="_ _47"> </span><span class="ls45">re<span class="_ _2"></span></span>ason <span class="_ _9"></span>for <span class="_ _9"></span>the <span class="_ _9"></span>qualiﬁer <span class="_ _9"></span>on <span class="_ _3"></span>(b)</span></span></span></div><div class="t m0 x41 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">is <span class="_ _23"> </span>that <span class="_ _23"> </span>the <span class="_ _23"> </span>requested <span class="_ _23"> </span>data <span class="_ _23"> </span>may <span class="_ _42"> </span>already <span class="_ _9"></span>be <span class="_ _42"> </span>in <span class="_ _23"></span>the <span class="_ _23"> </span>buffer<span class="_ _6"></span><span class="ls651">,w<span class="_ _43"></span><span class="ls0">hich <span class="_ _42"> </span>doesn’t <span class="_ _23"> </span>requir<span class="_ _0"></span>e</span></span></div><div class="t m0 x41 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">data <span class="_"> </span>to <span class="_"> </span>be <span class="_"> </span>read <span class="_"> </span>fr<span class="_ _0"></span>om <span class="_"> </span>the <span class="_"> </span>kernel.<span class="_ _60"> </span>Obviously<span class="_ _4"></span><span class="ls86">,a<span class="_ _4a"></span><span class="ls0">ny <span class="_"> </span>input <span class="_"> </span>from <span class="_"> </span>an <span class="_"> </span>unbuf<span class="_ _0"></span>fered</span></span></div><div class="t m0 x41 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">stream, item (a), r<span class="_ _0"></span>equir<span class="_ _0"></span>es data to be obtained from the kernel.</div><div class="t m0 x3f h2a yc80 ff19 fsf fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>Unbuffer<span class="_ _0"></span>ed. <span class="_ _4b"> </span>The<span class="_ _59"> </span>standar<span class="ls652">dI<span class="_ _4a"></span><span class="ls0">/O <span class="_"> </span>library <span class="_ _53"> </span>does <span class="_ _e"> </span>not <span class="_"> </span>buf<span class="_ _0"></span>fer <span class="_ _e"> </span>the <span class="_ _e"> </span>characters.<span class="_ _48"> </span>If <span class="_ _e"> </span>we</span></span></div><div class="t m0 x41 h26 y14ac ff19 fsf fc0 sc0 ls0 ws0">write <span class="_ _e"> </span>15 <span class="_"> </span>characters <span class="_ _53"> </span>with <span class="_"> </span>the <span class="_ _53"> </span>standar<span class="ls31d">dI<span class="_ _55"></span><span class="ls0">/O<span class="_ _4b"> </span><span class="ff1a">fputs<span class="_ _59"> </span></span>function, <span class="_ _e"> </span>for <span class="_"> </span>example, <span class="_ _53"> </span>we</span></span></div><div class="t m0 x41 h2a y14ad ff19 fsf fc0 sc0 ls0 ws0">expect <span class="_ _23"></span>these <span class="_ _23"></span>15 <span class="_ _23"> </span>characters <span class="_ _23"> </span>to <span class="_ _23"> </span>be <span class="_ _23"> </span>output <span class="_ _23"> </span>as <span class="_ _23"> </span>soon <span class="_ _23"> </span>as <span class="_ _23"> </span>possible, <span class="_ _23"> </span>probably <span class="_ _23"> </span>with <span class="_ _23"> </span>the</div><div class="t m0 x41 h26 y14ae ff1a fsf fc0 sc0 ls0 ws0">write<span class="_ _80"> </span><span class="ff19">function from Section 3.8.</span></div><div class="t m0 x41 h2a y14af ff19 fsf fc0 sc0 ls0 ws0">The standar<span class="ls653">de<span class="_ _4f"></span><span class="ls0">rror stream, for example, is normally unbuffer<span class="_ _1"></span>ed so <span class="_ _2"></span>that any error</span></span></div><div class="t m0 x41 h2a y14b0 ff19 fsf fc0 sc0 ls0 ws0">messages <span class="_ _47"> </span>ar<span class="ls654">ed<span class="_ _62"></span><span class="ls0">isplayed <span class="_ _45"> </span>as <span class="_ _47"> </span>quickly <span class="_ _47"> </span>as <span class="_ _45"> </span>possible, <span class="_ _47"> </span>regardless <span class="_ _47"> </span>of <span class="_ _47"> </span>whether <span class="_ _45"> </span>they</span></span></div><div class="t m0 x41 h2a y14b1 ff19 fsf fc0 sc0 ls0 ws0">contain a newline.</div><div class="t m0 x32 h2a y326 ff19 fsf fc0 sc0 ls0 ws0">ISO C requir<span class="_ _0"></span>es the following buf<span class="_ _0"></span>fering characteristics:</div><div class="t m0 x3f h2a ya29 ff19 fsf fc0 sc0 ls49 ws0">•S<span class="_ _4d"></span><span class="ls0">tandar<span class="ls655">di<span class="_ _4f"></span><span class="ls0">nput and <span class="_ _2"></span>standar<span class="ls655">do<span class="_ _4f"></span><span class="ls0">utput <span class="_ _2"></span>ar<span class="ls655">ef<span class="_ _4f"></span><span class="ls0">ully buffered, if and <span class="_ _2"></span>only <span class="_ _2"></span>if they <span class="_ _2"></span>do <span class="_ _2"></span>not</span></span></span></span></span></span></span></div><div class="t m0 x15 h2a ya2a ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">fer to an interactive device.</span></div><div class="t m0 x3f h2a ya2b ff19 fsf fc0 sc0 ls49 ws0">•S<span class="_ _4d"></span><span class="ls0">tandar<span class="ls44">de<span class="_ _4f"></span><span class="ls0">rror is never fully buffer<span class="_ _0"></span>ed.</span></span></span></div><div class="t m0 x3f h2a y14b2 ff19 fsf fc0 sc0 ls0 ws0">This, <span class="_"> </span>however<span class="_ _6"></span><span class="ls656">,d<span class="_ _4a"></span><span class="ls0">oesn’t <span class="_"> </span>tell <span class="_"> </span>us <span class="_ _e"> </span>whether <span class="_"> </span>standar<span class="ls657">di<span class="_ _5b"></span><span class="ls0">nput <span class="_"> </span>and <span class="_"> </span>standar<span class="_ _0"></span><span class="ls657">do<span class="_ _4a"></span><span class="ls0">utput <span class="_"> </span>are</span></span></span></span></span></span></div><div class="t m0 x32 h2a y259 ff19 fsf fc0 sc0 ls0 ws0">unbuffer<span class="_ _0"></span>ed <span class="_ _3"></span>or <span class="_ _9"></span>line <span class="_ _9"></span>buffered <span class="_ _3"></span>if <span class="_ _9"></span>they <span class="_ _9"></span>refer <span class="_ _3"></span>to <span class="_ _9"></span>an <span class="_ _9"></span>interactive <span class="_ _9"></span>device <span class="_ _9"></span>and <span class="_ _9"></span>whether <span class="_ _9"></span>standar<span class="_ _0"></span>d</div><div class="t m0 x32 h2a y14b3 ff19 fsf fc0 sc0 ls0 ws0">error <span class="_"> </span>should <span class="_ _66"> </span>be <span class="_ _47"> </span>unbuffer<span class="_ _0"></span>ed <span class="_ _66"> </span>or <span class="_ _47"> </span>line <span class="_"> </span>buffered. <span class="_ _46"> </span>Most<span class="_ _61"> </span>implementations <span class="_ _66"> </span>default <span class="_ _47"> </span>to <span class="_ _66"> </span>the</div><div class="t m0 x32 h2a y14b4 ff19 fsf fc0 sc0 ls0 ws0">following types of buffering:</div><div class="t m0 x3f h2a y14b5 ff19 fsf fc0 sc0 ls49 ws0">•S<span class="_ _4d"></span><span class="ls0">tandar<span class="ls44">de<span class="_ _4f"></span><span class="ls0">rror is always unbuffer<span class="_ _0"></span>ed.</span></span></span></div><div class="t m0 x3f h2a yea8 ff19 fsf fc0 sc0 ls49 ws0">•A<span class="_ _4d"></span><span class="ls0">ll <span class="_ _9"></span>other <span class="_ _9"></span>streams <span class="_ _3"></span>ar<span class="ls658">el<span class="_ _b"></span><span class="ls0">ine <span class="_ _9"></span>buffered <span class="_ _3"></span>if <span class="_ _9"></span>they <span class="_ _9"></span>refer <span class="_ _9"></span>to <span class="_ _9"></span>a <span class="_ _9"></span>terminal <span class="_ _9"></span>device; <span class="_ _9"></span>otherwise,</span></span></span></div><div class="t m0 x15 h2a yea9 ff19 fsf fc0 sc0 ls0 ws0">they ar<span class="ls44">ef<span class="_ _4f"></span><span class="ls0">ully buffered.</span></span></div><div class="t m0 x76 h51 y14b6 ff19 fs2a fc0 sc0 ls0 ws0">The four platforms discussed <span class="_ _2"></span>in this book follow these <span class="_ _2"></span>conventions for standar<span class="ls659">dI<span class="_ _5"></span><span class="ls0">/O <span class="_ _2"></span>buffering:</span></span></div><div class="t m0 x76 h51 y14b7 ff19 fs2a fc0 sc0 ls0 ws0">standar<span class="ls65a">de<span class="_ _4f"></span><span class="ls0">rror <span class="_ _3"></span>is <span class="_ _3"></span>unbuffer<span class="_ _0"></span>ed, <span class="_ _2"></span>streams <span class="_ _3"></span>open <span class="_ _2"></span>to <span class="_ _3"></span>terminal <span class="_ _3"></span>devices <span class="_ _3"></span>ar<span class="ls65b">el<span class="_ _d"></span><span class="ls0">ine <span class="_ _3"></span>buffer<span class="_ _0"></span>ed, <span class="_ _2"></span>and <span class="_ _3"></span>all <span class="_ _3"></span>other</span></span></span></span></div><div class="t m0 x76 h51 y14b8 ff19 fs2a fc0 sc0 ls0 ws0">streams ar<span class="_ _0"></span><span class="lse9">ef<span class="_ _84"></span><span class="ls0">ully buffer<span class="_ _0"></span>ed.</span></span></div><div class="t m0 x32 h2a y14b9 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>e<span class="_ _9"></span><span class="ls0">xplor<span class="ls44">es<span class="_ _d"></span><span class="ls0">tandar<span class="ls44">dI<span class="_ _4f"></span><span class="ls0">/O buffering in mor<span class="ls44">ed<span class="_ _4f"></span><span class="ls0">etail in Section 5.12 and Figur<span class="ls44">e5<span class="_ _d"></span><span class="ls0">.1<span class="_ _1"></span>1.</span></span></span></span></span></span></span></span></span></div><div class="t m0 x3f h2a y14ba ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _2"></span>we <span class="_ _2"></span>don’t <span class="_ _2"></span>like <span class="_ _2"></span>these <span class="_ _2"></span>defaults <span class="_ _2"></span>for <span class="_ _2"></span>any <span class="_ _2"></span>given <span class="_ _2"></span>stream, <span class="_ _2"></span>we <span class="_ _2"></span>can <span class="_ _2"></span>change <span class="_ _2"></span>the <span class="_ _2"></span>buffering <span class="_ _2"></span>by</div><div class="t m0 x32 h26 y14bb ff19 fsf fc0 sc0 ls0 ws0">calling either the<span class="_"> </span><span class="ff1a">setbuf<span class="_ _80"> </span></span>or<span class="_"> </span><span class="ff1a">setvbuf<span class="_ _66"> </span></span>function.</div><div class="t m0 x3f h57 y14bc ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h57 y14bd ff1a fs2d fc0 sc0 ls0 ws0">void setbuf(FILE *restrict<span class="_"> </span><span class="ff1b">fp</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">har *restrict<span class="_"> </span><span class="ff1b">buf<span class="_ _53"> </span></span>);</span></span></div><div class="t m0 x3f h57 y14be ff1a fs2d fc0 sc0 ls0 ws0">int setvbuf(FILE *restrict<span class="_"> </span><span class="ff1b">fp</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">har *restrict<span class="_"> </span><span class="ff1b">buf</span><span class="ls15c">,i<span class="_ _5b"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">mode</span>,</span></span></span></span></div><div class="t m0 xda h57 y14bf ff1a fs2d fc0 sc0 ls0 ws0">size_t<span class="_"> </span><span class="ff1b">size</span>);</div><div class="t m0 x81 h5f y14c0 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, nonzero<span class="_"> </span>on<span class="_"> </span>err<span class="_ _0"></span>or</div><div class="t m0 x32 h4a y14c1 ff19 fs26 fc0 sc0 ls0 ws0">These <span class="_ _3"></span>functions <span class="_ _9"></span>must <span class="_ _9"></span>be <span class="_ _9"></span>called<span class="_ _47"> </span><span class="ff1b">after<span class="_ _45"> </span></span>the <span class="_ _9"></span>stream <span class="_ _3"></span>has <span class="_ _9"></span>been <span class="_ _3"></span>opened <span class="_ _9"></span>(obviously<span class="_ _6"></span><span class="ls65c">,s<span class="_ _b"></span><span class="ls0">ince <span class="_ _9"></span>each</span></span></div><div class="t m0 x32 h4a y14c2 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">quires <span class="_"> </span>a <span class="_"> </span>valid <span class="_"> </span>ﬁle <span class="_"> </span>pointer <span class="_"> </span>as <span class="_"> </span>its <span class="_ _e"> </span>ﬁrst <span class="_"> </span>argument) <span class="_"> </span>but<span class="_ _59"> </span><span class="ff1b">before<span class="_ _59"> </span></span>any <span class="_"> </span>other <span class="_"> </span>operation <span class="_"> </span>is</span></div><div class="t m0 x32 h49 y14c3 ff19 fs26 fc0 sc0 ls0 ws0">performed on the stream.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
