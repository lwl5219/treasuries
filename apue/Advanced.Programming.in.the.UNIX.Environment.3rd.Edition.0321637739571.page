<div id="pf23b" class="pf w4 h1f" data-page-no="23b"><div class="pc pc23b w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg23b.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>15.2<span class="_ _2b5"> </span>Pipes<span class="_ _1b"> </span><span class="ff18">537</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>If<span class="_ _45"> </span>we<span class="_ _45"> </span><span class="ff1a">write<span class="_ _45"> </span></span>to <span class="_ _23"></span>a <span class="_ _9"></span>pipe <span class="_ _9"></span>whose <span class="_ _9"></span>read <span class="_ _9"></span>end <span class="_ _9"></span>has <span class="_ _23"></span>been <span class="_ _9"></span>closed, <span class="_ _9"></span>the <span class="_ _9"></span>signal<span class="_ _45"> </span><span class="ff1a">SIGPIPE<span class="_ _35"> </span></span>is</div><div class="t m0 x41 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">generated. <span class="_ _45"> </span>If<span class="_ _45"> </span>we <span class="_ _9"></span>either <span class="_ _9"></span>ignor<span class="ls69b">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>signal <span class="_ _9"></span>or <span class="_ _23"></span>catch <span class="_ _9"></span>it <span class="_ _9"></span>and <span class="_ _9"></span>return <span class="_ _9"></span>from <span class="_ _9"></span>the <span class="_ _9"></span>signal</span></span></div><div class="t m0 x41 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">handler<span class="_ _6"></span>,<span class="_"> </span><span class="ff1a">write<span class="_ _66"> </span></span><span class="ls45">re</span>turns<span class="_"> </span><span class="ff20">−</span><span class="ls44">1w<span class="_ _5"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>set to<span class="_"> </span><span class="ff1a">EPIPE</span>.</span></span></div><div class="t m0 x3f h26 y1fb ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _66"> </span>we’r<span class="ls1167">ew<span class="_ _1d"></span><span class="ls0">riting <span class="_ _47"> </span>to <span class="_ _66"> </span>a <span class="_ _47"> </span>pipe <span class="_ _66"> </span>(or <span class="_ _66"> </span>FIFO), <span class="_ _47"> </span>the <span class="_ _66"> </span>constant<span class="_ _61"> </span><span class="ff1a">PIPE_BUF<span class="_ _61"> </span></span>speciﬁes <span class="_ _47"> </span>the</span></span></div><div class="t m0 x32 h26 y1fc ff19 fsf fc0 sc0 ls0 ws0">kernel’s <span class="_ _23"></span>pipe <span class="_ _23"></span>buffer <span class="_ _9"></span>size.<span class="_ _51"> </span>A<span class="_ _45"> </span><span class="ff1a">write<span class="_ _35"> </span></span>of<span class="_ _35"> </span><span class="ff1a">PIPE_BUF<span class="_ _45"> </span></span>bytes <span class="_ _23"> </span>or <span class="_ _23"> </span>less <span class="_ _23"> </span>will <span class="_ _23"></span>not <span class="_ _23"></span>be <span class="_ _23"></span>interleaved</div><div class="t m0 x32 h26 y1fd ff19 fsf fc0 sc0 ls0 ws0">with <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1a">write</span><span class="ls1168">sf<span class="_ _55"></span><span class="ls45">ro<span class="ls1168">mo<span class="_ _55"></span><span class="ls0">ther <span class="_"> </span>pr<span class="_ _1"></span>ocesses <span class="_"> </span>to <span class="_"> </span>the <span class="_ _e"> </span>same <span class="_"> </span>pipe <span class="_ _e"> </span>(or <span class="_"> </span>FIFO).<span class="_ _48"> </span>But <span class="_"> </span>if <span class="_ _e"> </span>multiple</span></span></span></span></div><div class="t m0 x32 h26 y406 ff19 fsf fc0 sc0 ls0 ws0">processes <span class="_ _2"></span>ar<span class="ls1169">ew<span class="_ _8"></span><span class="ls0">riting <span class="_ _2"></span>to <span class="_ _3"></span>a <span class="_ _3"></span>pipe <span class="_ _3"></span>(or <span class="_ _2"></span>FIFO), <span class="_ _3"></span>and <span class="_ _3"></span>if <span class="_ _2"></span>we<span class="_ _47"> </span><span class="ff1a">write<span class="_ _47"> </span></span>mor<span class="ls14f">et<span class="_ _8"></span><span class="ls0">han<span class="_ _47"> </span><span class="ff1a">PIPE_BUF<span class="_ _47"> </span></span>bytes,</span></span></span></span></div><div class="t m0 x32 h2a y407 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _9"></span>data <span class="_ _9"></span>might <span class="_ _9"></span>be <span class="_ _9"></span>interleaved <span class="_ _9"></span>with <span class="_ _9"></span>the <span class="_ _9"></span>data <span class="_ _23"></span>fr<span class="_ _0"></span>om <span class="_ _9"></span>the <span class="_ _9"></span>other <span class="_ _9"></span>writers.<span class="_ _5a"> </span><span class="ls5f">We <span class="_ _66"> </span>c<span class="_ _9"></span></span>an <span class="_ _23"></span>determine</div><div class="t m0 x32 h26 y408 ff19 fsf fc0 sc0 ls0 ws0">the value of<span class="_"> </span><span class="ff1a">PIPE_BUF<span class="_ _80"> </span></span>by using<span class="_"> </span><span class="ff1a">pathconf<span class="_ _66"> </span></span>or<span class="_"> </span><span class="ff1a">fpathconf<span class="_ _80"> </span></span>(recall Figur<span class="ls44">e2<span class="_ _4f"></span><span class="ls0">.12).</span></span></div><div class="t m0 x35 h27 y13a ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y17d ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls880">e1<span class="_ _b"></span><span class="ls0">5.5 <span class="_ _3"></span>shows <span class="_ _9"></span>the <span class="_ _9"></span>code <span class="_ _3"></span>to <span class="_ _9"></span>create <span class="_ _2"></span>a <span class="_ _9"></span>pipe <span class="_ _9"></span>between <span class="_ _3"></span>a <span class="_ _9"></span>parent <span class="_ _3"></span>and <span class="_ _3"></span>its <span class="_ _9"></span>child <span class="_ _9"></span>and <span class="_ _3"></span>to <span class="_ _9"></span>send</span></span></div><div class="t m0 x32 h2a y17e ff19 fsf fc0 sc0 ls0 ws0">data down the pipe.</div><div class="t m0 x32 h4e y4146 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4147 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4148 ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y4149 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y414a ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>n;</div><div class="t m0 x8a h4e y414b ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>fd[2];</div><div class="t m0 x8a h4e y414c ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h4e y414d ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>line[MAXLINE];</div><div class="t m0 x8a h4e y414e ff1a fs28 fc0 sc0 ls0 ws0">if (pipe(fd) &lt; 0)</div><div class="t m0 x9d h4e y414f ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;pipe error&quot;);</div><div class="t m0 x8a h4e y4150 ff1a fs28 fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 x9d h4e y4151 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h4e y4152 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid &gt; 0) {<span class="_ _90"> </span>/* parent */</span></div><div class="t m0 x9d h4e y4153 ff1a fs28 fc0 sc0 ls0 ws0">close(fd[0]);</div><div class="t m0 x9d h4e y4154 ff1a fs28 fc0 sc0 ls0 ws0">write(fd[1], &quot;hello world\n&quot;, 12);</div><div class="t m0 x8a h4e y4155 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse {<span class="_ _296"> </span>/* child */</span></div><div class="t m0 x9d h4e y4156 ff1a fs28 fc0 sc0 ls0 ws0">close(fd[1]);</div><div class="t m0 x9d h4e y4157 ff1a fs28 fc0 sc0 ls1b6 ws0">n=r<span class="_ _1d"></span><span class="ls0">ead(fd[0], line, MAXLINE);</span></div><div class="t m0 x9d h4e y4158 ff1a fs28 fc0 sc0 ls0 ws0">write(STDOUT_FILENO, line, n);</div><div class="t m0 x8a h4e y4159 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y415a ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y415b ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x10d h2e y415c ff18 fs11 fc0 sc0 ls0 ws0">Figure 15.5<span class="_ _5a"> </span><span class="ff19">Send data from parent to child over a pipe</span></div><div class="t m0 x32 h55 y415d ff19 fs2c fc0 sc0 ls0 ws0">Note that the pipe direction her<span class="_ _0"></span><span class="ls142">em<span class="_ _d"></span><span class="ls0">atches the orientation shown in Figur<span class="ls142">e1<span class="_ _4f"></span><span class="ls0">5.4.</span></span></span></span></div><div class="t m0 x3f h5c y415e ff19 fs29 fc0 sc0 ls0 ws0">In <span class="_ _44"> </span>the <span class="_ _44"> </span>previous <span class="_ _44"> </span>example, <span class="_ _4b"> </span>we <span class="_ _44"> </span>called<span class="_ _54"> </span><span class="ff1a">read<span class="_ _65"> </span></span>and<span class="_ _65"> </span><span class="ff1a">write<span class="_ _54"> </span></span>directly <span class="_ _44"> </span>on <span class="_ _44"> </span>the <span class="_ _4b"> </span>pipe</div><div class="t m0 x32 h50 y415f ff19 fs29 fc0 sc0 ls0 ws0">descriptors. <span class="_ _66"> </span>What<span class="_ _47"> </span>is <span class="_ _3"></span>mor<span class="ls116a">ei<span class="_ _8"></span><span class="ls0">nteresting <span class="_ _2"></span>is <span class="_ _2"></span>to <span class="_ _3"></span>duplicate <span class="_ _2"></span>the <span class="_ _3"></span>pipe <span class="_ _2"></span>descriptors <span class="_ _3"></span>onto <span class="_ _2"></span>standard</span></span></div><div class="t m0 x32 h50 y4160 ff19 fs29 fc0 sc0 ls0 ws0">input <span class="_ _53"> </span>or <span class="_ _53"> </span>standar<span class="ls116b">do<span class="_ _55"></span><span class="ls0">utput. <span class="_ _4b"> </span>Often,<span class="_ _4b"> </span>the <span class="_ _53"> </span>child <span class="_ _53"> </span>then <span class="_ _e"> </span>runs <span class="_ _53"> </span>some <span class="_ _53"> </span>other <span class="_ _53"> </span>program, <span class="_ _53"> </span>and <span class="_ _53"> </span>that</span></span></div><div class="t m0 x32 h50 y4161 ff19 fs29 fc0 sc0 ls0 ws0">program can either read fr<span class="_ _0"></span>om its standar<span class="ls116c">di<span class="_ _d"></span><span class="ls0">nput (the pipe that <span class="_ _2"></span>we created) or write to its</span></span></div><div class="t m0 x32 h50 y4162 ff19 fs29 fc0 sc0 ls0 ws0">standar<span class="lsdd">do<span class="_ _4f"></span><span class="ls0">utput (the pipe).</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
