<div id="pf3a3" class="pf w4 h1f" data-page-no="3a3"><div class="pc pc3a3 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3a3.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>B.1<span class="_ _238"> </span>Our <span class="_"> </span>Header <span class="_"> </span>File<span class="_ _1b"> </span><span class="ff18">897</span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>send_fd(int,<span class="_"> </span>int); <span class="_ _1e7"> </span>/*<span class="_"> </span>Figure 17.13 */</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>send_err(int,<span class="_"> </span>int,</div><div class="t m0 x10d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">const char *);<span class="_ _82"> </span>/* Figure 17.12 */</div><div class="t m0 x32 h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>serv_listen(const<span class="_"> </span>char *);<span class="_ _176"> </span>/* Figure 17.8 */</div><div class="t m0 x32 h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>serv_accept(int,<span class="_"> </span>uid_t *);<span class="_ _176"> </span>/* Figure 17.9 */</div><div class="t m0 x32 h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>cli_conn(const<span class="_"> </span>char *);<span class="_ _82"> </span>/* Figure 17.10 */</div><div class="t m0 x32 h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>buf_args(char<span class="_"> </span>*, int (*func)(int,</div><div class="t m0 x10d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">char **));<span class="_ _1e7"> </span>/* Figure 17.23 */</div><div class="t m0 x32 h57 y13e0 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>tty_cbreak(int);<span class="_ _1e9"> </span>/* Figure 18.20 */</div><div class="t m0 x32 h57 y41e9 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>tty_raw(int);<span class="_ _1e5"> </span>/* Figure 18.20 */</div><div class="t m0 x32 h57 y4209 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>tty_reset(int);<span class="_ _296"> </span>/* Figure 18.20 */</div><div class="t m0 x32 h57 y420a ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _15"> </span>tty_atexit(void);<span class="_ _cb"> </span>/* Figure 18.20 */</div><div class="t m0 x32 h57 y420b ff1a fs2d fc0 sc0 ls0 ws0">struct termios<span class="_ _d9"> </span>*tty_termios(void); <span class="_ _186"> </span>/*<span class="_"> </span>Figure 18.20 */</div><div class="t m0 x32 h57 y8dc ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>ptym_open(char<span class="_"> </span>*, int);<span class="_ _82"> </span>/* Figure 19.9 */</div><div class="t m0 x32 h57 y8dd ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>ptys_open(char<span class="_"> </span>*); <span class="_ _1e7"> </span>/*<span class="_"> </span>Figure 19.9 */</div><div class="t m0 x32 h57 y8de ff1a fs2d fc0 sc0 ls0 ws0">#ifdef <span class="_"> </span>TIOCGWINSZ</div><div class="t m0 x32 h57 y8df ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _68"> </span>pty_fork(int<span class="_"> </span>*, char *, int, const struct termios *,</div><div class="t m0 x10d h57 y1251 ff1a fs2d fc0 sc0 ls0 ws0">const struct winsize *);<span class="_ _d9"> </span>/* Figure 19.10 */</div><div class="t m0 x32 h57 y1252 ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h57 y341f ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>lock_reg(int,<span class="_"> </span>int, int, off_t, int, off_t); /* Figure 14.5 */</div><div class="t m0 x32 h57 y2f76 ff1a fs2d fc0 sc0 ls0 ws0">#define read_lock(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y2f77 ff1a fs2d fc0 sc0 ls0 ws0">lock_reg((fd), F_SETLK, F_RDLCK, (offset), (whence), (len))</div><div class="t m0 x32 h57 y31bc ff1a fs2d fc0 sc0 ls0 ws0">#define readw_lock(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y3264 ff1a fs2d fc0 sc0 ls0 ws0">lock_reg((fd), F_SETLKW, F_RDLCK, (offset), (whence), (len))</div><div class="t m0 x32 h57 y3265 ff1a fs2d fc0 sc0 ls0 ws0">#define write_lock(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y3266 ff1a fs2d fc0 sc0 ls0 ws0">lock_reg((fd), F_SETLK, F_WRLCK, (offset), (whence), (len))</div><div class="t m0 x32 h57 y3267 ff1a fs2d fc0 sc0 ls0 ws0">#define writew_lock(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y3268 ff1a fs2d fc0 sc0 ls0 ws0">lock_reg((fd), F_SETLKW, F_WRLCK, (offset), (whence), (len))</div><div class="t m0 x32 h57 y4853 ff1a fs2d fc0 sc0 ls0 ws0">#define un_lock(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y4854 ff1a fs2d fc0 sc0 ls0 ws0">lock_reg((fd), F_SETLK, F_UNLCK, (offset), (whence), (len))</div><div class="t m0 x32 h57 y5f69 ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>lock_test(int,<span class="_"> </span>int, off_t, int, off_t);<span class="_ _8a"> </span>/* Figure 14.6 */</div><div class="t m0 x32 h57 y326c ff1a fs2d fc0 sc0 ls0 ws0">#define is_read_lockable(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y326d ff1a fs2d fc0 sc0 ls0 ws0">(lock_test((fd), F_RDLCK, (offset), (whence), (len)) == 0)</div><div class="t m0 x32 h57 y326e ff1a fs2d fc0 sc0 ls0 ws0">#define is_write_lockable(fd, offset, whence, len) \</div><div class="t m0 x1f h57 y326f ff1a fs2d fc0 sc0 ls0 ws0">(lock_test((fd), F_WRLCK, (offset), (whence), (len)) == 0)</div><div class="t m0 x32 h57 y5f6a ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_msg(const<span class="_"> </span>char *, ...);<span class="_ _176"> </span>/* Appendix B */</div><div class="t m0 x32 h57 y5f6b ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_dump(const<span class="_"> </span>char *, ...) __attribute__((noreturn));</div><div class="t m0 x32 h57 y5f6c ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_quit(const<span class="_"> </span>char *, ...) __attribute__((noreturn));</div><div class="t m0 x32 h57 y5f6d ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_cont(int,<span class="_"> </span>const char *, ...);</div><div class="t m0 x32 h57 y5f6e ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_exit(int,<span class="_"> </span>const char *, ...) __attribute__((noreturn));</div><div class="t m0 x32 h57 y5f6f ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_ret(const<span class="_"> </span>char *, ...);</div><div class="t m0 x32 h57 y5f70 ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>err_sys(const<span class="_"> </span>char *, ...) __attribute__((noreturn));</div><div class="t m0 x32 h57 y3f8f ff1a fs2d fc0 sc0 ls0 ws0">void <span class="_ _68"> </span>log_msg(const<span class="_"> </span>char *, ...);<span class="_ _176"> </span>/* Appendix B */</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
