<div id="pfc8" class="pf w4 h1f" data-page-no="c8"><div class="pc pcc8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bgc8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">166<span class="_ _1b"> </span><span class="ff19">Standar<span class="ls30a">dI<span class="_ _55"></span><span class="ls0">/O <span class="_"> </span>Library<span class="_ _1c9"> </span>Chapter <span class="_"> </span>5</span></span></span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">is_linebuffered(FILE *fp)</div><div class="t m0 x32 h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">return(fp-&gt;_flags &amp; __SLBF);</div><div class="t m0 x32 h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 yaeb ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y16f9 ff1a fs2d fc0 sc0 ls0 ws0">buffer_size(FILE *fp)</div><div class="t m0 x32 h57 y16df ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y16e0 ff1a fs2d fc0 sc0 ls0 ws0">return(fp-&gt;_bf._size);</div><div class="t m0 x32 h57 y16e1 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y16fa ff1a fs2d fc0 sc0 ls0 ws0">#elif defined(_IONBF)</div><div class="t m0 x32 h57 y16fb ff1a fs2d fc0 sc0 ls0 ws0">#ifdef _LP64</div><div class="t m0 x32 h57 y16fc ff1a fs2d fc0 sc0 ls0 ws0">#define _flag __pad[4]</div><div class="t m0 x32 h57 y16fd ff1a fs2d fc0 sc0 ls0 ws0">#define _ptr __pad[1]</div><div class="t m0 x32 h57 y16fe ff1a fs2d fc0 sc0 ls0 ws0">#define _base __pad[2]</div><div class="t m0 x32 h57 y16ff ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h57 y1316 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y1317 ff1a fs2d fc0 sc0 ls0 ws0">is_unbuffered(FILE *fp)</div><div class="t m0 x32 h57 y1318 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1319 ff1a fs2d fc0 sc0 ls0 ws0">return(fp-&gt;_flag &amp; _IONBF);</div><div class="t m0 x32 h57 y131a ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y1700 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y1701 ff1a fs2d fc0 sc0 ls0 ws0">is_linebuffered(FILE *fp)</div><div class="t m0 x32 h57 y1702 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1703 ff1a fs2d fc0 sc0 ls0 ws0">return(fp-&gt;_flag &amp; _IOLBF);</div><div class="t m0 x32 h57 y1704 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y1705 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y1706 ff1a fs2d fc0 sc0 ls0 ws0">buffer_size(FILE *fp)</div><div class="t m0 x32 h57 y1707 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x32 h57 y1708 ff1a fs2d fc0 sc0 ls0 ws0">#ifdef _LP64</div><div class="t m0 x8a h57 y1709 ff1a fs2d fc0 sc0 ls0 ws0">return(fp-&gt;_base - fp-&gt;_ptr);</div><div class="t m0 x32 h57 y170a ff1a fs2d fc0 sc0 ls0 ws0">#else</div><div class="t m0 x8a h57 y170b ff1a fs2d fc0 sc0 ls0 ws0">return(BUFSIZ); /* just a guess */</div><div class="t m0 x32 h57 y16f3 ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x32 h57 y16f4 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y170c ff1a fs2d fc0 sc0 ls0 ws0">#else</div><div class="t m0 x32 h57 y170d ff1a fs2d fc0 sc0 ls0 ws0">#error unknown stdio implementation!</div><div class="t m0 x32 h57 y170e ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x1ca h2d y170f ff18 fs10 fc0 sc0 ls0 ws0">Figure 5.1<span class="_ _0"></span>1<span class="_ _5a"> </span><span class="ff19">Print buffering for various standar<span class="ls136">dI<span class="_ _5"></span><span class="ls0">/O streams</span></span></span></div><div class="t m0 x32 h49 y1710 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _3"></span>that <span class="_ _3"></span>we <span class="_ _3"></span>perform <span class="_ _3"></span>I/O <span class="_ _3"></span>on <span class="_ _3"></span>each <span class="_ _3"></span>stream <span class="_ _3"></span>befor<span class="ls717">ep<span class="_ _8"></span><span class="ls0">rinting <span class="_ _3"></span>its <span class="_ _3"></span>buffering <span class="_ _2"></span>status, <span class="_ _3"></span>since <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h49 y1711 ff19 fs26 fc0 sc0 ls0 ws0">ﬁrst I/O <span class="_ _2"></span>operation <span class="_ _2"></span>usually <span class="_ _2"></span>causes <span class="_ _2"></span>the <span class="_ _2"></span>buffers to <span class="_ _2"></span>be <span class="_ _2"></span>allocated <span class="_ _2"></span>for a <span class="_ _2"></span>stream. <span class="_ _66"> </span>The<span class="_ _66"> </span>structure</div><div class="t m0 x32 h49 y1712 ff19 fs26 fc0 sc0 ls0 ws0">members <span class="_ _2"></span>and <span class="_ _2"></span>the <span class="_ _3"></span>constants <span class="_ _2"></span>used <span class="_ _3"></span>in <span class="_ _2"></span>this <span class="_ _2"></span>example <span class="_ _3"></span>ar<span class="ls718">ed<span class="_ _8"></span><span class="ls0">eﬁned <span class="_ _2"></span>by <span class="_ _3"></span>the <span class="_ _2"></span>implementations <span class="_ _3"></span>of</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
