<div id="pf1e0" class="pf w4 h1f" data-page-no="1e0"><div class="pc pc1e0 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1e0.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">446<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _35"> </span>m<span class="_ _23"></span><span class="ls0">ake<span class="_ _4b"> </span><span class="ff1a">getenv_r<span class="_ _59"> </span></span><span class="ls45">re</span>entrant, <span class="_"> </span>we <span class="_ _e"> </span>changed <span class="_ _e"> </span>the <span class="_"> </span>interface <span class="_ _53"> </span>so <span class="_"> </span>that <span class="_ _53"> </span>the <span class="_"> </span>caller <span class="_ _53"> </span>must</span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">provide <span class="_ _2"></span>its <span class="_ _3"></span>own <span class="_ _3"></span>buffer<span class="_ _6"></span><span class="ls4cf">.T<span class="_ _1d"></span><span class="ls0">hus <span class="_ _3"></span>each <span class="_ _3"></span>thread <span class="_ _2"></span>can <span class="_ _3"></span>use <span class="_ _3"></span>a <span class="_ _3"></span>different <span class="_ _2"></span>buffer <span class="_ _2"></span>to <span class="_ _3"></span>avoid <span class="_ _3"></span>interfering</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">with <span class="_ _2"></span>the <span class="_ _2"></span>others.<span class="_ _61"> </span>Note, <span class="_ _2"></span>however<span class="_ _1"></span><span class="ls92e">,t<span class="_ _4f"></span><span class="ls0">hat <span class="_ _2"></span>this <span class="_ _3"></span>is <span class="_ _2"></span>not <span class="_ _2"></span>enough <span class="_ _2"></span>to <span class="_ _3"></span>make<span class="_ _66"> </span><span class="ff1a">getenv_r<span class="_ _47"> </span></span>thread-safe.</span></span></div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _e"> </span>m<span class="_ _9"></span><span class="ls0">ake<span class="_ _47"> </span><span class="ff1a">getenv_r<span class="_ _66"> </span></span>thread-safe, <span class="_ _2"></span>we <span class="_ _2"></span>need <span class="_ _2"></span>to <span class="_ _2"></span>protect <span class="_ _2"></span>against <span class="_ _2"></span>changes <span class="_ _2"></span>to <span class="_ _3"></span>the <span class="_ _2"></span>environment</span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">while <span class="_ _3"></span>we <span class="_ _3"></span>ar<span class="ls8a3">es<span class="_ _b"></span><span class="ls0">earching <span class="_ _3"></span>for <span class="_ _3"></span>the <span class="_ _3"></span>requested <span class="_ _2"></span>string.<span class="_ _16"> </span><span class="ls5f">We <span class="_ _66"> </span>c<span class="_ _9"></span></span>an <span class="_ _3"></span>use <span class="_ _3"></span>a <span class="_ _3"></span>mutex <span class="_ _3"></span>to <span class="_ _3"></span>serialize <span class="_ _3"></span>access</span></span></div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">to the environment list by<span class="_"> </span><span class="ff1a">getenv_r<span class="_ _80"> </span></span>and<span class="_"> </span><span class="ff1a">putenv</span>.</div><div class="t m0 x3f h2a y135 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _44"> </span>c<span class="_ _9"></span><span class="ls0">ould <span class="_"> </span>have <span class="_"> </span>used <span class="_"> </span>a <span class="_"> </span>reader–writer <span class="_"> </span>lock <span class="_"> </span>to <span class="_"> </span>allow <span class="_"> </span>multiple <span class="_"> </span>concurr<span class="_ _0"></span>ent <span class="_"> </span>calls <span class="_"> </span>to</span></div><div class="t m0 x32 h26 y136 ff1a fsf fc0 sc0 ls0 ws0">getenv_r<span class="ff19 ls429">,b<span class="_ _8"></span><span class="ls0">ut <span class="_ _3"></span>the <span class="_ _3"></span>added <span class="_ _9"></span>concurrency <span class="_ _2"></span>probably <span class="_ _3"></span>wouldn’t <span class="_ _3"></span>improve <span class="_ _3"></span>the <span class="_ _3"></span>performance <span class="_ _3"></span>of</span></span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">our <span class="_ _23"> </span>program <span class="_ _42"> </span>by <span class="_ _23"> </span>very <span class="_ _42"> </span>much, <span class="_ _23"> </span>for <span class="_ _42"> </span>two <span class="_ _42"> </span>reasons. <span class="_ _35"> </span>First,<span class="_ _35"> </span>the <span class="_ _42"> </span>environment <span class="_ _23"></span>list <span class="_ _23"> </span>usually <span class="_ _42"> </span>isn’t</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">very <span class="_ _2"></span>long, <span class="_ _2"></span>so <span class="_ _2"></span>we won’t <span class="_ _2"></span>hold <span class="_ _2"></span>the <span class="_ _2"></span>mutex <span class="_ _2"></span>for <span class="_ _2"></span>too <span class="_ _2"></span>long <span class="_ _2"></span>while <span class="_ _2"></span>we <span class="_ _2"></span>scan <span class="_ _2"></span>the <span class="_ _2"></span>list.<span class="_ _61"> </span>Second, <span class="_ _2"></span>calls</div><div class="t m0 x32 h26 y139 ff19 fsf fc0 sc0 ls0 ws0">to<span class="_ _45"> </span><span class="ff1a">getenv<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">putenv<span class="_ _35"> </span></span>ar<span class="_ _0"></span><span class="lsee6">ei<span class="_ _b"></span><span class="ls0">nfrequent, <span class="_ _3"></span>so <span class="_ _23"></span>if <span class="_ _9"></span>we <span class="_ _23"></span>impr<span class="_ _0"></span>ove <span class="_ _9"></span>their <span class="_ _23"></span>performance, <span class="_ _9"></span>we <span class="_ _9"></span>won’t</span></span></div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">affect the overall performance of the pr<span class="_ _0"></span>ogram very much.</div><div class="t m0 x3f h26 y254 ff19 fsf fc0 sc0 ls0 ws0">Even <span class="_"> </span>though <span class="_"> </span>we <span class="_"> </span>can <span class="_"> </span>make<span class="_ _46"> </span><span class="ff1a">getenv_r<span class="_ _46"> </span></span>thread-safe, <span class="_"> </span>that <span class="_"> </span>doesn’t <span class="_"> </span>mean <span class="_"> </span>that <span class="_"> </span>it <span class="_"> </span>is</div><div class="t m0 x32 h2a y255 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">entrant <span class="_ _9"></span>with <span class="_ _23"></span>r<span class="_ _0"></span>espect <span class="_ _9"></span>to <span class="_ _9"></span>signal <span class="_ _9"></span>handlers.<span class="_ _5a"> </span>If <span class="_ _23"></span>we <span class="_ _9"></span>were<span class="_ _47"> </span>to<span class="_ _45"> </span>use <span class="_ _9"></span>a <span class="_ _23"></span>nonr<span class="_ _0"></span>ecursive <span class="_ _9"></span>mutex, <span class="_ _9"></span>we</span></div><div class="t m0 x32 h26 y13b ff19 fsf fc0 sc0 ls0 ws0">would <span class="_ _42"> </span>run <span class="_ _23"> </span>the <span class="_ _42"> </span>risk <span class="_ _42"> </span>that <span class="_ _42"> </span>a <span class="_ _42"> </span>thread <span class="_ _23"> </span>would <span class="_ _42"> </span>deadlock <span class="_ _42"> </span>itself <span class="_ _42"> </span>if <span class="_ _42"> </span>it <span class="_ _42"> </span>called<span class="_ _44"> </span><span class="ff1a">getenv_r<span class="_ _35"> </span></span>from <span class="_ _42"> </span>a</div><div class="t m0 x32 h2a y13c ff19 fsf fc0 sc0 ls0 ws0">signal <span class="_"> </span>handler<span class="_ _6"></span><span class="lsee7">.I<span class="_ _5d"></span><span class="lsee8">ft<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>signal <span class="_"> </span>handler <span class="_"> </span>interrupted <span class="_ _e"> </span>the <span class="_"> </span>thread <span class="_"> </span>while <span class="_ _e"> </span>it <span class="_"> </span>was <span class="_"> </span>executing</span></span></span></div><div class="t m0 x32 h26 y256 ff1a fsf fc0 sc0 ls0 ws0">getenv_r<span class="ff19">,<span class="_ _44"> </span>we<span class="_ _44"> </span>would <span class="_ _53"> </span>already <span class="_ _42"> </span>be <span class="_ _53"> </span>holding<span class="_ _44"> </span></span>env_mutex<span class="_ _4b"> </span><span class="ff19">locked, <span class="_ _42"> </span>so <span class="_ _53"> </span>another <span class="_ _53"> </span>attempt <span class="_ _53"> </span>to</span></div><div class="t m0 x32 h2a y257 ff19 fsf fc0 sc0 ls0 ws0">lock <span class="_ _53"> </span>it <span class="_ _53"> </span>would <span class="_ _53"> </span>block, <span class="_ _e"> </span>causing <span class="_ _53"> </span>the <span class="_ _53"> </span>thread <span class="_ _53"> </span>to <span class="_ _53"> </span>deadlock.<span class="_ _65"> </span>Thus <span class="_ _53"> </span>we <span class="_ _53"> </span>must <span class="_ _e"> </span>use <span class="_ _53"> </span>a <span class="_ _53"> </span>recursive</div><div class="t m0 x32 h2a y258 ff19 fsf fc0 sc0 ls0 ws0">mutex to prevent other thr<span class="_ _0"></span>eads from changing the data str<span class="_ _0"></span>uctures while we look at them</div><div class="t m0 x32 h2a y161 ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _47"> </span>to <span class="_ _47"> </span>prevent <span class="_ _47"> </span>deadlocks <span class="_ _47"> </span>from <span class="_ _47"> </span>signal <span class="_ _47"> </span>handlers.<span class="_ _5f"> </span>The <span class="_ _45"> </span>pr<span class="_ _0"></span>oblem <span class="_ _47"> </span>is <span class="_ _47"> </span>that <span class="_ _47"> </span>the <span class="_ _45"> </span>pthread</div><div class="t m0 x32 h2a y162 ff19 fsf fc0 sc0 ls0 ws0">functions <span class="_ _53"> </span>ar<span class="lsee9">en<span class="_ _55"></span><span class="ls0">ot <span class="_ _e"> </span>guaranteed <span class="_ _53"> </span>to <span class="_ _53"> </span>be <span class="_ _e"> </span>async-signal <span class="_ _53"> </span>safe, <span class="_ _e"> </span>so <span class="_ _53"> </span>we <span class="_ _53"> </span>can’t <span class="_ _e"> </span>use <span class="_ _53"> </span>them <span class="_ _e"> </span>to <span class="_ _53"> </span>make</span></span></div><div class="t m0 x32 h2a y1db ff19 fsf fc0 sc0 ls0 ws0">another function async-signal safe.</div><div class="t m0 x35 h4b y379a ff16 fs27 fc0 sc0 ls0 ws0">12.6 <span class="_ _93"> </span>Thread</div><div class="t m0 x2d h4b y379b ff16 fs27 fc0 sc0 ls0 ws0">-</div><div class="t m0 x1a7 h4b y379a ff16 fs27 fc0 sc0 ls0 ws0">Speciﬁc <span class="_"> </span>Data</div><div class="t m0 x32 h49 y379c ff19 fs26 fc0 sc0 ls0 ws0">Thread-speciﬁc data, <span class="_ _2"></span>also <span class="_ _2"></span>known <span class="_ _2"></span>as <span class="_ _2"></span>thread-private data, <span class="_ _2"></span>is <span class="_ _2"></span>a <span class="_ _2"></span>mechanism <span class="_ _2"></span>for <span class="_ _2"></span>storing <span class="_ _2"></span>and</div><div class="t m0 x32 h49 y379d ff19 fs26 fc0 sc0 ls0 ws0">ﬁnding <span class="_ _44"> </span>data <span class="_ _4b"> </span>associated <span class="_ _4b"> </span>with <span class="_ _4b"> </span>a <span class="_ _4b"> </span>particular <span class="_ _4b"> </span>thread. <span class="_ _54"> </span>The<span class="_ _65"> </span><span class="lscc">re<span class="_ _2"></span></span>ason <span class="_ _4b"> </span>we <span class="_ _44"> </span>call <span class="_ _4b"> </span>the <span class="_ _4b"> </span>data</div><div class="t m0 x32 h49 y379e ff19 fs26 fc0 sc0 ls0 ws0">thread-speciﬁc, or thr<span class="_ _0"></span>ead-private, is that we’d like each thread to access its own separate</div><div class="t m0 x32 h49 y379f ff19 fs26 fc0 sc0 ls0 ws0">copy of the data, without worrying about synchronizing access with other thr<span class="_ _0"></span>eads.</div><div class="t m0 x3f h49 y37a0 ff19 fs26 fc0 sc0 ls0 ws0">Many <span class="_ _53"> </span>people <span class="_"> </span>went <span class="_ _53"> </span>to <span class="_ _e"> </span>a <span class="_ _e"> </span>lot <span class="_ _e"> </span>of <span class="_ _e"> </span>trouble <span class="_ _53"> </span>designing <span class="_ _e"> </span>a <span class="_ _e"> </span>threads <span class="_ _53"> </span>model <span class="_ _e"> </span>that <span class="_ _e"> </span>promotes</div><div class="t m0 x32 h49 y37a1 ff19 fs26 fc0 sc0 ls0 ws0">sharing <span class="_ _3"></span>process <span class="_ _2"></span>data <span class="_ _9"></span>and <span class="_ _3"></span>attributes.<span class="_ _16"> </span>So <span class="_ _3"></span>why <span class="_ _9"></span>would <span class="_ _3"></span>anyone <span class="_ _3"></span>want <span class="_ _3"></span>to <span class="_ _3"></span>promote <span class="_ _3"></span>interfaces</div><div class="t m0 x32 h49 y37a2 ff19 fs26 fc0 sc0 ls0 ws0">that prevent sharing in this model?<span class="_ _59"> </span>Ther<span class="lsd3">ea<span class="_ _4f"></span><span class="lscc">re <span class="_ _3"></span>t<span class="ls0">wo reasons.</span></span></span></div><div class="t m0 x3f h49 y37a3 ff19 fs26 fc0 sc0 ls0 ws0">First, <span class="_ _9"></span>sometimes <span class="_ _3"></span>we <span class="_ _9"></span>need <span class="_ _9"></span>to <span class="_ _9"></span>maintain <span class="_ _9"></span>data <span class="_ _9"></span>on <span class="_ _3"></span>a <span class="_ _9"></span>per-thread <span class="_ _3"></span>basis.<span class="_ _5a"> </span>Since <span class="_ _9"></span>there<span class="_ _47"> </span>is<span class="_ _45"> </span>no</div><div class="t m0 x32 h49 y37a4 ff19 fs26 fc0 sc0 ls0 ws0">guarantee <span class="_ _53"> </span>that <span class="_ _53"> </span>thread <span class="_ _42"> </span>IDs <span class="_ _53"> </span>ar<span class="lseea">es<span class="_ _c"></span><span class="ls0">mall, <span class="_ _53"> </span>sequential <span class="_ _53"> </span>integers, <span class="_ _53"> </span>we <span class="_ _53"> </span>can’t <span class="_ _53"> </span>simply <span class="_ _53"> </span>allocate <span class="_ _53"> </span>an</span></span></div><div class="t m0 x32 h49 y37a5 ff19 fs26 fc0 sc0 ls0 ws0">array <span class="_ _9"></span>of <span class="_ _3"></span>per-thread <span class="_ _3"></span>data <span class="_ _9"></span>and <span class="_ _9"></span>use <span class="_ _9"></span>the <span class="_ _9"></span>thread <span class="_ _3"></span>ID <span class="_ _9"></span>as <span class="_ _9"></span>the <span class="_ _9"></span>index.<span class="_ _16"> </span>Even <span class="_ _9"></span>if <span class="_ _9"></span>we <span class="_ _9"></span>could <span class="_ _9"></span>depend</div><div class="t m0 x32 h49 y37a6 ff19 fs26 fc0 sc0 ls0 ws0">on <span class="_ _42"> </span>small, <span class="_ _42"> </span>sequential <span class="_ _53"> </span>thread <span class="_ _42"> </span>IDs, <span class="_ _42"> </span>we’d <span class="_ _42"> </span>like <span class="_ _53"> </span>a <span class="_ _42"> </span>little <span class="_ _42"> </span>extra <span class="_ _53"> </span>protection <span class="_ _42"> </span>so <span class="_ _42"> </span>that <span class="_ _42"> </span>one <span class="_ _53"> </span>thread</div><div class="t m0 x32 h49 y37a7 ff19 fs26 fc0 sc0 ls0 ws0">can’t mess with another<span class="_ _3"></span>’s data.</div><div class="t m0 x3f h49 y37a8 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _9"></span>second <span class="_ _9"></span>reason <span class="_ _9"></span>for <span class="_ _9"></span>thread-private <span class="_ _9"></span>data <span class="_ _9"></span>is <span class="_ _9"></span>to <span class="_ _9"></span>provide <span class="_ _9"></span>a <span class="_ _9"></span>mechanism <span class="_ _9"></span>for <span class="_ _23"></span>adapting</div><div class="t m0 x32 h49 y37a9 ff19 fs26 fc0 sc0 ls0 ws0">process-based interfaces to a multithr<span class="_ _0"></span>eaded environment. <span class="_"> </span>An<span class="_"> </span>obvious example of this is</div><div class="t m0 x32 h4d y37aa ff1a fs26 fc0 sc0 ls0 ws0">errno<span class="ff19 lse9d">.R<span class="_ _5d"></span><span class="ls0">ecall <span class="_"> </span>the <span class="_"> </span>discussion <span class="_ _e"> </span>of<span class="_ _59"> </span><span class="ff1a">errno<span class="_ _59"> </span></span>in <span class="_"> </span>Section <span class="_"> </span>1.7.<span class="_ _48"> </span>Older <span class="_"> </span>interfaces <span class="_ _e"> </span>(befor<span class="lseeb">et<span class="_ _4a"></span><span class="ls0">he</span></span></span></span></div><div class="t m0 x32 h4d y37ab ff19 fs26 fc0 sc0 ls0 ws0">advent <span class="_ _42"> </span>of <span class="_ _42"> </span>threads) <span class="_ _42"> </span>deﬁned<span class="_ _35"> </span><span class="ff1a">errno<span class="_ _44"> </span></span>as <span class="_ _42"> </span>an <span class="_ _42"> </span>integer <span class="_ _42"> </span>that <span class="_ _42"> </span>is <span class="_ _53"> </span>accessible <span class="_ _42"> </span>globally <span class="_ _42"> </span>within <span class="_ _42"> </span>the</div><div class="t m0 x32 h4d y37ac ff19 fs26 fc0 sc0 ls0 ws0">context <span class="_ _53"> </span>of <span class="_ _53"> </span>a <span class="_ _53"> </span>process. <span class="_ _44"> </span>System<span class="_ _44"> </span>calls <span class="_ _53"> </span>and <span class="_ _53"> </span>library <span class="_ _53"> </span>routines <span class="_ _42"> </span>set<span class="_ _4b"> </span><span class="ff1a">errno<span class="_ _44"> </span></span>as <span class="_ _53"> </span>a <span class="_ _53"> </span>side <span class="_ _53"> </span>effect <span class="_ _42"> </span>of</div><div class="t m0 x32 h49 y37ad ff19 fs26 fc0 sc0 ls0 ws0">failing. <span class="_ _59"> </span>T<span class="_ _6"></span><span class="lseec">om<span class="_ _4a"></span><span class="ls0">ake <span class="_"> </span>it <span class="_"> </span>possible <span class="_ _53"> </span>for <span class="_"> </span>threads <span class="_ _e"> </span>to <span class="_"> </span>use <span class="_ _e"> </span>these <span class="_"> </span>same <span class="_ _e"> </span>system <span class="_"> </span>calls <span class="_ _e"> </span>and <span class="_"> </span>library</span></span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:611.328903px;width:158.699699px;height:20.760010px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
