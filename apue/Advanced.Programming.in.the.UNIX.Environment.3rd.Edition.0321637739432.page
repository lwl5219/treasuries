<div id="pf1b0" class="pf w4 h1f" data-page-no="1b0"><div class="pc pc1b0 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1b0.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">398<span class="_ _1b"> </span><span class="ff19">Threads <span class="_ _24b"> </span>Chapter<span class="_ _78"> </span><span class="ls7ed">11</span></span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ad <span class="_ _66"> </span>the <span class="_"> </span>variable, <span class="_ _66"> </span>thread <span class="_"> </span>B <span class="_"> </span>acquires <span class="_"> </span>a <span class="_"> </span>lock.<span class="_ _60"> </span>Similarly<span class="_ _6"></span><span class="lsdc8">,w<span class="_ _5b"></span><span class="ls0">hen <span class="_"> </span>thread <span class="_"> </span>A <span class="_"> </span>updates <span class="_"> </span>the</span></span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">variable, <span class="_ _23"></span>it <span class="_ _23"> </span>acquires <span class="_ _23"></span>the <span class="_ _23"></span>same <span class="_ _23"></span>lock.<span class="_ _51"> </span>Thus <span class="_ _23"></span>thread <span class="_ _23"></span>B <span class="_ _23"></span>will <span class="_ _23"></span>be <span class="_ _23"></span>unable <span class="_ _23"> </span>to <span class="_ _23"> </span>read <span class="_ _23"></span>the <span class="_ _23"></span>variable</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">until thread A r<span class="_ _0"></span>eleases the lock.</div><div class="t m0 x10 h2d y32b7 ff19 fs10 fc0 sc0 ls0 ws0">Thread A</div><div class="t m0 xb5 h2e y32b8 ff19 fs11 fc0 sc0 ls293 ws0">re<span class="ls0">ad</span></div><div class="t m0 x121 h2f y32b9 ff19 fs12 fc0 sc0 ls0 ws0">write</div><div class="t m0 x9c h141 y32ba ff19 fsaf fc0 sc0 ls0 ws0">1</div><div class="t m0 x121 h30 y32bb ff19 fs13 fc0 sc0 ls0 ws0">write</div><div class="t m0 x9c h13f y32bc ff19 fsad fc0 sc0 ls0 ws0">2</div><div class="t m0 x1e1 h31 y32bd ff19 fs14 fc0 sc0 ls0 ws0">Thread B</div><div class="t m0 x80 h32 y32be ff19 fs15 fc0 sc0 ls4d2 ws0">re<span class="ls0">ad</span></div><div class="t m0 x80 h33 y32bf ff19 fs16 fc0 sc0 lscd8 ws0">re<span class="ls0">ad</span></div><div class="t m0 x3d h83 y32c0 ff19 fs36 fc0 sc0 ls0 ws0">time</div><div class="t m0 xea h83 y32c1 ff18 fs36 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.8<span class="_ _d9"> </span><span class="ff19 ls872">Tw<span class="_ _9"></span><span class="lsdc9">ot<span class="_ _84"></span><span class="ls0">hreads synchronizing memory access</span></span></span></div><div class="t m0 x3f h74 y32c2 ff19 fs38 fc0 sc0 lsdc6 ws0">We <span class="_ _53"> </span>a<span class="_ _23"></span><span class="ls0">lso need <span class="_ _2"></span>to synchronize two <span class="_ _2"></span>or <span class="_ _2"></span>mor<span class="lsdca">et<span class="_ _4f"></span><span class="ls0">hreads that might <span class="_ _2"></span>try <span class="_ _2"></span>to modify <span class="_ _2"></span>the <span class="_ _2"></span>same</span></span></span></div><div class="t m0 x32 h74 y32c3 ff19 fs38 fc0 sc0 ls0 ws0">variable <span class="_ _45"> </span>at <span class="_ _45"> </span>the <span class="_ _45"> </span>same <span class="_ _45"> </span>time.<span class="_ _5c"> </span>Consider <span class="_ _45"> </span>the <span class="_ _45"> </span>case <span class="_ _45"> </span>in <span class="_ _45"> </span>which <span class="_ _35"> </span>we <span class="_ _45"> </span>incr<span class="_ _0"></span>ement <span class="_ _45"> </span>a <span class="_ _45"> </span>variable</div><div class="t m0 x32 h74 y32c4 ff19 fs38 fc0 sc0 ls0 ws0">(Figur<span class="lsdcb">e1<span class="_ _b"></span><span class="ls0">1.9). <span class="_"> </span>The<span class="_"> </span>increment operation is usually broken down into thr<span class="_ _0"></span>ee steps.</span></span></div><div class="t m0 x3f h74 y32c5 ff19 fs38 fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Read<span class="_"> </span>the memory location into a register<span class="_ _6"></span>.</div><div class="t m0 x3f h74 y32c6 ff19 fs38 fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>Increment the value in the r<span class="_ _0"></span>egister<span class="_ _6"></span>.</div><div class="t m0 x3f h74 y32c7 ff19 fs38 fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>W<span class="_ _6"></span>rite the new value back to the memory location.</div><div class="t m0 x3f h74 y32c8 ff19 fs38 fc0 sc0 ls0 ws0">If <span class="_ _9"></span>two <span class="_ _9"></span>threads <span class="_ _9"></span>try <span class="_ _9"></span>to <span class="_ _9"></span>increment <span class="_ _3"></span>the <span class="_ _9"></span>same <span class="_ _23"></span>variable <span class="_ _9"></span>at <span class="_ _9"></span>almost <span class="_ _9"></span>the <span class="_ _9"></span>same <span class="_ _9"></span>time <span class="_ _9"></span>without</div><div class="t m0 x32 h74 y32c9 ff19 fs38 fc0 sc0 ls0 ws0">synchronizing with <span class="_ _2"></span>each <span class="_ _2"></span>other<span class="_ _1"></span><span class="lsdcc">,t<span class="_ _4f"></span><span class="ls0">he <span class="_ _2"></span>results <span class="_ _2"></span>can <span class="_ _2"></span>be <span class="_ _2"></span>inconsistent.<span class="_ _61"> </span><span class="lsdc6">Yo<span class="_ _9"></span><span class="lsdcd">ue<span class="_ _4f"></span><span class="ls0">nd <span class="_ _2"></span>up <span class="_ _2"></span>with <span class="_ _3"></span>a <span class="_ _2"></span>value</span></span></span></span></span></div><div class="t m0 x32 h74 y32ca ff19 fs38 fc0 sc0 ls0 ws0">that is <span class="_ _2"></span>either one <span class="_ _2"></span>or two <span class="_ _2"></span>greater than before, depending <span class="_ _2"></span>on the <span class="_ _2"></span>value observed <span class="_ _2"></span>when the</div><div class="t m0 x32 h74 y32cb ff19 fs38 fc0 sc0 ls0 ws0">second <span class="_ _3"></span>thread <span class="_ _3"></span>starts <span class="_ _9"></span>its <span class="_ _9"></span>operation.<span class="_ _16"> </span>If <span class="_ _9"></span>the <span class="_ _9"></span>second <span class="_ _3"></span>thread <span class="_ _3"></span>performs <span class="_ _9"></span>step <span class="_ _9"></span>1 <span class="_ _3"></span>befor<span class="lsdce">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>ﬁrst</span></span></div><div class="t m0 x32 h74 y32cc ff19 fs38 fc0 sc0 ls0 ws0">thread <span class="_ _23"></span>performs <span class="_ _23"></span>step <span class="_ _23"> </span>3, <span class="_ _42"> </span>the <span class="_ _23"> </span>second <span class="_ _23"> </span>thread <span class="_ _23"> </span>will <span class="_ _23"> </span>read <span class="_ _23"> </span>the <span class="_ _42"> </span>same <span class="_ _23"></span>initial <span class="_ _23"> </span>value <span class="_ _42"> </span>as <span class="_ _23"></span>the <span class="_ _23"> </span>ﬁrst</div><div class="t m0 x32 h74 y32cd ff19 fs38 fc0 sc0 ls0 ws0">thread, incr<span class="_ _0"></span>ement it, and write it back, with no net ef<span class="_ _0"></span>fect.</div><div class="t m0 x3f h74 y32ce ff19 fs38 fc0 sc0 ls0 ws0">If <span class="_ _2"></span>the <span class="_ _3"></span>modiﬁcation <span class="_ _3"></span>is <span class="_ _2"></span>atomic, <span class="_ _3"></span>then <span class="_ _3"></span>ther<span class="lsdcf">ei<span class="_ _8"></span><span class="ls0">sn’t <span class="_ _3"></span>a <span class="_ _2"></span>race.<span class="_ _16"> </span>In <span class="_ _3"></span>the <span class="_ _2"></span>previous <span class="_ _2"></span>example, <span class="_ _3"></span>if <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h74 y32cf ff19 fs38 fc0 sc0 ls0 ws0">increment takes <span class="_ _2"></span>only <span class="_ _2"></span>one <span class="_ _2"></span>memory <span class="_ _2"></span>cycle, <span class="_ _2"></span>then no <span class="_ _2"></span>race <span class="_ _2"></span>exists.<span class="_ _61"> </span>If <span class="_ _2"></span>our <span class="_ _2"></span>data <span class="_ _2"></span>always <span class="_ _2"></span>appears</div><div class="t m0 x32 h142 y32d0 ff19 fs38 fc0 sc0 ls0 ws0">to <span class="_ _59"> </span>be<span class="_ _60"> </span><span class="ff1b">sequentially <span class="_ _59"> </span>consistent</span><span class="lsdd0">,t<span class="_ _5d"></span><span class="ls0">hen <span class="_ _46"> </span>we <span class="_ _59"> </span>need <span class="_ _46"> </span>no <span class="_ _59"> </span>additional <span class="_ _59"> </span>synchronization. <span class="_ _60"> </span>Our</span></span></div><div class="t m0 x32 h74 y32d1 ff19 fs38 fc0 sc0 ls0 ws0">operations <span class="_ _60"> </span>ar<span class="lsdd1">es<span class="_ _18c"></span><span class="ls0">equentially <span class="_ _50"> </span>consistent <span class="_ _60"> </span>when <span class="_ _60"> </span>multiple <span class="_ _60"> </span>threads <span class="_ _60"> </span>can’t <span class="_ _60"> </span>observe</span></span></div><div class="t m0 x32 h74 y32d2 ff19 fs38 fc0 sc0 ls0 ws0">inconsistencies <span class="_ _45"> </span>in <span class="_ _45"> </span>our <span class="_ _45"> </span>data.<span class="_ _5f"> </span>In <span class="_ _45"> </span>modern <span class="_ _45"> </span>computer <span class="_ _45"> </span>systems, <span class="_ _45"> </span>memory <span class="_ _45"> </span>accesses <span class="_ _45"> </span>take</div><div class="t m0 x32 h74 y32d3 ff19 fs38 fc0 sc0 ls0 ws0">multiple <span class="_ _44"> </span>bus <span class="_ _4b"> </span>cycles, <span class="_ _4b"> </span>and <span class="_ _4b"> </span>multiprocessors <span class="_ _44"> </span>generally <span class="_ _4b"> </span>interleave <span class="_ _4b"> </span>bus <span class="_ _4b"> </span>cycles <span class="_ _44"> </span>among</div><div class="t m0 x32 h74 y32d4 ff19 fs38 fc0 sc0 ls0 ws0">multiple processors, so we ar<span class="_ _0"></span>en’t guaranteed that our data is sequentially consistent.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
