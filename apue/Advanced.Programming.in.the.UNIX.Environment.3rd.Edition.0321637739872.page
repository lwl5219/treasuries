<div id="pf368" class="pf w4 h1f" data-page-no="368"><div class="pc pc368 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg368.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">838<span class="_ _1b"> </span><span class="ff19">Communicating <span class="_"> </span>with <span class="_"> </span>a <span class="_"> </span>Network <span class="_"> </span>Printer<span class="_ _23b"> </span>Chapter <span class="_"> </span>21</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">786 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">787 <span class="_ _15"> </span>ssize_t<span class="_"> </span>nr;</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">788 <span class="_ _15"> </span>char<span class="_ _15"> </span>*bp = *bpp;</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">789 <span class="_ _15"> </span>int <span class="_ _15"> </span>bsz<span class="_"> </span><span class="ls15c">=*<span class="_ _1d"></span><span class="ls0">bszp;</span></span></div><div class="t m0 x32 h57 y847 ff1a fs2d fc0 sc0 ls0 ws0">790 <span class="_ _15"> </span>if<span class="_"> </span>(off &gt;= bsz) {</div><div class="t m0 x32 h57 y13a1 ff1a fs2d fc0 sc0 ls0 ws0">791 <span class="_ _186"> </span>bsz<span class="_"> </span>+= IOBUFSZ;</div><div class="t m0 x32 h57 y1fb8 ff1a fs2d fc0 sc0 ls0 ws0">792 <span class="_ _186"> </span>if<span class="_"> </span>((bp = realloc(*bpp, bsz)) == NULL)</div><div class="t m0 x32 h57 y1fb9 ff1a fs2d fc0 sc0 ls0 ws0">793 <span class="_ _82"> </span>log_sys(&quot;readmore:<span class="_"> </span>can’t allocate bigger read buffer&quot;);</div><div class="t m0 x32 h57 y1fba ff1a fs2d fc0 sc0 ls0 ws0">794 <span class="_ _186"> </span>*bszp<span class="_"> </span><span class="ls15c">=b<span class="_ _1d"></span><span class="ls0">sz;</span></span></div><div class="t m0 x32 h57 y1fbb ff1a fs2d fc0 sc0 ls0 ws0">795 <span class="_ _186"> </span>*bpp<span class="_"> </span><span class="ls15c">=b<span class="_ _1d"></span><span class="ls0">p;</span></span></div><div class="t m0 x32 h57 y1fbc ff1a fs2d fc0 sc0 ls0 ws0">796 <span class="_ _15"> </span>}</div><div class="t m0 x32 h57 y1fbd ff1a fs2d fc0 sc0 ls0 ws0">797 <span class="_ _15"> </span>if<span class="_"> </span>((nr = tread(sockfd, &amp;bp[off], bsz-off, 1)) &gt; 0)</div><div class="t m0 x32 h57 y1fbe ff1a fs2d fc0 sc0 ls0 ws0">798 <span class="_ _186"> </span>return(off+nr);</div><div class="t m0 x32 h57 y1fbf ff1a fs2d fc0 sc0 ls0 ws0">799 <span class="_ _15"> </span>else</div><div class="t m0 x32 h57 y1fc0 ff1a fs2d fc0 sc0 ls0 ws0">800 <span class="_ _186"> </span>return(-1);</div><div class="t m0 x32 h57 y1fc1 ff1a fs2d fc0 sc0 ls0 ws0">801 <span class="_ _d9"> </span>}</div><div class="t m0 x32 h57 y1cc9 ff1a fs2d fc0 sc0 ls0 ws0">802 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y57a4 ff1a fs2d fc0 sc0 ls0 ws0">803 <span class="_ _68"> </span>*<span class="_"> </span>Read and parse the response from the printer.<span class="_ _3a"> </span>Return 1</div><div class="t m0 x32 h57 y458a ff1a fs2d fc0 sc0 ls0 ws0">804 <span class="_ _68"> </span>*<span class="_"> </span>if the request was successful, and 0 otherwise.</div><div class="t m0 x32 h57 y458b ff1a fs2d fc0 sc0 ls0 ws0">805 <span class="_ _68"> </span>*</div><div class="t m0 x32 h57 y458c ff1a fs2d fc0 sc0 ls0 ws0">806 <span class="_ _68"> </span>*<span class="_"> </span>LOCKING: none.</div><div class="t m0 x32 h57 y2ada ff1a fs2d fc0 sc0 ls0 ws0">807 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y2adb ff1a fs2d fc0 sc0 ls0 ws0">808 <span class="_ _d9"> </span>int</div><div class="t m0 x32 h57 y2adc ff1a fs2d fc0 sc0 ls0 ws0">809 <span class="_ _d9"> </span>printer_status(int<span class="_"> </span>sfd, struct job *jp)</div><div class="t m0 x32 h57 y2add ff1a fs2d fc0 sc0 ls0 ws0">810 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y2ade ff1a fs2d fc0 sc0 ls0 ws0">811 <span class="_ _15"> </span>int<span class="_ _166"> </span>i, success, code, len, found, bufsz, datsz;</div><div class="t m0 x32 h57 y2c66 ff1a fs2d fc0 sc0 ls0 ws0">812 <span class="_ _15"> </span>int32_t<span class="_ _176"> </span>jobid;</div><div class="t m0 x32 h57 y2c67 ff1a fs2d fc0 sc0 ls0 ws0">813 <span class="_ _15"> </span>ssize_t<span class="_ _176"> </span>nr;</div><div class="t m0 x32 h57 y573f ff1a fs2d fc0 sc0 ls0 ws0">814 <span class="_ _15"> </span>char<span class="_ _82"> </span>*bp, *cp, *statcode, *reason, *contentlen;</div><div class="t m0 x32 h57 y57b5 ff1a fs2d fc0 sc0 ls0 ws0">815 <span class="_ _15"> </span>struct<span class="_"> </span>ipp_hdr <span class="_"> </span>*hp;</div><div class="t m0 x32 h57 y2028 ff1a fs2d fc0 sc0 ls0 ws0">816 <span class="_ _15"> </span>/*</div><div class="t m0 x32 h57 y2029 ff1a fs2d fc0 sc0 ls0 ws0">817 <span class="_ _8a"> </span>*<span class="_"> </span>Read the HTTP header followed by the IPP response header.</div><div class="t m0 x32 h57 y202a ff1a fs2d fc0 sc0 ls0 ws0">818 <span class="_ _8a"> </span>*<span class="_"> </span>They can be returned in multiple read attempts.<span class="_ _d9"> </span>Use the</div><div class="t m0 x32 h57 y4c81 ff1a fs2d fc0 sc0 ls0 ws0">819 <span class="_ _8a"> </span>*<span class="_"> </span>Content-Length specifier to determine how much to read.</div><div class="t m0 x32 h57 y4c82 ff1a fs2d fc0 sc0 ls0 ws0">820 <span class="_ _8a"> </span>*/</div><div class="t m0 x32 h49 y5ca9 ff19 fs26 fc0 sc0 ls0 ws0">[786 <span class="_ _a"></span>– <span class="_ _a"></span>801]<span class="_ _65"> </span>If <span class="_ _2"></span>we’re<span class="_ _47"> </span>at<span class="_ _47"> </span>the <span class="_ _3"></span>end <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>buffer<span class="_ _6"></span>,<span class="_ _47"> </span>we<span class="_ _47"> </span>reallocate <span class="_ _2"></span>a <span class="_ _3"></span>bigger <span class="_ _3"></span>buffer <span class="_ _2"></span>and <span class="_ _3"></span>return <span class="_ _2"></span>the</div><div class="t m0 x11a h4d y5caa ff19 fs26 fc0 sc0 ls0 ws0">new <span class="_ _45"> </span>starting <span class="_ _47"> </span>address <span class="_ _45"> </span>and <span class="_ _45"> </span>size <span class="_ _47"> </span>through <span class="_ _45"> </span>the<span class="_ _16"> </span><span class="ff1a">bpp<span class="_"> </span></span>and<span class="_ _16"> </span><span class="ff1a">bszp<span class="_"> </span></span>parameters,</div><div class="t m0 x11a h49 y5cab ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">spectively<span class="_ _6"></span><span class="ls17d7">.W<span class="_ _52"></span><span class="ls17d8">er<span class="_ _b"></span><span class="ls0">ead <span class="_ _9"></span>as <span class="_ _3"></span>much <span class="_ _3"></span>as <span class="_ _9"></span>the <span class="_ _3"></span>buffer <span class="_ _3"></span>will <span class="_ _3"></span>hold, <span class="_ _3"></span>starting <span class="_ _9"></span>at <span class="_ _3"></span>the <span class="_ _3"></span>end <span class="_ _3"></span>of</span></span></span></span></div><div class="t m0 x11a h49 y5cac ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _23"></span>data <span class="_ _9"></span>already <span class="_ _9"></span>in <span class="_ _23"> </span>the <span class="_ _23"></span>buffer<span class="_ _6"></span><span class="ls17d9">,a<span class="_ _b"></span><span class="ls0">nd <span class="_ _9"></span>return <span class="_ _9"></span>the <span class="_ _23"> </span>new <span class="_ _23"></span>end-of-data <span class="_ _9"></span>offset <span class="_ _23"></span>in <span class="_ _9"></span>the</span></span></div><div class="t m0 x11a h4d y5cad ff19 fs26 fc0 sc0 ls0 ws0">buffer<span class="_ _6"></span><span class="ls199">.I<span class="_ _4a"></span><span class="lsd3">ft<span class="_ _d"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">read<span class="_ _80"> </span></span>fails or the timeout expires, we return<span class="_"> </span><span class="ff20">−</span>1.</span></span></span></div><div class="t m0 x32 h4d y5cae ff19 fs26 fc0 sc0 ls0 ws0">[802 <span class="_ _a"></span>– <span class="_ _a"></span>820]<span class="_ _65"> </span>The<span class="_ _35"> </span><span class="ff1a">printer_status<span class="_ _35"> </span></span>function <span class="_ _23"> </span>reads <span class="_ _23"> </span>the <span class="_ _42"> </span>printer<span class="_ _3"></span>’s <span class="_ _42"> </span>response <span class="_ _23"></span>to <span class="_ _23"></span>a <span class="_ _23"> </span>print-job</div><div class="t m0 x11a h49 y5caf ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">quest. <span class="_ _61"> </span>W<span class="_ _6"></span><span class="ls17da">ed<span class="_ _5b"></span><span class="ls0">on’t <span class="_ _66"> </span>know <span class="_ _66"> </span>how <span class="_ _66"> </span>the <span class="_"> </span>printer <span class="_ _66"> </span>will <span class="_ _66"> </span>respond; <span class="_"> </span>it <span class="_ _66"> </span>might <span class="_ _66"> </span>send <span class="_"> </span>a</span></span></span></div><div class="t m0 x11a h49 y5cb0 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">sponse <span class="_ _9"></span>in <span class="_ _3"></span>multiple <span class="_ _3"></span>messages, <span class="_ _3"></span>send <span class="_ _9"></span>the <span class="_ _3"></span>complete <span class="_ _3"></span>response <span class="_ _3"></span>in <span class="_ _3"></span>one <span class="_ _3"></span>message,</span></div><div class="t m0 x11a h4d y2034 ff19 fs26 fc0 sc0 ls0 ws0">or <span class="_ _23"> </span>include <span class="_ _23"> </span>intermediate <span class="_ _42"> </span>acknowledgements, <span class="_ _23"> </span>such <span class="_ _42"> </span>as <span class="_ _23"></span>HTTP<span class="_ _35"> </span><span class="ff1a">100 <span class="_ _5"></span>Continue</span></div><div class="t m0 x11a h49 y2035 ff19 fs26 fc0 sc0 ls0 ws0">messages. <span class="_"> </span>W<span class="_ _6"></span><span class="lsd3">en<span class="_ _d"></span><span class="ls0">eed to handle all these possibilities.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
