<div id="pf18f" class="pf w4 h1f" data-page-no="18f"><div class="pc pc18f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg18f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.17<span class="_ _27a"> </span><span class="ff1a">abort<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">365</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _44"> </span>t<span class="_ _9"></span><span class="ls0">est <span class="_"> </span>each <span class="_"> </span>of <span class="_"> </span>the <span class="_"> </span>global <span class="_"> </span>ﬂags <span class="_"> </span>befor<span class="_ _0"></span><span class="lsb52">ec<span class="_ _4a"></span><span class="ls0">alling<span class="_ _59"> </span><span class="ff1a">read<span class="_ _46"> </span></span>and <span class="_"> </span>again <span class="_"> </span>if<span class="_ _59"> </span><span class="ff1a">read<span class="_ _46"> </span></span><span class="ls45">re</span>turns <span class="_"> </span>an</span></span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">interrupted <span class="_ _2"></span>system <span class="_ _2"></span>call <span class="_ _3"></span>error<span class="_ _6"></span><span class="lscef">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>problem <span class="_ _2"></span>occurs <span class="_ _2"></span>if <span class="_ _3"></span>either <span class="_ _2"></span>signal <span class="_ _3"></span>is <span class="_ _2"></span>caught <span class="_ _2"></span>between <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">ﬁrst <span class="_ _9"></span>two<span class="_ _45"> </span><span class="ff1a">if<span class="_ _47"> </span></span>statements <span class="_ _9"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>subsequent <span class="_ _9"></span>call <span class="_ _3"></span>to<span class="_ _45"> </span><span class="ff1a">read</span><span class="lscf0">.S<span class="_ _62"></span><span class="ls0">ignals <span class="_ _9"></span>occurring <span class="_ _9"></span>in <span class="_ _9"></span>her<span class="lscf1">ea<span class="_ _b"></span><span class="ls45">re</span></span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">lost, <span class="_ _2"></span>as <span class="_ _2"></span>indicated <span class="_ _2"></span>by <span class="_ _2"></span>the <span class="_ _3"></span>code <span class="_ _2"></span>comment.<span class="_ _61"> </span>The <span class="_ _2"></span>signal <span class="_ _2"></span>handlers <span class="_ _3"></span>ar<span class="lscf2">ec<span class="_ _8"></span><span class="ls0">alled, <span class="_ _2"></span>and <span class="_ _2"></span>they <span class="_ _3"></span>set <span class="_ _2"></span>the</span></span></div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">appropriate global variable, <span class="_ _2"></span>but the<span class="_ _66"> </span><span class="ff1a">read<span class="_ _66"> </span></span>never <span class="_ _2"></span>returns (unless some <span class="_ _2"></span>data <span class="_ _2"></span>is ready to <span class="_ _2"></span>be</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ad).</span></div><div class="t m0 x3f h2a y135 ff19 fsf fc0 sc0 ls0 ws0">What we would like to be able to do is the following sequence of steps, in order<span class="_ _6"></span>.</div><div class="t m0 x3f h26 y407 ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>Block<span class="_"> </span><span class="ff1a">SIGINT<span class="_ _80"> </span></span>and<span class="_"> </span><span class="ff1a">SIGALRM</span>.</div><div class="t m0 x3f h2a y200 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>T<span class="_ _6"></span>est the <span class="_ _2"></span>two global <span class="_ _2"></span>variables to <span class="_ _2"></span>see whether either <span class="_ _2"></span>signal has <span class="_ _2"></span>occurred and, if <span class="_ _2"></span>so,</div><div class="t m0 x41 h2a y322 ff19 fsf fc0 sc0 ls0 ws0">handle the condition.</div><div class="t m0 x3f h26 y202 ff19 fsf fc0 sc0 ls0 ws0">3. <span class="_ _51"> </span>Call<span class="_ _44"> </span><span class="ff1a">read<span class="_ _44"> </span></span>(or <span class="_ _42"> </span>any <span class="_ _42"> </span>other <span class="_ _42"> </span>system <span class="_ _42"> </span>function) <span class="_ _42"> </span>and <span class="_ _42"> </span>unblock <span class="_ _53"> </span>the <span class="_ _42"> </span>two <span class="_ _42"> </span>signals, <span class="_ _42"> </span>as <span class="_ _42"> </span>an</div><div class="t m0 x41 h2a y203 ff19 fsf fc0 sc0 ls0 ws0">atomic operation.</div><div class="t m0 x32 h26 y962 ff19 fsf fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">sigsuspend<span class="_ _80"> </span></span>function helps us only if step 3 is a<span class="_"> </span><span class="ff1a">pause<span class="_ _66"> </span></span>operation.</div><div class="t m0 x35 h75 y2ec2 ff16 fs2b fc0 sc0 ls0 ws0">10.17<span class="_ _5a"> </span><span class="ff1f">abort<span class="_ _54"> </span></span>Function</div><div class="t m0 x32 h26 y2ec3 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>m<span class="_ _9"></span><span class="ls0">entioned earlier that the<span class="_"> </span><span class="ff1a">abort<span class="_ _66"> </span></span>function causes abnormal program termination.</span></div><div class="t m0 x3f h57 y2ec4 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x3f h57 y2ec5 ff1a fs2d fc0 sc0 ls0 ws0">void abort(void);</div><div class="t m0 x1c7 h5f y2ec6 ff19 fs2d fc0 sc0 ls0 ws0">This function never returns</div><div class="t m0 x32 h4d y2ec7 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _3"></span>function <span class="_ _3"></span>sends <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">SIGABRT<span class="_ _47"> </span></span>signal <span class="_ _3"></span>to <span class="_ _3"></span>the <span class="_ _9"></span>caller<span class="_ _6"></span><span class="ls703">.(<span class="_ _1d"></span><span class="ls0">Processes <span class="_ _3"></span>should <span class="_ _3"></span>not <span class="_ _3"></span>ignor<span class="lscf3">et<span class="_ _8"></span><span class="ls0">his</span></span></span></span></div><div class="t m0 x32 h4d y2ec8 ff19 fs26 fc0 sc0 ls0 ws0">signal.) <span class="_ _16"> </span>ISO<span class="_ _16"> </span><span class="lscf4">Cs<span class="_ _1d"></span><span class="ls0">tates <span class="_ _45"> </span>that <span class="_ _47"> </span>calling<span class="_ _16"> </span><span class="ff1a">abort<span class="_"> </span></span>will <span class="_ _47"> </span>deliver <span class="_ _47"> </span>an <span class="_ _45"> </span>unsuccessful <span class="_ _47"> </span>termination</span></span></div><div class="t m0 x32 h4d y2ec9 ff19 fs26 fc0 sc0 ls0 ws0">notiﬁcation to the host environment by calling<span class="_"> </span><span class="ff1a">raise(SIGABRT)</span>.</div><div class="t m0 x3f h4d y2eca ff19 fs26 fc0 sc0 ls0 ws0">ISO C requires that if the <span class="_ _2"></span>signal is <span class="_ _2"></span>caught and the <span class="_ _2"></span>signal handler <span class="_ _2"></span>returns,<span class="_"> </span><span class="ff1a">abort<span class="_ _80"> </span></span>still</div><div class="t m0 x32 h49 y2ecb ff19 fs26 fc0 sc0 ls0 ws0">doesn’t <span class="_ _2"></span>return to <span class="_ _2"></span>its <span class="_ _2"></span>caller<span class="_ _1"></span><span class="lscf5">.I<span class="_ _5b"></span><span class="lscf6">ft<span class="_ _4f"></span><span class="ls0">his <span class="_ _2"></span>signal <span class="_ _2"></span>is <span class="_ _3"></span>caught, <span class="_ _2"></span>the <span class="_ _2"></span>only <span class="_ _2"></span>way <span class="_ _2"></span>the <span class="_ _2"></span>signal <span class="_ _2"></span>handler <span class="_ _3"></span>can’t</span></span></span></div><div class="t m0 x32 h4d y2ecc ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turn <span class="_"> </span>is <span class="_ _53"> </span>if <span class="_ _e"> </span>it <span class="_ _e"> </span>calls<span class="_ _59"> </span><span class="ff1a">exit</span>,<span class="_ _4b"> </span><span class="ff1a">_exit</span>,<span class="_ _4b"> </span><span class="ff1a">_Exit</span>,<span class="_ _59"> </span><span class="ff1a">longjmp</span><span class="lscf7">,o<span class="_ _55"></span><span class="ls0">r<span class="_ _4b"> </span><span class="ff1a">siglongjmp</span><span class="lscf8">.(<span class="_ _52"></span><span class="ls0">Section <span class="_ _53"> </span>10.15</span></span></span></span></span></div><div class="t m0 x32 h4d y2ecd ff19 fs26 fc0 sc0 ls0 ws0">discusses <span class="_ _9"></span>the <span class="_ _9"></span>differ<span class="_ _0"></span>ences <span class="_ _9"></span>between<span class="_ _45"> </span><span class="ff1a">longjmp<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">siglongjmp</span>.) <span class="_ _45"> </span>POSIX.1<span class="_ _45"> </span>also <span class="_ _9"></span>speciﬁes</div><div class="t m0 x32 h4d y2ece ff19 fs26 fc0 sc0 ls0 ws0">that<span class="_"> </span><span class="ff1a">abort<span class="_ _80"> </span></span>overrides the blocking or ignoring of the signal by the process.</div><div class="t m0 x3f h4d y2ecf ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _23"> </span>intent <span class="_ _42"> </span>of <span class="_ _23"> </span>letting <span class="_ _42"> </span>the <span class="_ _42"> </span>process <span class="_ _23"></span>catch <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">SIGABRT<span class="_ _44"> </span></span>is <span class="_ _23"> </span>to <span class="_ _42"> </span>allow <span class="_ _23"> </span>it <span class="_ _42"> </span>to <span class="_ _42"> </span>perform <span class="_ _23"> </span>any</div><div class="t m0 x32 h49 y2ed0 ff19 fs26 fc0 sc0 ls0 ws0">cleanup <span class="_ _47"> </span>that <span class="_ _47"> </span>it <span class="_ _47"> </span>wants <span class="_ _45"> </span>to <span class="_ _47"> </span>do <span class="_ _47"> </span>befor<span class="lscf9">et<span class="_ _62"></span><span class="ls0">he <span class="_ _47"> </span>process <span class="_ _47"> </span>terminates.<span class="_ _5f"> </span>If <span class="_ _47"> </span>the <span class="_ _47"> </span>process <span class="_ _47"> </span>doesn’t</span></span></div><div class="t m0 x32 h49 y2ed1 ff19 fs26 fc0 sc0 ls0 ws0">terminate <span class="_ _23"></span>itself <span class="_ _23"> </span>from <span class="_ _23"></span>this <span class="_ _23"></span>signal <span class="_ _23"></span>handler<span class="_ _6"></span><span class="lscfa">,P<span class="_ _b"></span><span class="ls0">OSIX.1 <span class="_ _23"></span>states <span class="_ _23"></span>that, <span class="_ _23"></span>when <span class="_ _23"></span>the <span class="_ _23"> </span>signal <span class="_ _23"> </span>handler</span></span></div><div class="t m0 x32 h4d y2ed2 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turns,<span class="_"> </span><span class="ff1a">abort<span class="_ _66"> </span></span>terminates the process.</span></div><div class="t m0 x3f h49 y2ed3 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _42"> </span>ISO <span class="_ _42"> </span>C <span class="_ _42"> </span>speciﬁcation <span class="_ _53"> </span>of <span class="_ _42"> </span>this <span class="_ _42"> </span>function <span class="_ _42"> </span>leaves <span class="_ _53"> </span>it <span class="_ _42"> </span>up <span class="_ _42"> </span>to <span class="_ _53"> </span>the <span class="_ _42"> </span>implementation <span class="_ _42"> </span>as <span class="_ _42"> </span>to</div><div class="t m0 x32 h49 y2ed4 ff19 fs26 fc0 sc0 ls0 ws0">whether <span class="_"> </span>output <span class="_"> </span>str<span class="_ _0"></span>eams <span class="_"> </span>ar<span class="_ _0"></span><span class="lscfb">eﬂ<span class="_ _4a"></span><span class="ls0">ushed <span class="_"> </span>and <span class="_"> </span>whether <span class="_"> </span>temporary <span class="_"> </span>ﬁles <span class="_ _e"> </span>(Section <span class="_"> </span>5.13) <span class="_"> </span>are</span></span></div><div class="t m0 x32 h4d y2ed5 ff19 fs26 fc0 sc0 ls0 ws0">deleted. <span class="_ _45"> </span>POSIX.1<span class="_ _35"> </span>goes <span class="_ _23"></span>further <span class="_ _23"></span>and <span class="_ _23"></span>allows <span class="_ _23"></span>an <span class="_ _9"></span>implementation <span class="_ _23"> </span>to <span class="_ _23"> </span>call<span class="_ _35"> </span><span class="ff1a">fclose<span class="_ _45"> </span></span>on <span class="_ _23"> </span>open</div><div class="t m0 x32 h4d y2ed6 ff19 fs26 fc0 sc0 ls0 ws0">standar<span class="lsd3">dI<span class="_ _4f"></span><span class="ls0">/O streams befor<span class="lsd3">et<span class="_ _4f"></span><span class="ls0">erminating if the call to<span class="_"> </span><span class="ff1a">abort<span class="_ _66"> </span></span>terminates the process.</span></span></span></span></div><div class="t m0 x76 h5e y2ed7 ff19 fs10 fc0 sc0 ls0 ws0">Earlier <span class="_ _45"> </span>versions <span class="_ _45"> </span>of <span class="_ _47"> </span>System <span class="_ _45"> </span>V <span class="_ _45"> </span>generated <span class="_ _45"> </span>the<span class="_ _61"> </span><span class="ff1a">SIGIOT<span class="_ _61"> </span></span>signal <span class="_ _45"> </span>from <span class="_ _45"> </span>the<span class="_ _46"> </span><span class="ff1a">abort<span class="_ _61"> </span></span>function.</div><div class="t m0 x76 h2d y2ed8 ff19 fs10 fc0 sc0 ls0 ws0">Furthermore, <span class="_ _3"></span>it <span class="_ _3"></span>was <span class="_ _9"></span>possible <span class="_ _9"></span>for <span class="_ _3"></span>a <span class="_ _9"></span>process <span class="_ _3"></span>to <span class="_ _9"></span>ignor<span class="lscfc">et<span class="_ _4f"></span><span class="ls0">his <span class="_ _3"></span>signal <span class="_ _9"></span>or <span class="_ _9"></span>to <span class="_ _3"></span>catch <span class="_ _9"></span>it <span class="_ _9"></span>and <span class="_ _3"></span>return <span class="_ _3"></span>from</span></span></div><div class="t m0 x76 h5e y2ed9 ff19 fs10 fc0 sc0 ls0 ws0">the signal handler<span class="_ _1"></span>,<span class="_"> </span>in<span class="_"> </span>which case<span class="_"> </span><span class="ff1a">abort<span class="_ _53"> </span></span><span class="ls21d">re<span class="_ _2"></span></span>turned to its caller<span class="_ _1"></span>.</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.891785px;bottom:806.208878px;width:129.335099px;height:19.680023px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
