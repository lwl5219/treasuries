<div id="pf1d3" class="pf w4 h1f" data-page-no="1d3"><div class="pc pc1d3 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1d3.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.4<span class="_ _57"> </span>Synchronization <span class="_"> </span>Attributes<span class="_ _1b"> </span><span class="ff18">433</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y22ef ff1a fs2d fc0 sc0 ls0 ws0">int pthread_mutex_consistent(pthread_mutex_t *<span class="_"> </span><span class="ff1b">mutex</span>);</div><div class="t m0 x78 h5f y22f0 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x3f h4d y3611 ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _23"> </span>a <span class="_ _42"> </span>thread <span class="_ _23"> </span>unlocks <span class="_ _42"> </span>a <span class="_ _42"> </span>mutex <span class="_ _23"> </span>without <span class="_ _42"> </span>ﬁrst <span class="_ _42"> </span>calling<span class="_ _35"> </span><span class="ff1a">pthread_mutex_consistent</span>,</div><div class="t m0 x32 h49 y3612 ff19 fs26 fc0 sc0 ls0 ws0">then <span class="_ _53"> </span>other <span class="_ _53"> </span>threads <span class="_ _42"> </span>that <span class="_ _53"> </span>ar<span class="lse90">eb<span class="_ _c"></span><span class="ls0">locked <span class="_ _53"> </span>while <span class="_ _53"> </span>trying <span class="_ _53"> </span>to <span class="_ _53"> </span>acquir<span class="lse91">et<span class="_ _55"></span><span class="ls0">he <span class="_ _53"> </span>mutex <span class="_ _53"> </span>will <span class="_ _53"> </span>see <span class="_ _e"> </span>error</span></span></span></span></div><div class="t m0 x32 h4d y3613 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turns <span class="_"> </span>of<span class="_ _4b"> </span><span class="ff1a">ENOTRECOVERABLE</span><span class="lse92">.I<span class="_ _64"></span><span class="ls686">ft<span class="_ _55"></span><span class="ls0">his <span class="_ _e"> </span>happens, <span class="_"> </span>the <span class="_ _e"> </span>mutex <span class="_"> </span>is <span class="_ _e"> </span>no <span class="_"> </span>longer <span class="_ _e"> </span>usable.<span class="_ _60"> </span>By</span></span></span></span></div><div class="t m0 x32 h4d y3614 ff19 fs26 fc0 sc0 ls0 ws0">calling<span class="_ _51"> </span><span class="ff1a">pthread_mutex_consistent<span class="_ _51"> </span></span>beforehand, <span class="_ _45"> </span>a <span class="_ _35"> </span>thread <span class="_ _35"> </span>allows <span class="_ _35"> </span>the <span class="_ _35"> </span>mutex <span class="_ _35"> </span>to</div><div class="t m0 x32 h49 y3615 ff19 fs26 fc0 sc0 ls0 ws0">behave normally<span class="_ _4"></span>,<span class="_"> </span>so<span class="_"> </span>it<span class="_"> </span>can continue to be used.</div><div class="t m0 x3f h4a y3616 ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_ _47"> </span><span class="ff1b">type<span class="_ _45"> </span></span>mutex <span class="_ _3"></span>attribute <span class="_ _9"></span>controls <span class="_ _2"></span>the <span class="_ _9"></span>locking <span class="_ _3"></span>characteristics <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>mutex.<span class="_ _16"> </span>POSIX.1</div><div class="t m0 x32 h49 y3617 ff19 fs26 fc0 sc0 ls0 ws0">deﬁnes four types:</div><div class="t m0 x3f h4d y3618 ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_NORMAL<span class="_ _14"> </span><span class="ff19 lse93">As<span class="_ _64"></span><span class="ls0">tandar<span class="_ _0"></span><span class="lse94">dm<span class="_ _64"></span><span class="ls0">utex <span class="_ _4b"> </span>type <span class="_ _59"> </span>that <span class="_ _4b"> </span>doesn’t <span class="_ _4b"> </span>do <span class="_ _59"> </span>any</span></span></span></span></div><div class="t m0 x84 h49 y3619 ff19 fs26 fc0 sc0 ls0 ws0">special error checking or deadlock detection.</div><div class="t m0 x3f h4d y361a ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_ERRORCHECK<span class="_"> </span><span class="ff19 lsd3">Am<span class="_ _d"></span><span class="ls0">utex type that provides error checking.</span></span></div><div class="t m0 x3f h4d y361b ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_RECURSIVE<span class="_ _6e"> </span><span class="ff19 lse95">Am<span class="_ _8"></span><span class="ls0">utex <span class="_ _3"></span>type <span class="_ _3"></span>that <span class="_ _3"></span>allows <span class="_ _9"></span>the <span class="_ _3"></span>same <span class="_ _3"></span>thread <span class="_ _2"></span>to <span class="_ _9"></span>lock</span></span></div><div class="t m0 x84 h49 y361c ff19 fs26 fc0 sc0 ls0 ws0">it <span class="_ _47"> </span>multiple <span class="_ _66"> </span>times <span class="_ _47"> </span>without <span class="_ _47"> </span>ﬁrst <span class="_ _47"> </span>unlocking <span class="_ _47"> </span>it.<span class="_ _50"> </span>A</div><div class="t m0 x84 h49 y361d ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">cursive <span class="_ _23"> </span>mutex <span class="_ _23"></span>maintains <span class="_ _23"></span>a <span class="_ _9"></span>lock <span class="_ _23"> </span>count <span class="_ _23"></span>and <span class="_ _23"></span>isn’t</span></div><div class="t m0 x84 h49 y361e ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">leased <span class="_ _23"> </span>until <span class="_ _23"> </span>it <span class="_ _23"> </span>is <span class="_ _42"> </span>unlocked <span class="_ _23"></span>the <span class="_ _23"></span>same <span class="_ _23"></span>number <span class="_ _23"></span>of</span></div><div class="t m0 x84 h49 y361f ff19 fs26 fc0 sc0 ls0 ws0">times <span class="_ _42"> </span>it <span class="_ _53"> </span>is <span class="_ _53"> </span>locked.<span class="_ _65"> </span>Thus, <span class="_ _53"> </span>if <span class="_ _53"> </span>you <span class="_ _42"> </span>lock <span class="_ _53"> </span>a <span class="_ _53"> </span>recursive</div><div class="t m0 x84 h49 y3620 ff19 fs26 fc0 sc0 ls0 ws0">mutex <span class="_ _59"> </span>twice <span class="_ _46"> </span>and <span class="_ _46"> </span>then <span class="_ _46"> </span>unlock <span class="_ _46"> </span>it, <span class="_ _46"> </span>the <span class="_ _46"> </span>mutex</div><div class="t m0 x84 h49 y3621 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">mains <span class="_ _3"></span>locked <span class="_ _3"></span>until <span class="_ _3"></span>it <span class="_ _3"></span>is <span class="_ _2"></span>unlocked <span class="_ _3"></span>a <span class="_ _3"></span>second <span class="_ _3"></span>time.</span></div><div class="t m0 x3f h4d y3622 ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_DEFAULT<span class="_ _78"> </span><span class="ff19 lse96">Am<span class="_ _62"></span><span class="ls0">utex <span class="_ _45"> </span>type <span class="_ _47"> </span>providing <span class="_ _47"> </span>default <span class="_ _47"> </span>characteristics</span></span></div><div class="t m0 x84 h49 y3623 ff19 fs26 fc0 sc0 ls0 ws0">and <span class="_ _3"></span>behavior<span class="_ _6"></span><span class="lse97">.I<span class="_ _1d"></span><span class="ls0">mplementations <span class="_ _3"></span>ar<span class="lse98">ef<span class="_ _8"></span><span class="lscc">re<span class="_ _2"></span><span class="ls0">e<span class="_ _47"> </span>to<span class="_ _47"> </span>map <span class="_ _3"></span>it</span></span></span></span></span></div><div class="t m0 x84 h49 y3624 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_"> </span>one <span class="_"> </span>of <span class="_"> </span>the <span class="_ _e"> </span>other <span class="_"> </span>mutex <span class="_"> </span>types.<span class="_ _60"> </span>For <span class="_"> </span>example,</div><div class="t m0 x84 h49 y3625 ff19 fs26 fc0 sc0 ls0 ws0">Linux <span class="_ _42"> </span>3.2.0 <span class="_ _53"> </span>maps <span class="_ _42"> </span>this <span class="_ _53"> </span>type <span class="_ _42"> </span>to <span class="_ _53"> </span>the <span class="_ _42"> </span>normal <span class="_ _53"> </span>mutex</div><div class="t m0 x84 h49 y3626 ff19 fs26 fc0 sc0 ls0 ws0">type, <span class="_ _53"> </span>whereas <span class="_ _42"> </span>FreeBSD <span class="_ _53"> </span>8.0 <span class="_ _53"> </span>maps <span class="_ _53"> </span>it <span class="_ _53"> </span>to <span class="_ _53"> </span>the <span class="_ _53"> </span>error-</div><div class="t m0 x84 h49 y3627 ff19 fs26 fc0 sc0 ls0 ws0">checking type.</div><div class="t m0 x3f h49 y3628 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _23"> </span>behavior <span class="_ _23"> </span>of <span class="_ _42"> </span>the <span class="_ _23"> </span>four <span class="_ _23"> </span>types <span class="_ _42"> </span>is <span class="_ _23"> </span>summarized <span class="_ _23"> </span>in <span class="_ _42"> </span>Figur<span class="lsa6d">e1<span class="_ _43"></span><span class="ls0">2.5. <span class="_ _35"> </span>The<span class="_ _35"> </span><span class="ls937">‘‘<span class="_ _2"></span></span>Unlock <span class="_ _23"> </span>when</span></span></div><div class="t m0 x32 h49 y3629 ff19 fs26 fc0 sc0 ls0 ws0">not <span class="_"> </span>owned’<span class="_ _0"></span><span class="ls199">’c<span class="_ _5b"></span><span class="ls0">olumn <span class="_"> </span>refers <span class="_"> </span>to <span class="_"> </span>one <span class="_"> </span>thread <span class="_"> </span>unlocking <span class="_"> </span>a <span class="_"> </span>mutex <span class="_"> </span>that <span class="_"> </span>was <span class="_"> </span>locked <span class="_"> </span>by <span class="_"> </span>a</span></span></div><div class="t m0 x32 h49 y362a ff19 fs26 fc0 sc0 ls0 ws0">differ<span class="_ _0"></span>ent <span class="_ _2"></span>thread. <span class="_ _47"> </span>The<span class="_ _47"> </span><span class="ls937">‘‘<span class="_ _2"></span></span>Unlock <span class="_ _3"></span>when <span class="_ _3"></span>unlocked’<span class="lse99">’c<span class="_ _b"></span><span class="ls0">olumn <span class="_ _3"></span>refers <span class="_ _3"></span>to <span class="_ _3"></span>what <span class="_ _3"></span>happens <span class="_ _3"></span>when <span class="_ _3"></span>a</span></span></div><div class="t m0 x32 h49 y362b ff19 fs26 fc0 sc0 ls0 ws0">thread unlocks a mutex that is alr<span class="_ _0"></span>eady unlocked, which usually is a coding mistake.</div><div class="t m0 x41 h2e y362c ff19 fs11 fc0 sc0 ls0 ws0">Mutex type<span class="_ _290"> </span>Relock without unlock?<span class="_ _35"> </span>Unlock when not owned?<span class="_ _44"> </span>Unlock when unlocked?</div><div class="t m0 x22 h6d y362d ff1a fs12 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_NORMAL<span class="_ _214"> </span><span class="ff19">deadlock <span class="_ _73"> </span>undeﬁned<span class="_ _131"> </span>undeﬁned</span></div><div class="t m0 x22 h6d y362e ff1a fs12 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_ERRORCHECK<span class="_ _1c4"> </span><span class="ff19 ls222">re<span class="ls0">turns error <span class="_ _132"> </span>returns error <span class="_ _1c6"> </span>returns error</span></span></div><div class="t m0 x22 h6d y362f ff1a fs12 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_RECURSIVE<span class="_ _130"> </span><span class="ff19">allowed <span class="_ _7e"> </span>returns error <span class="_ _1c6"> </span>returns error</span></div><div class="t m0 x22 h6d y3630 ff1a fs12 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_DEFAULT<span class="_ _77"> </span><span class="ff19">undeﬁned <span class="_ _be"> </span>undeﬁned<span class="_ _131"> </span>undeﬁned</span></div><div class="t m0 x5a h30 y3631 ff18 fs13 fc0 sc0 ls0 ws0">Figure 12.5<span class="_ _5a"> </span><span class="ff19">Mutex type behavior</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
