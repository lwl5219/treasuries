<div id="pf1bb" class="pf w4 h1f" data-page-no="1bb"><div class="pc pc1bb w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1bb.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">409</span></div><div class="t m0 x76 h52 y2a3 ff19 fs2a fc0 sc0 ls0 ws0">Mac <span class="_ _9"></span>OS <span class="_ _23"> </span>X <span class="_ _9"></span>10.6.8 <span class="_ _9"> </span>doesn’t <span class="_ _23"> </span>support<span class="_ _47"> </span><span class="ff1a">pthread_mutex_timedlock<span class="_ _47"> </span></span>yet, <span class="_ _9"></span>but <span class="_ _9"> </span>FreeBSD <span class="_ _9"> </span>8.0, <span class="_ _23"> </span>Linux</div><div class="t m0 x76 h51 y2a4 ff19 fs2a fc0 sc0 ls0 ws0">3.2.0, <span class="_ _42"> </span>and <span class="_ _23"> </span>Solaris <span class="_ _42"> </span>10 <span class="_ _42"> </span>do <span class="_ _42"> </span>support <span class="_ _23"> </span>it, <span class="_ _42"> </span>although <span class="_ _42"> </span>Solaris <span class="_ _42"> </span>still <span class="_ _23"> </span>bundles <span class="_ _42"> </span>it <span class="_ _42"> </span>in <span class="_ _42"> </span>the <span class="_ _23"> </span>real-time <span class="_ _42"> </span>library<span class="_ _6"></span>,</div><div class="t m0 x76 h52 y2a5 ff1a fs2a fc0 sc0 ls0 ws0">librt<span class="ff19 ls10f">.S<span class="_ _43"></span><span class="ls0">olaris 10 also provides an alternative function that uses a r<span class="_ _1"></span>elative timeout.</span></span></div><div class="t m0 x32 h53 ya1f ff16 fs2b fc0 sc0 ls0 ws0">11.6.4 <span class="_ _54"> </span>Reader–Writer<span class="_ _54"> </span>Locks</div><div class="t m0 x32 h2a y14c4 ff19 fsf fc0 sc0 ls0 ws0">Reader–writer <span class="_ _2"></span>locks <span class="_ _2"></span>ar<span class="lse0f">es<span class="_ _4f"></span><span class="ls0">imilar <span class="_ _2"></span>to <span class="_ _2"></span>mutexes, <span class="_ _2"></span>except <span class="_ _3"></span>that <span class="_ _2"></span>they <span class="_ _2"></span>allow <span class="_ _3"></span>for <span class="_ _2"></span>higher <span class="_ _2"></span>degrees <span class="_ _2"></span>of</span></span></div><div class="t m0 x32 h2a y33cb ff19 fsf fc0 sc0 ls0 ws0">parallelism. <span class="_ _45"> </span>W<span class="_ _1"></span>ith <span class="_ _9"></span>a <span class="_ _9"></span>mutex, <span class="_ _23"></span>the <span class="_ _9"></span>state <span class="_ _9"></span>is <span class="_ _9"></span>either <span class="_ _9"></span>locked <span class="_ _9"></span>or <span class="_ _23"></span>unlocked, <span class="_ _9"></span>and <span class="_ _9"></span>only <span class="_ _9"></span>one <span class="_ _9"></span>thread</div><div class="t m0 x32 h2a y33cc ff19 fsf fc0 sc0 ls0 ws0">can <span class="_ _2"></span>lock <span class="_ _3"></span>it <span class="_ _3"></span>at <span class="_ _3"></span>a <span class="_ _3"></span>time.<span class="_ _16"> </span>Three <span class="_ _2"></span>states <span class="_ _3"></span>ar<span class="lse10">ep<span class="_ _8"></span><span class="ls0">ossible <span class="_ _2"></span>with <span class="_ _3"></span>a <span class="_ _3"></span>reader–writer <span class="_ _2"></span>lock: <span class="_ _3"></span>locked <span class="_ _3"></span>in <span class="_ _3"></span>read</span></span></div><div class="t m0 x32 h2a y33cd ff19 fsf fc0 sc0 ls0 ws0">mode, <span class="_ _e"> </span>locked <span class="_ _e"> </span>in <span class="_"> </span>write <span class="_ _53"> </span>mode, <span class="_"> </span>and <span class="_ _53"> </span>unlocked.<span class="_ _48"> </span>Only <span class="_"> </span>one <span class="_ _53"> </span>thread <span class="_ _e"> </span>at <span class="_"> </span>a <span class="_ _53"> </span>time <span class="_"> </span>can <span class="_ _53"> </span>hold <span class="_ _e"> </span>a</div><div class="t m0 x32 h2a y33ce ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ader–writer <span class="_ _3"></span>lock <span class="_ _2"></span>in <span class="_ _3"></span>write <span class="_ _2"></span>mode, <span class="_ _3"></span>but <span class="_ _2"></span>multiple <span class="_ _3"></span>threads can <span class="_ _3"></span>hold <span class="_ _2"></span>a <span class="_ _3"></span>reader–writer <span class="_ _2"></span>lock <span class="_ _2"></span>in</span></div><div class="t m0 x32 h2a y33cf ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ad mode at the same time.</span></div><div class="t m0 x3f h2a y33d0 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _23"> </span>a <span class="_ _42"> </span>r<span class="_ _0"></span>eader–writer <span class="_ _23"> </span>lock <span class="_ _42"> </span>is <span class="_ _23"> </span>write <span class="_ _23"> </span>locked, <span class="_ _42"> </span>all <span class="_ _23"> </span>threads <span class="_ _23"> </span>attempting <span class="_ _23"> </span>to <span class="_ _42"> </span>lock <span class="_ _23"> </span>it <span class="_ _42"> </span>block</div><div class="t m0 x32 h2a y33d1 ff19 fsf fc0 sc0 ls0 ws0">until <span class="_ _2"></span>it <span class="_ _2"></span>is <span class="_ _2"></span>unlocked.<span class="_ _61"> </span>When <span class="_ _2"></span>a <span class="_ _2"></span>reader–writer <span class="_ _2"></span>lock <span class="_ _2"></span>is <span class="_ _2"></span>read <span class="_ _2"></span>locked, <span class="_ _2"></span>all <span class="_ _2"></span>threads <span class="_ _2"></span>attempting <span class="_ _2"></span>to</div><div class="t m0 x32 h2a y33d2 ff19 fsf fc0 sc0 ls0 ws0">lock <span class="_ _42"> </span>it <span class="_ _42"> </span>in <span class="_ _42"> </span>read <span class="_ _42"> </span>mode <span class="_ _42"> </span>ar<span class="lse11">eg<span class="_ _c"></span><span class="ls0">iven <span class="_ _53"> </span>access, <span class="_ _42"> </span>but <span class="_ _42"> </span>any <span class="_ _53"> </span>threads <span class="_ _23"> </span>attempting <span class="_ _53"> </span>to <span class="_ _42"> </span>lock <span class="_ _42"> </span>it <span class="_ _53"> </span>in <span class="_ _42"> </span>write</span></span></div><div class="t m0 x32 h2a y33d3 ff19 fsf fc0 sc0 ls0 ws0">mode <span class="_ _5a"> </span>block <span class="_ _51"> </span>until <span class="_ _5a"> </span>all <span class="_ _51"> </span>the <span class="_ _5a"> </span>threads <span class="_ _5a"> </span>have <span class="_ _5a"> </span>released <span class="_ _5a"> </span>their <span class="_ _51"> </span>read <span class="_ _5a"> </span>locks.<span class="_ _3a"> </span>Although</div><div class="t m0 x32 h2a y2431 ff19 fsf fc0 sc0 ls0 ws0">implementations <span class="_ _9"></span>vary<span class="_ _6"></span><span class="lse12">,r<span class="_ _43"></span><span class="ls0">eader–writer <span class="_ _23"></span>locks <span class="_ _9"></span>usually <span class="_ _23"> </span>block <span class="_ _23"></span>additional <span class="_ _9"></span>readers <span class="_ _9"></span>if <span class="_ _23"></span>a <span class="_ _9"></span>lock <span class="_ _23"></span>is</span></span></div><div class="t m0 x32 h2a y33d4 ff19 fsf fc0 sc0 ls0 ws0">already <span class="_ _9"></span>held <span class="_ _23"> </span>in <span class="_ _23"></span>read <span class="_ _9"></span>mode <span class="_ _23"> </span>and <span class="_ _23"> </span>a <span class="_ _23"></span>thread <span class="_ _9"></span>is <span class="_ _23"> </span>blocked <span class="_ _23"></span>trying <span class="_ _23"></span>to <span class="_ _23"></span>acquir<span class="lsdba">et<span class="_ _43"></span><span class="ls0">he <span class="_ _23"></span>lock <span class="_ _23"></span>in <span class="_ _23"></span>write</span></span></div><div class="t m0 x32 h2a y33d5 ff19 fsf fc0 sc0 ls0 ws0">mode. <span class="_"> </span>This<span class="_"> </span>prevents a constant str<span class="_ _0"></span>eam of r<span class="_ _0"></span>eaders from starving waiting writers.</div><div class="t m0 x3f h2a y33d6 ff19 fsf fc0 sc0 ls0 ws0">Reader–writer <span class="_ _3"></span>locks <span class="_ _3"></span>ar<span class="ls71a">ew<span class="_ _8"></span><span class="ls0">ell <span class="_ _3"></span>suited <span class="_ _3"></span>for <span class="_ _9"></span>situations <span class="_ _3"></span>in <span class="_ _3"></span>which <span class="_ _9"></span>data <span class="_ _3"></span>structures <span class="_ _2"></span>ar<span class="ls71a">er<span class="_ _b"></span><span class="ls0">ead</span></span></span></span></div><div class="t m0 x32 h2a y33d7 ff19 fsf fc0 sc0 ls0 ws0">mor<span class="lse13">eo<span class="_ _43"></span><span class="ls0">ften <span class="_ _23"></span>than <span class="_ _9"></span>they <span class="_ _23"></span>ar<span class="lse13">em<span class="_ _43"></span><span class="ls0">odiﬁed. <span class="_ _35"> </span>When<span class="_ _45"> </span><span class="lse13">ar<span class="_ _b"></span><span class="ls0">eader–writer <span class="_ _9"></span>lock <span class="_ _9"></span>is <span class="_ _23"></span>held <span class="_ _9"></span>in <span class="_ _23"></span>write <span class="_ _9"></span>mode,</span></span></span></span></span></span></div><div class="t m0 x32 h2a y1ab9 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _2"></span>data <span class="_ _3"></span>structure<span class="_ _66"> </span>it<span class="_ _47"> </span>p<span class="ls45">ro<span class="_ _2"></span></span>tects <span class="_ _3"></span>can <span class="_ _3"></span>be <span class="_ _2"></span>modiﬁed <span class="_ _3"></span>safely<span class="_ _6"></span><span class="lse14">,s<span class="_ _8"></span><span class="ls0">ince <span class="_ _3"></span>only <span class="_ _3"></span>one <span class="_ _2"></span>thread <span class="_ _2"></span>at <span class="_ _3"></span>a <span class="_ _3"></span>time <span class="_ _3"></span>can</span></span></div><div class="t m0 x32 h2a y33d8 ff19 fsf fc0 sc0 ls0 ws0">hold <span class="_ _42"> </span>the <span class="_ _23"> </span>lock <span class="_ _42"> </span>in <span class="_ _42"> </span>write <span class="_ _23"> </span>mode.<span class="_ _54"> </span>When <span class="_ _42"> </span>the <span class="_ _23"> </span>reader–writer <span class="_ _42"> </span>lock <span class="_ _23"> </span>is <span class="_ _42"> </span>held <span class="_ _42"> </span>in <span class="_ _42"> </span>read <span class="_ _23"></span>mode, <span class="_ _42"> </span>the</div><div class="t m0 x32 h2a y33d9 ff19 fsf fc0 sc0 ls0 ws0">data <span class="_ _23"> </span>structure<span class="_ _35"> </span>it<span class="_ _35"> </span>p<span class="ls45">ro</span>tects <span class="_ _42"> </span>can <span class="_ _23"></span>be <span class="_ _23"> </span>read <span class="_ _23"> </span>by <span class="_ _42"> </span>multiple <span class="_ _23"></span>threads, <span class="_ _23"></span>as <span class="_ _23"> </span>long <span class="_ _42"> </span>as <span class="_ _23"> </span>the <span class="_ _23"> </span>threads <span class="_ _23"> </span>ﬁrst</div><div class="t m0 x32 h2a y33da ff19 fsf fc0 sc0 ls0 ws0">acquir<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he lock in read mode.</span></span></div><div class="t m0 x3f h2a y33db ff19 fsf fc0 sc0 ls0 ws0">Reader–writer <span class="_ _23"></span>locks <span class="_ _23"></span>ar<span class="ls745">ea<span class="_ _43"></span><span class="ls0">lso <span class="_ _23"></span>called <span class="_ _23"></span>shared–exclusive <span class="_ _9"></span>locks.<span class="_ _51"> </span>When <span class="_ _23"> </span>a <span class="_ _23"> </span>reader–writer</span></span></div><div class="t m0 x32 h2a y33dc ff19 fsf fc0 sc0 ls0 ws0">lock <span class="_ _2"></span>is <span class="_ _3"></span>read <span class="_ _2"></span>locked, <span class="_ _3"></span>it <span class="_ _3"></span>is <span class="_ _3"></span>said <span class="_ _2"></span>to <span class="_ _3"></span>be <span class="_ _3"></span>locked <span class="_ _3"></span>in <span class="_ _2"></span>shared <span class="_ _3"></span>mode.<span class="_ _61"> </span>When <span class="_ _3"></span>it <span class="_ _3"></span>is <span class="_ _3"></span>write <span class="_ _2"></span>locked, <span class="_ _3"></span>it <span class="_ _3"></span>is</div><div class="t m0 x32 h2a y33dd ff19 fsf fc0 sc0 ls0 ws0">said to be locked in exclusive mode.</div><div class="t m0 x3f h2a y33de ff19 fsf fc0 sc0 ls0 ws0">As <span class="_ _3"></span>with <span class="_ _9"></span>mutexes, <span class="_ _9"></span>reader–writer <span class="_ _3"></span>locks <span class="_ _9"></span>must <span class="_ _9"></span>be <span class="_ _3"></span>initialized <span class="_ _9"></span>befor<span class="lse15">eu<span class="_ _b"></span><span class="ls0">se <span class="_ _9"></span>and <span class="_ _9"></span>destroyed</span></span></div><div class="t m0 x32 h2a y33df ff19 fsf fc0 sc0 ls0 ws0">befor<span class="ls44">ef<span class="_ _4f"></span><span class="ls45">re<span class="_ _2"></span><span class="ls0">eing their underlying memory<span class="_ _6"></span>.</span></span></span></div><div class="t m0 x3f h57 y33e0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y33e1 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_rwlock_init(pthread_rwlock_t *restrict<span class="_"> </span><span class="ff1b">rwlock</span>,</div><div class="t m0 x1f6 h57 y33e2 ff1a fs2d fc0 sc0 ls0 ws0">const pthread_rwlockattr_t *restrict<span class="_"> </span><span class="ff1b">attr</span>);</div><div class="t m0 x3f h57 y33e3 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_rwlock_destroy(pthread_rwlock_t *<span class="ff1b">rwlock</span>);</div><div class="t m0 xca h5f y33e4 ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x32 h4d y33e5 ff19 fs26 fc0 sc0 lse16 ws0">Ar<span class="_ _43"></span><span class="ls0">eader–writer <span class="_ _23"></span>lock <span class="_ _9"></span>is <span class="_ _23"></span>initialized <span class="_ _9"></span>by <span class="_ _9"></span>calling<span class="_ _35"> </span><span class="ff1a">pthread_rwlock_init</span><span class="lse17">.W<span class="_ _64"></span><span class="lse16">ec<span class="_ _b"></span><span class="ls0">an <span class="_ _9"></span>pass <span class="_ _23"></span>a</span></span></span></span></div><div class="t m0 x32 h4a y33e6 ff19 fs26 fc0 sc0 ls0 ws0">null <span class="_ _2"></span>pointer <span class="_ _2"></span>for<span class="_"> </span><span class="ff1b">attr<span class="_ _47"> </span></span>if <span class="_ _2"></span>we <span class="_ _2"></span>want <span class="_ _2"></span>the <span class="_ _2"></span>reader–writer lock <span class="_ _2"></span>to <span class="_ _2"></span>have <span class="_ _2"></span>the <span class="_ _2"></span>default <span class="_ _2"></span>attributes.<span class="_ _61"> </span><span class="ls164">We</span></div><div class="t m0 x32 h49 y33e7 ff19 fs26 fc0 sc0 ls0 ws0">discuss reader–writer lock attributes in Section 12.4.2.</div><div class="t m0 x3f h4d y33e8 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _59"> </span>Single <span class="_ _59"> </span>UNIX <span class="_ _59"> </span>Speciﬁcation <span class="_ _59"> </span>deﬁnes <span class="_ _59"> </span>the<span class="_ _60"> </span><span class="ff1a">PTHREAD_RWLOCK_INITIALIZER</span></div><div class="t m0 x32 h49 y33e9 ff19 fs26 fc0 sc0 ls0 ws0">constant in the XSI option.<span class="_ _46"> </span>It can be used to initialize <span class="_ _2"></span>a statically allocated reader–writer</div><div class="t m0 x32 h49 y33ea ff19 fs26 fc0 sc0 ls0 ws0">lock when the default attributes ar<span class="lsd3">es<span class="_ _4f"></span><span class="ls0">ufﬁcient.</span></span></div><div class="t m0 x3f h49 y33eb ff19 fs26 fc0 sc0 ls0 ws0">Befor<span class="lse18">ef<span class="_ _49"></span><span class="lscc">re<span class="_ _2"></span><span class="ls0">eing <span class="_ _59"> </span>the <span class="_ _46"> </span>memory <span class="_ _59"> </span>backing <span class="_ _46"> </span>a <span class="_ _59"> </span>reader–writer <span class="_ _59"> </span>lock, <span class="_ _46"> </span>we <span class="_ _59"> </span>need <span class="_ _46"> </span>to <span class="_ _59"> </span>call</span></span></span></div><div class="t m0 x32 h4d y33ec ff1a fs26 fc0 sc0 ls0 ws0">pthread_rwlock_destroy<span class="_ _45"> </span><span class="ff19">to <span class="_ _3"></span>clean <span class="_ _9"></span>it <span class="_ _9"></span>up.<span class="_ _16"> </span>If<span class="_ _45"> </span></span>pthread_rwlock_init<span class="_ _45"> </span><span class="ff19">allocated <span class="_ _3"></span>any</span></div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:156.492009px;bottom:1131.288916px;width:166.500000px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
