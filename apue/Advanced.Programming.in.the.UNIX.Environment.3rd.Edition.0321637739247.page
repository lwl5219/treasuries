<div id="pff7" class="pf w4 h1f" data-page-no="f7"><div class="pc pcf7 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bgf7.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>7.10<span class="_ _15b"> </span><span class="ff1a">setjmp<span class="_ _4b"> </span></span>and<span class="_ _59"> </span><span class="ff1a">longjmp<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">213</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _9"></span>and <span class="_ _9"></span>so <span class="_ _23"></span>can’t <span class="_ _9"></span>expand <span class="_ _23"></span>upward; <span class="_ _9"></span>it <span class="_ _23"></span>can’t <span class="_ _9"></span>be <span class="_ _23"></span>expanded <span class="_ _9"></span>downward, <span class="_ _9"></span>because <span class="_ _23"></span>all <span class="_ _9"></span>the</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">stack frames below it can’t be moved.</div><div class="t m0 x3f h2b y150 ff19 fsf fc0 sc0 ls0 ws0">1. <span class="_ _51"> </span>If<span class="_"> </span>we’r<span class="ls44">em<span class="_ _4f"></span><span class="ls0">odifying an existing<span class="_"> </span><span class="ff1b">name:</span></span></span></div><div class="t m0 x41 h2b y133 ff19 fsf fc0 sc0 ls0 ws0">a. <span class="_ _51"> </span>If<span class="_ _35"> </span>the <span class="_ _23"> </span>size <span class="_ _42"> </span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>new<span class="_ _35"> </span><span class="ff1b">value<span class="_ _35"> </span></span>is <span class="_ _42"> </span>less <span class="_ _23"> </span>than <span class="_ _23"> </span>or <span class="_ _42"> </span>equal <span class="_ _23"> </span>to <span class="_ _23"> </span>the <span class="_ _42"> </span>size <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _42"> </span>existing</div><div class="t m0 x122 h2b y134 ff1b fsf fc0 sc0 ls0 ws0">value<span class="ff19">,<span class="_"> </span>we<span class="_"> </span>can just copy the new string over the old string.</span></div><div class="t m0 x41 h2b y1af ff19 fsf fc0 sc0 ls0 ws0">b. <span class="_ _16"> </span>If<span class="_ _44"> </span>the <span class="_ _53"> </span>size <span class="_ _42"> </span>of <span class="_ _53"> </span>the <span class="_ _42"> </span>new<span class="_ _4b"> </span><span class="ff1b">value<span class="_ _44"> </span></span>is <span class="_ _42"> </span>larger <span class="_ _42"> </span>than <span class="_ _42"> </span>the <span class="_ _53"> </span>old <span class="_ _42"> </span>one, <span class="_ _53"> </span>however<span class="_ _6"></span>,<span class="_ _44"> </span>we<span class="_ _44"> </span>must</div><div class="t m0 x122 h26 y1b0 ff1a fsf fc0 sc0 ls0 ws0">malloc<span class="_ _47"> </span><span class="ff19">to <span class="_ _3"></span>obtain <span class="_ _3"></span>room <span class="_ _3"></span>for <span class="_ _3"></span>the <span class="_ _3"></span>new <span class="_ _9"></span>string, <span class="_ _3"></span>copy <span class="_ _3"></span>the <span class="_ _3"></span>new <span class="_ _3"></span>string <span class="_ _9"></span>to <span class="_ _3"></span>this <span class="_ _3"></span>area,</span></div><div class="t m0 x122 h2b y153 ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _23"> </span>then <span class="_ _23"> </span>replace <span class="_ _23"></span>the <span class="_ _23"> </span>old <span class="_ _23"> </span>pointer <span class="_ _42"> </span>in <span class="_ _23"></span>the <span class="_ _23"></span>environment <span class="_ _23"></span>list <span class="_ _23"></span>for<span class="_ _35"> </span><span class="ff1b">name<span class="_ _35"> </span></span>with <span class="_ _23"></span>the</div><div class="t m0 x122 h2a y155 ff19 fsf fc0 sc0 ls0 ws0">pointer to this allocated area.</div><div class="t m0 x3f h2b y157 ff19 fsf fc0 sc0 ls0 ws0">2. <span class="_ _51"> </span>If<span class="_ _61"> </span>we’r<span class="ls8ba">ea<span class="_ _1d"></span><span class="ls0">dding <span class="_ _47"> </span>a <span class="_ _66"> </span>new<span class="_ _61"> </span><span class="ff1b">name</span><span class="ls8ba">,i<span class="_ _5b"></span><span class="ls0">t’s <span class="_ _66"> </span>mor<span class="ls8bb">ec<span class="_ _5b"></span><span class="ls0">omplicated. <span class="_ _61"> </span>First,<span class="_ _61"> </span>we <span class="_ _66"> </span>have <span class="_ _47"> </span>to <span class="_ _66"> </span>call</span></span></span></span></span></span></div><div class="t m0 x41 h26 y15a ff1a fsf fc0 sc0 ls0 ws0">malloc<span class="_ _35"> </span><span class="ff19">to <span class="_ _23"></span>allocate <span class="_ _23"> </span>room <span class="_ _23"></span>for <span class="_ _23"></span>the<span class="_ _35"> </span><span class="ff1b">name=value<span class="_ _35"> </span></span>string <span class="_ _23"></span>and <span class="_ _23"> </span>copy <span class="_ _23"> </span>the <span class="_ _42"> </span>string <span class="_ _23"></span>to <span class="_ _23"> </span>this</span></div><div class="t m0 x41 h2a y15b ff19 fsf fc0 sc0 ls0 ws0">area.</div><div class="t m0 x41 h26 yd83 ff19 fsf fc0 sc0 ls0 ws0">a. <span class="_ _51"> </span>Then,<span class="_ _47"> </span>if <span class="_ _9"></span>it’s <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _9"></span>time <span class="_ _3"></span>we’ve <span class="_ _3"></span>added <span class="_ _3"></span>a <span class="_ _9"></span>new<span class="_ _47"> </span><span class="ff1b">name</span>,<span class="_ _47"> </span>we<span class="_ _45"> </span>have <span class="_ _3"></span>to <span class="_ _3"></span>call<span class="_ _47"> </span><span class="ff1a">malloc</span></div><div class="t m0 x122 h2a yd84 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _3"></span>obtain <span class="_ _9"></span>room <span class="_ _3"></span>for <span class="_ _3"></span>a <span class="_ _9"></span>new <span class="_ _9"></span>list <span class="_ _3"></span>of <span class="_ _9"></span>pointers.<span class="_ _16"> </span><span class="ls5f">We <span class="_ _66"> </span>c<span class="_ _9"></span></span>opy <span class="_ _9"></span>the <span class="_ _3"></span>old <span class="_ _9"></span>environment <span class="_ _3"></span>list</div><div class="t m0 x122 h2b yd85 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _23"></span>this <span class="_ _23"></span>new <span class="_ _23"> </span>area <span class="_ _23"></span>and <span class="_ _23"></span>stor<span class="ls8bc">eap<span class="_ _43"></span><span class="ls0">ointer <span class="_ _23"></span>to <span class="_ _23"></span>the<span class="_ _35"> </span><span class="ff1b">name=value<span class="_ _45"> </span></span>string <span class="_ _42"> </span>at <span class="_ _23"></span>the <span class="_ _23"></span>end <span class="_ _23"></span>of</span></span></div><div class="t m0 x122 h2a yd86 ff19 fsf fc0 sc0 ls0 ws0">this <span class="_ _42"> </span>list <span class="_ _23"> </span>of <span class="_ _42"> </span>pointers.<span class="_ _54"> </span><span class="ls5f">We <span class="_ _47"> </span>a<span class="_ _23"></span></span>lso <span class="_ _23"> </span>stor<span class="ls8bd">ean<span class="_ _43"></span><span class="ls0">ull <span class="_ _23"> </span>pointer <span class="_ _42"> </span>at <span class="_ _42"> </span>the <span class="_ _42"> </span>end <span class="_ _23"> </span>of <span class="_ _42"> </span>this <span class="_ _42"> </span>list, <span class="_ _42"> </span>of</span></span></div><div class="t m0 x122 h26 ya2b ff19 fsf fc0 sc0 ls0 ws0">course. <span class="_ _45"> </span>Finally<span class="_ _4"></span>,<span class="_ _45"> </span>we<span class="_ _45"> </span>set<span class="_ _35"> </span><span class="ff1a">environ<span class="_ _45"> </span></span>to <span class="_ _9"></span>point <span class="_ _9"></span>to <span class="_ _9"></span>this <span class="_ _9"></span>new <span class="_ _23"></span>list <span class="_ _9"></span>of <span class="_ _9"></span>pointers.<span class="_ _5a"> </span>Note</div><div class="t m0 x122 h2a y1cb0 ff19 fsf fc0 sc0 ls0 ws0">from Figur<span class="ls8be">e7<span class="_ _4f"></span><span class="ls0">.6 <span class="_ _2"></span>that <span class="_ _2"></span>if <span class="_ _2"></span>the original <span class="_ _2"></span>environment <span class="_ _2"></span>list <span class="_ _2"></span>was <span class="_ _2"></span>contained <span class="_ _2"></span>above <span class="_ _2"></span>the</span></span></div><div class="t m0 x122 h2a y1cb1 ff19 fsf fc0 sc0 ls0 ws0">top <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>stack, <span class="_ _9"></span>as <span class="_ _23"></span>is <span class="_ _9"></span>common, <span class="_ _9"></span>then <span class="_ _9"></span>we <span class="_ _9"></span>have <span class="_ _9"></span>moved <span class="_ _9"></span>this <span class="_ _23"></span>list <span class="_ _9"></span>of <span class="_ _9"></span>pointers <span class="_ _9"></span>to</div><div class="t m0 x122 h2b y1cb2 ff19 fsf fc0 sc0 ls0 ws0">the heap.<span class="_ _46"> </span>But <span class="_ _2"></span>most of the <span class="_ _2"></span>pointers in <span class="_ _2"></span>this list <span class="_ _2"></span>still point to<span class="_ _66"> </span><span class="ff1b">name=value<span class="_"> </span></span>strings</div><div class="t m0 x122 h2a y1cb3 ff19 fsf fc0 sc0 ls0 ws0">above the top of the stack.</div><div class="t m0 x41 h2a y1c61 ff19 fsf fc0 sc0 ls0 ws0">b. <span class="_ _16"> </span>If<span class="_ _35"> </span>this <span class="_ _23"></span>isn’t <span class="_ _23"></span>the <span class="_ _23"></span>ﬁrst <span class="_ _23"></span>time <span class="_ _9"></span>we’ve <span class="_ _23"> </span>added <span class="_ _23"> </span>new <span class="_ _23"> </span>strings <span class="_ _23"></span>to <span class="_ _23"></span>the <span class="_ _23"></span>environment <span class="_ _9"></span>list,</div><div class="t m0 x122 h2a y1cb4 ff19 fsf fc0 sc0 ls0 ws0">then <span class="_ _2"></span>we <span class="_ _3"></span>know <span class="_ _3"></span>that <span class="_ _3"></span>we’ve <span class="_ _3"></span>already <span class="_ _2"></span>allocated <span class="_ _3"></span>room <span class="_ _3"></span>for <span class="_ _3"></span>the <span class="_ _3"></span>list <span class="_ _2"></span>on <span class="_ _3"></span>the <span class="_ _3"></span>heap, <span class="_ _3"></span>so</div><div class="t m0 x122 h26 y1cb5 ff19 fsf fc0 sc0 ls0 ws0">we <span class="_ _3"></span>just <span class="_ _9"></span>call<span class="_ _47"> </span><span class="ff1a">realloc<span class="_ _45"> </span></span>to <span class="_ _3"></span>allocate <span class="_ _9"></span>room <span class="_ _2"></span>for <span class="_ _9"></span>one <span class="_ _3"></span>mor<span class="ls8bf">ep<span class="_ _b"></span><span class="ls0">ointer<span class="_ _1"></span><span class="ls8c0">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>pointer <span class="_ _9"></span>to</span></span></span></span></div><div class="t m0 x122 h2b y1cb6 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _e"> </span>new<span class="_ _59"> </span><span class="ff1b">name=value<span class="_ _4b"> </span></span>string <span class="_"> </span>is <span class="_ _53"> </span>stored <span class="_ _e"> </span>at <span class="_ _e"> </span>the <span class="_"> </span>end <span class="_ _53"> </span>of <span class="_"> </span>the <span class="_ _53"> </span>list <span class="_"> </span>(on <span class="_ _53"> </span>top <span class="_"> </span>of <span class="_ _53"> </span>the</div><div class="t m0 x122 h2a y1cb7 ff19 fsf fc0 sc0 ls0 ws0">previous null pointer), followed by a null pointer<span class="_ _6"></span>.</div><div class="t m0 x35 h75 y1cb8 ff16 fs2b fc0 sc0 ls0 ws0">7.10<span class="_ _6d"> </span><span class="ff1f">setjmp<span class="_ _54"> </span></span>and<span class="_ _54"> </span><span class="ff1f">longjmp<span class="_ _54"> </span></span>Functions</div><div class="t m0 x32 h26 y1cb9 ff19 fsf fc0 sc0 ls0 ws0">In C, we <span class="_ _2"></span>can’t<span class="_"> </span><span class="ff1a">goto<span class="_ _66"> </span></span><span class="ls11d">al<span class="_ _d"></span><span class="ls0">abel <span class="_ _2"></span>that’s in <span class="_ _2"></span>another function.<span class="_ _46"> </span>Instead, <span class="_ _2"></span>we must <span class="_ _2"></span>use the<span class="_"> </span><span class="ff1a">setjmp</span></span></span></div><div class="t m0 x32 h26 y16e ff19 fsf fc0 sc0 ls0 ws0">and<span class="_ _4b"> </span><span class="ff1a">longjmp<span class="_ _59"> </span></span>functions <span class="_ _e"> </span>to <span class="_ _e"> </span>perform <span class="_"> </span>this <span class="_ _53"> </span>type <span class="_"> </span>of <span class="_ _53"> </span>branching.<span class="_ _48"> </span>As <span class="_ _e"> </span>we’ll <span class="_"> </span>see, <span class="_ _53"> </span>these <span class="_ _e"> </span>two</div><div class="t m0 x32 h2a y170 ff19 fsf fc0 sc0 ls0 ws0">functions ar<span class="ls8c1">eu<span class="_ _4f"></span><span class="ls0">seful <span class="_ _2"></span>for <span class="_ _2"></span>handling error <span class="_ _2"></span>conditions that <span class="_ _2"></span>occur <span class="_ _2"></span>in <span class="_ _2"></span>a deeply <span class="_ _2"></span>nested <span class="_ _2"></span>function</span></span></div><div class="t m0 x32 h2a yeaf ff19 fsf fc0 sc0 ls0 ws0">call.</div><div class="t m0 x3f h2a y1cba ff19 fsf fc0 sc0 ls0 ws0">Consider <span class="_ _3"></span>the <span class="_ _2"></span>skeleton <span class="_ _3"></span>in <span class="_ _3"></span>Figur<span class="ls8c2">e7<span class="_ _8"></span><span class="ls0">.9. <span class="_ _47"> </span>It<span class="_ _47"> </span>consists <span class="_ _3"></span>of <span class="_ _3"></span>a <span class="_ _3"></span>main <span class="_ _3"></span>loop <span class="_ _3"></span>that <span class="_ _3"></span>reads <span class="_ _3"></span>lines <span class="_ _3"></span>from</span></span></div><div class="t m0 x32 h26 y1cbb ff19 fsf fc0 sc0 ls0 ws0">standar<span class="ls8c3">di<span class="_ _8"></span><span class="ls0">nput <span class="_ _2"></span>and <span class="_ _3"></span>calls <span class="_ _3"></span>the <span class="_ _2"></span>function<span class="_ _47"> </span><span class="ff1a">do_line<span class="_ _47"> </span></span>to <span class="_ _3"></span>process <span class="_ _2"></span>each <span class="_ _2"></span>line.<span class="_ _16"> </span>This <span class="_ _2"></span>function <span class="_ _3"></span>then</span></span></div><div class="t m0 x32 h26 y1cbc ff19 fsf fc0 sc0 ls0 ws0">calls<span class="_ _47"> </span><span class="ff1a">get_token<span class="_ _47"> </span></span>to <span class="_ _3"></span>fetch <span class="_ _3"></span>the <span class="_ _2"></span>next <span class="_ _3"></span>token <span class="_ _3"></span>from <span class="_ _3"></span>the <span class="_ _2"></span>input <span class="_ _3"></span>line.<span class="_ _16"> </span>The <span class="_ _3"></span>ﬁrst <span class="_ _3"></span>token <span class="_ _3"></span>of <span class="_ _3"></span>a <span class="_ _3"></span>line <span class="_ _3"></span>is</div><div class="t m0 x32 h26 y175 ff19 fsf fc0 sc0 ls0 ws0">assumed <span class="_ _45"> </span>to <span class="_ _45"> </span>be <span class="_ _45"> </span>a <span class="_ _47"> </span>command <span class="_ _45"> </span>of <span class="_ _45"> </span>some <span class="_ _45"> </span>form, <span class="_ _45"> </span>and <span class="_ _45"> </span>a<span class="_ _5a"> </span><span class="ff1a">switch<span class="_"> </span></span>statement <span class="_ _47"> </span>selects <span class="_ _45"> </span>each</div><div class="t m0 x32 h26 y1cbd ff19 fsf fc0 sc0 ls0 ws0">command. <span class="_"> </span>For<span class="_"> </span>the single command shown, the function<span class="_"> </span><span class="ff1a">cmd_add<span class="_ _80"> </span></span>is called.</div><div class="t m0 x3f h2a y1cbe ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>skeleton <span class="_ _23"></span>in <span class="_ _9"></span>Figur<span class="ls8c4">e7<span class="_ _b"></span><span class="ls0">.9 <span class="_ _9"></span>is <span class="_ _23"></span>typical <span class="_ _9"></span>for <span class="_ _23"></span>pr<span class="_ _0"></span>ograms <span class="_ _9"></span>that <span class="_ _23"></span>read <span class="_ _9"></span>commands, <span class="_ _9"></span>determine</span></span></div><div class="t m0 x32 h2a y1cbf ff19 fsf fc0 sc0 ls0 ws0">the <span class="_"> </span>command <span class="_"> </span>type, <span class="_"> </span>and <span class="_ _e"> </span>then <span class="_"> </span>call <span class="_"> </span>functions <span class="_"> </span>to <span class="_"> </span>pr<span class="_ _1"></span>ocess <span class="_"> </span>each <span class="_"> </span>command.<span class="_ _60"> </span>Figur<span class="ls8c5">e7<span class="_ _5b"></span><span class="ls0">.10</span></span></div><div class="t m0 x32 h26 y1cc0 ff19 fsf fc0 sc0 ls0 ws0">shows what the stack could look like after<span class="_"> </span><span class="ff1a">cmd_add<span class="_ _80"> </span></span>has been called.</div><a class="l" href="#pfe" data-dest-detail='[14,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.889894px;bottom:467.688916px;width:228.286987px;height:19.678986px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
