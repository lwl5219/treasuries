<div id="pf2d2" class="pf w4 h1f" data-page-no="2d2"><div class="pc pc2d2 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2d2.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">688<span class="_ _1b"> </span><span class="ff19 ls719">Te<span class="_ _9"></span><span class="ls0">rminal <span class="_"> </span>I/O<span class="_ _eb"> </span>Chapter <span class="_"> </span>18</span></span></div><div class="t m0 x32 h26 y12f ff1a fsf fc0 sc0 ls0 ws0">ICRNL<span class="_ _2bb"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls4f8">,P<span class="_ _43"></span><span class="ls0">OSIX.1, <span class="_ _42"> </span>FreeBSD, <span class="_ _42"> </span>Linux, <span class="_ _42"> </span>Mac <span class="_ _53"> </span>OS <span class="_ _42"> </span>X, <span class="_ _53"> </span>Solaris)<span class="_ _54"> </span>If <span class="_ _53"> </span>set <span class="_ _42"> </span>and <span class="_ _53"> </span>if</span></span></div><div class="t m0 x137 h26 y130 ff1a fsf fc0 sc0 ls0 ws0">IGNCR<span class="_"> </span><span class="ff19">is <span class="_ _47"> </span>not <span class="_ _45"> </span>set, <span class="_ _45"> </span>a <span class="_ _47"> </span>received <span class="_ _45"> </span>CR <span class="_ _45"> </span>character <span class="_ _47"> </span>is <span class="_ _45"> </span>translated <span class="_ _45"> </span>into <span class="_ _45"> </span>a <span class="_ _47"> </span>NL</span></div><div class="t m0 x137 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">character<span class="_ _6"></span>.</div><div class="t m0 x32 h26 y1f0b ff1a fsf fc0 sc0 ls0 ws0">IEXTEN<span class="_ _20"> </span><span class="ff19">(</span>c_lflag<span class="ff19 ls14a2">,P<span class="_ _1d"></span><span class="ls0">OSIX.1, <span class="_ _47"> </span>FreeBSD, <span class="_"> </span>Linux, <span class="_ _47"> </span>Mac <span class="_"> </span>OS <span class="_ _47"> </span>X, <span class="_ _66"> </span>Solaris)<span class="_ _50"> </span>If <span class="_ _47"> </span>set, <span class="_ _66"> </span>the</span></span></div><div class="t m0 x137 h2a y2803 ff19 fsf fc0 sc0 ls0 ws0">extended, implementation-deﬁned <span class="_ _2"></span>special characters <span class="_ _2"></span>ar<span class="ls56">er<span class="_ _8"></span><span class="ls0">ecognized <span class="_ _2"></span>and</span></span></div><div class="t m0 x137 h2a y2804 ff19 fsf fc0 sc0 ls0 ws0">processed.</div><div class="t m0 x32 h26 y5059 ff1a fsf fc0 sc0 ls0 ws0">IGNBRK<span class="_ _20"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14b9">,P<span class="_ _c"></span><span class="ls0">OSIX.1, <span class="_ _53"> </span>FreeBSD, <span class="_ _42"> </span>Linux, <span class="_ _42"> </span>Mac <span class="_ _53"> </span>OS <span class="_ _53"> </span>X, <span class="_ _42"> </span>Solaris)<span class="_ _65"> </span>When <span class="_ _42"> </span>set, <span class="_ _53"> </span>a</span></span></div><div class="t m0 x137 h26 y3a25 ff19 fsf fc0 sc0 ls0 ws0">BREAK <span class="_ _3"></span>condition <span class="_ _3"></span>on <span class="_ _9"></span>input <span class="_ _3"></span>is <span class="_ _3"></span>ignored. <span class="_ _47"> </span>See<span class="_ _45"> </span><span class="ff1a">BRKINT<span class="_ _47"> </span></span>for <span class="_ _3"></span>a <span class="_ _3"></span>way <span class="_ _9"></span>to <span class="_ _3"></span>have <span class="_ _3"></span>a</div><div class="t m0 x137 h26 y3a26 ff19 fsf fc0 sc0 ls0 ws0">BREAK condition either generate a<span class="_"> </span><span class="ff1a">SIGINT<span class="_ _80"> </span></span>signal or be read as data.</div><div class="t m0 x32 h26 y5d2 ff1a fsf fc0 sc0 ls0 ws0">IGNCR<span class="_ _2bb"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14ba">,P<span class="_ _26"></span><span class="ls0">OSIX.1, <span class="_ _35"> </span>FreeBSD, <span class="_ _45"> </span>Linux, <span class="_ _35"> </span>Mac <span class="_ _45"> </span>OS <span class="_ _35"> </span>X, <span class="_ _35"> </span>Solaris)<span class="_ _5c"> </span>If <span class="_ _35"> </span>set, <span class="_ _35"> </span>a</span></span></div><div class="t m0 x137 h2a y5d4 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ceived <span class="_ _23"></span>CR <span class="_ _9"></span>character <span class="_ _9"></span>is <span class="_ _23"></span>ignored. <span class="_ _45"> </span>If<span class="_ _45"> </span>this <span class="_ _9"></span>ﬂag <span class="_ _23"></span>is <span class="_ _9"></span>not <span class="_ _9"></span>set, <span class="_ _23"></span>it <span class="_ _9"></span>is <span class="_ _23"></span>possible <span class="_ _9"></span>to</span></div><div class="t m0 x137 h26 y5d5 ff19 fsf fc0 sc0 ls0 ws0">translate the received CR into a NL character if the<span class="_"> </span><span class="ff1a">ICRNL<span class="_ _80"> </span></span>ﬂag is set.</div><div class="t m0 x32 h26 y10ac ff1a fsf fc0 sc0 ls0 ws0">IGNPAR<span class="_ _20"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls100f">,P<span class="_ _43"></span><span class="ls0">OSIX.1, <span class="_ _23"> </span>FreeBSD, <span class="_ _9"></span>Linux, <span class="_ _23"> </span>Mac <span class="_ _23"> </span>OS <span class="_ _23"></span>X, <span class="_ _23"></span>Solaris)<span class="_ _5a"> </span>When <span class="_ _23"> </span>set, <span class="_ _23"> </span>an</span></span></div><div class="t m0 x137 h2a y505a ff19 fsf fc0 sc0 ls0 ws0">input <span class="_ _9"></span>byte <span class="_ _9"></span>with <span class="_ _9"></span>a <span class="_ _3"></span>framing <span class="_ _9"></span>error <span class="_ _9"></span>(other <span class="_ _9"></span>than <span class="_ _9"></span>a <span class="_ _9"></span>BREAK) <span class="_ _9"></span>or <span class="_ _9"></span>an <span class="_ _3"></span>input <span class="_ _9"></span>byte</div><div class="t m0 x137 h2a y505b ff19 fsf fc0 sc0 ls0 ws0">with a parity error is ignor<span class="_ _0"></span>ed.</div><div class="t m0 x32 h26 yd86 ff1a fsf fc0 sc0 ls0 ws0">IMAXBEL<span class="_ _12e"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14bb">,F<span class="_ _43"></span><span class="ls45">re<span class="ls0">eBSD, <span class="_ _53"> </span>Linux, <span class="_ _42"> </span>Mac <span class="_ _53"> </span>OS <span class="_ _42"> </span>X, <span class="_ _53"> </span>Solaris)<span class="_ _54"> </span>Ring <span class="_ _42"> </span>bell <span class="_ _53"> </span>when <span class="_ _42"> </span>input</span></span></span></div><div class="t m0 x137 h2a ya2b ff19 fsf fc0 sc0 ls0 ws0">queue is full.</div><div class="t m0 x32 h26 y28dd ff1a fsf fc0 sc0 ls0 ws0">INLCR<span class="_ _2bb"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14ba">,P<span class="_ _26"></span><span class="ls0">OSIX.1, <span class="_ _35"> </span>FreeBSD, <span class="_ _45"> </span>Linux, <span class="_ _35"> </span>Mac <span class="_ _45"> </span>OS <span class="_ _35"> </span>X, <span class="_ _35"> </span>Solaris)<span class="_ _5c"> </span>If <span class="_ _35"> </span>set, <span class="_ _35"> </span>a</span></span></div><div class="t m0 x137 h2a yec0 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ceived NL character is translated into a CR character<span class="_ _1"></span>.</span></div><div class="t m0 x32 h26 y15ef ff1a fsf fc0 sc0 ls0 ws0">INPCK<span class="_ _2bb"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14bc">,P<span class="_ _5b"></span><span class="ls0">OSIX.1, <span class="_ _47"> </span>FreeBSD, <span class="_"> </span>Linux, <span class="_"> </span>Mac <span class="_ _47"> </span>OS <span class="_"> </span>X, <span class="_ _47"> </span>Solaris)<span class="_ _60"> </span>When <span class="_ _47"> </span>set,</span></span></div><div class="t m0 x137 h26 y15f0 ff19 fsf fc0 sc0 ls0 ws0">input <span class="_ _47"> </span>parity <span class="_ _47"> </span>checking <span class="_ _66"> </span>is <span class="_ _47"> </span>enabled.<span class="_ _5f"> </span>If<span class="_ _16"> </span><span class="ff1a">INPCK<span class="_ _61"> </span></span>is <span class="_ _47"> </span>not <span class="_ _47"> </span>set, <span class="_ _47"> </span>input <span class="_ _47"> </span>parity</div><div class="t m0 x137 h2a y15f1 ff19 fsf fc0 sc0 ls0 ws0">checking is disabled.</div><div class="t m0 x137 h2a y505c ff19 fsf fc0 sc0 ls0 ws0">Parity <span class="_ _9"></span>‘<span class="_ _0"></span>‘generation <span class="_ _9"></span>and <span class="_ _9"></span>detection’<span class="lsae0">’a<span class="_ _b"></span><span class="ls0">nd <span class="_ _3"></span>‘‘input <span class="_ _9"></span>parity <span class="_ _9"></span>checking’<span class="_ _0"></span><span class="lsae0">’a<span class="_ _b"></span><span class="ls45">re <span class="_ _23"></span>t<span class="ls0">wo</span></span></span></span></span></div><div class="t m0 x137 h2a y505d ff19 fsf fc0 sc0 ls0 ws0">differ<span class="_ _0"></span>ent things.<span class="_ _59"> </span>The generation <span class="_ _2"></span>and detection of parity bits is controlled</div><div class="t m0 x137 h26 y505e ff19 fsf fc0 sc0 ls0 ws0">by the<span class="_"> </span><span class="ff1a">PARENB<span class="_ _66"> </span></span>ﬂag. <span class="_"> </span>Setting<span class="_"> </span>this ﬂag <span class="_ _2"></span>usually causes the device <span class="_ _2"></span>driver for</div><div class="t m0 x137 h2a y1f17 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_"> </span>serial <span class="_ _e"> </span>interface <span class="_"> </span>to <span class="_"> </span>generate <span class="_ _e"> </span>parity <span class="_"> </span>for <span class="_"> </span>outgoing <span class="_ _e"> </span>characters <span class="_"> </span>and <span class="_"> </span>to</div><div class="t m0 x137 h26 y505f ff19 fsf fc0 sc0 ls0 ws0">verify <span class="_ _23"> </span>the <span class="_ _42"> </span>parity <span class="_ _42"> </span>of <span class="_ _23"> </span>incoming <span class="_ _42"> </span>characters.<span class="_ _51"> </span>The <span class="_ _42"> </span>ﬂag<span class="_ _35"> </span><span class="ff1a">PARODD<span class="_ _35"> </span></span>determines</div><div class="t m0 x137 h2a y5060 ff19 fsf fc0 sc0 ls0 ws0">whether <span class="_ _3"></span>the <span class="_ _3"></span>parity <span class="_ _3"></span>should <span class="_ _3"></span>be <span class="_ _9"></span>odd <span class="_ _3"></span>or <span class="_ _3"></span>even.<span class="_ _16"> </span>If <span class="_ _3"></span>an <span class="_ _9"></span>input <span class="_ _3"></span>character <span class="_ _3"></span>arrives</div><div class="t m0 x137 h26 y5061 ff19 fsf fc0 sc0 ls0 ws0">with the wrong parity<span class="_ _4"></span><span class="ls19b">,t<span class="_ _d"></span><span class="ls0">hen the <span class="_ _2"></span>state of the<span class="_"> </span><span class="ff1a">INPCK<span class="_ _66"> </span></span>ﬂag is checked.<span class="_ _46"> </span>If this</span></span></div><div class="t m0 x137 h26 y5062 ff19 fsf fc0 sc0 ls0 ws0">ﬂag <span class="_ _42"> </span>is <span class="_ _42"> </span>set, <span class="_ _42"> </span>then <span class="_ _42"> </span>the<span class="_ _44"> </span><span class="ff1a">IGNPAR<span class="_ _35"> </span></span>ﬂag <span class="_ _53"> </span>is <span class="_ _42"> </span>checked <span class="_ _42"> </span>(to <span class="_ _42"> </span>see <span class="_ _42"> </span>whether <span class="_ _42"> </span>the <span class="_ _42"> </span>input</div><div class="t m0 x137 h2a y5063 ff19 fsf fc0 sc0 ls0 ws0">byte <span class="_ _9"></span>with <span class="_ _9"></span>the <span class="_ _9"></span>parity <span class="_ _9"></span>error <span class="_ _3"></span>should <span class="_ _9"></span>be <span class="_ _9"></span>ignored); <span class="_ _9"></span>if <span class="_ _9"></span>the <span class="_ _9"></span>byte <span class="_ _9"></span>should <span class="_ _9"></span>not <span class="_ _9"></span>be</div><div class="t m0 x137 h26 y5064 ff19 fsf fc0 sc0 ls0 ws0">ignored, then the<span class="_ _66"> </span><span class="ff1a">PARMRK<span class="_ _47"> </span></span>ﬂag is <span class="_ _2"></span>checked <span class="_ _2"></span>to see <span class="_ _2"></span>which <span class="_ _2"></span>characters should</div><div class="t m0 x137 h2a y5065 ff19 fsf fc0 sc0 ls0 ws0">be passed to the reading pr<span class="_ _0"></span>ocess.</div><div class="t m0 x32 h26 y5066 ff1a fsf fc0 sc0 ls0 ws0">ISIG<span class="_ _308"> </span><span class="ff19">(</span>c_lflag<span class="ff19 ls14bd">,P<span class="_ _4f"></span><span class="ls0">OSIX.1, <span class="_ _2"></span>FreeBSD, Linux, Mac <span class="_ _2"></span>OS X, <span class="_ _2"></span>Solaris)<span class="_ _46"> </span>If <span class="_ _2"></span>set, the <span class="_ _2"></span>input</span></span></div><div class="t m0 x137 h2a y5067 ff19 fsf fc0 sc0 ls0 ws0">characters <span class="_ _e"> </span>ar<span class="ls14be">ec<span class="_ _4a"></span><span class="ls0">ompared <span class="_ _e"> </span>against <span class="_"> </span>the <span class="_ _53"> </span>special <span class="_ _e"> </span>characters <span class="_"> </span>that <span class="_ _53"> </span>cause <span class="_"> </span>the</span></span></div><div class="t m0 x137 h2a y5068 ff19 fsf fc0 sc0 ls0 ws0">terminal-generated <span class="_ _66"> </span>signals <span class="_ _47"> </span>to <span class="_ _47"> </span>be <span class="_ _66"> </span>generated</div><div class="t m0 x98 h2a y5069 ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x1 h2a y5068 ff19 fsf fc0 sc0 ls0 ws0">INTR, <span class="_ _66"> </span>QUIT<span class="_ _1"></span><span class="ls14bf">,S<span class="_ _5b"></span><span class="ls0">USP<span class="_ _4"></span><span class="ls14bf">,a<span class="_ _1d"></span><span class="ls0">nd</span></span></span></span></div><div class="t m0 x137 h2a y506a ff19 fsf fc0 sc0 ls0 ws0">DSUSP</div><div class="t m0 x233 h2a y506b ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x1dd h2a y506a ff19 fsf fc0 sc0 ls0 ws0">;<span class="_"> </span>if<span class="_"> </span>equal, the corresponding signal is generated.</div><div class="t m0 x32 h26 y506c ff1a fsf fc0 sc0 ls0 ws0">ISTRIP<span class="_ _20"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls14bc">,P<span class="_ _5b"></span><span class="ls0">OSIX.1, <span class="_"> </span>FreeBSD, <span class="_ _66"> </span>Linux, <span class="_ _66"> </span>Mac <span class="_ _47"> </span>OS <span class="_"> </span>X, <span class="_ _47"> </span>Solaris)<span class="_ _60"> </span>When <span class="_ _47"> </span>set,</span></span></div><div class="t m0 x137 h2a y506d ff19 fsf fc0 sc0 ls0 ws0">valid <span class="_ _42"> </span>input <span class="_ _53"> </span>bytes <span class="_ _53"> </span>ar<span class="ls14c0">es<span class="_ _55"></span><span class="ls0">tripped <span class="_ _53"> </span>to <span class="_ _53"> </span>7 <span class="_ _53"> </span>bits.<span class="_ _54"> </span>When <span class="_ _53"> </span>this <span class="_ _42"> </span>ﬂag <span class="_ _53"> </span>is <span class="_ _53"> </span>not <span class="_ _42"> </span>set, <span class="_ _53"> </span>all</span></span></div><div class="t m0 x137 h2a y506e ff19 fsf fc0 sc0 ls44 ws0">8b<span class="_ _d"></span><span class="ls0">its ar<span class="ls44">ep<span class="_ _d"></span><span class="ls45">ro<span class="ls0">cessed.</span></span></span></span></div><div class="t m0 x32 h26 y506f ff1a fsf fc0 sc0 ls0 ws0">IUCLC<span class="_ _2bb"> </span><span class="ff19">(</span>c_iflag<span class="ff19 ls44">,L<span class="_ _d"></span><span class="ls0">inux, Solaris)<span class="_ _46"> </span>Map uppercase to lowercase on input.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
