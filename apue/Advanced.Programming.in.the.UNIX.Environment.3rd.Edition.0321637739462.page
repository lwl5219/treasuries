<div id="pf1ce" class="pf w4 h1f" data-page-no="1ce"><div class="pc pc1ce w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1ce.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">428<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _2"></span>we <span class="_ _2"></span>know <span class="_ _3"></span>that <span class="_ _2"></span>we <span class="_ _2"></span>don’t <span class="_ _3"></span>need <span class="_ _2"></span>the <span class="_ _2"></span>thread’s <span class="_ _2"></span>termination <span class="_ _2"></span>status <span class="_ _3"></span>at <span class="_ _2"></span>the <span class="_ _2"></span>time <span class="_ _3"></span>we <span class="_ _2"></span>create</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">the thread, we <span class="_ _2"></span>can <span class="_ _2"></span>arrange for <span class="_ _2"></span>the <span class="_ _2"></span>thread to start <span class="_ _2"></span>out <span class="_ _2"></span>in the <span class="_ _2"></span>detached <span class="_ _2"></span>state by <span class="_ _2"></span>modifying</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">the<span class="_ _46"> </span><span class="ff1b">detachstate<span class="_ _59"> </span></span>thread <span class="_"> </span>attribute <span class="_"> </span>in <span class="_"> </span>the<span class="_ _46"> </span><span class="ff1a">pthread_attr_t<span class="_ _46"> </span></span>structure. <span class="_ _59"> </span>W<span class="_ _6"></span><span class="ls296">ec<span class="_ _4a"></span><span class="ls0">an <span class="_"> </span>use <span class="_"> </span>the</span></span></div><div class="t m0 x32 h26 y132 ff1a fsf fc0 sc0 ls0 ws0">pthread_attr_setdetachstate<span class="_ _4b"> </span><span class="ff19">function <span class="_ _53"> </span>to <span class="_ _e"> </span>set <span class="_ _e"> </span>the<span class="_ _4b"> </span><span class="ff1b">detachstate<span class="_ _4b"> </span></span>thread <span class="_ _53"> </span>attribute <span class="_ _e"> </span>to</span></div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">one <span class="_ _45"> </span>of <span class="_ _45"> </span>two <span class="_ _47"> </span>legal <span class="_ _45"> </span>values:<span class="_ _5a"> </span><span class="ff1a">PTHREAD_CREATE_DETACHED<span class="_"> </span></span>to <span class="_ _45"> </span>start <span class="_ _47"> </span>the <span class="_ _45"> </span>thread <span class="_ _45"> </span>in <span class="_ _47"> </span>the</div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">detached <span class="_"> </span>state <span class="_ _e"> </span>or<span class="_ _46"> </span><span class="ff1a">PTHREAD_CREATE_JOINABLE<span class="_ _59"> </span></span>to <span class="_"> </span>start <span class="_"> </span>the <span class="_ _e"> </span>thread <span class="_"> </span>normally<span class="_ _4"></span>,<span class="_ _59"> </span>so<span class="_ _59"> </span>its</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">termination status can be retrieved by the application.</div><div class="t m0 x3f h57 y102f ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y356c ff1a fs2d fc0 sc0 ls0 ws0">int pthread_attr_getdetachstate(const pthread_attr_t *restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x1cd h57 y356d ff1a fs2d fc0 sc0 ls0 ws0">int *<span class="ff1b">detachstate</span>);</div><div class="t m0 x3f h57 y356e ff1a fs2d fc0 sc0 ls0 ws0">int pthread_attr_setdetachstate(pthread_attr_t *<span class="ff1b">attr</span><span class="ls15c">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">detachstate</span>);</span></span></div><div class="t m0 xca h5f y356f ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h4d y3570 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _44"> </span>c<span class="_ _9"></span><span class="ls0">an <span class="_"> </span>call<span class="_ _4b"> </span><span class="ff1a">pthread_attr_getdetachstate<span class="_ _59"> </span></span>to <span class="_"> </span>obtain <span class="_"> </span>the <span class="_ _e"> </span>current<span class="_ _4b"> </span><span class="ff1b">detachstate</span></span></div><div class="t m0 x32 h49 y3571 ff19 fs26 fc0 sc0 ls0 ws0">attribute. <span class="_ _5c"> </span>The<span class="_ _5c"> </span>integer <span class="_ _51"> </span>pointed <span class="_ _5a"> </span>to <span class="_ _51"> </span>by <span class="_ _5a"> </span>the <span class="_ _51"> </span>second <span class="_ _51"> </span>argument <span class="_ _5a"> </span>is <span class="_ _51"> </span>set <span class="_ _5a"> </span>to <span class="_ _51"> </span>either</div><div class="t m0 x32 h4d y3572 ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_CREATE_DETACHED<span class="_"> </span><span class="ff19">or<span class="_ _16"> </span></span>PTHREAD_CREATE_JOINABLE<span class="ff19 lse6f">,d<span class="_ _62"></span><span class="ls0">epending <span class="_ _45"> </span>on <span class="_ _45"> </span>the</span></span></div><div class="t m0 x32 h4d y3573 ff19 fs26 fc0 sc0 ls0 ws0">value of the attribute in the given<span class="_"> </span><span class="ff1a">pthread_attr_t<span class="_ _80"> </span></span>structure.</div><div class="t m0 x35 h4c y3574 ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h49 y3575 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lsd3">e1<span class="_ _4f"></span><span class="ls0">2.4 shows a function that can be used to create a thread in the detached state.</span></span></div><div class="t m0 x32 h5d y3576 ff1a fs2f fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h5d y3577 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x32 h5d y3578 ff1a fs2f fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h5d y3579 ff1a fs2f fc0 sc0 ls0 ws0">makethread(void *(*fn)(void *), void *arg)</div><div class="t m0 x32 h5d y357a ff1a fs2f fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h5d y357b ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>err;</div><div class="t m0 x8a h5d y357c ff1a fs2f fc0 sc0 ls0 ws0">pthread_t <span class="_ _189"> </span>tid;</div><div class="t m0 x8a h5d y357d ff1a fs2f fc0 sc0 ls0 ws0">pthread_attr_t <span class="_"> </span>attr;</div><div class="t m0 x8a h5d y357e ff1a fs2f fc0 sc0 ls0 ws0">err = pthread_attr_init(&amp;attr);</div><div class="t m0 x8a h5d y357f ff1a fs2f fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 x9d h5d y3580 ff1a fs2f fc0 sc0 ls0 ws0">return(err);</div><div class="t m0 x8a h5d y3581 ff1a fs2f fc0 sc0 ls0 ws0">err = pthread_attr_setdetachstate(&amp;attr, PTHREAD_CREATE_DETACHED);</div><div class="t m0 x8a h5d y3582 ff1a fs2f fc0 sc0 ls0 ws0">if (err == 0)</div><div class="t m0 x9d h5d y3583 ff1a fs2f fc0 sc0 ls0 ws0">err = pthread_create(&amp;tid, &amp;attr, fn, arg);</div><div class="t m0 x8a h5d y3584 ff1a fs2f fc0 sc0 ls0 ws0">pthread_attr_destroy(&amp;attr);</div><div class="t m0 x8a h5d y3585 ff1a fs2f fc0 sc0 ls0 ws0">return(err);</div><div class="t m0 x32 h5d y3586 ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x134 h2f y3587 ff18 fs12 fc0 sc0 ls0 ws0">Figure 12.4<span class="_ _d9"> </span><span class="ff19">Cr<span class="_ _0"></span>eating a thread in the detached state</span></div><div class="t m0 x3f h5c y3588 ff19 fs29 fc0 sc0 ls0 ws0">Note that <span class="_ _2"></span>we ignor<span class="lse70">et<span class="_ _d"></span><span class="ls0">he return value <span class="_ _2"></span>from the call <span class="_ _2"></span>to<span class="_ _66"> </span><span class="ff1a">pthread_attr_destroy</span><span class="lse71">.I<span class="_ _4a"></span><span class="ls0">n</span></span></span></span></div><div class="t m0 x32 h5c y3589 ff19 fs29 fc0 sc0 ls0 ws0">this <span class="_ _53"> </span>case, <span class="_"> </span>we <span class="_ _42"> </span>initialized <span class="_"> </span>the <span class="_ _53"> </span>thread <span class="_ _53"> </span>attributes <span class="_ _e"> </span>properly<span class="_ _4"></span><span class="lse72">,s<span class="_ _55"></span><span class="ls0">o<span class="_ _4b"> </span><span class="ff1a">pthread_attr_destroy</span></span></span></div><div class="t m0 x32 h50 y358a ff19 fs29 fc0 sc0 ls0 ws0">shouldn’t <span class="_ _42"> </span>fail.<span class="_ _54"> </span>Nonetheless, <span class="_ _53"> </span>if <span class="_ _42"> </span>it <span class="_ _53"> </span>does <span class="_ _42"> </span>fail, <span class="_ _42"> </span>cleaning <span class="_ _53"> </span>up <span class="_ _42"> </span>would <span class="_ _53"> </span>be <span class="_ _42"> </span>difﬁcult: <span class="_ _42"> </span>we <span class="_ _42"> </span>would</div><div class="t m0 x32 h50 y358b ff19 fs29 fc0 sc0 ls0 ws0">have <span class="_ _4b"> </span>to <span class="_ _4b"> </span>destroy <span class="_ _4b"> </span>the <span class="_ _59"> </span>thread <span class="_ _4b"> </span>we <span class="_ _4b"> </span>just <span class="_ _4b"> </span>created, <span class="_ _4b"> </span>which <span class="_ _4b"> </span>might <span class="_ _59"> </span>already <span class="_ _4b"> </span>be <span class="_ _4b"> </span>running,</div><div class="t m0 x32 h50 y358c ff19 fs29 fc0 sc0 ls0 ws0">asynchronous <span class="_ _23"> </span>to <span class="_ _53"> </span>the <span class="_ _42"> </span>execution <span class="_ _42"> </span>of <span class="_ _53"> </span>this <span class="_ _42"> </span>function.<span class="_ _54"> </span>When <span class="_ _42"> </span>we <span class="_ _42"> </span>choose <span class="_ _53"> </span>to <span class="_ _42"> </span>ignor<span class="lse73">et<span class="_ _c"></span><span class="ls0">he <span class="_ _42"> </span>error</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
