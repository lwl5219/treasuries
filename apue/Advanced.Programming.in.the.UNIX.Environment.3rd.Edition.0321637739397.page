<div id="pf18d" class="pf w4 h1f" data-page-no="18d"><div class="pc pc18d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg18d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.16<span class="_ _274"> </span><span class="ff1a">sigsuspend<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">363</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y363 ff1a fs2d fc0 sc0 ls0 ws0">static volatile sig_atomic_t sigflag; /* set nonzero by sig handler */</div><div class="t m0 x32 h57 y13a0 ff1a fs2d fc0 sc0 ls0 ws0">static sigset_t newmask, oldmask, zeromask;</div><div class="t m0 x32 h57 y365 ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y366 ff1a fs2d fc0 sc0 ls0 ws0">sig_usr(int signo)<span class="_ _d9"> </span>/* one signal handler for SIGUSR1 and SIGUSR2 */</div><div class="t m0 x32 h57 y367 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y368 ff1a fs2d fc0 sc0 ls0 ws0">sigflag = 1;</div><div class="t m0 x32 h57 y848 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y36a ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y36b ff1a fs2d fc0 sc0 ls0 ws0">TELL_WAIT(void)</div><div class="t m0 x32 h57 y84b ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y84c ff1a fs2d fc0 sc0 ls0 ws0">if (signal(SIGUSR1, sig_usr) == SIG_ERR)</div><div class="t m0 x9d h57 y84d ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;signal(SIGUSR1) error&quot;);</div><div class="t m0 x8a h57 y84e ff1a fs2d fc0 sc0 ls0 ws0">if (signal(SIGUSR2, sig_usr) == SIG_ERR)</div><div class="t m0 x9d h57 y84f ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;signal(SIGUSR2) error&quot;);</div><div class="t m0 x8a h57 y850 ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;zeromask);</div><div class="t m0 x8a h57 y851 ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;newmask);</div><div class="t m0 x8a h57 y852 ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;newmask, SIGUSR1);</div><div class="t m0 x8a h57 y853 ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;newmask, SIGUSR2);</div><div class="t m0 x8a h57 y1d3e ff1a fs2d fc0 sc0 ls0 ws0">/* Block SIGUSR1 and SIGUSR2, and save current signal mask */</div><div class="t m0 x8a h57 y855 ff1a fs2d fc0 sc0 ls0 ws0">if (sigprocmask(SIG_BLOCK, &amp;newmask, &amp;oldmask) &lt; 0)</div><div class="t m0 x9d h57 y1d3f ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;SIG_BLOCK error&quot;);</div><div class="t m0 x32 h57 y2aad ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y858 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y859 ff1a fs2d fc0 sc0 ls0 ws0">TELL_PARENT(pid_t pid)</div><div class="t m0 x32 h57 y85a ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y85b ff1a fs2d fc0 sc0 ls0 ws0">kill(pid, SIGUSR2);<span class="_ _8a"> </span>/* tell parent we’re done */</div><div class="t m0 x32 h57 y85c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y2e91 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y2e92 ff1a fs2d fc0 sc0 ls0 ws0">WAIT_PARENT(void)</div><div class="t m0 x32 h57 y2e93 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y860 ff1a fs2d fc0 sc0 ls0 ws0">while (sigflag == 0)</div><div class="t m0 x9d h57 y2e94 ff1a fs2d fc0 sc0 ls0 ws0">sigsuspend(&amp;zeromask); <span class="_"> </span>/*<span class="_"> </span>and wait for parent */</div><div class="t m0 x8a h57 y2e95 ff1a fs2d fc0 sc0 ls0 ws0">sigflag = 0;</div><div class="t m0 x8a h57 y2e96 ff1a fs2d fc0 sc0 ls0 ws0">/* Reset signal mask to original value */</div><div class="t m0 x8a h57 y2e97 ff1a fs2d fc0 sc0 ls0 ws0">if (sigprocmask(SIG_SETMASK, &amp;oldmask, NULL) &lt; 0)</div><div class="t m0 x9d h57 y2e98 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;SIG_SETMASK error&quot;);</div><div class="t m0 x32 h57 y2e99 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y2e9a ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y2e9b ff1a fs2d fc0 sc0 ls0 ws0">TELL_CHILD(pid_t pid)</div><div class="t m0 x32 h57 y2e9c ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y2e9d ff1a fs2d fc0 sc0 ls0 ws0">kill(pid, SIGUSR1);<span class="_ _176"> </span>/* tell child we’re done */</div><div class="t m0 x32 h57 y2e9e ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y86c ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y86d ff1a fs2d fc0 sc0 ls0 ws0">WAIT_CHILD(void)</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
