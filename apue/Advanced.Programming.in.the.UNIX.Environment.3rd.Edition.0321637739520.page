<div id="pf208" class="pf w4 h1f" data-page-no="208"><div class="pc pc208 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg208.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">486<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>I/O<span class="_ _16b"> </span>Chapter <span class="_"> </span>14</span></div><div class="t m0 x35 h26 y12f ff1f fsf fc0 sc0 ls0 ws0">fcntl<span class="_ _66"> </span><span class="ff16">Recor<span class="ls12e">dL<span class="_ _4f"></span><span class="ls0">ocking</span></span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">Let’s repeat the pr<span class="_ _0"></span>ototype for the<span class="_"> </span><span class="ff1a">fcntl<span class="_ _80"> </span></span>function from Section 3.14.</div><div class="t m0 x3f h57 y1e69 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;fcntl.h&gt;</div><div class="t m0 x3f h57 y3b95 ff1a fs2d fc0 sc0 ls0 ws0">int fcntl(int<span class="_"> </span><span class="ff1b">fd</span><span class="ls15c">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">cmd</span><span class="ls15c">,.<span class="_ _5b"></span><span class="ls0">.. /* struct flock *<span class="ff1b">ﬂockptr<span class="_ _61"> </span></span>*/ );</span></span></span></span></div><div class="t m0 x17f h58 y3b96 ff19 fs2d fc0 sc0 ls0 ws0">Returns: depends on<span class="_"> </span><span class="ff1b">cmd<span class="_"> </span></span>if OK (see following),<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h4d y3b97 ff19 fs26 fc0 sc0 ls0 ws0">For <span class="_"> </span>recor<span class="_ _1"></span><span class="lsfd8">dl<span class="_ _4a"></span><span class="ls0">ocking,<span class="_ _46"> </span><span class="ff1b">cmd<span class="_ _46"> </span></span>is<span class="_ _59"> </span><span class="ff1a">F_GETLK</span>,<span class="_ _46"> </span><span class="ff1a">F_SETLK</span><span class="lsfd8">,o<span class="_ _4a"></span><span class="ls0">r<span class="_ _46"> </span><span class="ff1a">F_SETLKW</span><span class="lsfd9">.T<span class="_ _5d"></span><span class="ls0">he <span class="_"> </span>thir<span class="_ _0"></span><span class="lsfd8">da<span class="_ _4a"></span><span class="lscc">rg<span class="ls0">ument</span></span></span></span></span></span></span></span></span></div><div class="t m0 x32 h4d y3b98 ff19 fs26 fc0 sc0 ls0 ws0">(which we’ll call<span class="_"> </span><span class="ff1b">ﬂockptr</span>)<span class="_"> </span>is<span class="_"> </span>a<span class="_"> </span>pointer to an<span class="_"> </span><span class="ff1a">flock<span class="_ _80"> </span></span>structure.</div><div class="t m0 x3f h4e y3b99 ff1a fs28 fc0 sc0 ls0 ws0">struct flock {</div><div class="t m0 xf4 h4e y3b9a ff1a fs28 fc0 sc0 ls0 ws0">short <span class="_"> </span>l_type;<span class="_ _68"> </span>/* F_RDLCK, F_WRLCK, or F_UNLCK */</div><div class="t m0 xf4 h4e y3b9b ff1a fs28 fc0 sc0 ls0 ws0">short <span class="_"> </span>l_whence;<span class="_"> </span>/* SEEK_SET, SEEK_CUR, or SEEK_END */</div><div class="t m0 xf4 h4e y3b9c ff1a fs28 fc0 sc0 ls0 ws0">off_t <span class="_"> </span>l_start; <span class="_"> </span>/*<span class="_"> </span>offset in bytes, relative to l_whence */</div><div class="t m0 xf4 h4e y3b9d ff1a fs28 fc0 sc0 ls0 ws0">off_t <span class="_"> </span>l_len;<span class="_ _15"> </span>/* length, in bytes; 0 means lock to EOF */</div><div class="t m0 xf4 h4e y3b9e ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_"> </span>l_pid;<span class="_ _15"> </span>/* returned with F_GETLK */</div><div class="t m0 x3f h4e y3b9f ff1a fs28 fc0 sc0 ls0 ws0">};</div><div class="t m0 x32 h49 y3ba0 ff19 fs26 fc0 sc0 ls0 ws0">This structur<span class="_ _0"></span><span class="lsd3">ed<span class="_ _d"></span><span class="ls0">escribes</span></span></div><div class="t m0 x3f h4d y3ba1 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _3"></span>type <span class="_ _3"></span>of <span class="_ _3"></span>lock <span class="_ _9"></span>desired:<span class="_ _47"> </span><span class="ff1a">F_RDLCK<span class="_ _47"> </span></span>(a <span class="_ _3"></span>shared <span class="_ _3"></span>read <span class="_ _2"></span>lock),<span class="_ _45"> </span><span class="ff1a">F_WRLCK<span class="_ _47"> </span></span>(an <span class="_ _3"></span>exclusive</span></div><div class="t m0 x15 h4d y3ba2 ff19 fs26 fc0 sc0 ls0 ws0">write lock), or<span class="_"> </span><span class="ff1a">F_UNLCK<span class="_ _80"> </span></span>(unlocking a region)</div><div class="t m0 x3f h4d y3ba3 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _23"> </span>starting <span class="_ _23"> </span>byte <span class="_ _23"> </span>offset <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _42"> </span>region <span class="_ _9"></span>being <span class="_ _42"> </span>locked <span class="_ _23"></span>or <span class="_ _23"> </span>unlocked <span class="_ _23"> </span>(<span class="ff1a">l_start<span class="_ _35"> </span></span>and</span></div><div class="t m0 x15 h4d y3ba4 ff1a fs26 fc0 sc0 ls0 ws0">l_whence<span class="ff19">)</span></div><div class="t m0 x3f h4d y3ba5 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he size of the region in bytes (<span class="ff1a">l_len</span>)</span></div><div class="t m0 x3f h4d y3ba6 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_"> </span>ID <span class="_ _47"> </span>(<span class="ff1a">l_pid</span>)<span class="_ _46"> </span>of<span class="_ _46"> </span>the <span class="_ _47"> </span>process <span class="_"> </span>holding <span class="_"> </span>the <span class="_ _47"> </span>lock <span class="_"> </span>that <span class="_ _66"> </span>can <span class="_ _47"> </span>block <span class="_"> </span>the <span class="_ _66"> </span>current</span></div><div class="t m0 x15 h4d y3ba7 ff19 fs26 fc0 sc0 ls0 ws0">process (r<span class="_ _0"></span>eturned by<span class="_"> </span><span class="ff1a">F_GETLK<span class="_ _80"> </span></span>only)</div><div class="t m0 x32 h49 y3ba8 ff19 fs26 fc0 sc0 ls0 ws0">Numerous r<span class="_ _0"></span>ules apply to the speciﬁcation of the region to be locked or unlocked.</div><div class="t m0 x3f h49 y3ba9 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _3"></span>two <span class="_ _9"></span>elements <span class="_ _9"></span>that <span class="_ _3"></span>specify <span class="_ _9"></span>the <span class="_ _9"></span>starting <span class="_ _3"></span>offset <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>region <span class="_ _3"></span>ar<span class="lsfda">es<span class="_ _b"></span><span class="ls0">imilar <span class="_ _3"></span>to <span class="_ _9"></span>the</span></span></span></div><div class="t m0 x15 h4d y3baa ff19 fs26 fc0 sc0 ls0 ws0">last <span class="_ _9"></span>two <span class="_ _3"></span>arguments <span class="_ _9"></span>of <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1a">lseek<span class="_ _45"> </span></span>function <span class="_ _9"></span>(Section <span class="_ _9"></span>3.6).<span class="_ _16"> </span>Indeed, <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">l_whence</span></div><div class="t m0 x15 h4d y3bab ff19 fs26 fc0 sc0 ls0 ws0">member is speciﬁed as<span class="_"> </span><span class="ff1a">SEEK_SET</span>,<span class="_"> </span><span class="ff1a">SEEK_CUR</span><span class="lsd3">,o<span class="_ _d"></span><span class="ls0">r<span class="_"> </span><span class="ff1a">SEEK_END</span>.</span></span></div><div class="t m0 x3f h49 y3bac ff19 fs26 fc0 sc0 ls15d ws0">•L<span class="_ _4d"></span><span class="ls0">ocks <span class="_ _23"> </span>can <span class="_ _42"> </span>start <span class="_ _42"> </span>and <span class="_ _23"> </span>extend <span class="_ _42"> </span>beyond <span class="_ _42"> </span>the <span class="_ _23"> </span>current <span class="_ _23"> </span>end <span class="_ _42"> </span>of <span class="_ _23"> </span>ﬁle, <span class="_ _42"> </span>but <span class="_ _42"> </span>cannot <span class="_ _23"> </span>start <span class="_ _42"> </span>or</span></div><div class="t m0 x15 h49 y3bad ff19 fs26 fc0 sc0 ls0 ws0">extend befor<span class="lsd3">et<span class="_ _4f"></span><span class="ls0">he beginning of the ﬁle.</span></span></div><div class="t m0 x3f h4d y3bae ff19 fs26 fc0 sc0 ls15d ws0">•I<span class="_ _4d"></span><span class="ls0">f<span class="_ _45"> </span><span class="ff1a">l_len<span class="_ _47"> </span></span>is <span class="_ _9"></span>0, <span class="_ _3"></span>it <span class="_ _9"></span>means <span class="_ _9"></span>that <span class="_ _9"></span>the <span class="_ _3"></span>lock <span class="_ _9"></span>extends <span class="_ _9"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>largest <span class="_ _3"></span>possible <span class="_ _9"></span>offset <span class="_ _3"></span>of <span class="_ _9"></span>the</span></div><div class="t m0 x15 h49 y3baf ff19 fs26 fc0 sc0 ls0 ws0">ﬁle. <span class="_"> </span>This<span class="_"> </span>allows us to <span class="_ _2"></span>lock a region starting anywhere<span class="_"> </span>in<span class="_"> </span>the ﬁle, up through and</div><div class="t m0 x15 h49 y3bb0 ff19 fs26 fc0 sc0 ls0 ws0">including <span class="_ _9"></span>any <span class="_ _9"></span>data <span class="_ _23"></span>that <span class="_ _9"></span>is <span class="_ _9"></span>appended <span class="_ _9"></span>to <span class="_ _23"></span>the <span class="_ _9"></span>ﬁle.<span class="_ _5a"> </span>(W<span class="_ _6"></span><span class="ls636">ed<span class="_ _b"></span><span class="ls0">on’t <span class="_ _9"></span>have <span class="_ _9"></span>to <span class="_ _23"></span>try <span class="_ _9"></span>to <span class="_ _9"></span>guess</span></span></div><div class="t m0 x15 h49 y3bb1 ff19 fs26 fc0 sc0 ls0 ws0">how many bytes might be appended to the ﬁle.)</div><div class="t m0 x3f h4d y3bb2 ff19 fs26 fc0 sc0 ls15d ws0">•T<span class="_ _4e"></span><span class="lsfdb">ol<span class="_ _4f"></span><span class="ls0">ock <span class="_ _3"></span>the <span class="_ _2"></span>entir<span class="lsfdc">eﬁ<span class="_ _8"></span><span class="ls0">le, <span class="_ _3"></span>we <span class="_ _2"></span>set<span class="_ _47"> </span><span class="ff1a">l_start<span class="_ _47"> </span></span>and<span class="_ _47"> </span><span class="ff1a">l_whence<span class="_ _47"> </span></span>to <span class="_ _2"></span>point <span class="_ _2"></span>to <span class="_ _3"></span>the <span class="_ _2"></span>beginning</span></span></span></span></div><div class="t m0 x15 h4d y3bb3 ff19 fs26 fc0 sc0 ls0 ws0">of <span class="_ _3"></span>the <span class="_ _3"></span>ﬁle <span class="_ _9"></span>and <span class="_ _3"></span>specify <span class="_ _9"></span>a <span class="_ _3"></span>length <span class="_ _3"></span>(<span class="ff1a">l_len</span>)<span class="_ _45"> </span>of<span class="_ _47"> </span>0<span class="lsfdd">.(<span class="_ _1d"></span><span class="ls0">Ther<span class="lsfde">ea<span class="_ _b"></span><span class="lscc">re <span class="_ _23"></span>s<span class="ls0">everal <span class="_ _3"></span>ways <span class="_ _9"></span>to <span class="_ _3"></span>specify</span></span></span></span></span></div><div class="t m0 x15 h4d y3bb4 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _66"> </span>beginning <span class="_ _47"> </span>of <span class="_ _47"> </span>the <span class="_ _66"> </span>ﬁle, <span class="_ _47"> </span>but <span class="_ _47"> </span>most <span class="_ _66"> </span>applications <span class="_ _47"> </span>specify<span class="_ _61"> </span><span class="ff1a">l_start<span class="_ _16"> </span></span>as <span class="_ _47"> </span>0 <span class="_ _66"> </span>and</div><div class="t m0 x15 h4d y3bb5 ff1a fs26 fc0 sc0 ls0 ws0">l_whence<span class="_ _80"> </span><span class="ff19">as<span class="_"> </span></span>SEEK_SET<span class="ff19">.)</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
