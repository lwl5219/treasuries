<div id="pf77" class="pf w4 h1f" data-page-no="77"><div class="pc pc77 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg77.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>3.14<span class="_ _177"> </span><span class="ff1a">fcntl<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">85</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">operation <span class="_ _9"></span>of <span class="_ _23"></span>the <span class="_ _23"></span>pr<span class="_ _0"></span>ogram, <span class="_ _9"></span>when <span class="_ _23"> </span>invoked <span class="_ _23"></span>fr<span class="_ _0"></span>om<span class="_ _45"> </span><span class="ff1a">bash<span class="_ _35"> </span></span>(the <span class="_ _9"></span>Bourne-again <span class="_ _23"></span>shell).<span class="_ _5a"> </span>Results</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">will vary<span class="_ _4"></span><span class="ls44">,d<span class="_ _5"></span><span class="ls0">epending on which shell you use.</span></span></div><div class="t m0 x3f h57 yd13 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out 0 &lt; /dev/tty</span></div><div class="t m0 x3f h57 yd14 ff1a fs2d fc0 sc0 ls0 ws0">read only</div><div class="t m0 x3f h57 yd15 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out 1 &gt; temp.foo</span></div><div class="t m0 x3f h57 yd16 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">cat temp.foo</span></div><div class="t m0 x3f h57 yd17 ff1a fs2d fc0 sc0 ls0 ws0">write only</div><div class="t m0 x3f h57 yd18 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out 2 2&gt;&gt;temp.foo</span></div><div class="t m0 x3f h57 yd19 ff1a fs2d fc0 sc0 ls0 ws0">write only, append</div><div class="t m0 x3f h57 yd1a ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out 5 5&lt;&gt;temp.foo</span></div><div class="t m0 x3f h57 yd1b ff1a fs2d fc0 sc0 ls0 ws0">read write</div><div class="t m0 x32 h26 yd1c ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>clause<span class="_ _59"> </span><span class="ff1a">5&lt;&gt;temp.foo<span class="_ _59"> </span></span>opens <span class="_ _e"> </span>the <span class="_"> </span>ﬁle<span class="_ _4b"> </span><span class="ff1a">temp.foo<span class="_ _59"> </span></span>for <span class="_"> </span>r<span class="_ _1"></span>eading <span class="_"> </span>and <span class="_ _e"> </span>writing <span class="_"> </span>on <span class="_ _53"> </span>ﬁle</div><div class="t m0 x32 h2a yd1d ff19 fsf fc0 sc0 ls0 ws0">descriptor 5.</div><div class="t m0 x35 h4c yd1e ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h49 yd1f ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _53"> </span>we <span class="_ _e"> </span>modify <span class="_ _53"> </span>either <span class="_ _e"> </span>the <span class="_ _e"> </span>ﬁle <span class="_ _53"> </span>descriptor <span class="_ _e"> </span>ﬂags <span class="_ _53"> </span>or <span class="_ _e"> </span>the <span class="_ _e"> </span>ﬁle <span class="_ _53"> </span>status <span class="_ _e"> </span>ﬂags, <span class="_ _e"> </span>we <span class="_ _53"> </span>must <span class="_ _e"> </span>be</div><div class="t m0 x32 h49 yd20 ff19 fs26 fc0 sc0 ls0 ws0">careful <span class="_ _9"></span>to <span class="_ _9"></span>fetch <span class="_ _23"></span>the <span class="_ _9"></span>existing <span class="_ _23"></span>ﬂag <span class="_ _9"></span>value, <span class="_ _23"></span>modify <span class="_ _9"></span>it <span class="_ _23"></span>as <span class="_ _9"></span>desired, <span class="_ _9"></span>and <span class="_ _23"></span>then <span class="_ _9"></span>set <span class="_ _23"></span>the <span class="_ _9"></span>new <span class="_ _9"></span>ﬂag</div><div class="t m0 x32 h4d yd21 ff19 fs26 fc0 sc0 ls0 ws0">value. <span class="_ _47"> </span>W<span class="_ _6"></span><span class="ls423">ec<span class="_ _8"></span><span class="ls0">an’t <span class="_ _3"></span>simply <span class="_ _3"></span>issue <span class="_ _2"></span>an<span class="_ _47"> </span><span class="ff1a">F_SETFD<span class="_ _47"> </span></span>or <span class="_ _3"></span>an<span class="_ _47"> </span><span class="ff1a">F_SETFL<span class="_ _47"> </span></span>command, <span class="_ _2"></span>as <span class="_ _3"></span>this <span class="_ _2"></span>could <span class="_ _3"></span>turn</span></span></div><div class="t m0 x32 h49 yd22 ff19 fs26 fc0 sc0 ls0 ws0">of<span class="lsd3">fﬂ<span class="_ _4f"></span><span class="ls0">ag bits that wer<span class="lsd3">ep<span class="_ _d"></span><span class="lscc">re<span class="_ _2"></span><span class="ls0">viously set.</span></span></span></span></span></div><div class="t m0 x3f h49 yd23 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="ls424">e3<span class="_ _4a"></span><span class="ls0">.12 <span class="_"> </span>shows <span class="_ _53"> </span>a <span class="_ _53"> </span>function <span class="_"> </span>that <span class="_ _42"> </span>sets <span class="_"> </span>one <span class="_ _53"> </span>or <span class="_ _53"> </span>more<span class="_ _4b"> </span>of<span class="_ _4b"> </span>the <span class="_ _e"> </span>ﬁle <span class="_ _e"> </span>status <span class="_ _e"> </span>ﬂags <span class="_ _e"> </span>for <span class="_ _e"> </span>a</span></span></div><div class="t m0 x32 h49 yd24 ff19 fs26 fc0 sc0 ls0 ws0">descriptor<span class="_ _6"></span>.</div><div class="t m0 x32 h5d yd25 ff1a fs2f fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h5d yd26 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;fcntl.h&gt;</div><div class="t m0 x32 h5d yd27 ff1a fs2f fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h5d yd28 ff1a fs2f fc0 sc0 ls0 ws0">set_fl(int fd, int flags) /* flags are file status flags to turn on */</div><div class="t m0 x32 h5d yd29 ff1a fs2f fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h5d yd2a ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>val;</div><div class="t m0 x8a h5d yd2b ff1a fs2f fc0 sc0 ls0 ws0">if ((val = fcntl(fd, F_GETFL, 0)) &lt; 0)</div><div class="t m0 x9d h5d yd2c ff1a fs2f fc0 sc0 ls0 ws0">err_sys(&quot;fcntl F_GETFL error&quot;);</div><div class="t m0 x8a h5d yd2d ff1a fs2f fc0 sc0 ls0 ws0">val |= flags;<span class="_ _b7"> </span>/* turn on flags */</div><div class="t m0 x8a h5d yd2e ff1a fs2f fc0 sc0 ls0 ws0">if (fcntl(fd, F_SETFL, val) &lt; 0)</div><div class="t m0 x9d h5d yd2f ff1a fs2f fc0 sc0 ls0 ws0">err_sys(&quot;fcntl F_SETFL error&quot;);</div><div class="t m0 x32 h5d yd30 ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x54 h2f yd31 ff18 fs12 fc0 sc0 ls0 ws0">Figure 3.12<span class="_ _5a"> </span><span class="ff19 ls425">Tu<span class="_ _9"></span><span class="ls0">rn on one or more<span class="_"> </span>of<span class="_"> </span>the ﬁle status ﬂags for a descriptor</span></span></div><div class="t m0 x32 h50 yd32 ff19 fs29 fc0 sc0 ls0 ws0">If we change the middle statement to</div><div class="t m0 x3f h62 yd33 ff1a fs30 fc0 sc0 ls0 ws0">val &amp;= ˜flags;<span class="_ _88"> </span>/* turn flags off */</div><div class="t m0 x32 h5c yd34 ff19 fs29 fc0 sc0 ls0 ws0">we <span class="_"> </span>have <span class="_ _e"> </span>a <span class="_"> </span>function <span class="_ _e"> </span>named<span class="_ _59"> </span><span class="ff1a">clr_fl</span><span class="ls426">,w<span class="_ _55"></span><span class="ls0">hich <span class="_"> </span>we’ll <span class="_ _e"> </span>use <span class="_"> </span>in <span class="_ _e"> </span>some <span class="_"> </span>later <span class="_ _e"> </span>examples.<span class="_ _60"> </span>This</span></span></div><div class="t m0 x32 h5c yd35 ff19 fs29 fc0 sc0 ls0 ws0">statement logically ANDs the one’s complement of<span class="_"> </span><span class="ff1a">flags<span class="_ _80"> </span></span>with the current<span class="_"> </span><span class="ff1a">val</span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
