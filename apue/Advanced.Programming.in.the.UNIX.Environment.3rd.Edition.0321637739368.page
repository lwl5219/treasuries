<div id="pf170" class="pf w4 h1f" data-page-no="170"><div class="pc pc170 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg170.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">334<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&quot;apue.h&quot;</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&lt;sys/wait.h&gt;</div><div class="t m0 x32 h57 y1d78 ff1a fs2d fc0 sc0 ls0 ws0">static void sig_cld(int);</div><div class="t m0 x32 h57 y3c3 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y3c4 ff1a fs2d fc0 sc0 ls0 ws0">main()</div><div class="t m0 x32 h57 y3c5 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y3c6 ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h57 y1cc4 ff1a fs2d fc0 sc0 ls0 ws0">if (signal(SIGCLD, sig_cld) == SIG_ERR)</div><div class="t m0 x9d h57 y1cc5 ff1a fs2d fc0 sc0 ls0 ws0">perror(&quot;signal error&quot;);</div><div class="t m0 x8a h57 y2016 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 x9d h57 y2017 ff1a fs2d fc0 sc0 ls0 ws0">perror(&quot;fork error&quot;);</div><div class="t m0 x8a h57 y2018 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {<span class="_ _88"> </span>/* child */</span></div><div class="t m0 x9d h57 y2ad4 ff1a fs2d fc0 sc0 ls0 ws0">sleep(2);</div><div class="t m0 x9d h57 y2ad5 ff1a fs2d fc0 sc0 ls0 ws0">_exit(0);</div><div class="t m0 x8a h57 y2ad6 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y2ad7 ff1a fs2d fc0 sc0 ls0 ws0">pause(); <span class="_ _68"> </span>/*<span class="_"> </span>parent */</div><div class="t m0 x8a h57 y2ad8 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y2ad9 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y2ada ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y2adb ff1a fs2d fc0 sc0 ls0 ws0">sig_cld(int signo)<span class="_ _d9"> </span>/* interrupts pause() */</div><div class="t m0 x32 h57 y2adc ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y2add ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h57 y2ade ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>status;</div><div class="t m0 x8a h57 y2adf ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;SIGCLD received\n&quot;);</div><div class="t m0 x8a h57 y1cd2 ff1a fs2d fc0 sc0 ls0 ws0">if (signal(SIGCLD, sig_cld) == SIG_ERR) /* reestablish handler */</div><div class="t m0 x9d h57 y1cd3 ff1a fs2d fc0 sc0 ls0 ws0">perror(&quot;signal error&quot;);</div><div class="t m0 x8a h57 y2ae0 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = wait(&amp;status)) &lt; 0)<span class="_ _189"> </span>/* fetch child status */</div><div class="t m0 x9d h57 y1cd5 ff1a fs2d fc0 sc0 ls0 ws0">perror(&quot;wait error&quot;);</div><div class="t m0 x8a h57 y2ae1 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;pid = %d\n&quot;, pid);</div><div class="t m0 x32 h57 y2ae2 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x161 h5e y2ae3 ff18 fs10 fc0 sc0 ls0 ws0">Figure 10.6<span class="_ _5a"> </span><span class="ff19">System V<span class="_"> </span><span class="ff1a">SIGCLD<span class="_ _e"> </span></span>handler that doesn’t work</span></div><div class="t m0 x76 h2d y2ae4 ff19 fs10 fc0 sc0 ls0 ws0">FreeBSD <span class="_ _42"> </span>8.0 <span class="_"> </span>and <span class="_ _42"> </span>Mac <span class="_"> </span>OS <span class="_ _42"> </span>X <span class="_"> </span>10.6.8 <span class="_ _42"> </span>don’t <span class="_ _42"> </span>exhibit <span class="_"> </span>this <span class="_ _42"> </span>problem, <span class="_ _42"> </span>because <span class="_"> </span>BSD</div><div class="t m0 x1fb h2d y2ae5 ff19 fs10 fc0 sc0 ls0 ws0">-</div><div class="t m0 x204 h2d y2ae4 ff19 fs10 fc0 sc0 ls0 ws0">based <span class="_"> </span>systems</div><div class="t m0 x76 h5e y2ae6 ff19 fs10 fc0 sc0 ls0 ws0">generally <span class="_ _23"> </span>don’t <span class="_ _9"> </span>support <span class="_ _23"> </span>historical <span class="_ _23"> </span>System <span class="_ _23"> </span>V <span class="_ _23"> </span>semantics <span class="_ _9"> </span>for<span class="_ _45"> </span><span class="ff1a">SIGCLD</span><span class="lsc41">.L<span class="_ _5b"></span><span class="ls0">inux <span class="_ _23"> </span>3.2.0 <span class="_ _23"> </span>also <span class="_ _23"> </span>doesn’t</span></span></div><div class="t m0 x76 h5e y2ae7 ff19 fs10 fc0 sc0 ls0 ws0">exhibit <span class="_"> </span>this <span class="_"> </span>problem, <span class="_"> </span>because <span class="_"> </span>it <span class="_"> </span>doesn’t <span class="_"> </span>call <span class="_"> </span>the<span class="_ _44"> </span><span class="ff1a">SIGCHLD<span class="_ _35"> </span></span>signal <span class="_"> </span>handler <span class="_"> </span>when <span class="_"> </span>a <span class="_"> </span>process</div><div class="t m0 x76 h5e y2ae8 ff19 fs10 fc0 sc0 ls0 ws0">arranges <span class="_"> </span>to <span class="_ _42"> </span>catch<span class="_ _35"> </span><span class="ff1a">SIGCHLD<span class="_ _35"> </span></span>and <span class="_"> </span>child <span class="_ _42"> </span>processes <span class="_"> </span>ar<span class="_ _0"></span><span class="lsc42">er<span class="_ _43"></span><span class="ls0">eady <span class="_ _42"> </span>to <span class="_"> </span>be<span class="_ _35"> </span><span class="ff1a">wait</span>ed <span class="_"> </span>for<span class="_ _6"></span><span class="lsc42">,e<span class="_ _b"></span><span class="ls0">ven <span class="_ _42"> </span>though</span></span></span></span></div><div class="t m0 x76 h5e y2ae9 ff1a fs10 fc0 sc0 ls0 ws0">SIGCLD<span class="_ _66"> </span><span class="ff19">and<span class="_ _47"> </span></span>SIGCHLD<span class="_ _66"> </span><span class="ff19">ar<span class="lsc43">ed<span class="_ _4f"></span><span class="ls0">eﬁned <span class="_ _9"></span>to <span class="_ _9"></span>be <span class="_ _9"></span>the <span class="_ _3"></span>same <span class="_ _9"> </span>value.<span class="_ _59"> </span>Solaris <span class="_ _9"> </span>10, <span class="_ _9"> </span>on <span class="_ _9"></span>the <span class="_ _9"></span>other <span class="_ _9"></span>hand, <span class="_ _9"></span>does</span></span></span></div><div class="t m0 x76 h2d y2aea ff19 fs10 fc0 sc0 ls0 ws0">call <span class="_ _23"> </span>the <span class="_ _42"> </span>signal <span class="_ _42"> </span>handler <span class="_ _23"> </span>in <span class="_ _42"> </span>this <span class="_ _23"> </span>situation, <span class="_ _42"> </span>but <span class="_ _42"> </span>includes <span class="_ _23"> </span>extra <span class="_ _42"> </span>code <span class="_ _42"> </span>in <span class="_ _23"> </span>the <span class="_ _42"> </span>kernel <span class="_ _23"> </span>to <span class="_ _42"> </span>avoid <span class="_ _42"> </span>this</div><div class="t m0 x76 h2d y2aeb ff19 fs10 fc0 sc0 ls0 ws0">problem.</div><div class="t m0 x76 h2d y2aec ff19 fs10 fc0 sc0 ls0 ws0">Although <span class="_ _3"></span>the <span class="_ _9"></span>four <span class="_ _3"></span>platforms <span class="_ _3"></span>described <span class="_ _9"></span>in <span class="_ _3"></span>this <span class="_ _9"></span>book <span class="_ _3"></span>solve <span class="_ _9"></span>this <span class="_ _3"></span>problem, <span class="_ _3"></span>realize <span class="_ _3"></span>that <span class="_ _9"></span>platforms</div><div class="t m0 x76 h2d y2aed ff19 fs10 fc0 sc0 ls0 ws0">(such as AIX) still exist that haven’t addressed it.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
