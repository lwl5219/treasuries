<div id="pf37a" class="pf w4 h1f" data-page-no="37a"><div class="pc pc37a w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg37a.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">856<span class="_ _1b"> </span><span class="ff19">Function <span class="_"> </span>Prototypes <span class="_ _2d9"> </span>Appendix<span class="_ _44"> </span>A</span></div><div class="t m0 x32 h52 y2a3 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">fwide</span>(FILE *<span class="ff1b">fp</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">mode</span>);</span></span></div><div class="t m0 x36 h52 y5cfc ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 144</span></div><div class="t m0 x36 h52 y5d5e ff1a fs2a fc0 sc0 ls0 ws0">&lt;wchar.h&gt;</div><div class="t m0 x36 h51 y5d3f ff19 fs2a fc0 sc0 ls0 ws0">Returns: positive if stream is wide oriented, negative if str<span class="_ _0"></span>eam</div><div class="t m0 x136 h51 y5d40 ff19 fs2a fc0 sc0 ls0 ws0">is byte oriented, or 0 if stream has no orientation</div><div class="t m0 x32 h52 y2edd ff1a fs2a fc0 sc0 ls0 ws0">size_t<span class="_ _72"> </span><span class="ff1f">fwrite</span>(const void *restrict<span class="_"> </span><span class="ff1b">ptr</span><span class="lsf5a">,s<span class="_ _4a"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">size</span><span class="lsf5a">,s<span class="_ _55"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">nobj</span>,</span></span></span></span></div><div class="t m0 x144 h52 y2aa ff1a fs2a fc0 sc0 ls0 ws0">FILE *restrict<span class="_"> </span><span class="ff1b">fp</span>);</div><div class="t m0 x36 h52 y5e05 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 156</span></div><div class="t m0 x36 h51 y5d61 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of objects written</div><div class="t m0 x32 h52 y5d9d ff1a fs2a fc0 sc0 ls0 ws0">const</div><div class="t m0 x32 h52 y5d63 ff1a fs2a fc0 sc0 ls0 ws0">char <span class="_ _72"> </span>*<span class="ff1f">gai_strerror</span>(int<span class="_"> </span><span class="ff1b">error</span>);</div><div class="t m0 x36 h52 y5d48 ff1a fs2a fc0 sc0 ls0 ws0">&lt;netdb.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 600</span></div><div class="t m0 x36 h51 y5d49 ff19 fs2a fc0 sc0 ls0 ws0">Returns: a pointer to a string describing the error</div><div class="t m0 x32 h52 y5e06 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">getaddrinfo</span>(const char *restrict<span class="_"> </span><span class="ff1b">host</span>,</div><div class="t m0 x18f h52 y5d67 ff1a fs2a fc0 sc0 ls0 ws0">const char *restrict<span class="_"> </span><span class="ff1b">service</span>,</div><div class="t m0 x18f h52 y5e07 ff1a fs2a fc0 sc0 ls0 ws0">const struct addrinfo *restrict<span class="_"> </span><span class="ff1b">hint</span>,</div><div class="t m0 x18f h52 y5e08 ff1a fs2a fc0 sc0 ls0 ws0">struct addrinfo **restrict<span class="_"> </span><span class="ff1b ls34e">re<span class="ls0">s</span></span>);</div><div class="t m0 x36 h52 y5e09 ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/socket.h&gt;<span class="_ _31d"> </span><span class="ff19">p. 599</span></div><div class="t m0 x36 h52 y5e0a ff1a fs2a fc0 sc0 ls0 ws0">&lt;netdb.h&gt;</div><div class="t m0 x36 h51 y5e0b ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, nonzer<span class="lse9">oe<span class="_ _5"></span><span class="ls0">rror code on error</span></span></div><div class="t m0 x32 h52 y5e0c ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">getc</span>(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x36 h52 y5e0d ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 150</span></div><div class="t m0 x36 h52 y5e0e ff19 fs2a fc0 sc0 ls0 ws0">Returns: next character if OK,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>on end of ﬁle or error</div><div class="t m0 x32 h52 y5e0f ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">getchar</span>(void);</div><div class="t m0 x36 h52 y5d71 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 150</span></div><div class="t m0 x36 h52 y5d72 ff19 fs2a fc0 sc0 ls0 ws0">Returns: next character if OK,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>on end of ﬁle or error</div><div class="t m0 x32 h52 y5e10 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">getchar_unlocked</span>(void);</div><div class="t m0 x36 h52 y5e11 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 444</span></div><div class="t m0 x36 h52 y5e12 ff19 fs2a fc0 sc0 ls0 ws0">Returns: the next character if OK,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>on end of ﬁle or error</div><div class="t m0 x32 h52 y5e13 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">getc_unlocked</span>(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x36 h52 y5e14 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 444</span></div><div class="t m0 x36 h52 y5e15 ff19 fs2a fc0 sc0 ls0 ws0">Returns: the next character if OK,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>on end of ﬁle or error</div><div class="t m0 x32 h52 y5def ff1a fs2a fc0 sc0 ls0 ws0">char <span class="_ _72"> </span>*<span class="ff1f">getcwd</span>(char *<span class="ff1b">buf</span><span class="lsf5a">,s<span class="_ _4a"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">size</span>);</span></span></div><div class="t m0 x36 h52 y5df0 ff1a fs2a fc0 sc0 ls0 ws0">&lt;unistd.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 136</span></div><div class="t m0 x36 h52 y5e16 ff19 fs2a fc0 sc0 ls0 ws0">Returns:<span class="_"> </span><span class="ff1b">buf<span class="_"> </span></span>if OK,<span class="_"> </span><span class="ff1a">NULL<span class="_ _53"> </span></span>on error</div><div class="t m0 x32 h52 y5e17 ff1a fs2a fc0 sc0 ls0 ws0">gid_t<span class="_ _78"> </span><span class="ff1f">getegid</span>(void);</div><div class="t m0 x36 h52 y5e18 ff1a fs2a fc0 sc0 ls0 ws0">&lt;unistd.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 228</span></div><div class="t m0 x36 h51 y5e19 ff19 fs2a fc0 sc0 ls0 ws0">Returns: effective gr<span class="_ _0"></span>oup ID of calling process</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
