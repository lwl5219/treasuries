<div id="pf325" class="pf w4 h1f" data-page-no="325"><div class="pc pc325 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg325.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>20.8<span class="_ _eb"> </span>Source <span class="_"> </span>Code<span class="_ _1fb"> </span><span class="ff18">771</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">472 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">473 <span class="_ _68"> </span>*<span class="_"> </span>Write a data record.<span class="_ _3a"> </span>Called by _db_dodelete (to write</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">474 <span class="_ _68"> </span>*<span class="_"> </span>the record with blanks) and db_store.</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">475 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">476 <span class="_ _d9"> </span>static<span class="_"> </span>void</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">477 <span class="_ _d9"> </span>_db_writedat(DB<span class="_"> </span>*db, const char *data, off_t offset, int whence)</div><div class="t m0 x32 h57 y56c7 ff1a fs2d fc0 sc0 ls0 ws0">478 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56c8 ff1a fs2d fc0 sc0 ls0 ws0">479 <span class="_ _15"> </span>struct<span class="_"> </span>iovec <span class="_ _68"> </span>iov[2];</div><div class="t m0 x32 h57 y56c9 ff1a fs2d fc0 sc0 ls0 ws0">480 <span class="_ _15"> </span>static<span class="_"> </span>char <span class="_ _15"> </span>newline<span class="_"> </span><span class="ls15c">=N<span class="_ _1d"></span><span class="ls0">EWLINE;</span></span></div><div class="t m0 x32 h57 y33b0 ff1a fs2d fc0 sc0 ls0 ws0">481 <span class="_ _15"> </span>/*</div><div class="t m0 x32 h57 y419a ff1a fs2d fc0 sc0 ls0 ws0">482 <span class="_ _8a"> </span>*<span class="_"> </span>If we’re appending, we have to lock before doing the lseek</div><div class="t m0 x32 h57 y3b4c ff1a fs2d fc0 sc0 ls0 ws0">483 <span class="_ _8a"> </span>*<span class="_"> </span>and write to make the two an atomic operation.<span class="_ _d9"> </span>If we’re</div><div class="t m0 x32 h57 y3b4d ff1a fs2d fc0 sc0 ls0 ws0">484 <span class="_ _8a"> </span>*<span class="_"> </span>overwriting an existing record, we don’t have to lock.</div><div class="t m0 x32 h57 y2f26 ff1a fs2d fc0 sc0 ls0 ws0">485 <span class="_ _8a"> </span>*/</div><div class="t m0 x32 h57 y2f27 ff1a fs2d fc0 sc0 ls0 ws0">486 <span class="_ _15"> </span>if<span class="_"> </span>(whence == SEEK_END) /* we’re appending, lock entire file */</div><div class="t m0 x32 h57 y2f28 ff1a fs2d fc0 sc0 ls0 ws0">487 <span class="_ _186"> </span>if<span class="_"> </span>(writew_lock(db-&gt;datfd, 0, SEEK_SET, 0) &lt; 0)</div><div class="t m0 x32 h57 y2f29 ff1a fs2d fc0 sc0 ls0 ws0">488 <span class="_ _82"> </span>err_dump(&quot;_db_writedat:<span class="_"> </span>writew_lock error&quot;);</div><div class="t m0 x32 h57 y33b2 ff1a fs2d fc0 sc0 ls0 ws0">489 <span class="_ _15"> </span>if<span class="_"> </span>((db-&gt;datoff = lseek(db-&gt;datfd, offset, whence)) == -1)</div><div class="t m0 x32 h57 y33b3 ff1a fs2d fc0 sc0 ls0 ws0">490 <span class="_ _186"> </span>err_dump(&quot;_db_writedat:<span class="_"> </span>lseek error&quot;);</div><div class="t m0 x32 h57 y33b4 ff1a fs2d fc0 sc0 ls0 ws0">491 <span class="_ _15"> </span>db-&gt;datlen<span class="_"> </span><span class="ls15c">=s<span class="_ _1d"></span><span class="ls0">trlen(data) + 1;<span class="_ _3a"> </span>/* datlen includes newline */</span></span></div><div class="t m0 x32 h57 y2020 ff1a fs2d fc0 sc0 ls0 ws0">492 <span class="_ _15"> </span>iov[0].iov_base<span class="_"> </span><span class="ls15c">=(<span class="_ _1d"></span><span class="ls0">char *) data;</span></span></div><div class="t m0 x32 h57 y2021 ff1a fs2d fc0 sc0 ls0 ws0">493 <span class="_ _15"> </span>iov[0].iov_len<span class="_ _d9"> </span><span class="ls15c">=d<span class="_ _5b"></span><span class="ls0">b-&gt;datlen - 1;</span></span></div><div class="t m0 x32 h57 y2022 ff1a fs2d fc0 sc0 ls0 ws0">494 <span class="_ _15"> </span>iov[1].iov_base<span class="_"> </span><span class="ls15c">=&amp;<span class="_ _1d"></span><span class="ls0">newline;</span></span></div><div class="t m0 x32 h57 y5750 ff1a fs2d fc0 sc0 ls0 ws0">495 <span class="_ _15"> </span>iov[1].iov_len<span class="_ _d9"> </span><span class="ls15c">=1<span class="_ _5b"></span><span class="ls0">;</span></span></div><div class="t m0 x32 h57 y5751 ff1a fs2d fc0 sc0 ls0 ws0">496 <span class="_ _15"> </span>if<span class="_"> </span>(writev(db-&gt;datfd, &amp;iov[0], 2) != db-&gt;datlen)</div><div class="t m0 x32 h57 y5752 ff1a fs2d fc0 sc0 ls0 ws0">497 <span class="_ _186"> </span>err_dump(&quot;_db_writedat:<span class="_"> </span>writev error of data record&quot;);</div><div class="t m0 x32 h57 y458e ff1a fs2d fc0 sc0 ls0 ws0">498 <span class="_ _15"> </span>if<span class="_"> </span>(whence == SEEK_END)</div><div class="t m0 x32 h57 y57d0 ff1a fs2d fc0 sc0 ls0 ws0">499 <span class="_ _186"> </span>if<span class="_"> </span>(un_lock(db-&gt;datfd, 0, SEEK_SET, 0) &lt; 0)</div><div class="t m0 x32 h57 y57d1 ff1a fs2d fc0 sc0 ls0 ws0">500 <span class="_ _82"> </span>err_dump(&quot;_db_writedat:<span class="_"> </span>un_lock error&quot;);</div><div class="t m0 x32 h57 y57d2 ff1a fs2d fc0 sc0 ls0 ws0">501 <span class="_ _d9"> </span>}</div><div class="t m0 x32 h4d y57d3 ff19 fs26 fc0 sc0 ls0 ws0">[472 <span class="_ _a"></span>– <span class="_ _a"></span>491]<span class="_ _65"> </span><span class="ls164">We <span class="_ _53"> </span>c<span class="_ _9"></span></span>all<span class="_ _66"> </span><span class="ff1a">_db_writedat<span class="_ _66"> </span></span>to <span class="_ _2"></span>write a <span class="_ _2"></span>data recor<span class="_ _0"></span>d. <span class="_"> </span>When<span class="_ _66"> </span>we delete <span class="_ _2"></span>a record, we</div><div class="t m0 x11a h4d y57d4 ff19 fs26 fc0 sc0 ls0 ws0">use<span class="_ _44"> </span><span class="ff1a">_db_writedat<span class="_ _4b"> </span></span>to <span class="_ _53"> </span>overwrite <span class="_ _e"> </span>the <span class="_ _53"> </span>recor<span class="_ _0"></span><span class="lscd6">dw<span class="_ _c"></span><span class="ls0">ith <span class="_ _53"> </span>blanks;<span class="_ _4b"> </span><span class="ff1a">_db_writedat</span></span></span></div><div class="t m0 x11a h4d y57d5 ff19 fs26 fc0 sc0 ls0 ws0">doesn’t <span class="_ _3"></span>need <span class="_ _9"></span>to <span class="_ _9"></span>lock <span class="_ _9"></span>the <span class="_ _3"></span>data <span class="_ _9"></span>ﬁle, <span class="_ _9"></span>because<span class="_ _45"> </span><span class="ff1a">db_delete<span class="_ _47"> </span></span>has <span class="_ _9"></span>write <span class="_ _9"></span>locked <span class="_ _9"></span>the</div><div class="t m0 x11a h49 y57d6 ff19 fs26 fc0 sc0 ls0 ws0">hash <span class="_"> </span>chain <span class="_ _66"> </span>for <span class="_ _66"> </span>this <span class="_ _66"> </span>record. <span class="_ _59"> </span>Thus,<span class="_ _61"> </span>no <span class="_"> </span>other <span class="_ _66"> </span>process <span class="_"> </span>could <span class="_ _66"> </span>be <span class="_ _66"> </span>reading <span class="_"> </span>or</div><div class="t m0 x11a h4d y57d7 ff19 fs26 fc0 sc0 ls0 ws0">writing <span class="_ _9"></span>this <span class="_ _23"></span>particular <span class="_ _9"></span>data <span class="_ _9"></span>record. <span class="_ _45"> </span>When<span class="_ _45"> </span>we <span class="_ _9"></span>cover<span class="_ _45"> </span><span class="ff1a">db_store<span class="_ _45"> </span></span>later <span class="_ _23"></span>in <span class="_ _9"></span>this</div><div class="t m0 x11a h4d y57d8 ff19 fs26 fc0 sc0 ls0 ws0">section, <span class="_ _23"></span>we’ll <span class="_ _9"></span>encounter <span class="_ _23"> </span>the <span class="_ _23"></span>case <span class="_ _23"></span>in <span class="_ _23"></span>which<span class="_ _45"> </span><span class="ff1a">_db_writedat<span class="_ _35"> </span></span>is <span class="_ _9"></span>appending <span class="_ _23"> </span>to</div><div class="t m0 x11a h49 y57d9 ff19 fs26 fc0 sc0 ls0 ws0">the data ﬁle and has to lock it.</div><div class="t m0 x11a h49 y57da ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _53"> </span>s<span class="_ _9"></span><span class="ls0">eek <span class="_ _2"></span>to the location <span class="_ _2"></span>where<span class="_"> </span>we<span class="_"> </span>want to write the <span class="_ _2"></span>data record. <span class="_"> </span>The<span class="_"> </span>amount</span></div><div class="t m0 x11a h49 y57db ff19 fs26 fc0 sc0 ls0 ws0">to write is the recor<span class="_ _0"></span><span class="lsd3">ds<span class="_ _d"></span><span class="ls0">ize plus 1 byte for the terminating newline we add.</span></span></div><div class="t m0 x32 h4d y57dc ff19 fs26 fc0 sc0 ls0 ws0">[492 <span class="_ _a"></span>– <span class="_ _a"></span>501]<span class="_ _65"> </span><span class="ls164">We <span class="_ _45"> </span>s<span class="_ _9"></span></span>et <span class="_ _42"> </span>up <span class="_ _42"> </span>the<span class="_ _35"> </span><span class="ff1a">iovec<span class="_ _44"> </span></span>array <span class="_ _23"> </span>and <span class="_ _42"> </span>call<span class="_ _44"> </span><span class="ff1a">writev<span class="_ _35"> </span></span>to <span class="_ _42"> </span>write <span class="_ _42"> </span>the <span class="_ _42"> </span>data <span class="_ _42"> </span>recor<span class="_ _1"></span><span class="ls16a6">da<span class="_ _43"></span><span class="ls0">nd</span></span></div><div class="t m0 x11a h49 y57dd ff19 fs26 fc0 sc0 ls0 ws0">newline. <span class="_ _47"> </span>W<span class="_ _6"></span><span class="ls16a7">ec<span class="_ _8"></span><span class="ls0">an’t <span class="_ _3"></span>assume <span class="_ _2"></span>that <span class="_ _3"></span>the <span class="_ _3"></span>caller<span class="_ _9"></span>’s <span class="_ _2"></span>buffer <span class="_ _2"></span>has <span class="_ _3"></span>room <span class="_ _2"></span>at <span class="_ _2"></span>the <span class="_ _3"></span>end <span class="_ _3"></span>for <span class="_ _2"></span>us</span></span></div><div class="t m0 x11a h49 y57de ff19 fs26 fc0 sc0 ls0 ws0">to append the newline, <span class="_ _2"></span>so we write <span class="_ _2"></span>the newline from a separate <span class="_ _2"></span>buffer<span class="_ _6"></span><span class="ls16a8">.I<span class="_ _5b"></span><span class="ls129f">fw<span class="_ _5"></span><span class="ls0">e</span></span></span></div><div class="t m0 x11a h49 y57df ff19 fs26 fc0 sc0 ls0 ws0">ar<span class="lsd3">ea<span class="_ _4f"></span><span class="ls0">ppending a record<span class="_"> </span>to<span class="_"> </span>the ﬁle, we r<span class="_ _0"></span>elease the lock we acquir<span class="_ _0"></span>ed earlier<span class="_ _6"></span>.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
