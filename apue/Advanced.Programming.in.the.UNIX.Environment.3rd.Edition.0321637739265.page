<div id="pf109" class="pf w4 h1f" data-page-no="109"><div class="pc pc109 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg109.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.3<span class="_ _e8"> </span><span class="ff1a">fork<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">231</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">communication <span class="_ _23"></span>is <span class="_ _23"></span>requir<span class="_ _0"></span>ed. <span class="_ _35"> </span>In<span class="_ _35"> </span>the <span class="_ _9"></span>program <span class="_ _23"> </span>shown <span class="_ _23"> </span>in <span class="_ _23"> </span>Figur<span class="ls927">e8<span class="_ _43"></span><span class="ls0">.1, <span class="_ _23"> </span>we <span class="_ _23"> </span>simply <span class="_ _23"> </span>have <span class="_ _42"> </span>the</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">parent <span class="_ _9"></span>put <span class="_ _9"></span>itself <span class="_ _23"></span>to <span class="_ _9"></span>sleep <span class="_ _9"></span>for <span class="_ _23"></span>2 <span class="_ _9"></span>seconds, <span class="_ _23"></span>to <span class="_ _9"></span>let <span class="_ _23"></span>the <span class="_ _9"></span>child <span class="_ _9"></span>execute.<span class="_ _51"> </span>There<span class="_ _45"> </span>is<span class="_ _45"> </span>no<span class="_ _45"> </span>guarantee</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">that <span class="_ _53"> </span>the <span class="_ _53"> </span>length <span class="_ _53"> </span>of <span class="_ _e"> </span>this <span class="_ _53"> </span>delay <span class="_ _53"> </span>is <span class="_ _53"> </span>adequate, <span class="_ _e"> </span>and <span class="_ _53"> </span>we <span class="_ _53"> </span>talk <span class="_ _53"> </span>about <span class="_ _e"> </span>this <span class="_ _53"> </span>and <span class="_ _53"> </span>other <span class="_ _53"> </span>types <span class="_ _e"> </span>of</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">synchronization <span class="_ _23"></span>in <span class="_ _23"> </span>Section <span class="_ _42"> </span>8.9 <span class="_ _23"> </span>when <span class="_ _42"> </span>we <span class="_ _23"> </span>discuss <span class="_ _42"> </span>race <span class="_ _42"> </span>conditions.<span class="_ _51"> </span>In <span class="_ _23"> </span>Section <span class="_ _42"> </span>10.16, <span class="_ _42"> </span>we</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">show how to use signals to synchronize a par<span class="_ _0"></span>ent and a child after a<span class="_"> </span><span class="ff1a">fork</span>.</div><div class="t m0 x3f h26 y134 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _42"> </span>we <span class="_ _42"> </span>write <span class="_ _53"> </span>to <span class="_ _42"> </span>standar<span class="ls928">do<span class="_ _c"></span><span class="ls0">utput, <span class="_ _42"> </span>we <span class="_ _53"> </span>subtract <span class="_ _42"> </span>1 <span class="_ _42"> </span>from <span class="_ _42"> </span>the <span class="_ _53"> </span>size <span class="_ _42"> </span>of<span class="_ _44"> </span><span class="ff1a">buf<span class="_ _44"> </span></span>to <span class="_ _42"> </span>avoid</span></span></div><div class="t m0 x32 h26 y135 ff19 fsf fc0 sc0 ls0 ws0">writing the terminating null <span class="_ _2"></span>byte.<span class="_ _46"> </span>Although<span class="_"> </span><span class="ff1a">strlen<span class="_ _66"> </span></span>will calculate the length <span class="_ _2"></span>of a string</div><div class="t m0 x32 h26 y136 ff19 fsf fc0 sc0 ls0 ws0">not <span class="_ _3"></span>including <span class="_ _2"></span>the <span class="_ _3"></span>terminating <span class="_ _3"></span>null <span class="_ _3"></span>byte,<span class="_ _45"> </span><span class="ff1a">sizeof<span class="_ _66"> </span></span>calculates <span class="_ _3"></span>the <span class="_ _3"></span>size <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>buffer<span class="_ _6"></span><span class="ls929">,w<span class="_ _4f"></span><span class="ls0">hich</span></span></div><div class="t m0 x32 h26 y137 ff19 fsf fc0 sc0 ls0 ws0">does <span class="_ _47"> </span>include <span class="_ _45"> </span>the <span class="_ _47"> </span>terminating <span class="_ _45"> </span>null <span class="_ _45"> </span>byte.<span class="_ _5f"> </span>Another <span class="_ _47"> </span>difference <span class="_ _47"> </span>is <span class="_ _45"> </span>that <span class="_ _47"> </span>using<span class="_ _16"> </span><span class="ff1a">strlen</span></div><div class="t m0 x32 h26 y138 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">quires a <span class="_ _2"></span>function call, <span class="_ _2"></span>whereas<span class="_"> </span><span class="ff1a">sizeof<span class="_ _66"> </span></span>calculates <span class="_ _2"></span>the buffer length <span class="_ _2"></span>at compile <span class="_ _2"></span>time, as</span></div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls0 ws0">the buffer is initialized with a known string and its size is ﬁxed.</div><div class="t m0 x3f h26 y13a ff19 fsf fc0 sc0 ls0 ws0">Note <span class="_ _9"></span>the <span class="_ _23"></span>interaction <span class="_ _9"></span>of<span class="_ _35"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>with <span class="_ _23"></span>the <span class="_ _9"></span>I/O <span class="_ _23"></span>functions <span class="_ _9"></span>in <span class="_ _23"></span>the <span class="_ _23"></span>pr<span class="_ _0"></span>ogram <span class="_ _9"></span>in <span class="_ _23"></span>Figur<span class="ls92a">e8<span class="_ _43"></span><span class="ls0">.1.</span></span></div><div class="t m0 x32 h26 y254 ff19 fsf fc0 sc0 ls0 ws0">Recall <span class="_ _2"></span>from Chapter <span class="_ _3"></span>3 <span class="_ _2"></span>that <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">write<span class="_ _66"> </span></span>function <span class="_ _3"></span>is <span class="_ _2"></span>not <span class="_ _2"></span>buffered. <span class="_"> </span>Because<span class="_ _47"> </span><span class="ff1a">write<span class="_ _66"> </span></span>is <span class="_ _3"></span>called</div><div class="t m0 x32 h26 y255 ff19 fsf fc0 sc0 ls0 ws0">befor<span class="ls92b">et<span class="_ _b"></span><span class="ls0">he<span class="_ _47"> </span><span class="ff1a">fork</span><span class="ls92b">,i<span class="_ _8"></span><span class="ls0">ts <span class="_ _9"></span>data <span class="_ _3"></span>is <span class="_ _9"></span>written <span class="_ _3"></span>once <span class="_ _9"></span>to <span class="_ _3"></span>standar<span class="ls92c">do<span class="_ _b"></span><span class="ls0">utput. <span class="_ _45"> </span>The<span class="_ _47"> </span>standar<span class="ls92c">dI<span class="_ _b"></span><span class="ls0">/O <span class="_ _9"></span>library<span class="_ _4"></span>,</span></span></span></span></span></span></span></span></div><div class="t m0 x32 h2a y13b ff19 fsf fc0 sc0 ls0 ws0">however<span class="_ _6"></span>,<span class="_"> </span>is<span class="_"> </span>buffered. <span class="_"> </span>Recall<span class="_"> </span>fr<span class="_ _0"></span>om Section 5.12 that standar<span class="ls92d">do<span class="_ _4f"></span><span class="ls0">utput is line buffered if it’s</span></span></div><div class="t m0 x32 h2a y13c ff19 fsf fc0 sc0 ls0 ws0">connected <span class="_ _45"> </span>to <span class="_ _45"> </span>a <span class="_ _45"> </span>terminal <span class="_ _45"> </span>device; <span class="_ _45"> </span>otherwise, <span class="_ _45"> </span>it’s <span class="_ _45"> </span>fully <span class="_ _45"> </span>buffered. <span class="_ _16"> </span>When<span class="_ _5a"> </span>we <span class="_ _45"> </span>run <span class="_ _45"> </span>the</div><div class="t m0 x32 h26 y256 ff19 fsf fc0 sc0 ls0 ws0">program <span class="_ _9"></span>interactively<span class="_ _6"></span>,<span class="_ _35"> </span>we<span class="_ _45"> </span>get <span class="_ _23"> </span>only <span class="_ _23"> </span>a <span class="_ _23"> </span>single <span class="_ _23"> </span>copy <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>ﬁrst<span class="_ _35"> </span><span class="ff1a">printf<span class="_ _35"> </span></span>line, <span class="_ _23"></span>because <span class="_ _23"></span>the</div><div class="t m0 x32 h2a y257 ff19 fsf fc0 sc0 ls0 ws0">standar<span class="ls92e">do<span class="_ _8"></span><span class="ls0">utput <span class="_ _2"></span>buffer <span class="_ _2"></span>is <span class="_ _2"></span>ﬂushed <span class="_ _2"></span>by <span class="_ _3"></span>the <span class="_ _2"></span>newline.<span class="_ _61"> </span>When <span class="_ _2"></span>we <span class="_ _2"></span>redirect standar<span class="ls92f">do<span class="_ _4f"></span><span class="ls0">utput <span class="_ _2"></span>to</span></span></span></span></div><div class="t m0 x32 h26 y258 ff19 fsf fc0 sc0 ls930 ws0">aﬁ<span class="_ _8"></span><span class="ls0">le, <span class="_ _3"></span>however<span class="_ _1"></span>,<span class="_ _47"> </span>we<span class="_ _47"> </span>get <span class="_ _3"></span>two <span class="_ _9"></span>copies <span class="_ _3"></span>of <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">printf<span class="_ _45"> </span></span>line. <span class="_ _47"> </span>In<span class="_ _47"> </span>this <span class="_ _3"></span>second <span class="_ _3"></span>case, <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">printf</span></span></div><div class="t m0 x32 h26 y161 ff19 fsf fc0 sc0 ls0 ws0">befor<span class="ls931">et<span class="_ _b"></span><span class="ls0">he<span class="_ _47"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>is <span class="_ _9"></span>called <span class="_ _9"></span>once, <span class="_ _23"></span>but <span class="_ _3"></span>the <span class="_ _23"></span>line <span class="_ _3"></span>remains <span class="_ _9"></span>in <span class="_ _9"></span>the <span class="_ _9"></span>buffer <span class="_ _3"></span>when<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>is <span class="_ _9"></span>called.</span></span></div><div class="t m0 x32 h2a y162 ff19 fsf fc0 sc0 ls0 ws0">This <span class="_ _9"></span>buffer <span class="_ _9"></span>is <span class="_ _23"></span>then <span class="_ _9"></span>copied <span class="_ _23"></span>into <span class="_ _23"></span>the <span class="_ _9"></span>child <span class="_ _23"></span>when <span class="_ _9"></span>the <span class="_ _23"></span>parent’s <span class="_ _9"></span>data <span class="_ _9"></span>space <span class="_ _23"></span>is <span class="_ _9"></span>copied <span class="_ _23"></span>to <span class="_ _9"></span>the</div><div class="t m0 x32 h2a y1db ff19 fsf fc0 sc0 ls0 ws0">child. <span class="_ _66"> </span>Both<span class="_ _66"> </span>the <span class="_ _2"></span>parent <span class="_ _2"></span>and <span class="_ _2"></span>the <span class="_ _2"></span>child <span class="_ _2"></span>now <span class="_ _2"></span>have <span class="_ _2"></span>a <span class="_ _2"></span>standar<span class="ls6fd">dI<span class="_ _8"></span><span class="ls0">/O <span class="_ _2"></span>buffer <span class="_ _2"></span>with <span class="_ _2"></span>this <span class="_ _2"></span>line <span class="_ _2"></span>in <span class="_ _2"></span>it.</span></span></div><div class="t m0 x32 h26 y25a ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _3"></span>second<span class="_ _45"> </span><span class="ff1a">printf</span><span class="ls932">,r<span class="_ _b"></span><span class="ls0">ight <span class="_ _9"></span>befor<span class="ls932">et<span class="_ _b"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">exit</span><span class="ls932">,j<span class="_ _b"></span><span class="ls0">ust <span class="_ _3"></span>appends <span class="_ _9"></span>its <span class="_ _9"></span>data <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>existing <span class="_ _9"></span>buffer<span class="_ _6"></span>.</span></span></span></span></span></span></div><div class="t m0 x32 h2a y164 ff19 fsf fc0 sc0 ls0 ws0">When each process terminates, its copy of the buf<span class="_ _0"></span>fer is ﬁnally ﬂushed.</div><div class="t m0 x35 h4c y1ec1 ff16 fs26 fc0 sc0 ls0 ws0">File Sharing</div><div class="t m0 x32 h49 y1ec2 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _2"></span>we <span class="_ _2"></span>redir<span class="_ _0"></span>ect <span class="_ _2"></span>the <span class="_ _2"></span>standar<span class="ls933">do<span class="_ _8"></span><span class="ls0">utput <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>parent from <span class="_ _2"></span>the <span class="_ _2"></span>program in <span class="_ _2"></span>Figur<span class="ls933">e8<span class="_ _4f"></span><span class="ls0">.1, <span class="_ _2"></span>the</span></span></span></span></div><div class="t m0 x32 h4d y1ec3 ff19 fs26 fc0 sc0 ls0 ws0">child’s <span class="_ _3"></span>standar<span class="ls934">do<span class="_ _b"></span><span class="ls0">utput <span class="_ _9"></span>is <span class="_ _3"></span>also <span class="_ _3"></span>redirected. <span class="_ _47"> </span>Indeed,<span class="_ _47"> </span>one <span class="_ _9"></span>characteristic <span class="_ _3"></span>of<span class="_ _47"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>is <span class="_ _3"></span>that <span class="_ _3"></span>all</span></span></div><div class="t m0 x32 h49 y1ec4 ff19 fs26 fc0 sc0 ls0 ws0">ﬁle <span class="_ _45"> </span>descriptors <span class="_ _45"> </span>that <span class="_ _45"> </span>ar<span class="ls935">eo<span class="_ _26"></span><span class="ls0">pen <span class="_ _45"> </span>in <span class="_ _45"> </span>the <span class="_ _45"> </span>parent <span class="_ _45"> </span>ar<span class="ls936">ed<span class="_ _26"></span><span class="ls0">uplicated <span class="_ _45"> </span>in <span class="_ _45"> </span>the <span class="_ _45"> </span>child.<span class="_ _1a3"> </span><span class="ls164">We <span class="_ _61"> </span>s<span class="_ _23"></span></span>ay</span></span></span></span></div><div class="t m0 x32 h4d y1ec5 ff19 fs26 fc0 sc0 ls937 ws0">‘‘<span class="_ _2"></span><span class="ls0">duplicated’<span class="_ _0"></span><span class="ls938">’b<span class="_ _d"></span><span class="ls0">ecause it’s <span class="_ _2"></span>as if the<span class="_ _66"> </span><span class="ff1a">dup<span class="_ _66"> </span></span>function <span class="_ _2"></span>had been <span class="_ _2"></span>called for each <span class="_ _2"></span>descriptor<span class="_ _1"></span><span class="ls939">.T<span class="_ _5b"></span><span class="ls0">he</span></span></span></span></span></div><div class="t m0 x32 h49 y1ec6 ff19 fs26 fc0 sc0 ls0 ws0">parent and <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _2"></span>shar<span class="ls6b0">eaﬁ<span class="_ _8"></span><span class="ls0">le <span class="_ _2"></span>table <span class="_ _3"></span>entry <span class="_ _2"></span>for <span class="_ _2"></span>every <span class="_ _2"></span>open <span class="_ _3"></span>descriptor <span class="_ _2"></span>(recall Figur<span class="ls163">e3<span class="_ _4f"></span><span class="ls0">.9).</span></span></span></span></div><div class="t m0 x3f h49 y1ec7 ff19 fs26 fc0 sc0 ls0 ws0">Consider a <span class="_ _2"></span>process that has <span class="_ _2"></span>three different ﬁles opened <span class="_ _2"></span>for standar<span class="ls93a">di<span class="_ _4f"></span><span class="ls0">nput, <span class="_ _2"></span>standard</span></span></div><div class="t m0 x32 h4d y1ec8 ff19 fs26 fc0 sc0 ls0 ws0">output, <span class="_ _3"></span>and <span class="_ _9"></span>standar<span class="ls93b">de<span class="_ _b"></span><span class="ls0">rror<span class="_ _6"></span><span class="ls93c">.O<span class="_ _62"></span><span class="ls93b">nr<span class="_ _b"></span><span class="ls0">eturn <span class="_ _9"></span>from<span class="_ _47"> </span><span class="ff1a">fork</span>,<span class="_ _45"> </span>we<span class="_ _45"> </span>have <span class="_ _3"></span>the <span class="_ _9"></span>arrangement <span class="_ _9"></span>shown <span class="_ _3"></span>in</span></span></span></span></span></div><div class="t m0 x32 h49 y1ec9 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lsd3">e8<span class="_ _4f"></span><span class="ls0">.2.</span></span></div><div class="t m0 x3f h49 y1eca ff19 fs26 fc0 sc0 ls0 ws0">It <span class="_ _9"></span>is <span class="_ _23"></span>important <span class="_ _9"></span>that <span class="_ _9"></span>the <span class="_ _23"></span>parent <span class="_ _9"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>child <span class="_ _23"></span>shar<span class="ls93d">et<span class="_ _b"></span><span class="ls0">he <span class="_ _3"></span>same <span class="_ _23"></span>ﬁle <span class="_ _9"></span>offset. <span class="_ _45"> </span>Consider<span class="_ _45"> </span>a</span></span></div><div class="t m0 x32 h4d y1ecb ff19 fs26 fc0 sc0 ls0 ws0">process <span class="_ _23"> </span>that<span class="_ _44"> </span><span class="ff1a">fork</span><span class="ls93e">sac<span class="_ _43"></span><span class="ls0">hild, <span class="_ _42"> </span>then<span class="_ _44"> </span><span class="ff1a">wait</span><span class="ls93e">sf<span class="_ _c"></span><span class="ls0">or <span class="_ _53"> </span>the <span class="_ _42"> </span>child <span class="_ _42"> </span>to <span class="_ _53"> </span>complete.<span class="_ _54"> </span>Assume <span class="_ _42"> </span>that <span class="_ _42"> </span>both</span></span></span></span></div><div class="t m0 x32 h49 y1ecc ff19 fs26 fc0 sc0 ls0 ws0">processes <span class="_ _2"></span>write <span class="_ _2"></span>to <span class="_ _3"></span>standar<span class="ls93f">do<span class="_ _8"></span><span class="ls0">utput <span class="_ _3"></span>as <span class="_ _2"></span>part <span class="_ _3"></span>of <span class="_ _3"></span>their <span class="_ _2"></span>normal <span class="_ _3"></span>processing. <span class="_ _66"> </span>If<span class="_ _47"> </span>the <span class="_ _3"></span>parent <span class="_ _2"></span>has</span></span></div><div class="t m0 x32 h49 y1ecd ff19 fs26 fc0 sc0 ls0 ws0">its <span class="_ _9"></span>standar<span class="ls940">do<span class="_ _b"></span><span class="ls0">utput <span class="_ _9"></span>redir<span class="_ _0"></span>ected <span class="_ _9"></span>(by <span class="_ _23"></span>a <span class="_ _23"></span>shell, <span class="_ _9"></span>perhaps), <span class="_ _9"></span>it <span class="_ _23"></span>is <span class="_ _9"></span>essential <span class="_ _23"></span>that <span class="_ _9"></span>the <span class="_ _23"> </span>parent’s <span class="_ _9"></span>ﬁle</span></span></div><div class="t m0 x32 h49 y1ece ff19 fs26 fc0 sc0 ls0 ws0">offset <span class="_ _9"></span>be <span class="_ _9"></span>updated <span class="_ _23"> </span>by <span class="_ _23"></span>the <span class="_ _9"></span>child <span class="_ _23"></span>when <span class="_ _9"></span>the <span class="_ _23"> </span>child <span class="_ _23"></span>writes <span class="_ _9"></span>to <span class="_ _23"></span>standar<span class="ls941">do<span class="_ _43"></span><span class="ls0">utput. <span class="_ _35"> </span>In<span class="_ _45"> </span>this <span class="_ _9"></span>case,</span></span></div><div class="t m0 x32 h4d y1ecf ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _2"></span>child <span class="_ _2"></span>can <span class="_ _2"></span>write <span class="_ _2"></span>to <span class="_ _2"></span>standar<span class="ls942">do<span class="_ _4f"></span><span class="ls0">utput <span class="_ _2"></span>while <span class="_ _2"></span>the <span class="_ _2"></span>parent <span class="_ _2"></span>is<span class="_ _66"> </span><span class="ff1a">wait</span>ing <span class="_ _2"></span>for <span class="_ _3"></span>it; <span class="_ _2"></span>on <span class="_ _2"></span>completion</span></span></div><div class="t m0 x32 h49 y1ed0 ff19 fs26 fc0 sc0 ls0 ws0">of the child, the parent can continue writing to <span class="_ _2"></span>standar<span class="ls943">do<span class="_ _4f"></span><span class="ls0">utput, knowing <span class="_ _2"></span>that its output</span></span></div><div class="t m0 x32 h49 y1ed1 ff19 fs26 fc0 sc0 ls0 ws0">will <span class="_ _2"></span>be <span class="_ _2"></span>appended <span class="_ _2"></span>to <span class="_ _3"></span>whatever <span class="_ _2"></span>the <span class="_ _2"></span>child <span class="_ _3"></span>wrote. <span class="_"> </span>If<span class="_ _47"> </span>the <span class="_ _2"></span>parent <span class="_ _2"></span>and <span class="_ _2"></span>the <span class="_ _2"></span>child <span class="_ _2"></span>did <span class="_ _3"></span>not <span class="_ _2"></span>share</div><div class="t m0 x32 h49 y1ed2 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _9"></span>same <span class="_ _9"></span>ﬁle <span class="_ _23"></span>of<span class="_ _0"></span>fset, <span class="_ _9"></span>this <span class="_ _9"></span>type <span class="_ _9"></span>of <span class="_ _23"></span>interaction <span class="_ _9"></span>would <span class="_ _9"></span>be <span class="_ _9"></span>mor<span class="ls944">ed<span class="_ _b"></span><span class="ls0">ifﬁcult <span class="_ _9"></span>to <span class="_ _9"></span>accomplish <span class="_ _9"></span>and</span></span></div><div class="t m0 x32 h49 y1ed3 ff19 fs26 fc0 sc0 ls0 ws0">would requir<span class="_ _0"></span><span class="lsd3">ee<span class="_ _d"></span><span class="ls0">xplicit actions by the parent.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
