<div id="pf1ea" class="pf w4 h1f" data-page-no="1ea"><div class="pc pc1ea w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1ea.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">456<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x9d h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">case SIGQUIT:</div><div class="t m0 x1f h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;lock);</div><div class="t m0 x1f h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">quitflag = 1;</div><div class="t m0 x1f h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;lock);</div><div class="t m0 x1f h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">pthread_cond_signal(&amp;waitloc);</div><div class="t m0 x1f h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x9d h57 y124d ff1a fs2d fc0 sc0 ls0 ws0">default:</div><div class="t m0 x1f h57 y124e ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;unexpected signal %d\n&quot;, signo);</div><div class="t m0 x1f h57 y124f ff1a fs2d fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x9d h57 y1250 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y8d8 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y8d9 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y31b9 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y31ba ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h57 y31bb ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y2f71 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _186"> </span>err;</div><div class="t m0 x8a h57 y2f72 ff1a fs2d fc0 sc0 ls0 ws0">sigset_t <span class="_ _68"> </span>oldmask;</div><div class="t m0 x8a h57 y2f73 ff1a fs2d fc0 sc0 ls0 ws0">pthread_t <span class="_ _d9"> </span>tid;</div><div class="t m0 x8a h57 y16eb ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;mask);</div><div class="t m0 x8a h57 y16ec ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;mask, SIGINT);</div><div class="t m0 x8a h57 y8e2 ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;mask, SIGQUIT);</div><div class="t m0 x8a h57 y8e3 ff1a fs2d fc0 sc0 ls0 ws0">if ((err = pthread_sigmask(SIG_BLOCK, &amp;mask, &amp;oldmask)) != 0)</div><div class="t m0 x9d h57 y8e4 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;SIG_BLOCK error&quot;);</div><div class="t m0 x8a h57 y38bf ff1a fs2d fc0 sc0 ls0 ws0">err = pthread_create(&amp;tid, NULL, thr_fn, 0);</div><div class="t m0 x8a h57 y38c0 ff1a fs2d fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 x9d h57 y38c1 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t create thread&quot;);</div><div class="t m0 x8a h57 y38c2 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;lock);</div><div class="t m0 x8a h57 y38c3 ff1a fs2d fc0 sc0 ls0 ws0">while (quitflag == 0)</div><div class="t m0 x9d h57 y38c4 ff1a fs2d fc0 sc0 ls0 ws0">pthread_cond_wait(&amp;waitloc, &amp;lock);</div><div class="t m0 x8a h57 y38c5 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;lock);</div><div class="t m0 x8a h57 y341c ff1a fs2d fc0 sc0 ls0 ws0">/* SIGQUIT has been caught and is now blocked; do whatever */</div><div class="t m0 x8a h57 y341d ff1a fs2d fc0 sc0 ls0 ws0">quitflag = 0;</div><div class="t m0 x8a h57 y38c6 ff1a fs2d fc0 sc0 ls0 ws0">/* reset signal mask which unblocks SIGQUIT */</div><div class="t m0 x8a h57 y38c7 ff1a fs2d fc0 sc0 ls0 ws0">if (sigprocmask(SIG_SETMASK, &amp;oldmask, NULL) &lt; 0)</div><div class="t m0 x9d h57 y38c8 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;SIG_SETMASK error&quot;);</div><div class="t m0 x8a h57 y38c9 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y38ca ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x1f7 h2d y38cb ff18 fs10 fc0 sc0 ls0 ws0">Figure 12.16<span class="_ _51"> </span><span class="ff19">Synchronous signal handling</span></div><div class="t m0 x3f h49 y38cc ff19 fs26 fc0 sc0 ls0 ws0">Instead <span class="_ _2"></span>of <span class="_ _2"></span>relying <span class="_ _2"></span>on <span class="_ _2"></span>a <span class="_ _3"></span>signal <span class="_ _2"></span>handler <span class="_ _2"></span>that <span class="_ _3"></span>interrupts <span class="_ _2"></span>the <span class="_ _2"></span>main <span class="_ _3"></span>thread of <span class="_ _2"></span>control, <span class="_ _2"></span>we</div><div class="t m0 x32 h49 y38cd ff19 fs26 fc0 sc0 ls0 ws0">dedicate <span class="_ _53"> </span>a <span class="_ _53"> </span>separate <span class="_ _53"> </span>thread <span class="_ _42"> </span>of <span class="_ _e"> </span>control <span class="_ _42"> </span>to <span class="_ _53"> </span>handle <span class="_ _53"> </span>the <span class="_ _53"> </span>signals.<span class="_ _48"> </span><span class="ls164">We <span class="_ _35"> </span>c<span class="_ _9"></span></span>hange <span class="_ _53"> </span>the <span class="_ _53"> </span>value <span class="_ _53"> </span>of</div><div class="t m0 x32 h4d y38ce ff1a fs26 fc0 sc0 ls0 ws0">quitflag<span class="_ _66"> </span><span class="ff19">under <span class="_ _2"></span>the protection <span class="_ _2"></span>of a <span class="_ _2"></span>mutex <span class="_ _2"></span>so <span class="_ _2"></span>that <span class="_ _2"></span>the <span class="_ _2"></span>main thread <span class="_ _2"></span>of control <span class="_ _2"></span>can’t miss</span></div><div class="t m0 x32 h4d y38cf ff19 fs26 fc0 sc0 ls0 ws0">the wake-up call <span class="_ _2"></span>made when we <span class="_ _2"></span>call<span class="_"> </span><span class="ff1a">pthread_cond_signal</span><span class="lsf2c">.W<span class="_ _62"></span><span class="lsf2d">eu<span class="_ _4f"></span><span class="ls0">se <span class="_ _2"></span>the same <span class="_ _2"></span>mutex</span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
