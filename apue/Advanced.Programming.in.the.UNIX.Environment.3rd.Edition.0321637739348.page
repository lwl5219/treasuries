<div id="pf15c" class="pf w4 h1f" data-page-no="15c"><div class="pc pc15c w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg15c.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">314<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">Linux <span class="_ _23"></span>3.2.0 <span class="_ _23"></span>each <span class="_ _23"></span>support <span class="_ _23"></span>31 <span class="_ _23"></span>differ<span class="_ _1"></span>ent <span class="_ _23"> </span>signals, <span class="_ _23"> </span>whereas <span class="_ _23"></span>Solaris <span class="_ _23"></span>10 <span class="_ _23"></span>supports <span class="_ _23"></span>40 <span class="_ _23"></span>differ<span class="_ _1"></span>ent</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">signals. <span class="_ _45"> </span>FreeBSD, <span class="_ _9"></span>Linux, <span class="_ _23"></span>and <span class="_ _9"></span>Solaris, <span class="_ _23"> </span>however<span class="_ _1"></span><span class="lsb7d">,s<span class="_ _b"></span><span class="ls0">upport <span class="_ _9"></span>additional <span class="_ _23"></span>application-deﬁned</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">signals <span class="_"> </span>intr<span class="_ _1"></span>oduced <span class="_"> </span>to <span class="_"> </span>support <span class="_ _e"> </span>real-time <span class="_ _e"> </span>applications.<span class="_ _60"> </span>Although <span class="_ _e"> </span>the <span class="_"> </span>POSIX <span class="_ _e"> </span>real-time</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">extensions aren’t covered in this book <span class="_ _2"></span>(refer to Gallmeister</div><div class="t m0 x15b h2a y1ab0 ff19 fsf fc0 sc0 ls0 ws0">[</div><div class="t m0 x170 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">1995</div><div class="t m0 x6e h2a y1ab0 ff19 fsf fc0 sc0 ls0 ws0">]</div><div class="t m0 x44 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">for mor<span class="ls54">ei<span class="_ _4f"></span><span class="ls0">nformation),</span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">as of SUSv4 the real-time signal interfaces have moved to the base speciﬁcation.</div><div class="t m0 x3f h2a y134 ff19 fsf fc0 sc0 ls0 ws0">Signal names <span class="_ _2"></span>ar<span class="ls64b">ea<span class="_ _4f"></span><span class="ls0">ll deﬁned <span class="_ _2"></span>by positive <span class="_ _2"></span>integer constants <span class="_ _2"></span>(the signal <span class="_ _2"></span>number) <span class="_ _2"></span>in the</span></span></div><div class="t m0 x32 h26 y135 ff19 fsf fc0 sc0 ls0 ws0">header<span class="_"> </span><span class="ff1a">&lt;signal.h&gt;</span>.</div><div class="t m0 x76 h51 y2887 ff19 fs2a fc0 sc0 ls0 ws0">Implementations <span class="_"> </span>actually <span class="_"> </span>deﬁne <span class="_ _80"> </span>the <span class="_"> </span>individual <span class="_"> </span>signals <span class="_ _80"> </span>in <span class="_"> </span>a <span class="_"> </span>different <span class="_"> </span>header <span class="_"> </span>ﬁle, <span class="_ _e"> </span>but <span class="_ _80"> </span>this</div><div class="t m0 x76 h52 y2888 ff19 fs2a fc0 sc0 ls0 ws0">header <span class="_ _9"> </span>ﬁle <span class="_ _23"> </span>is <span class="_ _9"> </span>included <span class="_ _23"> </span>by<span class="_ _47"> </span><span class="ff1a">&lt;signal.h&gt;</span><span class="lsb7e">.I<span class="_ _4a"></span><span class="ls0">t<span class="_ _47"> </span>is<span class="_ _47"> </span>considered <span class="_ _9"></span>bad <span class="_ _23"> </span>form <span class="_ _9"> </span>for <span class="_ _23"> </span>the <span class="_ _9"> </span>kernel <span class="_ _23"> </span>to <span class="_ _9"> </span>include</span></span></div><div class="t m0 x76 h51 y2889 ff19 fs2a fc0 sc0 ls0 ws0">header <span class="_ _3"></span>ﬁles <span class="_ _9"></span>meant <span class="_ _3"></span>for <span class="_ _9"></span>user-level <span class="_ _3"></span>applications, <span class="_ _9"></span>so <span class="_ _3"></span>if <span class="_ _9"></span>the <span class="_ _9"></span>applications <span class="_ _3"></span>and <span class="_ _9"></span>the <span class="_ _3"></span>kernel <span class="_ _9"></span>both <span class="_ _9"></span>need</div><div class="t m0 x76 h51 y288a ff19 fs2a fc0 sc0 ls0 ws0">the <span class="_ _2"></span>same <span class="_ _3"></span>deﬁnitions, <span class="_ _3"></span>the <span class="_ _3"></span>information <span class="_ _3"></span>is <span class="_ _3"></span>placed <span class="_ _3"></span>in <span class="_ _3"></span>a <span class="_ _3"></span>kernel <span class="_ _3"></span>header <span class="_ _3"></span>ﬁle <span class="_ _3"></span>that <span class="_ _3"></span>is <span class="_ _3"></span>then <span class="_ _3"></span>included <span class="_ _3"></span>by</div><div class="t m0 x76 h51 y288b ff19 fs2a fc0 sc0 ls0 ws0">the <span class="_ _9"></span>user-level <span class="_ _9"></span>header <span class="_ _23"> </span>ﬁle.<span class="_ _59"> </span>Thus <span class="_ _9"> </span>both <span class="_ _23"> </span>FreeBSD <span class="_ _9"></span>8.0 <span class="_ _9"></span>and <span class="_ _23"> </span>Mac <span class="_ _9"></span>OS <span class="_ _9"> </span>X <span class="_ _23"> </span>10.6.8 <span class="_ _9"></span>deﬁne <span class="_ _23"> </span>the <span class="_ _9"></span>signals <span class="_ _9"> </span>in</div><div class="t m0 x76 h52 y288c ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/signal.h&gt;<span class="ff19 lsb7f">.L<span class="_ _26"></span><span class="ls0">inux <span class="_"> </span>3.2.0 <span class="_"> </span>deﬁnes <span class="_"> </span>the <span class="_ _e"> </span>signals <span class="_ _e"> </span>in<span class="_ _44"> </span><span class="ff1a">&lt;bits/signum.h&gt;</span><span class="lsb80">,a<span class="_ _43"></span><span class="ls0">nd <span class="_"> </span>Solaris <span class="_"> </span>10</span></span></span></span></div><div class="t m0 x76 h52 y288d ff19 fs2a fc0 sc0 ls0 ws0">deﬁnes them in<span class="_"> </span><span class="ff1a">&lt;sys/iso/signal_iso.h&gt;</span>.</div><div class="t m0 x32 h26 y288e ff19 fsf fc0 sc0 ls0 ws0">No signal has a signal <span class="_ _2"></span>number of 0.<span class="_ _46"> </span><span class="ls5f">We<span class="_ _9"></span></span>’ll <span class="_ _2"></span>see in Section 10.9 <span class="_ _2"></span>that the<span class="_"> </span><span class="ff1a">kill<span class="_ _66"> </span></span>function uses</div><div class="t m0 x32 h2b y288f ff19 fsf fc0 sc0 ls0 ws0">the signal number of 0 for a special case.<span class="_ _59"> </span>POSIX.1 calls this value the<span class="_"> </span><span class="ff1b">null signal</span>.</div><div class="t m0 x3f h2a y2890 ff19 fsf fc0 sc0 ls0 ws0">Numerous conditions can generate a signal:</div><div class="t m0 x3f h2a y2891 ff19 fsf fc0 sc0 ls49 ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_ _53"> </span>terminal-generated <span class="_ _53"> </span>signals <span class="_ _53"> </span>occur <span class="_ _53"> </span>when <span class="_ _53"> </span>users <span class="_ _e"> </span>press <span class="_ _42"> </span>certain <span class="_ _53"> </span>terminal <span class="_ _53"> </span>keys.</span></div><div class="t m0 x15 h2a y2892 ff19 fsf fc0 sc0 ls0 ws0">Pressing <span class="_"> </span>the <span class="_"> </span>DELETE <span class="_ _66"> </span>key <span class="_ _47"> </span>on <span class="_"> </span>the <span class="_ _66"> </span>terminal <span class="_ _66"> </span>(or <span class="_ _66"> </span>Control</div><div class="t m0 x5e h2a y2893 ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x5f h2a y2892 ff19 fsf fc0 sc0 ls0 ws0">C<span class="_ _46"> </span>on<span class="_ _61"> </span>many <span class="_"> </span>systems)</div><div class="t m0 x15 h26 y2894 ff19 fsf fc0 sc0 ls0 ws0">normally <span class="_ _9"></span>causes <span class="_ _23"></span>the <span class="_ _9"></span>interrupt <span class="_ _23"></span>signal <span class="_ _9"></span>(<span class="ff1a">SIGINT</span>)<span class="_ _35"> </span>to<span class="_ _45"> </span>be<span class="_ _45"> </span>generated. <span class="_ _35"> </span>This<span class="_ _45"> </span>is <span class="_ _9"></span>how <span class="_ _23"></span>to</div><div class="t m0 x15 h2a y2895 ff19 fsf fc0 sc0 ls0 ws0">stop <span class="_"> </span>a <span class="_ _47"> </span>runaway <span class="_"> </span>program. <span class="_ _46"> </span>(W<span class="_ _6"></span>e’ll <span class="_ _66"> </span>see <span class="_ _66"> </span>in <span class="_ _66"> </span>Chapter <span class="_ _47"> </span>18 <span class="_"> </span>how <span class="_ _66"> </span>this <span class="_ _47"> </span>signal <span class="_"> </span>can <span class="_ _66"> </span>be</div><div class="t m0 x15 h2a y2896 ff19 fsf fc0 sc0 ls0 ws0">mapped to any character on the terminal.)</div><div class="t m0 x3f h2a y2897 ff19 fsf fc0 sc0 ls49 ws0">•H<span class="_ _4d"></span><span class="ls0">ardwar<span class="_ _0"></span><span class="lsb81">ee<span class="_ _43"></span><span class="ls0">xceptions <span class="_ _23"> </span>generate <span class="_ _42"> </span>signals: <span class="_ _23"> </span>divide <span class="_ _42"> </span>by <span class="_ _42"> </span>0, <span class="_ _42"> </span>invalid <span class="_ _23"> </span>memory <span class="_ _42"> </span>refer<span class="_ _0"></span>ence,</span></span></span></div><div class="t m0 x15 h2a y2898 ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _42"> </span>the <span class="_ _42"> </span>like.<span class="_ _51"> </span>These <span class="_ _42"> </span>conditions <span class="_ _42"> </span>ar<span class="lsb82">eu<span class="_ _43"></span><span class="ls0">sually <span class="_ _23"> </span>detected <span class="_ _42"> </span>by <span class="_ _42"> </span>the <span class="_ _42"> </span>hardware, <span class="_ _23"> </span>and <span class="_ _42"> </span>the</span></span></div><div class="t m0 x15 h2a y2899 ff19 fsf fc0 sc0 ls0 ws0">kernel <span class="_"> </span>is <span class="_ _66"> </span>notiﬁed.<span class="_ _50"> </span>The <span class="_ _66"> </span>kernel <span class="_ _47"> </span>then <span class="_"> </span>generates <span class="_ _66"> </span>the <span class="_ _66"> </span>appropriate <span class="_"> </span>signal <span class="_ _47"> </span>for <span class="_"> </span>the</div><div class="t m0 x15 h2a y289a ff19 fsf fc0 sc0 ls0 ws0">process <span class="_"> </span>that <span class="_"> </span>was <span class="_"> </span>running <span class="_ _66"> </span>at <span class="_"> </span>the <span class="_ _66"> </span>time <span class="_ _66"> </span>the <span class="_ _66"> </span>condition <span class="_ _66"> </span>occurred. <span class="_ _46"> </span>For<span class="_ _46"> </span>example,</div><div class="t m0 x15 h26 y289b ff1a fsf fc0 sc0 ls0 ws0">SIGSEGV<span class="_ _80"> </span><span class="ff19">is generated for a process that executes an invalid memory refer<span class="_ _1"></span>ence.</span></div><div class="t m0 x3f h26 y289c ff19 fsf fc0 sc0 ls49 ws0">•T<span class="_ _4d"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">kill</span></span></div><div class="t m0 x143 h2a y289d ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x132 h2a y289c ff19 fsf fc0 sc0 ls0 ws0">2</div><div class="t m0 x180 h2a y289d ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x4 h2a y289c ff19 fsf fc0 sc0 ls0 ws0">function <span class="_ _9"></span>allows <span class="_ _9"></span>a <span class="_ _9"></span>process <span class="_ _3"></span>to <span class="_ _9"></span>send <span class="_ _9"></span>any <span class="_ _9"></span>signal <span class="_ _9"></span>to <span class="_ _9"></span>another <span class="_ _9"></span>process <span class="_ _3"></span>or</div><div class="t m0 x15 h2a y289e ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _3"></span>group. <span class="_ _45"> </span>Naturally<span class="_ _4"></span><span class="ls240">,t<span class="_ _b"></span><span class="ls0">her<span class="ls240">ea<span class="_ _b"></span><span class="ls45">re <span class="_ _23"></span>l<span class="ls0">imitations: <span class="_ _9"></span>we <span class="_ _9"></span>have <span class="_ _23"></span>to <span class="_ _3"></span>be <span class="_ _23"></span>the <span class="_ _3"></span>owner <span class="_ _23"></span>of <span class="_ _3"></span>the</span></span></span></span></span></div><div class="t m0 x15 h2a y289f ff19 fsf fc0 sc0 ls0 ws0">process that we’r<span class="_ _0"></span><span class="ls44">es<span class="_ _d"></span><span class="ls0">ending the signal to, or we have to be the superuser<span class="_ _6"></span>.</span></span></div><div class="t m0 x3f h26 y28a0 ff19 fsf fc0 sc0 ls49 ws0">•T<span class="_ _4d"></span><span class="ls0">he<span class="_ _16"> </span><span class="ff1a">kill</span></span></div><div class="t m0 x1e4 h2a y28a1 ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 xd0 h2a y28a0 ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 xe8 h2a y28a1 ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x30 h2a y28a0 ff19 fsf fc0 sc0 ls0 ws0">command <span class="_ _47"> </span>allows <span class="_ _45"> </span>us <span class="_ _47"> </span>to <span class="_ _45"> </span>send <span class="_ _47"> </span>signals <span class="_ _45"> </span>to <span class="_ _47"> </span>other <span class="_ _45"> </span>processes. <span class="_ _61"> </span>This</div><div class="t m0 x15 h26 y28a2 ff19 fsf fc0 sc0 ls0 ws0">program <span class="_ _3"></span>is <span class="_ _9"></span>just <span class="_ _9"></span>an <span class="_ _9"></span>interface <span class="_ _9"></span>to <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">kill<span class="_ _45"> </span></span>function. <span class="_ _47"> </span>This<span class="_ _45"> </span>command <span class="_ _9"></span>is <span class="_ _9"></span>often <span class="_ _9"></span>used</div><div class="t m0 x15 h2a y28a3 ff19 fsf fc0 sc0 ls0 ws0">to terminate a runaway backgr<span class="_ _0"></span>ound process.</div><div class="t m0 x3f h2a y28a4 ff19 fsf fc0 sc0 ls49 ws0">•S<span class="_ _4d"></span><span class="ls0">oftwar<span class="lsb83">ec<span class="_ _43"></span><span class="ls0">onditions <span class="_ _23"></span>can <span class="_ _23"></span>generate <span class="_ _23"></span>signals <span class="_ _23"></span>when <span class="_ _23"> </span>a <span class="_ _23"> </span>process <span class="_ _23"></span>should <span class="_ _23"></span>be <span class="_ _23"></span>notiﬁed <span class="_ _23"></span>of</span></span></span></div><div class="t m0 x15 h2a y28a5 ff19 fsf fc0 sc0 ls0 ws0">various <span class="_ _42"> </span>events.<span class="_ _54"> </span>These <span class="_ _42"> </span>aren’t <span class="_ _42"> </span>hardware-generated <span class="_ _42"> </span>conditions <span class="_ _42"> </span>(as <span class="_ _42"> </span>is <span class="_ _42"> </span>the <span class="_ _53"> </span>divide-</div><div class="t m0 x15 h26 y28a6 ff19 fsf fc0 sc0 ls0 ws0">by-0 <span class="_ _47"> </span>condition), <span class="_ _45"> </span>but <span class="_ _47"> </span>softwar<span class="ls4f0">ec<span class="_ _62"></span><span class="ls0">onditions. <span class="_ _16"> </span>Examples<span class="_ _5a"> </span>are<span class="_ _61"> </span><span class="ff1a">SIGURG<span class="_"> </span></span>(generated</span></span></div><div class="t m0 x15 h26 y28a7 ff19 fsf fc0 sc0 ls0 ws0">when out-of-band <span class="_ _2"></span>data <span class="_ _2"></span>arrives <span class="_ _2"></span>over a <span class="_ _2"></span>network <span class="_ _2"></span>connection),<span class="_ _66"> </span><span class="ff1a">SIGPIPE<span class="_ _66"> </span></span>(generated</div><div class="t m0 x15 h26 y28a8 ff19 fsf fc0 sc0 ls0 ws0">when <span class="_ _23"> </span>a <span class="_ _23"> </span>process <span class="_ _23"> </span>writes <span class="_ _23"> </span>to <span class="_ _23"> </span>a <span class="_ _42"> </span>pipe <span class="_ _23"></span>that <span class="_ _23"> </span>has <span class="_ _23"> </span>no <span class="_ _42"> </span>reader), <span class="_ _23"></span>and<span class="_ _35"> </span><span class="ff1a">SIGALRM<span class="_ _35"> </span></span>(generated</div><div class="t m0 x15 h2a y28a9 ff19 fsf fc0 sc0 ls0 ws0">when an alarm clock set by the process expir<span class="_ _0"></span>es).</div><div class="t m0 x3f h2a y28aa ff19 fsf fc0 sc0 ls0 ws0">Signals <span class="_ _2"></span>ar<span class="lsb84">ec<span class="_ _8"></span><span class="ls0">lassic <span class="_ _3"></span>examples <span class="_ _3"></span>of <span class="_ _3"></span>asynchronous <span class="_ _2"></span>events.<span class="_ _16"> </span>They <span class="_ _3"></span>occur <span class="_ _3"></span>at <span class="_ _3"></span>what <span class="_ _2"></span>appear <span class="_ _3"></span>to</span></span></div><div class="t m0 x32 h2a y28ab ff19 fsf fc0 sc0 ls0 ws0">be <span class="_"> </span>random <span class="_"> </span>times <span class="_"> </span>to <span class="_ _e"> </span>the <span class="_"> </span>process. <span class="_ _59"> </span>The<span class="_ _59"> </span>process <span class="_"> </span>can’t <span class="_"> </span>simply <span class="_"> </span>test <span class="_"> </span>a <span class="_"> </span>variable <span class="_ _e"> </span>(such <span class="_"> </span>as</div><div class="t m0 x32 h26 y28ac ff1a fsf fc0 sc0 ls0 ws0">errno<span class="ff19">)<span class="_ _47"> </span>to<span class="_ _45"> </span>see <span class="_ _9"></span>whether <span class="_ _3"></span>a <span class="_ _9"></span>signal <span class="_ _9"></span>has <span class="_ _3"></span>occurred; <span class="_ _9"></span>instead, <span class="_ _3"></span>the <span class="_ _9"></span>process <span class="_ _3"></span>has <span class="_ _9"></span>to <span class="_ _3"></span>tell <span class="_ _9"></span>the <span class="_ _9"></span>kernel</span></div><div class="t m0 x32 h2a y28ad ff19 fsf fc0 sc0 ls124 ws0">‘‘<span class="_ _2"></span><span class="ls0">if and when this signal occurs, do the following.’<span class="_ _0"></span>’</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
