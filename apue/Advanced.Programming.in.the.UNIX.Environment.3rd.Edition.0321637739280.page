<div id="pf118" class="pf w4 h1f" data-page-no="118"><div class="pc pc118 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg118.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">246<span class="_ _1b"> </span><span class="ff19">Process <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _222"> </span>Chapter<span class="_ _4b"> </span>8</span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _45"> </span>s<span class="_ _9"></span><span class="ls0">aw <span class="_ _23"> </span>a <span class="_ _42"> </span>potential <span class="_ _42"> </span>race <span class="_ _42"> </span>condition <span class="_ _23"> </span>in <span class="_ _42"> </span>the <span class="_ _42"> </span>program <span class="_ _23"></span>in <span class="_ _42"> </span>Figur<span class="ls9ce">e8<span class="_ _c"></span><span class="ls0">.8 <span class="_ _42"> </span>when <span class="_ _42"> </span>the <span class="_ _42"> </span>second</span></span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">child <span class="_ _9"></span>printed <span class="_ _9"></span>its <span class="_ _9"></span>parent <span class="_ _3"></span>process <span class="_ _3"></span>ID.<span class="_ _5a"> </span>If <span class="_ _9"></span>the <span class="_ _9"></span>second <span class="_ _9"></span>child <span class="_ _9"></span>runs <span class="_ _9"></span>befor<span class="ls9cf">et<span class="_ _b"></span><span class="ls0">he <span class="_ _3"></span>ﬁrst <span class="_ _9"></span>child, <span class="_ _9"></span>then</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">its <span class="_ _3"></span>parent <span class="_ _3"></span>process <span class="_ _3"></span>will <span class="_ _3"></span>be <span class="_ _9"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _9"></span>child.<span class="_ _16"> </span>But <span class="_ _9"></span>if <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _9"></span>child <span class="_ _3"></span>runs <span class="_ _9"></span>ﬁrst <span class="_ _3"></span>and <span class="_ _9"></span>has <span class="_ _3"></span>enough</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">time <span class="_ _2"></span>to<span class="_ _47"> </span><span class="ff1a">exit</span><span class="ls892">,t<span class="_ _4f"></span><span class="ls0">hen <span class="_ _2"></span>the <span class="_ _3"></span>parent process <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _2"></span>second <span class="_ _3"></span>child <span class="_ _2"></span>is<span class="_ _47"> </span><span class="ff1a">init</span><span class="ls9d0">.E<span class="_ _5b"></span><span class="ls0">ven <span class="_ _2"></span>calling<span class="_ _47"> </span><span class="ff1a">sleep</span>,</span></span></span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">as we did, guarantees nothing.<span class="_ _46"> </span>If the system was heavily loaded, <span class="_ _2"></span>the second child could</div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">sume <span class="_ _3"></span>after<span class="_ _47"> </span><span class="ff1a">sleep<span class="_ _47"> </span></span></span>re<span class="_ _2"></span><span class="ls0">turns, <span class="_ _3"></span>befor<span class="ls9d1">et<span class="_ _8"></span><span class="ls0">he <span class="_ _3"></span>ﬁrst <span class="_ _3"></span>child <span class="_ _3"></span>has <span class="_ _3"></span>a <span class="_ _2"></span>chance <span class="_ _3"></span>to <span class="_ _3"></span>run. <span class="_ _47"> </span>Problems <span class="_ _2"></span>of <span class="_ _3"></span>this</span></span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">form can be difﬁcult to debug because they tend to work ‘<span class="_ _1"></span>‘most of the time.’<span class="_ _0"></span>’</div><div class="t m0 x3f h26 y136 ff19 fsf fc0 sc0 ls9d2 ws0">Ap<span class="_ _c"></span><span class="ls45">ro<span class="_ _2"></span><span class="ls0">cess <span class="_ _42"> </span>that <span class="_ _53"> </span>wants <span class="_ _53"> </span>to <span class="_ _42"> </span>wait <span class="_ _53"> </span>for <span class="_ _53"> </span>a <span class="_ _42"> </span>child <span class="_ _53"> </span>to <span class="_ _53"> </span>terminate <span class="_ _42"> </span>must <span class="_ _53"> </span>call <span class="_ _42"> </span>one <span class="_ _53"> </span>of <span class="_ _53"> </span>the<span class="_ _44"> </span><span class="ff1a">wait</span></span></span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">functions. <span class="_ _47"> </span>If<span class="_ _66"> </span><span class="ls81c">ap<span class="_ _4f"></span><span class="ls45">ro<span class="_ _2"></span><span class="ls0">cess <span class="_ _2"></span>wants <span class="_ _3"></span>to <span class="_ _3"></span>wait <span class="_ _2"></span>for <span class="_ _3"></span>its <span class="_ _2"></span>parent <span class="_ _2"></span>to <span class="_ _3"></span>terminate, <span class="_ _2"></span>as <span class="_ _3"></span>in <span class="_ _3"></span>the <span class="_ _2"></span>program <span class="_ _2"></span>from</span></span></span></div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e8<span class="_ _4f"></span><span class="ls0">.8, a loop of the following form could be used:</span></span></div><div class="t m0 x3f h57 y12bb ff1a fs2d fc0 sc0 ls0 ws0">while (getppid() != 1)</div><div class="t m0 xc2 h57 y12bc ff1a fs2d fc0 sc0 ls0 ws0">sleep(1);</div><div class="t m0 x32 h2b y9cf ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _42"> </span>problem <span class="_ _23"> </span>with <span class="_ _42"> </span>this <span class="_ _42"> </span>type <span class="_ _42"> </span>of <span class="_ _42"> </span>loop, <span class="_ _42"> </span>called<span class="_ _44"> </span><span class="ff1b">polling</span>,<span class="_ _44"> </span>is<span class="_ _44"> </span>that <span class="_ _42"> </span>it <span class="_ _42"> </span>wastes <span class="_ _42"> </span>CPU <span class="_ _42"> </span>time, <span class="_ _42"> </span>as <span class="_ _42"> </span>the</div><div class="t m0 x32 h2a y9d0 ff19 fsf fc0 sc0 ls0 ws0">caller is awakened every second to test the condition.</div><div class="t m0 x3f h2a y2076 ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _47"> </span>a<span class="_ _9"></span><span class="ls0">void <span class="_ _23"></span>race <span class="_ _23"></span>conditions <span class="_ _23"></span>and <span class="_ _23"></span>to <span class="_ _9"></span>avoid <span class="_ _23"> </span>polling, <span class="_ _23"> </span>some <span class="_ _23"></span>form <span class="_ _23"></span>of <span class="_ _23"></span>signaling <span class="_ _23"></span>is <span class="_ _9"></span>required</span></div><div class="t m0 x32 h2a y2077 ff19 fsf fc0 sc0 ls0 ws0">between <span class="_ _2"></span>multiple <span class="_ _3"></span>processes. <span class="_ _47"> </span>Signals<span class="_ _47"> </span>can <span class="_ _2"></span>be <span class="_ _3"></span>used <span class="_ _3"></span>for <span class="_ _3"></span>this <span class="_ _3"></span>purpose, <span class="_ _2"></span>and <span class="_ _3"></span>we <span class="_ _3"></span>describe <span class="_ _3"></span>one</div><div class="t m0 x32 h2a y2078 ff19 fsf fc0 sc0 ls0 ws0">way <span class="_ _2"></span>to <span class="_ _2"></span>do <span class="_ _2"></span>this <span class="_ _2"></span>in <span class="_ _3"></span>Section <span class="_ _2"></span>10.16.<span class="_ _61"> </span><span class="ls5f">Va<span class="_ _9"></span></span>rious <span class="_ _2"></span>forms <span class="_ _3"></span>of <span class="_ _2"></span>interprocess communication</div><div class="t m0 x69 h2a y2079 ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x105 h2a y2078 ff19 fsf fc0 sc0 ls0 ws0">IPC</div><div class="t m0 x58 h2a y2079 ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x42 h2a y2078 ff19 fsf fc0 sc0 ls0 ws0">can</div><div class="t m0 x32 h2a y207a ff19 fsf fc0 sc0 ls0 ws0">also be used.<span class="_ _59"> </span><span class="ls5f">We<span class="_ _23"></span></span>’ll discuss some of these options in Chapters 15 and 17.</div><div class="t m0 x3f h2a y207b ff19 fsf fc0 sc0 ls0 ws0">For <span class="_ _2"></span>a <span class="_ _2"></span>parent <span class="_ _2"></span>and <span class="_ _2"></span>child <span class="_ _2"></span>relationship, we <span class="_ _3"></span>often <span class="_ _2"></span>have <span class="_ _2"></span>the <span class="_ _2"></span>following <span class="_ _3"></span>scenario.<span class="_ _61"> </span>After <span class="_ _2"></span>the</div><div class="t m0 x32 h26 y207c ff1a fsf fc0 sc0 ls0 ws0">fork<span class="ff19 ls9d3">,b<span class="_ _43"></span><span class="ls0">oth <span class="_ _23"> </span>the <span class="_ _53"> </span>parent <span class="_ _23"> </span>and <span class="_ _53"> </span>the <span class="_ _42"> </span>child <span class="_ _42"> </span>have <span class="_ _42"> </span>something <span class="_ _42"> </span>to <span class="_ _53"> </span>do.<span class="_ _54"> </span>For <span class="_ _42"> </span>example, <span class="_ _42"> </span>the <span class="_ _42"> </span>parent</span></span></div><div class="t m0 x32 h2a y207d ff19 fsf fc0 sc0 ls0 ws0">could <span class="_ _2"></span>update <span class="_ _2"></span>a <span class="_ _3"></span>recor<span class="_ _0"></span>d<span class="_ _66"> </span>in<span class="_ _47"> </span>a<span class="_ _66"> </span>log <span class="_ _3"></span>ﬁle <span class="_ _2"></span>with <span class="_ _2"></span>the <span class="_ _3"></span>child’s <span class="_ _2"></span>process <span class="_ _2"></span>ID, <span class="_ _2"></span>and <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _2"></span>might <span class="_ _2"></span>have</div><div class="t m0 x32 h2a y207e ff19 fsf fc0 sc0 ls0 ws0">to create a ﬁle <span class="_ _2"></span>for the <span class="_ _2"></span>parent. <span class="_"> </span>In<span class="_"> </span>this <span class="_ _2"></span>example, we requir<span class="ls9d4">et<span class="_ _4f"></span><span class="ls0">hat <span class="_ _2"></span>each process tell the <span class="_ _2"></span>other</span></span></div><div class="t m0 x32 h2a y207f ff19 fsf fc0 sc0 ls0 ws0">when <span class="_ _53"> </span>it <span class="_ _53"> </span>has <span class="_ _53"> </span>ﬁnished <span class="_ _53"> </span>its <span class="_ _53"> </span>initial <span class="_ _53"> </span>set <span class="_ _53"> </span>of <span class="_ _53"> </span>operations, <span class="_ _53"> </span>and <span class="_ _e"> </span>that <span class="_ _53"> </span>each <span class="_ _53"> </span>wait <span class="_ _53"> </span>for <span class="_ _53"> </span>the <span class="_ _53"> </span>other <span class="_ _53"> </span>to</div><div class="t m0 x32 h2a y2080 ff19 fsf fc0 sc0 ls0 ws0">complete, befor<span class="ls44">eh<span class="_ _4f"></span><span class="ls0">eading off<span class="_"> </span>on<span class="_"> </span>its own.<span class="_ _59"> </span>The following code illustrates this scenario:</span></span></div><div class="t m0 x3f h57 y9da ff1a fs2d fc0 sc0 ls0 ws0">#include <span class="_"> </span>&quot;apue.h&quot;</div><div class="t m0 x3f h57 y2081 ff1a fs2d fc0 sc0 ls0 ws0">TELL_WAIT(); <span class="_ _68"> </span>/*<span class="_"> </span>set things up for TELL_xxx &amp; WAIT_xxx */</div><div class="t m0 x3f h57 y2082 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 xc2 h57 y2083 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x3f h57 y2084 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {<span class="_ _82"> </span>/* child */</span></div><div class="t m0 xc2 h57 y2085 ff1a fs2d fc0 sc0 ls0 ws0">/* child does whatever is necessary ... */</div><div class="t m0 xc2 h57 y2086 ff1a fs2d fc0 sc0 ls0 ws0">TELL_PARENT(getppid()); <span class="_ _15"> </span>/*<span class="_"> </span>tell parent we’re done */</div><div class="t m0 xc2 h57 y2087 ff1a fs2d fc0 sc0 ls0 ws0">WAIT_PARENT(); <span class="_ _166"> </span>/*<span class="_"> </span>and wait for parent */</div><div class="t m0 xc2 h57 y2088 ff1a fs2d fc0 sc0 ls0 ws0">/* and the child continues on its way ... */</div><div class="t m0 xc2 h57 y2089 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x3f h57 y208a ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x3f h57 y208b ff1a fs2d fc0 sc0 ls0 ws0">/* parent does whatever is necessary ... */</div><div class="t m0 x3f h57 y208c ff1a fs2d fc0 sc0 ls0 ws0">TELL_CHILD(pid); <span class="_ _bd"> </span>/*<span class="_"> </span>tell child we’re done */</div><div class="t m0 x3f h57 y208d ff1a fs2d fc0 sc0 ls0 ws0">WAIT_CHILD(); <span class="_ _12d"> </span>/*<span class="_"> </span>and wait for child */</div><div class="t m0 x3f h57 y208e ff1a fs2d fc0 sc0 ls0 ws0">/* and the parent continues on its way ... */</div><div class="t m0 x3f h57 y208f ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
