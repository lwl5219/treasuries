<div id="pf2b6" class="pf w4 h1f" data-page-no="2b6"><div class="pc pc2b6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2b6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">660<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">if (writev(csfd, &amp;iov[0], 3) != len) {</div><div class="t m0 x9d h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">err_ret(&quot;writev error&quot;);</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 yaea ff1a fs2d fc0 sc0 ls0 ws0">/* read back descriptor; returned errors handled by write() */</div><div class="t m0 x8a h57 yaeb ff1a fs2d fc0 sc0 ls0 ws0">return(recv_fd(csfd, write));</div><div class="t m0 x32 h57 y16f9 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xbf h5e y4dbe ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.25<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">csopen<span class="_ _e"> </span></span>function, version 2</span></div><div class="t m0 x32 h49 y4dbf ff19 fs26 fc0 sc0 ls0 ws0">The protocol fr<span class="_ _0"></span>om the client to the server r<span class="_ _0"></span>emains the same.</div><div class="t m0 x3f h4d y4dc0 ff19 fs26 fc0 sc0 ls0 ws0">Next, <span class="_ _e"> </span>we’ll <span class="_ _e"> </span>look <span class="_ _e"> </span>at <span class="_ _e"> </span>the <span class="_ _e"> </span>server<span class="_ _1"></span><span class="ls13fc">.T<span class="_ _64"></span><span class="ls0">he <span class="_ _e"> </span>header<span class="_ _4b"> </span><span class="ff1a">opend.h<span class="_ _59"> </span></span>(Figur<span class="ls13fd">e1<span class="_ _4a"></span><span class="ls0">7.26) <span class="_"> </span>includes <span class="_ _53"> </span>the</span></span></span></span></div><div class="t m0 x32 h49 y4dc1 ff19 fs26 fc0 sc0 ls0 ws0">standar<span class="lsd3">dh<span class="_ _4f"></span><span class="ls0">eaders and declares the global variables and the function prototypes.</span></span></div><div class="t m0 x32 h5d y4dc2 ff1a fs2f fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h5d y4dc3 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h5d y4dc4 ff1a fs2f fc0 sc0 ls0 ws0">#define CS_OPEN &quot;/tmp/opend.socket&quot; /* well-known name */</div><div class="t m0 x32 h5d y4dc5 ff1a fs2f fc0 sc0 ls0 ws0">#define CL_OPEN &quot;open&quot;<span class="_ _12d"> </span>/* client’s request for server */</div><div class="t m0 x32 h5d y4dc6 ff1a fs2f fc0 sc0 ls0 ws0">extern int<span class="_ _68"> </span>debug; <span class="_ _15"> </span>/*<span class="_"> </span>nonzero if interactive (not daemon) */</div><div class="t m0 x32 h5d y4dc7 ff1a fs2f fc0 sc0 ls0 ws0">extern char<span class="_ _d9"> </span>errmsg[]; <span class="_"> </span>/*<span class="_"> </span>error message string to return to client */</div><div class="t m0 x32 h5d y4dc8 ff1a fs2f fc0 sc0 ls0 ws0">extern int<span class="_ _68"> </span>oflag; <span class="_ _15"> </span>/*<span class="_"> </span>open flag: O_xxx ... */</div><div class="t m0 x32 h5d y4dc9 ff1a fs2f fc0 sc0 ls0 ws0">extern char *pathname;<span class="_ _d9"> </span>/* of file to open for client */</div><div class="t m0 x32 h5d y4dca ff1a fs2f fc0 sc0 ls0 ws0">typedef struct {<span class="_ _15"> </span>/* one Client struct per connected client */</div><div class="t m0 xb8 h5d y4dcb ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _d9"> </span>fd;<span class="_ _176"> </span>/* fd, or -1 if available */</div><div class="t m0 xb8 h5d y4dcc ff1a fs2f fc0 sc0 ls0 ws0">uid_t uid;</div><div class="t m0 x32 h5d y4dcd ff1a fs2f fc0 sc0 ls395 ws0">}C<span class="_ _1d"></span><span class="ls0">lient;</span></div><div class="t m0 x32 h5d y4dce ff1a fs2f fc0 sc0 ls0 ws0">extern Client<span class="_ _68"> </span>*client; <span class="_ _90"> </span>/*<span class="_"> </span>ptr to malloc’ed array */</div><div class="t m0 x32 h5d y4dcf ff1a fs2f fc0 sc0 ls0 ws0">extern int<span class="_ _b7"> </span>client_size; <span class="_ _3a"> </span>/*<span class="_"> </span><span class="ls395">#e<span class="_ _5b"></span><span class="ls0">ntries in client[] array */</span></span></div><div class="t m0 x32 h5d y4dd0 ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>cli_args(int,<span class="_"> </span>char **);</div><div class="t m0 x32 h5d y4dd1 ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>client_add(int,<span class="_"> </span>uid_t);</div><div class="t m0 x32 h5d y4dd2 ff1a fs2f fc0 sc0 ls0 ws0">void <span class="_ _15"> </span>client_del(int);</div><div class="t m0 x32 h5d y4dd3 ff1a fs2f fc0 sc0 ls0 ws0">void <span class="_ _15"> </span>loop(void);</div><div class="t m0 x32 h5d y4dd4 ff1a fs2f fc0 sc0 ls0 ws0">void <span class="_ _15"> </span>handle_request(char<span class="_"> </span>*, int, int, uid_t);</div><div class="t m0 x199 h6d y4dd5 ff18 fs12 fc0 sc0 ls0 ws0">Figure 17.26<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">opend.h<span class="_ _e"> </span></span>header<span class="_ _1"></span><span class="ls38a">,v<span class="_ _84"></span><span class="ls0">ersion 2</span></span></span></div><div class="t m0 x3f h50 y4dd6 ff19 fs29 fc0 sc0 ls0 ws0">Since <span class="_ _47"> </span>this <span class="_ _45"> </span>server <span class="_ _47"> </span>handles <span class="_ _47"> </span>all <span class="_ _45"> </span>clients, <span class="_ _47"> </span>it <span class="_ _47"> </span>must <span class="_ _45"> </span>maintain <span class="_ _47"> </span>the <span class="_ _45"> </span>state <span class="_ _47"> </span>of <span class="_ _47"> </span>each <span class="_ _45"> </span>client</div><div class="t m0 x32 h5c y4dd7 ff19 fs29 fc0 sc0 ls0 ws0">connection. <span class="_ _59"> </span>This<span class="_ _46"> </span>is <span class="_"> </span>done <span class="_"> </span>with <span class="_"> </span>the<span class="_ _46"> </span><span class="ff1a">client<span class="_ _46"> </span></span>array <span class="_"> </span>declared <span class="_"> </span>in <span class="_"> </span>the<span class="_ _59"> </span><span class="ff1a">opend.h<span class="_ _46"> </span></span>header<span class="_ _6"></span>.</div><div class="t m0 x32 h50 y4dd8 ff19 fs29 fc0 sc0 ls0 ws0">Figur<span class="lsdd">e1<span class="_ _4f"></span><span class="ls0">7.27 deﬁnes three functions that manipulate this array<span class="_ _4"></span>.</span></span></div><div class="t m0 x32 h65 y4dd9 ff1a fs32 fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&quot;opend.h&quot;</div><div class="t m0 x32 h65 y4dda ff1a fs32 fc0 sc0 ls0 ws0">#define NALLOC<span class="_ _d9"> </span>10 <span class="_ _8a"> </span>/*<span class="_"> </span><span class="ls441">#c<span class="_ _5b"></span><span class="ls0">lient structs to alloc/realloc for */</span></span></div><div class="t m0 x32 h65 y4ddb ff1a fs32 fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h65 y4ddc ff1a fs32 fc0 sc0 ls0 ws0">client_alloc(void) <span class="_ _8a"> </span>/*<span class="_"> </span>alloc more entries in the client[] array */</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
