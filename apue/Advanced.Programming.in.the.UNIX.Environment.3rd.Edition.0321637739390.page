<div id="pf186" class="pf w4 h1f" data-page-no="186"><div class="pc pc186 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg186.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">356<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;setjmp.h&gt;</div><div class="t m0 x3f h57 y19f8 ff1a fs2d fc0 sc0 ls0 ws0">int sigsetjmp(sigjmp_buf<span class="_"> </span><span class="ff1b">env</span><span class="ls15c">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">savemask</span>);</span></span></div><div class="t m0 x6 h57 y19f9 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if called directly<span class="_ _4"></span><span class="ls110">,n<span class="_ _5"></span><span class="ls0">onzero<span class="_"> </span>if<span class="_"> </span>returning fr<span class="_ _0"></span>om a call to<span class="_"> </span><span class="ff1a">siglongjmp</span></span></span></div><div class="t m0 x3f h57 y19fa ff1a fs2d fc0 sc0 ls0 ws0">void siglongjmp(sigjmp_buf<span class="_"> </span><span class="ff1b">env</span><span class="ls15c">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">val</span>);</span></span></div><div class="t m0 x32 h4d y19fb ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _2"></span>only <span class="_ _2"></span>difference between <span class="_ _2"></span>these <span class="_ _2"></span>functions <span class="_ _2"></span>and <span class="_ _3"></span>the<span class="_ _66"> </span><span class="ff1a">setjmp<span class="_ _47"> </span></span>and<span class="_ _66"> </span><span class="ff1a">longjmp<span class="_ _47"> </span></span>functions <span class="_ _2"></span>is</div><div class="t m0 x32 h4d y19fc ff19 fs26 fc0 sc0 ls0 ws0">that<span class="_ _47"> </span><span class="ff1a">sigsetjmp<span class="_ _45"> </span></span>has <span class="_ _3"></span>an <span class="_ _9"></span>additional <span class="_ _9"></span>argument. <span class="_ _47"> </span>If<span class="_ _47"> </span><span class="ff1b">savemask<span class="_ _45"> </span></span>is <span class="_ _3"></span>nonzero, <span class="_ _3"></span>then<span class="_ _45"> </span><span class="ff1a">sigsetjmp</span></div><div class="t m0 x32 h4d y19fd ff19 fs26 fc0 sc0 ls0 ws0">also saves <span class="_ _2"></span>the <span class="_ _2"></span>current signal mask <span class="_ _2"></span>of <span class="_ _2"></span>the process in<span class="_ _66"> </span><span class="ff1b">env</span><span class="lsccd">.W<span class="_ _4a"></span><span class="ls0">hen<span class="_"> </span><span class="ff1a">siglongjmp<span class="_ _66"> </span></span>is <span class="_ _2"></span>called, <span class="_ _2"></span>if</span></span></div><div class="t m0 x32 h4d y19fe ff19 fs26 fc0 sc0 ls0 ws0">the<span class="_ _44"> </span><span class="ff1b">env<span class="_ _44"> </span></span>argument <span class="_ _53"> </span>was <span class="_ _42"> </span>saved <span class="_ _53"> </span>by <span class="_ _53"> </span>a <span class="_ _53"> </span>call <span class="_ _53"> </span>to<span class="_ _44"> </span><span class="ff1a">sigsetjmp<span class="_ _4b"> </span></span>with <span class="_ _42"> </span>a <span class="_ _53"> </span>nonzero<span class="_ _44"> </span><span class="ff1b">savemask</span><span class="lscce">,t<span class="_ _c"></span><span class="ls0">hen</span></span></div><div class="t m0 x32 h4d y19ff ff1a fs26 fc0 sc0 ls0 ws0">siglongjmp<span class="_ _80"> </span><span class="ff19 lscc">re<span class="_ _2"></span><span class="ls0">stores the saved signal mask.</span></span></div><div class="t m0 x35 h4c y2d95 ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h49 y2d96 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _3"></span>program <span class="_ _3"></span>in <span class="_ _3"></span>Figur<span class="ls594">e1<span class="_ _8"></span><span class="ls0">0.20 <span class="_ _3"></span>demonstrates <span class="_ _3"></span>how <span class="_ _9"></span>the <span class="_ _3"></span>signal <span class="_ _9"></span>mask <span class="_ _3"></span>that <span class="_ _3"></span>is <span class="_ _9"></span>installed <span class="_ _3"></span>by <span class="_ _9"></span>the</span></span></div><div class="t m0 x32 h49 y2d97 ff19 fs26 fc0 sc0 ls0 ws0">system <span class="_ _47"> </span>when <span class="_ _45"> </span>a <span class="_ _47"> </span>signal <span class="_ _45"> </span>handler <span class="_ _47"> </span>is <span class="_ _47"> </span>invoked <span class="_ _45"> </span>automatically <span class="_ _47"> </span>includes <span class="_ _45"> </span>the <span class="_ _47"> </span>signal <span class="_ _47"> </span>being</div><div class="t m0 x32 h4d y2d98 ff19 fs26 fc0 sc0 ls0 ws0">caught. <span class="_ _59"> </span>This<span class="_ _59"> </span>program <span class="_"> </span>also <span class="_ _e"> </span>illustrates <span class="_"> </span>the <span class="_"> </span>use <span class="_"> </span>of <span class="_ _e"> </span>the<span class="_ _59"> </span><span class="ff1a">sigsetjmp<span class="_ _46"> </span></span>and<span class="_ _59"> </span><span class="ff1a">siglongjmp</span></div><div class="t m0 x32 h49 y2d99 ff19 fs26 fc0 sc0 ls0 ws0">functions.</div><div class="t m0 x32 h5d y2d9a ff1a fs2f fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h5d y2d9b ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;setjmp.h&gt;</div><div class="t m0 x32 h5d y2d9c ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;time.h&gt;</div><div class="t m0 x32 h5d y2d9d ff1a fs2f fc0 sc0 ls0 ws0">static void<span class="_ _17b"> </span>sig_usr1(int);</div><div class="t m0 x32 h5d y2d9e ff1a fs2f fc0 sc0 ls0 ws0">static void<span class="_ _17b"> </span>sig_alrm(int);</div><div class="t m0 x32 h5d y2d9f ff1a fs2f fc0 sc0 ls0 ws0">static sigjmp_buf<span class="_ _227"> </span>jmpbuf;</div><div class="t m0 x32 h5d y2da0 ff1a fs2f fc0 sc0 ls0 ws0">static volatile sig_atomic_t<span class="_ _15"> </span>canjump;</div><div class="t m0 x32 h5d y2da1 ff1a fs2f fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h5d y2da2 ff1a fs2f fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h5d y2da3 ff1a fs2f fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h5d y2da4 ff1a fs2f fc0 sc0 ls0 ws0">if (signal(SIGUSR1, sig_usr1) == SIG_ERR)</div><div class="t m0 x9d h5d y2da5 ff1a fs2f fc0 sc0 ls0 ws0">err_sys(&quot;signal(SIGUSR1) error&quot;);</div><div class="t m0 x8a h5d y2da6 ff1a fs2f fc0 sc0 ls0 ws0">if (signal(SIGALRM, sig_alrm) == SIG_ERR)</div><div class="t m0 x9d h5d y2da7 ff1a fs2f fc0 sc0 ls0 ws0">err_sys(&quot;signal(SIGALRM) error&quot;);</div><div class="t m0 x8a h5d y2da8 ff1a fs2f fc0 sc0 ls0 ws0">pr_mask(&quot;starting main: &quot;);<span class="_ _8a"> </span>/* Figure 10.14 */</div><div class="t m0 x8a h5d y2da9 ff1a fs2f fc0 sc0 ls0 ws0">if (sigsetjmp(jmpbuf, 1)) {</div><div class="t m0 x9d h5d y2daa ff1a fs2f fc0 sc0 ls0 ws0">pr_mask(&quot;ending main: &quot;);</div><div class="t m0 x9d h5d y2dab ff1a fs2f fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x8a h5d y2dac ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h5d y2dad ff1a fs2f fc0 sc0 ls0 ws0">canjump = 1;<span class="_ _15"> </span>/* now sigsetjmp() is OK */</div><div class="t m0 x8a h5d y2dae ff1a fs2f fc0 sc0 ls0 ws0">for ( ; ; )</div><div class="t m0 x9d h5d y2daf ff1a fs2f fc0 sc0 ls0 ws0">pause();</div><div class="t m0 x32 h5d y2db0 ff1a fs2f fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h5d y2db1 ff1a fs2f fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h5d y2db2 ff1a fs2f fc0 sc0 ls0 ws0">sig_usr1(int signo)</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
