<div id="pf236" class="pf w4 h1f" data-page-no="236"><div class="pc pc236 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg236.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">532<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>I/O<span class="_ _16b"> </span>Chapter <span class="_"> </span>14</span></div><div class="t m0 x32 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">Exer<span class="_ _0"></span>cises</div><div class="t m0 x32 h5f y1e2d ff18 fs2d fc0 sc0 ls0 ws0">14.1<span class="_ _288"> </span><span class="ff19 ls467">Wr<span class="_ _9"></span><span class="ls0">ite <span class="_ _42"> </span>a <span class="_ _42"> </span>test <span class="_ _53"> </span>program <span class="_ _23"> </span>that <span class="_ _53"> </span>illustrates <span class="_ _42"> </span>your <span class="_ _42"> </span>system’s <span class="_ _53"> </span>behavior <span class="_ _42"> </span>when <span class="_ _42"> </span>a <span class="_ _42"> </span>process <span class="_ _42"> </span>is <span class="_ _42"> </span>blocked</span></span></div><div class="t m0 xe1 h5f y1e2e ff19 fs2d fc0 sc0 ls0 ws0">while <span class="_ _3"></span>trying <span class="_ _3"></span>to <span class="_ _9"></span>write <span class="_ _3"></span>lock <span class="_ _9"></span>a <span class="_ _3"></span>range <span class="_ _3"></span>of <span class="_ _9"></span>a <span class="_ _3"></span>ﬁle <span class="_ _9"></span>and <span class="_ _3"></span>additional <span class="_ _3"></span>read</div><div class="t m0 x166 h5f y40d9 ff19 fs2d fc0 sc0 ls0 ws0">-</div><div class="t m0 xba h5f y1e2e ff19 fs2d fc0 sc0 ls0 ws0">lock <span class="_ _3"></span>requests <span class="_ _3"></span>ar<span class="ls112b">em<span class="_ _8"></span><span class="ls0">ade. <span class="_ _47"> </span>Is</span></span></div><div class="t m0 xe1 h5f y1e2f ff19 fs2d fc0 sc0 ls0 ws0">the process r<span class="_ _0"></span>equesting a write lock starved by the processes r<span class="_ _0"></span>ead locking the ﬁle?</div><div class="t m0 x32 h57 y1e30 ff18 fs2d fc0 sc0 ls0 ws0">14.2<span class="_ _288"> </span><span class="ff19 ls32e">Ta<span class="_ _9"></span><span class="ls0">ke <span class="_ _3"></span>a <span class="_ _3"></span>look <span class="_ _2"></span>at <span class="_ _3"></span>your <span class="_ _2"></span>system’s <span class="_ _3"></span>headers <span class="_ _3"></span>and <span class="_ _2"></span>examine <span class="_ _3"></span>the <span class="_ _2"></span>implementation <span class="_ _3"></span>of<span class="_ _66"> </span><span class="ff1a">select<span class="_ _66"> </span></span>and <span class="_ _3"></span>the</span></span></div><div class="t m0 xe1 h57 y40da ff19 fs2d fc0 sc0 ls0 ws0">four<span class="_"> </span><span class="ff1a">FD_<span class="_ _e"> </span></span>macros.</div><div class="t m0 x32 h5f y1e33 ff18 fs2d fc0 sc0 ls0 ws0">14.3<span class="_ _288"> </span><span class="ff19">The <span class="_ _9"></span>system <span class="_ _9"></span>headers <span class="_ _9"></span>usually <span class="_ _9"></span>have <span class="_ _9"></span>a <span class="_ _9"></span>built-in <span class="_ _9"></span>limit <span class="_ _3"></span>on <span class="_ _9"></span>the <span class="_ _9"></span>maximum <span class="_ _9"></span>number <span class="_ _9"></span>of <span class="_ _9"></span>descriptors</span></div><div class="t m0 xe1 h57 y1e34 ff19 fs2d fc0 sc0 ls0 ws0">that <span class="_ _53"> </span>the<span class="_ _44"> </span><span class="ff1a">fd_set<span class="_ _35"> </span></span>data <span class="_ _53"> </span>type <span class="_ _53"> </span>can <span class="_ _53"> </span>handle.<span class="_ _51"> </span>Assume <span class="_"> </span>that <span class="_ _42"> </span>we <span class="_ _53"> </span>need <span class="_ _53"> </span>to <span class="_ _53"> </span>increase <span class="_ _42"> </span>this <span class="_ _53"> </span>limit <span class="_ _53"> </span>to</div><div class="t m0 xe1 h5f y40db ff19 fs2d fc0 sc0 ls0 ws0">handle up to 2,048 descriptors.<span class="_ _4b"> </span>How can we do this?</div><div class="t m0 x32 h57 y1e36 ff18 fs2d fc0 sc0 ls0 ws0">14.4<span class="_ _288"> </span><span class="ff19">Compar<span class="ls112c">et<span class="_ _4f"></span><span class="ls0">he <span class="_ _3"></span>functions <span class="_ _3"></span>provided <span class="_ _3"></span>for <span class="_ _3"></span>signal <span class="_ _3"></span>sets <span class="_ _3"></span>(Section <span class="_ _3"></span>10.1<span class="_ _0"></span>1) <span class="_ _3"></span>and <span class="_ _3"></span>the<span class="_ _66"> </span><span class="ff1a">fd_set<span class="_ _47"> </span></span>descriptor</span></span></span></div><div class="t m0 xe1 h5f y40dc ff19 fs2d fc0 sc0 ls0 ws0">sets. <span class="_"> </span>Also<span class="_"> </span>compar<span class="ls110">et<span class="_ _d"></span><span class="ls0">he implementation of the two on your system.</span></span></div><div class="t m0 x32 h57 y1e38 ff18 fs2d fc0 sc0 ls0 ws0">14.5<span class="_ _288"> </span><span class="ff19">Implement <span class="_ _42"> </span>the <span class="_ _23"> </span>function<span class="_ _45"> </span><span class="ff1a">sleep_us</span><span class="ls112d">,w<span class="_ _b"></span><span class="ls0">hich <span class="_ _23"> </span>is <span class="_ _23"> </span>similar <span class="_ _23"> </span>to<span class="_ _45"> </span><span class="ff1a">sleep</span><span class="ls112e">,b<span class="_ _b"></span><span class="ls0">ut <span class="_ _23"> </span>waits <span class="_ _23"> </span>for <span class="_ _42"> </span>a <span class="_ _23"> </span>speciﬁed</span></span></span></span></span></div><div class="t m0 xe1 h57 y40dd ff19 fs2d fc0 sc0 ls0 ws0">number <span class="_ _3"></span>of <span class="_ _3"></span>microseconds. <span class="_ _66"> </span>Use<span class="_ _47"> </span>either<span class="_ _66"> </span><span class="ff1a">select<span class="_ _47"> </span></span>or<span class="_ _66"> </span><span class="ff1a">poll</span><span class="ls112f">.C<span class="_ _4a"></span><span class="ls0">ompar<span class="ls1130">et<span class="_ _8"></span><span class="ls0">his <span class="_ _3"></span>function <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>BSD</span></span></span></span></div><div class="t m0 xe1 h57 y40de ff1a fs2d fc0 sc0 ls0 ws0">usleep<span class="_ _e"> </span><span class="ff19">function.</span></div><div class="t m0 x32 h57 y40df ff18 fs2d fc0 sc0 ls0 ws0">14.6<span class="_ _288"> </span><span class="ff19">Can <span class="_ _50"> </span>you <span class="_ _60"> </span>implement <span class="_ _50"> </span>the <span class="_ _60"> </span>functions<span class="_ _5e"> </span><span class="ff1a">TELL_WAIT</span>,<span class="_ _7f"> </span><span class="ff1a">TELL_PARENT</span>,<span class="_ _5e"> </span><span class="ff1a">TELL_CHILD</span>,</span></div><div class="t m0 xe1 h57 y40e0 ff1a fs2d fc0 sc0 ls0 ws0">WAIT_PARENT<span class="ff19 ls1131">,a<span class="_ _d"></span><span class="ls0">nd<span class="_ _66"> </span><span class="ff1a">WAIT_CHILD<span class="_ _80"> </span></span>from <span class="_ _2"></span>Figur<span class="ls1132">e1<span class="_ _4f"></span><span class="ls0">0.24 <span class="_ _2"></span>using <span class="_ _2"></span>advisory <span class="_ _2"></span>recor<span class="ls1132">dl<span class="_ _4f"></span><span class="ls0">ocking <span class="_ _3"></span>instead</span></span></span></span></span></span></div><div class="t m0 xe1 h5f y40e1 ff19 fs2d fc0 sc0 ls0 ws0">of signals?<span class="_ _4b"> </span>If so, code and test your implementation.</div><div class="t m0 x32 h5f y40e2 ff18 fs2d fc0 sc0 ls0 ws0">14.7<span class="_ _288"> </span><span class="ff19">Determine <span class="_ _9"></span>the <span class="_ _9"></span>capacity <span class="_ _9"></span>of <span class="_ _9"></span>a <span class="_ _3"></span>pipe <span class="_ _9"></span>using <span class="_ _9"></span>nonblocking <span class="_ _9"></span>writes.<span class="_ _61"> </span>Compar<span class="ls1133">et<span class="_ _b"></span><span class="ls0">his <span class="_ _9"></span>value <span class="_ _9"></span>with <span class="_ _9"></span>the</span></span></span></div><div class="t m0 xe1 h57 y40e3 ff19 fs2d fc0 sc0 ls0 ws0">value of<span class="_"> </span><span class="ff1a">PIPE_BUF<span class="_ _e"> </span></span>from Chapter 2.</div><div class="t m0 x32 h5f y40e4 ff18 fs2d fc0 sc0 ls0 ws0">14.8<span class="_ _288"> </span><span class="ff19">Rewrite <span class="_ _9"></span>the <span class="_ _9"></span>program <span class="_ _3"></span>in <span class="_ _3"></span>Figur<span class="ls1134">e1<span class="_ _8"></span><span class="ls0">4.21 <span class="_ _9"></span>to <span class="_ _9"></span>make <span class="_ _3"></span>it <span class="_ _9"></span>a <span class="_ _9"></span>ﬁlter: <span class="_ _3"></span>read <span class="_ _3"></span>from <span class="_ _9"></span>the <span class="_ _3"></span>standar<span class="ls1135">di<span class="_ _8"></span><span class="ls0">nput <span class="_ _9"></span>and</span></span></span></span></span></div><div class="t m0 xe1 h5f y40e5 ff19 fs2d fc0 sc0 ls0 ws0">write <span class="_ _23"> </span>to <span class="_ _23"> </span>the <span class="_ _42"> </span>standar<span class="ls1136">do<span class="_ _43"></span><span class="ls0">utput, <span class="_ _23"> </span>but <span class="_ _42"> </span>use <span class="_ _23"> </span>the <span class="_ _23"> </span>asynchronous <span class="_ _23"> </span>I/O <span class="_ _23"> </span>interfaces.<span class="_ _5a"> </span>What <span class="_ _42"> </span>must <span class="_ _23"> </span>you</span></span></div><div class="t m0 xe1 h5f y40e6 ff19 fs2d fc0 sc0 ls0 ws0">change <span class="_ _42"> </span>to <span class="_ _42"> </span>make <span class="_ _42"> </span>it <span class="_ _42"> </span>work <span class="_ _42"> </span>properly? <span class="_ _35"> </span>Keep<span class="_ _35"> </span>in <span class="_ _42"> </span>mind <span class="_ _42"> </span>that <span class="_ _42"> </span>you <span class="_ _42"> </span>should <span class="_ _42"> </span>get <span class="_ _53"> </span>the <span class="_ _42"> </span>same <span class="_ _42"> </span>results</div><div class="t m0 xe1 h5f y40e7 ff19 fs2d fc0 sc0 ls0 ws0">whether the standar<span class="ls110">do<span class="_ _d"></span><span class="ls0">utput is attached to a terminal, a pipe, or a regular ﬁle.</span></span></div><div class="t m0 x32 h57 y40e8 ff18 fs2d fc0 sc0 ls0 ws0">14.9<span class="_ _288"> </span><span class="ff19">Recall <span class="_ _3"></span>Figur<span class="ls1137">e1<span class="_ _4f"></span><span class="ls0">4.23. <span class="_ _66"> </span>Determine<span class="_ _66"> </span>the <span class="_ _3"></span>break-even point <span class="_ _3"></span>on <span class="_ _2"></span>your <span class="_ _3"></span>system <span class="_ _2"></span>wher<span class="ls1138">eu<span class="_ _d"></span><span class="ls0">sing<span class="_ _66"> </span><span class="ff1a">writev</span></span></span></span></span></span></div><div class="t m0 xe1 h57 y40e9 ff19 fs2d fc0 sc0 ls0 ws0">is faster than copying the data yourself and using a single<span class="_"> </span><span class="ff1a">write</span>.</div><div class="t m0 x32 h5f y40ea ff18 fs2d fc0 sc0 ls0 ws0">14.10<span class="_ _48"> </span><span class="ff19">Run <span class="_ _3"></span>the <span class="_ _2"></span>program <span class="_ _2"></span>in <span class="_ _3"></span>Figur<span class="ls1139">e1<span class="_ _4f"></span><span class="ls0">4.27 <span class="_ _3"></span>to <span class="_ _2"></span>copy <span class="_ _3"></span>a <span class="_ _2"></span>ﬁle <span class="_ _3"></span>and <span class="_ _3"></span>determine <span class="_ _2"></span>whether <span class="_ _3"></span>the <span class="_ _2"></span>last-access <span class="_ _3"></span>time</span></span></span></div><div class="t m0 xe1 h5f y40eb ff19 fs2d fc0 sc0 ls0 ws0">for the input ﬁle is updated.</div><div class="t m0 x32 h57 y40ec ff18 fs2d fc0 sc0 ls0 ws0">14.1<span class="_ _0"></span>1<span class="_ _60"> </span><span class="ff19">In <span class="_ _23"> </span>the <span class="_ _23"> </span>program <span class="_ _23"> </span>from <span class="_ _23"> </span>Figur<span class="ls113a">e1<span class="_ _43"></span><span class="ls0">4.27,<span class="_ _35"> </span><span class="ff1a">close<span class="_ _45"> </span></span>the <span class="_ _23"> </span>input <span class="_ _23"> </span>ﬁle <span class="_ _23"> </span>after <span class="_ _23"> </span>calling<span class="_ _35"> </span><span class="ff1a">mmap<span class="_ _45"> </span></span>to <span class="_ _23"> </span>verify <span class="_ _23"> </span>that</span></span></span></div><div class="t m0 xe1 h5f y40ed ff19 fs2d fc0 sc0 ls0 ws0">closing the descriptor does not invalidate the memory-mapped I/O.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
