<div id="pf280" class="pf w4 h1f" data-page-no="280"><div class="pc pc280 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg280.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">606<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _2"></span>address <span class="_ _3"></span>we <span class="_ _2"></span>specify <span class="_ _3"></span>with<span class="_ _47"> </span><span class="ff1a">connect<span class="_ _47"> </span></span>is <span class="_ _3"></span>the <span class="_ _3"></span>address <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>server <span class="_ _3"></span>with <span class="_ _3"></span>which <span class="_ _2"></span>we <span class="_ _3"></span>wish</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _53"> </span>communicate.<span class="_ _65"> </span>If<span class="_ _4b"> </span><span class="ff1b">sockfd<span class="_ _4b"> </span></span>is <span class="_ _e"> </span>not <span class="_ _53"> </span>bound <span class="_ _e"> </span>to <span class="_ _e"> </span>an <span class="_ _53"> </span>address,<span class="_ _4b"> </span><span class="ff1a">connect<span class="_ _4b"> </span></span>will <span class="_ _53"> </span>bind <span class="_ _e"> </span>a <span class="_ _53"> </span>default</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">address for the caller<span class="_ _6"></span>.</div><div class="t m0 x3f h2a y132 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_"> </span>we <span class="_"> </span>try <span class="_"> </span>to <span class="_ _e"> </span>connect <span class="_"> </span>to <span class="_"> </span>a <span class="_"> </span>server<span class="_ _6"></span><span class="ls1342">,t<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>connect <span class="_"> </span>request <span class="_"> </span>might <span class="_ _e"> </span>fail <span class="_"> </span>for <span class="_"> </span>several</span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">asons. <span class="_ _46"> </span>For<span class="_ _59"> </span><span class="ls1343">ac<span class="_ _4a"></span><span class="ls0">onnect <span class="_"> </span>request <span class="_"> </span>to <span class="_"> </span>succeed, <span class="_"> </span>the <span class="_"> </span>machine <span class="_ _e"> </span>to <span class="_"> </span>which <span class="_"> </span>we <span class="_"> </span>ar<span class="ls1344">et<span class="_ _5b"></span><span class="ls0">rying <span class="_"> </span>to</span></span></span></span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">connect must <span class="_ _2"></span>be up <span class="_ _2"></span>and <span class="_ _2"></span>running, the server <span class="_ _2"></span>must <span class="_ _2"></span>be bound <span class="_ _2"></span>to the <span class="_ _2"></span>address we <span class="_ _2"></span>ar<span class="ls64f">et<span class="_ _4f"></span><span class="ls0">rying</span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _9"></span>contact, <span class="_ _9"></span>and <span class="_ _23"></span>ther<span class="_ _0"></span><span class="ls1345">em<span class="_ _b"></span><span class="ls0">ust <span class="_ _9"></span>be <span class="_ _9"></span>room <span class="_ _9"></span>in <span class="_ _9"></span>the <span class="_ _23"></span>server<span class="_ _3"></span>’s <span class="_ _9"></span>pending <span class="_ _23"></span>connect <span class="_ _9"></span>queue <span class="_ _9"></span>(we’ll <span class="_ _9"></span>learn</span></span></div><div class="t m0 x32 h26 y136 ff19 fsf fc0 sc0 ls0 ws0">mor<span class="ls1346">ea<span class="_ _55"></span><span class="ls0">bout <span class="_ _53"> </span>this <span class="_ _e"> </span>shortly).<span class="_ _65"> </span>Thus, <span class="_ _e"> </span>applications <span class="_ _53"> </span>must <span class="_ _e"> </span>be <span class="_ _53"> </span>able <span class="_ _e"> </span>to <span class="_ _53"> </span>handle<span class="_ _4b"> </span><span class="ff1a">connect<span class="_ _4b"> </span></span>error</span></span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turns that might be caused by transient conditions.</span></div><div class="t m0 x35 h27 y4890 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h26 y254 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="lsd9b">e1<span class="_ _4f"></span><span class="ls0">6.10 shows <span class="_ _2"></span>one way <span class="_ _2"></span>to handle <span class="_ _2"></span>transient<span class="_"> </span><span class="ff1a">connect<span class="_ _66"> </span></span>errors. <span class="_"> </span>These<span class="_ _66"> </span>errors ar<span class="ls1347">el<span class="_ _4f"></span><span class="ls0">ikely</span></span></span></span></div><div class="t m0 x32 h2a y255 ff19 fsf fc0 sc0 ls0 ws0">with a server that is running on a heavily loaded system.</div><div class="t m0 x32 h4e y4891 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4892 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y4893 ff1a fs28 fc0 sc0 ls0 ws0">#define MAXSLEEP 128</div><div class="t m0 x32 h4e y4894 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4895 ff1a fs28 fc0 sc0 ls0 ws0">connect_retry(int sockfd, const struct sockaddr *addr, socklen_t alen)</div><div class="t m0 x32 h4e y4896 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4897 ff1a fs28 fc0 sc0 ls0 ws0">int numsec;</div><div class="t m0 x8a h4e y4898 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x214 h4e y4899 ff1a fs28 fc0 sc0 ls1b6 ws0">*T<span class="_ _1d"></span><span class="ls0">ry to connect with exponential backoff.</span></div><div class="t m0 x214 h4e y489a ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x8a h4e y489b ff1a fs28 fc0 sc0 ls0 ws0">for (numsec = 1; numsec &lt;= MAXSLEEP; numsec &lt;&lt;= 1) {</div><div class="t m0 x9d h4e y489c ff1a fs28 fc0 sc0 ls0 ws0">if (connect(sockfd, addr, alen) == 0) {</div><div class="t m0 x1f h4e y489d ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 xb1 h4e y489e ff1a fs28 fc0 sc0 ls1b6 ws0">*C<span class="_ _1d"></span><span class="ls0">onnection accepted.</span></div><div class="t m0 xb1 h4e y489f ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x1f h4e y48a0 ff1a fs28 fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x9d h4e y48a1 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y48a2 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x175 h4e y48a3 ff1a fs28 fc0 sc0 ls1b6 ws0">*D<span class="_ _1d"></span><span class="ls0">elay before trying again.</span></div><div class="t m0 x175 h4e y48a4 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x9d h4e y48a5 ff1a fs28 fc0 sc0 ls0 ws0">if (numsec &lt;= MAXSLEEP/2)</div><div class="t m0 x1f h4e y48a6 ff1a fs28 fc0 sc0 ls0 ws0">sleep(numsec);</div><div class="t m0 x8a h4e y48a7 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y48a8 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x32 h4e y48a9 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x131 h2e y48aa ff18 fs11 fc0 sc0 ls0 ws0">Figure 16.10<span class="_ _5a"> </span><span class="ff19">Connect with retry</span></div><div class="t m0 x32 h60 y48ab ff19 fs2c fc0 sc0 ls0 ws0">This <span class="_ _42"> </span>function <span class="_ _42"> </span>shows <span class="_ _42"> </span>what <span class="_ _53"> </span>is <span class="_ _42"> </span>known <span class="_ _42"> </span>as <span class="_ _42"> </span>an<span class="_ _44"> </span><span class="ff1b">exponential <span class="_ _53"> </span>backoff<span class="_ _44"> </span></span>algorithm. <span class="_ _44"> </span>If<span class="_ _35"> </span>the <span class="_ _53"> </span>call <span class="_ _42"> </span>to</div><div class="t m0 x32 h54 y48ac ff1a fs2c fc0 sc0 ls0 ws0">connect<span class="_ _66"> </span><span class="ff19">fails, <span class="_ _2"></span>the process <span class="_ _2"></span>goes to <span class="_ _2"></span>sleep <span class="_ _2"></span>for <span class="_ _2"></span>a short <span class="_ _2"></span>time <span class="_ _2"></span>and <span class="_ _2"></span>then <span class="_ _2"></span>tries again, <span class="_ _2"></span>increasing</span></div><div class="t m0 x32 h55 y48ad ff19 fs2c fc0 sc0 ls0 ws0">the delay each time through the loop, up to a maximum delay of about 2 minutes.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
