<div id="pf1e2" class="pf w4 h1f" data-page-no="1e2"><div class="pc pc1e2 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1e2.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">448<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y19f8 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_key_delete(pthread_key_t<span class="_"> </span><span class="ff1b">key</span>);</div><div class="t m0 x78 h5f y19f9 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h4d y3297 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _45"> </span>that <span class="_ _35"> </span>calling<span class="_ _51"> </span><span class="ff1a">pthread_key_delete<span class="_"> </span></span>will <span class="_ _35"> </span>not <span class="_ _45"> </span>invoke <span class="_ _35"> </span>the <span class="_ _45"> </span>destructor <span class="_ _35"> </span>function</div><div class="t m0 x32 h49 y3298 ff19 fs26 fc0 sc0 ls0 ws0">associated <span class="_ _9"></span>with <span class="_ _23"></span>the <span class="_ _9"></span>key<span class="_ _6"></span><span class="lsef9">.T<span class="_ _64"></span><span class="lsefa">of<span class="_ _b"></span><span class="lscc">re<span class="lsefa">ea<span class="_ _b"></span><span class="ls0">ny <span class="_ _23"></span>memory <span class="_ _9"></span>associated <span class="_ _9"></span>with <span class="_ _23"></span>the <span class="_ _9"></span>key’s <span class="_ _23"></span>thread-speciﬁc</span></span></span></span></span></div><div class="t m0 x32 h49 y37d0 ff19 fs26 fc0 sc0 ls0 ws0">data values, we need to take additional steps in the application.</div><div class="t m0 x3f h49 y37d1 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _66"> </span>n<span class="_ _23"></span><span class="ls0">eed <span class="_ _9"></span>to <span class="_ _9"></span>ensur<span class="lsefb">et<span class="_ _b"></span><span class="ls0">hat <span class="_ _9"></span>a <span class="_ _9"></span>key <span class="_ _23"></span>we <span class="_ _9"></span>allocate <span class="_ _23"></span>doesn’t <span class="_ _9"></span>change <span class="_ _9"></span>because <span class="_ _23"></span>of <span class="_ _9"></span>a <span class="_ _23"></span>race <span class="_ _9"></span>during</span></span></span></div><div class="t m0 x32 h49 y37d2 ff19 fs26 fc0 sc0 ls0 ws0">initialization. <span class="_ _60"> </span>Code<span class="_ _50"> </span>like <span class="_ _46"> </span>the <span class="_ _46"> </span>following <span class="_ _61"> </span>can <span class="_ _46"> </span>result <span class="_ _46"> </span>in <span class="_ _46"> </span>two <span class="_ _46"> </span>threads <span class="_ _46"> </span>both <span class="_ _46"> </span>calling</div><div class="t m0 x32 h4d y37d3 ff1a fs26 fc0 sc0 ls0 ws0">pthread_key_create<span class="ff19">:</span></div><div class="t m0 x3f h4e y37d4 ff1a fs28 fc0 sc0 ls0 ws0">void destructor(void *);</div><div class="t m0 x3f h4e y37d5 ff1a fs28 fc0 sc0 ls0 ws0">pthread_key_t key;</div><div class="t m0 x3f h4e y37d6 ff1a fs28 fc0 sc0 ls0 ws0">int init_done = 0;</div><div class="t m0 x3f h4e y37d7 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x3f h4e y37d8 ff1a fs28 fc0 sc0 ls0 ws0">threadfunc(void *arg)</div><div class="t m0 x3f h4e y37d9 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x21b h4e y37da ff1a fs28 fc0 sc0 ls0 ws0">if (!init_done) {</div><div class="t m0 x21c h4e y37db ff1a fs28 fc0 sc0 ls0 ws0">init_done = 1;</div><div class="t m0 x21c h4e y37dc ff1a fs28 fc0 sc0 ls0 ws0">err = pthread_key_create(&amp;key, destructor);</div><div class="t m0 x21b h4e y37dd ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x21b h4e y37de ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 x21b h4e y37df ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 x21b h4e y37e0 ff1a fs28 fc0 sc0 ls0 ws0">.</div><div class="t m0 x3f h4e y37e1 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h49 y37e2 ff19 fs26 fc0 sc0 ls0 ws0">Depending <span class="_"> </span>on <span class="_ _e"> </span>how <span class="_"> </span>the <span class="_ _e"> </span>system <span class="_"> </span>schedules <span class="_ _e"> </span>threads, <span class="_ _e"> </span>some <span class="_"> </span>thr<span class="_ _0"></span>eads <span class="_ _e"> </span>might <span class="_"> </span>see <span class="_ _e"> </span>one <span class="_"> </span>key</div><div class="t m0 x32 h49 y37e3 ff19 fs26 fc0 sc0 ls0 ws0">value, <span class="_ _3"></span>whereas <span class="_ _3"></span>other <span class="_ _9"></span>threads <span class="_ _3"></span>might <span class="_ _9"></span>see <span class="_ _9"></span>a <span class="_ _3"></span>different <span class="_ _3"></span>value.<span class="_ _16"> </span>The <span class="_ _9"></span>way <span class="_ _9"></span>to <span class="_ _9"></span>solve <span class="_ _3"></span>this <span class="_ _9"></span>race <span class="_ _9"></span>is</div><div class="t m0 x32 h4d y37e4 ff19 fs26 fc0 sc0 ls0 ws0">to use<span class="_"> </span><span class="ff1a">pthread_once</span>.</div><div class="t m0 x3f h4e y37e5 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h4e y37e6 ff1a fs28 fc0 sc0 ls0 ws0">pthread_once_t<span class="_"> </span><span class="ff1b">initﬂag<span class="_ _61"> </span></span><span class="ls1b6">=P<span class="_ _5b"></span><span class="ls0">THREAD_ONCE_INIT;</span></span></div><div class="t m0 x3f h4e y37e7 ff1a fs28 fc0 sc0 ls0 ws0">int pthread_once(pthread_once_t *<span class="ff1b">initﬂag</span><span class="ls1b6">,v<span class="_ _1d"></span><span class="ls0">oid (*<span class="ff1b">initfn</span>)(void));</span></span></div><div class="t m0 x78 h7c y37e8 ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h60 y37e9 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _51"> </span><span class="ff1b">initﬂag<span class="_ _51"> </span></span>must <span class="_ _45"> </span>be <span class="_ _35"> </span>a <span class="_ _35"> </span>nonlocal <span class="_ _35"> </span>variable <span class="_ _45"> </span>(i.e., <span class="_ _35"> </span>global <span class="_ _35"> </span>or <span class="_ _35"> </span>static) <span class="_ _35"> </span>and <span class="_ _45"> </span>initialized <span class="_ _35"> </span>to</div><div class="t m0 x32 h54 y37ea ff1a fs2c fc0 sc0 ls0 ws0">PTHREAD_ONCE_INIT<span class="ff19">.</span></div><div class="t m0 x3f h54 y37eb ff19 fs2c fc0 sc0 ls0 ws0">If <span class="_ _42"> </span>each <span class="_ _53"> </span>thread <span class="_ _42"> </span>calls<span class="_ _44"> </span><span class="ff1a">pthread_once</span><span class="lsefc">,t<span class="_ _c"></span><span class="ls0">he <span class="_ _53"> </span>system <span class="_ _53"> </span>guarantees <span class="_ _42"> </span>that <span class="_ _53"> </span>the <span class="_ _42"> </span>initialization</span></span></div><div class="t m0 x32 h54 y37ec ff19 fs2c fc0 sc0 ls150 ws0">ro<span class="ls0">utine,<span class="_ _45"> </span><span class="ff1b">initfn</span><span class="lsefd">,w<span class="_ _b"></span><span class="ls0">ill <span class="_ _9"></span>be <span class="_ _3"></span>called <span class="_ _3"></span>only <span class="_ _3"></span>once, <span class="_ _9"></span>on <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _3"></span>call <span class="_ _9"></span>to<span class="_ _47"> </span><span class="ff1a">pthread_once</span><span class="lsefe">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>proper</span></span></span></span></span></div><div class="t m0 x32 h55 y37ed ff19 fs2c fc0 sc0 ls0 ws0">way to create a key without a race is as follows:</div><div class="t m0 x3f h5d y37ee ff1a fs2f fc0 sc0 ls0 ws0">void destructor(void *);</div><div class="t m0 x3f h5d y37ef ff1a fs2f fc0 sc0 ls0 ws0">pthread_key_t key;</div><div class="t m0 x3f h5d y37f0 ff1a fs2f fc0 sc0 ls0 ws0">pthread_once_t init_done = PTHREAD_ONCE_INIT;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
