<div id="pf1aa" class="pf w4 h1f" data-page-no="1aa"><div class="pc pc1aa w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1aa.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">392<span class="_ _1b"> </span><span class="ff19">Threads <span class="_ _24b"> </span>Chapter<span class="_ _78"> </span><span class="ls7ed">11</span></span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">err = pthread_create(&amp;tid2, NULL, thr_fn2, NULL);</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t create thread 2&quot;);</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">sleep(1);</div><div class="t m0 x8a h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">printfoo(&quot;parent:\n&quot;, fp);</div><div class="t m0 x8a h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9f h5e y31f8 ff18 fs10 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.4<span class="_ _d9"> </span><span class="ff19">Incorrect use of<span class="_"> </span><span class="ff1a">pthread_exit<span class="_ _53"> </span></span>argument</span></div><div class="t m0 x32 h49 y31f9 ff19 fs26 fc0 sc0 ls0 ws0">When we run this pr<span class="_ _0"></span>ogram on Linux, we get</div><div class="t m0 x3f h4e y31fa ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h4e y31fb ff1a fs28 fc0 sc0 ls0 ws0">thread 1:</div><div class="t m0 xf4 h4e y31fc ff1a fs28 fc0 sc0 ls0 ws0">structure at 0x7f2c83682ed0</div><div class="t m0 xf4 h4e y31fd ff1a fs28 fc0 sc0 ls0 ws0">foo.a = 1</div><div class="t m0 xf4 h4e y31fe ff1a fs28 fc0 sc0 ls0 ws0">foo.b = 2</div><div class="t m0 xf4 h4e y31ff ff1a fs28 fc0 sc0 ls0 ws0">foo.c = 3</div><div class="t m0 xf4 h4e y3200 ff1a fs28 fc0 sc0 ls0 ws0">foo.d = 4</div><div class="t m0 x3f h4e y3201 ff1a fs28 fc0 sc0 ls0 ws0">parent starting second thread</div><div class="t m0 x3f h4e y3202 ff1a fs28 fc0 sc0 ls0 ws0">thread 2: ID is 139829159933696</div><div class="t m0 x3f h4e y3203 ff1a fs28 fc0 sc0 ls0 ws0">parent:</div><div class="t m0 xf4 h4e y3204 ff1a fs28 fc0 sc0 ls0 ws0">structure at 0x7f2c83682ed0</div><div class="t m0 xf4 h4e y3205 ff1a fs28 fc0 sc0 ls0 ws0">foo.a = -2090321472</div><div class="t m0 xf4 h4e y3206 ff1a fs28 fc0 sc0 ls0 ws0">foo.b = 32556</div><div class="t m0 xf4 h4e y3207 ff1a fs28 fc0 sc0 ls0 ws0">foo.c = 1</div><div class="t m0 xf4 h4e y3208 ff1a fs28 fc0 sc0 ls0 ws0">foo.d = 0</div><div class="t m0 x32 h49 y3209 ff19 fs26 fc0 sc0 ls0 ws0">Of <span class="_ _23"> </span>course, <span class="_ _23"> </span>the <span class="_ _42"> </span>results <span class="_ _9"></span>vary<span class="_ _6"></span><span class="lsdae">,d<span class="_ _43"></span><span class="ls0">epending <span class="_ _42"> </span>on <span class="_ _23"></span>the <span class="_ _23"> </span>memory <span class="_ _23"> </span>architecture, <span class="_ _23"></span>the <span class="_ _23"> </span>compiler<span class="_ _1"></span><span class="lsdae">,a<span class="_ _43"></span><span class="ls0">nd</span></span></span></span></div><div class="t m0 x32 h49 y320a ff19 fs26 fc0 sc0 ls0 ws0">the implementation of the threads library<span class="_ _4"></span><span class="ls199">.T<span class="_ _4a"></span><span class="ls0">he results on Solaris ar<span class="_ _1"></span><span class="lsd3">es<span class="_ _5"></span><span class="ls0">imilar:</span></span></span></span></div><div class="t m0 x3f h4e y320b ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h4e y320c ff1a fs28 fc0 sc0 ls0 ws0">thread 1:</div><div class="t m0 xf4 h4e y320d ff1a fs28 fc0 sc0 ls0 ws0">structure at 0xffffffff7f0fbf30</div><div class="t m0 xf4 h4e y320e ff1a fs28 fc0 sc0 ls0 ws0">foo.a = 1</div><div class="t m0 xf4 h4e y320f ff1a fs28 fc0 sc0 ls0 ws0">foo.b = 2</div><div class="t m0 xf4 h4e y3210 ff1a fs28 fc0 sc0 ls0 ws0">foo.c = 3</div><div class="t m0 xf4 h4e y3211 ff1a fs28 fc0 sc0 ls0 ws0">foo.d = 4</div><div class="t m0 x3f h4e y3212 ff1a fs28 fc0 sc0 ls0 ws0">parent starting second thread</div><div class="t m0 x3f h4e y3213 ff1a fs28 fc0 sc0 ls0 ws0">thread 2: ID is 3</div><div class="t m0 x3f h4e y3214 ff1a fs28 fc0 sc0 ls0 ws0">parent:</div><div class="t m0 xf4 h4e y3215 ff1a fs28 fc0 sc0 ls0 ws0">structure at 0xffffffff7f0fbf30</div><div class="t m0 xf4 h4e y3216 ff1a fs28 fc0 sc0 ls0 ws0">foo.a = -1</div><div class="t m0 xf4 h4e y3217 ff1a fs28 fc0 sc0 ls0 ws0">foo.b = 2136969048</div><div class="t m0 xf4 h4e y3218 ff1a fs28 fc0 sc0 ls0 ws0">foo.c = -1</div><div class="t m0 xf4 h4e y3219 ff1a fs28 fc0 sc0 ls0 ws0">foo.d = 2138049024</div><div class="t m0 x32 h4a y321a ff19 fs26 fc0 sc0 ls0 ws0">As <span class="_ _3"></span>we <span class="_ _9"></span>can <span class="_ _3"></span>see, <span class="_ _9"></span>the <span class="_ _3"></span>contents <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>structur<span class="_ _0"></span><span class="lsdaf">e(<span class="_ _b"></span><span class="ls0">allocated <span class="_ _9"></span>on <span class="_ _3"></span>the <span class="_ _9"></span>stack <span class="_ _3"></span>of <span class="_ _9"></span>thread<span class="_ _47"> </span><span class="ff1b">tid1</span><span class="ls60d">)h<span class="_ _8"></span><span class="ls0">ave</span></span></span></span></div><div class="t m0 x32 h49 y321b ff19 fs26 fc0 sc0 ls0 ws0">changed by the time <span class="_ _2"></span>the main thread can access the <span class="_ _2"></span>structur<span class="_ _0"></span>e. <span class="_"> </span>Note<span class="_"> </span>how the <span class="_ _2"></span>stack of the</div><div class="t m0 x32 h4a y321c ff19 fs26 fc0 sc0 ls0 ws0">second <span class="_ _9"></span>thread <span class="_ _3"></span>(<span class="ff1b">tid2</span><span class="ls3a7">)h<span class="_ _b"></span><span class="ls0">as <span class="_ _9"></span>overwritten <span class="_ _9"></span>the <span class="_ _9"></span>ﬁrst <span class="_ _9"></span>thread’s <span class="_ _3"></span>stack.<span class="_ _5a"> </span><span class="ls164">To <span class="_ _66"> </span>s<span class="_ _9"></span></span>olve <span class="_ _9"></span>this <span class="_ _9"></span>problem, <span class="_ _3"></span>we</span></span></div><div class="t m0 x32 h4d y321d ff19 fs26 fc0 sc0 ls0 ws0">can either use a global structur<span class="_ _0"></span>e<span class="_"> </span>or<span class="_"> </span>allocate the structur<span class="lsd3">eu<span class="_ _4f"></span><span class="ls0">sing<span class="_"> </span><span class="ff1a">malloc</span>.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
