<div id="pf30" class="pf w4 h1f" data-page-no="30"><div class="pc pc30 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg30.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">14<span class="_ _1b"> </span><span class="ff19">UNIX <span class="_"> </span>System <span class="_"> </span>Overview<span class="_ _85"> </span>Chapter <span class="_"> </span>1</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Threads and Thread IDs</div><div class="t m0 x32 h2a y404 ff19 fsf fc0 sc0 ls0 ws0">Usually<span class="_ _4"></span><span class="ls174">,ap<span class="_ _55"></span><span class="ls45">ro<span class="ls0">cess <span class="_"> </span>has <span class="_"> </span>only <span class="_ _e"> </span>one <span class="_"> </span>thr<span class="_ _0"></span>ead <span class="_"> </span>of <span class="_ _e"> </span>control <span class="_ _a"></span>— <span class="_ _a"></span>one<span class="_ _59"> </span>set <span class="_"> </span>of <span class="_"> </span>machine <span class="_ _e"> </span>instructions</span></span></span></div><div class="t m0 x32 h2a y405 ff19 fsf fc0 sc0 ls0 ws0">executing <span class="_ _9"></span>at <span class="_ _9"></span>a <span class="_ _9"></span>time.<span class="_ _51"> </span>Some <span class="_ _9"></span>problems <span class="_ _3"></span>ar<span class="ls175">ee<span class="_ _b"></span><span class="ls0">asier <span class="_ _9"></span>to <span class="_ _9"></span>solve <span class="_ _9"></span>when <span class="_ _23"></span>mor<span class="_ _0"></span><span class="ls175">et<span class="_ _b"></span><span class="ls0">han <span class="_ _9"></span>one <span class="_ _9"></span>thread <span class="_ _9"></span>of</span></span></span></span></div><div class="t m0 x32 h2a y1fb ff19 fsf fc0 sc0 ls0 ws0">control <span class="_ _2"></span>can <span class="_ _3"></span>operate <span class="_ _3"></span>on <span class="_ _3"></span>differ<span class="_ _0"></span>ent <span class="_ _2"></span>parts <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>problem. <span class="_ _47"> </span>Additionally<span class="_ _4"></span><span class="ls176">,m<span class="_ _4f"></span><span class="ls0">ultiple <span class="_ _3"></span>threads <span class="_ _2"></span>of</span></span></div><div class="t m0 x32 h2a y1fc ff19 fsf fc0 sc0 ls0 ws0">control can exploit the parallelism possible on multipr<span class="_ _0"></span>ocessor systems.</div><div class="t m0 x3f h2a y1fd ff19 fsf fc0 sc0 ls0 ws0">All <span class="_ _9"></span>threads <span class="_ _9"></span>within <span class="_ _23"></span>a <span class="_ _9"></span>process <span class="_ _9"></span>shar<span class="ls177">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>same <span class="_ _9"></span>address <span class="_ _9"></span>space, <span class="_ _23"></span>ﬁle <span class="_ _9"></span>descriptors, <span class="_ _9"></span>stacks,</span></span></div><div class="t m0 x32 h2a y406 ff19 fsf fc0 sc0 ls0 ws0">and <span class="_ _53"> </span>process-related <span class="_ _42"> </span>attributes.<span class="_ _65"> </span>Each <span class="_ _e"> </span>thread <span class="_ _53"> </span>executes <span class="_ _53"> </span>on <span class="_ _e"> </span>its <span class="_ _53"> </span>own <span class="_ _e"> </span>stack, <span class="_ _53"> </span>although <span class="_ _e"> </span>any</div><div class="t m0 x32 h2a y407 ff19 fsf fc0 sc0 ls0 ws0">thread <span class="_ _42"> </span>can <span class="_ _53"> </span>access <span class="_ _42"> </span>the <span class="_ _53"> </span>stacks <span class="_ _53"> </span>of <span class="_ _53"> </span>other <span class="_ _53"> </span>threads <span class="_ _42"> </span>in <span class="_ _53"> </span>the <span class="_ _53"> </span>same <span class="_ _42"> </span>process. <span class="_ _44"> </span>Because<span class="_ _4b"> </span>they <span class="_ _42"> </span>can</div><div class="t m0 x32 h2a y408 ff19 fsf fc0 sc0 ls0 ws0">access <span class="_ _3"></span>the <span class="_ _3"></span>same <span class="_ _9"></span>memory<span class="_ _4"></span><span class="ls178">,t<span class="_ _8"></span><span class="ls0">he <span class="_ _9"></span>threads <span class="_ _2"></span>need <span class="_ _9"></span>to <span class="_ _3"></span>synchronize <span class="_ _3"></span>access <span class="_ _3"></span>to <span class="_ _9"></span>shared <span class="_ _2"></span>data <span class="_ _9"></span>among</span></span></div><div class="t m0 x32 h2a y409 ff19 fsf fc0 sc0 ls0 ws0">themselves to avoid inconsistencies.</div><div class="t m0 x3f h2a y40a ff19 fsf fc0 sc0 ls0 ws0">Like <span class="_ _23"> </span>processes, <span class="_ _23"></span>threads <span class="_ _23"></span>ar<span class="ls179">ei<span class="_ _43"></span><span class="ls0">dentiﬁed <span class="_ _23"></span>by <span class="_ _23"></span>IDs.<span class="_ _51"> </span>Thread <span class="_ _23"></span>IDs, <span class="_ _23"> </span>however<span class="_ _1"></span><span class="ls17a">,a<span class="_ _43"></span><span class="ls45">re <span class="_ _42"> </span>l<span class="_ _2"></span><span class="ls0">ocal <span class="_ _23"> </span>to <span class="_ _42"> </span>a</span></span></span></span></span></div><div class="t m0 x32 h2a y40b ff19 fsf fc0 sc0 ls0 ws0">process. <span class="_ _35"> </span>A<span class="_ _4b"> </span>thread <span class="_ _42"> </span>ID <span class="_ _42"> </span>from <span class="_ _42"> </span>one <span class="_ _53"> </span>process <span class="_ _42"> </span>has <span class="_ _53"> </span>no <span class="_ _53"> </span>meaning <span class="_ _42"> </span>in <span class="_ _53"> </span>another <span class="_ _53"> </span>process. <span class="_ _44"> </span>W<span class="_ _6"></span><span class="ls17b">eu<span class="_ _c"></span><span class="ls0">se</span></span></div><div class="t m0 x32 h2a y40c ff19 fsf fc0 sc0 ls0 ws0">thread IDs to r<span class="_ _0"></span>efer to speciﬁc thr<span class="_ _0"></span>eads as we manipulate the threads within a pr<span class="_ _0"></span>ocess.</div><div class="t m0 x3f h2a y204 ff19 fsf fc0 sc0 ls0 ws0">Functions <span class="_ _47"> </span>to <span class="_ _47"> </span>control <span class="_ _66"> </span>threads <span class="_ _47"> </span>parallel <span class="_ _47"> </span>those <span class="_ _47"> </span>used <span class="_ _47"> </span>to <span class="_ _47"> </span>control <span class="_ _47"> </span>processes. <span class="_ _61"> </span>Because</div><div class="t m0 x32 h2a y205 ff19 fsf fc0 sc0 ls0 ws0">threads <span class="_ _3"></span>wer<span class="ls17c">ea<span class="_ _b"></span><span class="ls0">dded <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _9"></span>UNIX <span class="_ _3"></span>System <span class="_ _9"></span>long <span class="_ _3"></span>after <span class="_ _9"></span>the <span class="_ _9"></span>process <span class="_ _3"></span>model <span class="_ _3"></span>was <span class="_ _9"></span>established,</span></span></div><div class="t m0 x32 h2a y40d ff19 fsf fc0 sc0 ls0 ws0">however<span class="_ _6"></span><span class="ls17d">,t<span class="_ _8"></span><span class="ls0">he <span class="_ _9"></span>thread <span class="_ _2"></span>model <span class="_ _3"></span>and <span class="_ _3"></span>the <span class="_ _3"></span>process <span class="_ _3"></span>model <span class="_ _3"></span>have <span class="_ _3"></span>some <span class="_ _3"></span>complicated <span class="_ _9"></span>interactions,</span></span></div><div class="t m0 x32 h2a y40e ff19 fsf fc0 sc0 ls0 ws0">as we shall see in Chapter 12.</div><div class="t m0 x35 h53 y40f ff16 fs2b fc0 sc0 ls0 ws0">1.7 <span class="_ _68"> </span>Error <span class="_"> </span>Handling</div><div class="t m0 x32 h2a y410 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _23"></span>an <span class="_ _23"></span>error <span class="_ _23"></span>occurs <span class="_ _23"></span>in <span class="_ _23"></span>one <span class="_ _23"></span>of <span class="_ _23"></span>the <span class="_ _23"> </span>UNIX <span class="_ _23"> </span>System <span class="_ _23"> </span>functions, <span class="_ _23"> </span>a <span class="_ _23"> </span>negative <span class="_ _23"> </span>value <span class="_ _42"> </span>is <span class="_ _23"></span>often</div><div class="t m0 x32 h26 y411 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turned, <span class="_ _23"></span>and <span class="_ _9"></span>the <span class="_ _23"></span>integer<span class="_ _45"> </span><span class="ff1a">errno<span class="_ _35"> </span></span>is <span class="_ _9"></span>usually <span class="_ _9"></span>set <span class="_ _23"></span>to <span class="_ _9"></span>a <span class="_ _23"></span>value <span class="_ _9"></span>that <span class="_ _23"> </span>tells <span class="_ _23"></span>why<span class="_ _4"></span><span class="ls17e">.F<span class="_ _26"></span><span class="ls0">or <span class="_ _23"></span>example,</span></span></span></div><div class="t m0 x32 h26 y412 ff19 fsf fc0 sc0 ls0 ws0">the<span class="_ _35"> </span><span class="ff1a">open<span class="_ _45"> </span></span>function <span class="_ _23"> </span>returns <span class="_ _23"></span>either <span class="_ _23"> </span>a <span class="_ _23"> </span>non-negative <span class="_ _23"> </span>ﬁle <span class="_ _23"> </span>descriptor <span class="_ _23"> </span>if <span class="_ _23"> </span>all <span class="_ _23"> </span>is <span class="_ _23"> </span>OK <span class="_ _23"> </span>or<span class="_ _35"> </span><span class="ff20">−</span>1<span class="_ _35"> </span>if<span class="_ _35"> </span>an</div><div class="t m0 x32 h26 y413 ff19 fsf fc0 sc0 ls0 ws0">error <span class="_ _53"> </span>occurs.<span class="_ _65"> </span>An <span class="_ _53"> </span>error <span class="_ _53"> </span>from<span class="_ _4b"> </span><span class="ff1a">open<span class="_ _4b"> </span></span>has <span class="_ _53"> </span>about <span class="_ _e"> </span>15 <span class="_ _e"> </span>possible<span class="_ _4b"> </span><span class="ff1a">errno<span class="_ _4b"> </span></span>values, <span class="_ _53"> </span>such <span class="_ _e"> </span>as <span class="_ _e"> </span>ﬁle</div><div class="t m0 x32 h2a y414 ff19 fsf fc0 sc0 ls0 ws0">doesn’t <span class="_ _23"></span>exist, <span class="_ _23"></span>permission <span class="_ _23"></span>problem, <span class="_ _9"></span>and <span class="_ _23"> </span>so <span class="_ _23"> </span>on.<span class="_ _51"> </span>Some <span class="_ _23"> </span>functions <span class="_ _23"> </span>use <span class="_ _23"> </span>a <span class="_ _23"> </span>convention <span class="_ _23"> </span>other</div><div class="t m0 x32 h2a y415 ff19 fsf fc0 sc0 ls0 ws0">than returning a negative value.<span class="_ _46"> </span>For <span class="_ _2"></span>example, most functions <span class="_ _2"></span>that return a pointer to <span class="_ _2"></span>an</div><div class="t m0 x32 h2a y416 ff19 fsf fc0 sc0 ls0 ws0">object return a null pointer to indicate an err<span class="_ _0"></span>or<span class="_ _6"></span>.</div><div class="t m0 x3f h26 y417 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _23"> </span>ﬁle<span class="_ _35"> </span><span class="ff1a">&lt;errno.h&gt;<span class="_ _44"> </span></span>deﬁnes <span class="_ _23"> </span>the <span class="_ _23"> </span>symbol<span class="_ _44"> </span><span class="ff1a">errno<span class="_ _35"> </span></span>and <span class="_ _23"> </span>constants <span class="_ _42"> </span>for <span class="_ _23"> </span>each <span class="_ _42"> </span>value <span class="_ _23"> </span>that</div><div class="t m0 x32 h26 y418 ff1a fsf fc0 sc0 ls0 ws0">errno<span class="_ _47"> </span><span class="ff19">can <span class="_ _3"></span>assume.<span class="_ _16"> </span>Each <span class="_ _3"></span>of <span class="_ _3"></span>these <span class="_ _9"></span>constants <span class="_ _3"></span>begins <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _3"></span>character<span class="_ _45"> </span></span>E<span class="ff19 ls17f">.A<span class="_ _62"></span><span class="ls0">lso, <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst</span></span></div><div class="t m0 x32 h26 y419 ff19 fsf fc0 sc0 ls0 ws0">page <span class="_ _3"></span>of <span class="_ _9"></span>Section <span class="_ _3"></span>2 <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>UNIX <span class="_ _9"></span>system <span class="_ _3"></span>manuals, <span class="_ _9"></span>named<span class="_ _47"> </span><span class="ff1a">intro</span>(2), <span class="_ _3"></span>usually <span class="_ _9"></span>lists <span class="_ _3"></span>all <span class="_ _9"></span>these</div><div class="t m0 x32 h26 y41a ff19 fsf fc0 sc0 ls0 ws0">error constants.<span class="_ _61"> </span>For <span class="_ _3"></span>example, <span class="_ _2"></span>if<span class="_ _47"> </span><span class="ff1a">errno<span class="_ _66"> </span></span>is <span class="_ _2"></span>equal <span class="_ _3"></span>to <span class="_ _2"></span>the <span class="_ _2"></span>constant<span class="_ _47"> </span><span class="ff1a">EACCES</span><span class="ls180">,t<span class="_ _4f"></span><span class="ls0">his <span class="_ _2"></span>indicates <span class="_ _2"></span>a</span></span></div><div class="t m0 x32 h2a y41b ff19 fsf fc0 sc0 ls0 ws0">permission problem, such as insuf<span class="_ _0"></span>ﬁcient permission to open the r<span class="_ _0"></span>equested ﬁle.</div><div class="t m0 x76 h52 y41c ff19 fs2a fc0 sc0 ls0 ws0">On Linux, the error constants ar<span class="_ _0"></span><span class="lse9">el<span class="_ _84"></span><span class="ls0">isted in the<span class="_"> </span><span class="ff1a">errno</span>(3) manual page.</span></span></div><div class="t m0 x3f h26 y41d ff19 fsf fc0 sc0 ls0 ws0">POSIX <span class="_ _3"></span>and <span class="_ _9"></span>ISO <span class="_ _3"></span>C <span class="_ _9"></span>deﬁne<span class="_ _47"> </span><span class="ff1a">errno<span class="_ _45"> </span></span>as <span class="_ _3"></span>a <span class="_ _9"></span>symbol <span class="_ _3"></span>expanding <span class="_ _9"></span>into <span class="_ _3"></span>a <span class="_ _9"></span>modiﬁable <span class="_ _3"></span>lvalue <span class="_ _9"></span>of</div><div class="t m0 x32 h2a y41e ff19 fsf fc0 sc0 ls0 ws0">type <span class="_ _3"></span>integer<span class="_ _1"></span><span class="ls181">.T<span class="_ _62"></span><span class="ls0">his <span class="_ _9"></span>can <span class="_ _3"></span>be <span class="_ _3"></span>either <span class="_ _3"></span>an <span class="_ _3"></span>integer <span class="_ _9"></span>that <span class="_ _3"></span>contains <span class="_ _3"></span>the <span class="_ _3"></span>error <span class="_ _3"></span>number <span class="_ _3"></span>or <span class="_ _3"></span>a <span class="_ _9"></span>function</span></span></div><div class="t m0 x32 h2a y41f ff19 fsf fc0 sc0 ls0 ws0">that returns a pointer to the err<span class="_ _0"></span>or number<span class="_ _6"></span><span class="ls86">.T<span class="_ _4a"></span><span class="ls0">he historical deﬁnition is</span></span></div><div class="t m0 x3f h57 y420 ff1a fs2d fc0 sc0 ls0 ws0">extern int errno;</div><div class="t m0 x32 h2a y421 ff19 fsf fc0 sc0 ls0 ws0">But in an environment that supports threads, the process addr<span class="_ _1"></span>ess <span class="_ _2"></span>space is shared among</div><div class="t m0 x32 h26 y422 ff19 fsf fc0 sc0 ls0 ws0">multiple <span class="_ _42"> </span>thr<span class="_ _0"></span>eads, <span class="_ _42"> </span>and <span class="_ _23"> </span>each <span class="_ _42"> </span>thread <span class="_ _23"> </span>needs <span class="_ _42"> </span>its <span class="_ _42"> </span>own <span class="_ _42"> </span>local <span class="_ _42"> </span>copy <span class="_ _23"> </span>of<span class="_ _44"> </span><span class="ff1a">errno<span class="_ _35"> </span></span>to <span class="_ _42"> </span>prevent <span class="_ _23"> </span>one</div><div class="t m0 x32 h2a y423 ff19 fsf fc0 sc0 ls0 ws0">thread <span class="_ _66"> </span>from <span class="_ _47"> </span>interfering <span class="_ _47"> </span>with <span class="_ _45"> </span>another<span class="_ _6"></span><span class="ls182">.L<span class="_ _56"></span><span class="ls0">inux, <span class="_ _45"> </span>for <span class="_ _47"> </span>example, <span class="_ _47"> </span>supports <span class="_ _47"> </span>multithreaded</span></span></div><div class="t m0 x32 h26 y424 ff19 fsf fc0 sc0 ls0 ws0">access to<span class="_"> </span><span class="ff1a">errno<span class="_ _80"> </span></span>by deﬁning it as</div><a class="l" href="#pfb" data-dest-detail='[11,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.895149px;bottom:744.888916px;width:123.107498px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
