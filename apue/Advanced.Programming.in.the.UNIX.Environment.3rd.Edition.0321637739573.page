<div id="pf23d" class="pf w4 h1f" data-page-no="23d"><div class="pc pc23d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg23d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>15.2<span class="_ _2b5"> </span>Pipes<span class="_ _1b"> </span><span class="ff18">539</span></div><div class="t m0 x9d h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {<span class="_ _2b6"> </span>/* child */</span></div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">close(fd[1]); <span class="_ _d9"> </span>/*<span class="_"> </span>close write end */</div><div class="t m0 x9d h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">if (fd[0] != STDIN_FILENO) {</div><div class="t m0 x1f h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">if (dup2(fd[0], STDIN_FILENO) != STDIN_FILENO)</div><div class="t m0 x1ca h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;dup2 error to stdin&quot;);</div><div class="t m0 x1f h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">close(fd[0]); <span class="_ _d9"> </span>/*<span class="_"> </span>don’t need this after dup2 */</div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y350c ff1a fs2d fc0 sc0 ls0 ws0">/* get arguments for execl() */</div><div class="t m0 x9d h57 y350d ff1a fs2d fc0 sc0 ls0 ws0">if ((pager = getenv(&quot;PAGER&quot;)) == NULL)</div><div class="t m0 x1f h57 y31b6 ff1a fs2d fc0 sc0 ls0 ws0">pager = DEF_PAGER;</div><div class="t m0 x9d h57 y31b7 ff1a fs2d fc0 sc0 ls0 ws0">if ((argv0 = strrchr(pager, ’/’)) != NULL)</div><div class="t m0 x1f h57 y31b8 ff1a fs2d fc0 sc0 ls0 ws0">argv0++; <span class="_ _b7"> </span>/*<span class="_"> </span>step past rightmost slash */</div><div class="t m0 x9d h57 y31b9 ff1a fs2d fc0 sc0 ls0 ws0">else</div><div class="t m0 x1f h57 y31ba ff1a fs2d fc0 sc0 ls0 ws0">argv0 = pager;<span class="_ _d9"> </span>/* no slash in pager */</div><div class="t m0 x9d h57 y1314 ff1a fs2d fc0 sc0 ls0 ws0">if (execl(pager, argv0, (char *)0) &lt; 0)</div><div class="t m0 x1f h57 y1315 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;execl error for %s&quot;, pager);</div><div class="t m0 x8a h57 y351c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y351d ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y351e ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x123 h2d y4184 ff18 fs10 fc0 sc0 ls0 ws0">Figure 15.6<span class="_ _5a"> </span><span class="ff19">Copy ﬁle to pager program</span></div><div class="t m0 x3f h4d y4185 ff19 fs26 fc0 sc0 ls0 ws0">Befor<span class="ls1171">ec<span class="_ _c"></span><span class="ls0">alling<span class="_ _44"> </span><span class="ff1a">fork</span>,<span class="_ _44"> </span>we<span class="_ _35"> </span>c<span class="lscc">re<span class="_ _2"></span></span>ate <span class="_ _42"> </span>a <span class="_ _42"> </span>pipe.<span class="_ _54"> </span>After <span class="_ _42"> </span>the<span class="_ _44"> </span><span class="ff1a">fork</span><span class="ls1108">,t<span class="_ _c"></span><span class="ls0">he <span class="_ _42"> </span>parent <span class="_ _42"> </span>closes <span class="_ _42"> </span>its <span class="_ _42"> </span>read</span></span></span></span></div><div class="t m0 x32 h4d y4186 ff19 fs26 fc0 sc0 ls0 ws0">end, <span class="_ _9"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>child <span class="_ _23"></span>closes <span class="_ _9"></span>its <span class="_ _9"></span>write <span class="_ _9"></span>end.<span class="_ _5a"> </span>The <span class="_ _23"></span>child <span class="_ _9"></span>then <span class="_ _9"></span>calls<span class="_ _45"> </span><span class="ff1a">dup2<span class="_ _45"> </span></span>to <span class="_ _9"></span>have <span class="_ _9"></span>its <span class="_ _9"></span>standard</div><div class="t m0 x32 h49 y4187 ff19 fs26 fc0 sc0 ls0 ws0">input <span class="_ _23"></span>be <span class="_ _23"></span>the <span class="_ _23"></span>r<span class="_ _0"></span>ead <span class="_ _23"></span>end <span class="_ _23"></span>of <span class="_ _23"></span>the <span class="_ _23"></span>pipe.<span class="_ _5a"> </span>When <span class="_ _23"> </span>the <span class="_ _23"> </span>pager <span class="_ _23"> </span>program <span class="_ _23"></span>is <span class="_ _9"></span>executed, <span class="_ _23"> </span>its <span class="_ _23"> </span>standard</div><div class="t m0 x32 h49 y4188 ff19 fs26 fc0 sc0 ls0 ws0">input will be the read end of the pipe.</div><div class="t m0 x3f h4d y4189 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _3"></span>we <span class="_ _3"></span>duplicate <span class="_ _3"></span>one <span class="_ _3"></span>descriptor <span class="_ _3"></span>onto <span class="_ _3"></span>another <span class="_ _3"></span>(<span class="ff1a">fd[0]<span class="_ _47"> </span></span>onto <span class="_ _3"></span>standar<span class="lsdf4">di<span class="_ _8"></span><span class="ls0">nput <span class="_ _3"></span>in <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h49 y418a ff19 fs26 fc0 sc0 ls0 ws0">child), <span class="_ _2"></span>we <span class="_ _3"></span>have <span class="_ _3"></span>to <span class="_ _3"></span>be <span class="_ _2"></span>careful <span class="_ _3"></span>that <span class="_ _2"></span>the <span class="_ _3"></span>descriptor <span class="_ _3"></span>doesn’t <span class="_ _3"></span>already <span class="_ _2"></span>have <span class="_ _3"></span>the <span class="_ _2"></span>desired <span class="_ _2"></span>value.</div><div class="t m0 x32 h4d y418b ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _42"> </span>the <span class="_ _53"> </span>descriptor <span class="_ _53"> </span>already <span class="_ _42"> </span>had <span class="_ _53"> </span>the <span class="_ _53"> </span>desired <span class="_ _42"> </span>value <span class="_ _53"> </span>and <span class="_ _53"> </span>we <span class="_ _53"> </span>called<span class="_ _44"> </span><span class="ff1a">dup2<span class="_ _4b"> </span></span>and<span class="_ _44"> </span><span class="ff1a">close</span><span class="ls60a">,t<span class="_ _c"></span><span class="ls0">he</span></span></div><div class="t m0 x32 h4d y418c ff19 fs26 fc0 sc0 ls0 ws0">single <span class="_ _9"></span>copy <span class="_ _9"></span>of <span class="_ _23"></span>the <span class="_ _9"></span>descriptor <span class="_ _9"></span>would <span class="_ _9"></span>be <span class="_ _9"></span>closed.<span class="_ _51"> </span>(Recall <span class="_ _9"></span>the <span class="_ _9"></span>operation <span class="_ _9"></span>of<span class="_ _45"> </span><span class="ff1a">dup2<span class="_ _45"> </span></span>when <span class="_ _9"></span>its</div><div class="t m0 x32 h49 y418d ff19 fs26 fc0 sc0 ls0 ws0">two <span class="_ _3"></span>arguments <span class="_ _2"></span>ar<span class="ls1172">ee<span class="_ _8"></span><span class="ls0">qual, <span class="_ _3"></span>discussed <span class="_ _3"></span>in <span class="_ _3"></span>Section <span class="_ _3"></span>3.12.)<span class="_ _16"> </span>In <span class="_ _3"></span>this <span class="_ _3"></span>program, <span class="_ _2"></span>if <span class="_ _3"></span>standar<span class="ls198">di<span class="_ _8"></span><span class="ls0">nput</span></span></span></span></div><div class="t m0 x32 h4d y418e ff19 fs26 fc0 sc0 ls0 ws0">had <span class="_ _23"></span>not <span class="_ _9"></span>been <span class="_ _23"> </span>opened <span class="_ _23"></span>by <span class="_ _9"></span>the <span class="_ _23"> </span>shell, <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">fopen<span class="_ _35"> </span></span>at <span class="_ _23"></span>the <span class="_ _9"></span>beginning <span class="_ _23"> </span>of <span class="_ _23"></span>the <span class="_ _9"></span>program <span class="_ _23"></span>should</div><div class="t m0 x32 h4d y418f ff19 fs26 fc0 sc0 ls0 ws0">have <span class="_ _53"> </span>used <span class="_ _53"> </span>descriptor <span class="_ _53"> </span>0, <span class="_ _e"> </span>the <span class="_ _53"> </span>lowest <span class="_ _53"> </span>unused <span class="_ _e"> </span>descriptor<span class="_ _6"></span><span class="ls1173">,s<span class="_ _c"></span><span class="ls0">o<span class="_ _4b"> </span><span class="ff1a">fd[0]<span class="_ _4b"> </span></span>should <span class="_ _53"> </span>never <span class="_ _53"> </span>equal</span></span></div><div class="t m0 x32 h4d y4190 ff19 fs26 fc0 sc0 ls0 ws0">standar<span class="ls1174">di<span class="_ _4a"></span><span class="ls0">nput. <span class="_ _59"> </span>Nevertheless,<span class="_ _59"> </span>whenever <span class="_ _e"> </span>we <span class="_"> </span>call<span class="_ _4b"> </span><span class="ff1a">dup2<span class="_ _59"> </span></span>and<span class="_ _59"> </span><span class="ff1a">close<span class="_ _59"> </span></span>to <span class="_"> </span>duplicate <span class="_ _53"> </span>one</span></span></div><div class="t m0 x32 h49 y4191 ff19 fs26 fc0 sc0 ls0 ws0">descriptor <span class="_ _66"> </span>onto <span class="_ _47"> </span>another<span class="_ _6"></span><span class="ls591">,w<span class="_ _5b"></span><span class="ls0">e’ll <span class="_ _66"> </span>always <span class="_ _47"> </span>compar<span class="ls1175">et<span class="_ _1d"></span><span class="ls0">he <span class="_ _47"> </span>descriptors <span class="_"> </span>ﬁrst, <span class="_ _47"> </span>as <span class="_ _66"> </span>a <span class="_ _47"> </span>defensive</span></span></span></span></div><div class="t m0 x32 h49 y4192 ff19 fs26 fc0 sc0 ls0 ws0">programming measur<span class="_ _0"></span>e.</div><div class="t m0 x3f h4d y4193 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _3"></span>how <span class="_ _3"></span>we <span class="_ _3"></span>try <span class="_ _9"></span>to <span class="_ _3"></span>use <span class="_ _3"></span>the <span class="_ _9"></span>environment <span class="_ _2"></span>variable<span class="_ _45"> </span><span class="ff1a">PAGER<span class="_ _47"> </span></span>to <span class="_ _3"></span>obtain <span class="_ _3"></span>the <span class="_ _3"></span>name <span class="_ _9"></span>of <span class="_ _3"></span>the</div><div class="t m0 x32 h49 y4194 ff19 fs26 fc0 sc0 ls0 ws0">user <span class="_ _a"></span>’s<span class="_ _47"> </span>pager <span class="_ _9"></span>program. <span class="_ _47"> </span>If<span class="_ _45"> </span>this <span class="_ _3"></span>doesn’t <span class="_ _3"></span>work, <span class="_ _9"></span>we <span class="_ _3"></span>use <span class="_ _9"></span>a <span class="_ _3"></span>default.<span class="_ _5a"> </span>This <span class="_ _3"></span>is <span class="_ _9"></span>a <span class="_ _3"></span>common <span class="_ _9"></span>usage</div><div class="t m0 x32 h49 y4195 ff19 fs26 fc0 sc0 ls0 ws0">of environment variables.</div><div class="t m0 x35 h61 y4196 ff16 fs2c fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h54 y4197 ff19 fs2c fc0 sc0 ls0 ws0">Recall <span class="_"> </span>the <span class="_"> </span>ﬁve <span class="_ _66"> </span>functions<span class="_ _46"> </span><span class="ff1a">TELL_WAIT</span>,<span class="_ _46"> </span><span class="ff1a">TELL_PARENT</span>,<span class="_ _46"> </span><span class="ff1a">TELL_CHILD</span>,<span class="_ _61"> </span><span class="ff1a">WAIT_PARENT</span>,</div><div class="t m0 x32 h54 y4198 ff19 fs2c fc0 sc0 ls0 ws0">and<span class="_ _4b"> </span><span class="ff1a">WAIT_CHILD<span class="_ _4b"> </span></span>from <span class="_ _e"> </span>Section <span class="_ _e"> </span>8.9.<span class="_ _65"> </span>In <span class="_"> </span>Figur<span class="_ _1"></span><span class="ls1176">e1<span class="_ _c"></span><span class="ls0">0.24, <span class="_ _e"> </span>we <span class="_ _e"> </span>showed <span class="_ _e"> </span>an <span class="_ _e"> </span>implementation</span></span></div><div class="t m0 x32 h55 y4199 ff19 fs2c fc0 sc0 ls0 ws0">using signals.<span class="_ _59"> </span>Figur<span class="ls142">e1<span class="_ _d"></span><span class="ls0">5.7 shows an implementation using pipes.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
