<div id="pf392" class="pf w4 h1f" data-page-no="392"><div class="pc pc392 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg392.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">880<span class="_ _1b"> </span><span class="ff19">Function <span class="_"> </span>Prototypes <span class="_ _2d9"> </span>Appendix<span class="_ _44"> </span>A</span></div><div class="t m0 x32 h52 y2a3 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">semget</span>(key_t<span class="_"> </span><span class="ff1b">key</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">nsems</span><span class="lsf5a">,i<span class="_ _4a"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">ﬂag</span>);</span></span></span></span></div><div class="t m0 x36 h52 y5cfc ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/sem.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 567</span></div><div class="t m0 x36 h52 y5cfd ff1b fs2a fc0 sc0 ls0 ws0">ﬂag<span class="ff1a lsf5a">:I<span class="_ _4a"></span><span class="ls0">PC_CREAT, IPC_EXCL</span></span></div><div class="t m0 x36 h51 y5cfe ff19 fs2a fc0 sc0 ls0 ws0">Returns: semaphore<span class="_"> </span>ID<span class="_"> </span>if<span class="_"> </span>OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>err<span class="_ _0"></span>or</div><div class="t m0 x32 h52 y5d9a ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_getvalue</span>(sem_t *restrict<span class="_"> </span><span class="ff1b">sem</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt *restrict<span class="_"> </span><span class="ff1b">valp</span>);</span></span></div><div class="t m0 x36 h52 y5d9b ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 582</span></div><div class="t m0 x36 h51 y5ec1 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5d9c ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_init</span>(sem_t *<span class="ff1b">sem</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">pshared</span><span class="lsf5a">,u<span class="_ _4a"></span><span class="ls0">nsigned int<span class="_"> </span><span class="ff1b">value</span>);</span></span></span></span></div><div class="t m0 x36 h52 y5d9d ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 582</span></div><div class="t m0 x36 h51 y5d47 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5d04 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">semop</span>(int<span class="_"> </span><span class="ff1b">semid</span><span class="lsf5a">,s<span class="_ _55"></span><span class="ls0">truct sembuf<span class="_"> </span><span class="ff1b">semoparray</span>[], size_t<span class="_"> </span><span class="ff1b">nops</span>);</span></span></div><div class="t m0 x36 h52 y5d9f ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/sem.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 568</span></div><div class="t m0 x36 h51 y5d05 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5e1e ff1a fs2a fc0 sc0 ls0 ws0">sem_t <span class="_ _d8"> </span>*<span class="ff1f">sem_open</span>(const char *<span class="ff1b">name</span><span class="lsf5a">,i<span class="_ _4a"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">oﬂag</span><span class="lsf5a">,.<span class="_ _55"></span><span class="ls0">.. /* mode_t<span class="_"> </span><span class="ff1b">mode</span>,</span></span></span></span></div><div class="t m0 x4 h52 y5e1f ff1a fs2a fc0 sc0 ls0 ws0">unsigned int<span class="_"> </span><span class="ff1b">value<span class="_ _59"> </span></span>*/ );</div><div class="t m0 x36 h52 y5d08 ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 579</span></div><div class="t m0 x36 h52 y5d09 ff1b fs2a fc0 sc0 ls0 ws0">ﬂag<span class="ff1a lsf5a">:I<span class="_ _4a"></span><span class="ls0">PC_CREAT, IPC_EXCL</span></span></div><div class="t m0 x36 h52 y5d0a ff19 fs2a fc0 sc0 ls0 ws0">Returns: pointer to semaphore<span class="_"> </span>if<span class="_"> </span>OK,<span class="_"> </span><span class="ff1a">SEM_FAILED<span class="_ _53"> </span></span>on error</div><div class="t m0 x32 h52 y5ef9 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_post</span>(sem_t *<span class="ff1b">sem</span>);</div><div class="t m0 x36 h52 y5da5 ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 582</span></div><div class="t m0 x36 h51 y5da6 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5ee0 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_timedwait</span>(sem_t *restrict<span class="_"> </span><span class="ff1b">sem</span>,</div><div class="t m0 x199 h52 y5e02 ff1a fs2a fc0 sc0 ls0 ws0">const struct timespec *restrict<span class="_"> </span><span class="ff1b">tsptr</span>);</div><div class="t m0 x36 h52 y5e6f ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 581</span></div><div class="t m0 x36 h52 y5f0c ff1a fs2a fc0 sc0 ls0 ws0">&lt;time.h&gt;</div><div class="t m0 x36 h51 y5d55 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5dae ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_trywait</span>(sem_t *<span class="ff1b">sem</span>);</div><div class="t m0 x36 h52 y5d57 ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;</div><div class="t m0 x36 h51 y5e04 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5ecd ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_unlink</span>(const char *<span class="ff1b">name</span>);</div><div class="t m0 x36 h52 y5ed9 ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 580</span></div><div class="t m0 x36 h51 y5d7b ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5e21 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sem_wait</span>(sem_t *<span class="ff1b">sem</span>);</div><div class="t m0 x36 h52 y5e22 ff1a fs2a fc0 sc0 ls0 ws0">&lt;semaphore.h&gt;<span class="_ _320"> </span><span class="ff19">p. 581</span></div><div class="t m0 x36 h51 y5efb ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
