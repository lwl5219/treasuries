<div id="pf3bc" class="pf w4 h1f" data-page-no="3bc"><div class="pc pc3bc w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg3bc.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">922<span class="_ _1b"> </span><span class="ff19">Solutions <span class="_"> </span>to <span class="_"> </span>Selected <span class="_"> </span>Exercises <span class="_ _2eb"> </span>Appendix<span class="_ _4b"> </span>C</span></div><div class="t m0 x215 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">to<span class="_"> </span><span class="ff1a">vfork<span class="_ _66"> </span></span>and <span class="_ _2"></span>does a <span class="_ _2"></span>return from<span class="_"> </span><span class="ff1a">f1</span><span class="ls163d">.T<span class="_ _5b"></span><span class="ls0">he return information <span class="_ _2"></span>is often <span class="_ _2"></span>stored in the</span></span></div><div class="t m0 x215 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">stack <span class="_ _2"></span>frame, <span class="_ _3"></span>and <span class="_ _2"></span>that <span class="_ _3"></span>information <span class="_ _2"></span>has <span class="_ _3"></span>probably been <span class="_ _3"></span>modiﬁed <span class="_ _2"></span>by <span class="_ _3"></span>the <span class="_ _2"></span>child.<span class="_ _16"> </span>After</div><div class="t m0 x215 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _59"> </span>parent <span class="_ _59"> </span>resumes, <span class="_ _4b"> </span>what <span class="_ _46"> </span>happens <span class="_ _59"> </span>with <span class="_ _59"> </span>this <span class="_ _46"> </span>example <span class="_ _59"> </span>depends <span class="_ _59"> </span>on <span class="_ _46"> </span>many</div><div class="t m0 x215 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">implementation <span class="_"> </span>features <span class="_"> </span>of <span class="_"> </span>your <span class="_"> </span>UNIX <span class="_"> </span>system <span class="_"> </span>(wher<span class="ls1834">ei<span class="_ _5b"></span><span class="lsba7">nt<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>stack <span class="_"> </span>frame <span class="_ _66"> </span>the</span></span></span></div><div class="t m0 x215 h2a y133 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turn <span class="_ _53"> </span>information <span class="_ _42"> </span>is <span class="_ _53"> </span>stored, <span class="_ _42"> </span>what <span class="_ _42"> </span>information <span class="_ _53"> </span>in <span class="_ _42"> </span>the <span class="_ _53"> </span>stack <span class="_ _42"> </span>frame <span class="_ _53"> </span>is <span class="_ _42"> </span>wiped <span class="_ _42"> </span>out</span></div><div class="t m0 x215 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">when <span class="_ _42"> </span>the <span class="_ _42"> </span>automatic <span class="_ _42"> </span>variables <span class="_ _42"> </span>ar<span class="ls1835">em<span class="_ _c"></span><span class="ls0">odiﬁed, <span class="_ _42"> </span>and <span class="_ _42"> </span>so <span class="_ _53"> </span>on).<span class="_ _54"> </span>The <span class="_ _42"> </span>normal <span class="_ _42"> </span>result <span class="_ _23"> </span>is <span class="_ _42"> </span>a</span></span></div><div class="t m0 x215 h26 y135 ff1a fsf fc0 sc0 ls0 ws0">core<span class="_ _80"> </span><span class="ff19">ﬁle, but your results may differ<span class="_ _6"></span>.</span></div><div class="t m0 x74 h2d y612a ff19 fs10 fc0 sc0 ls0 ws0">stack frame</div><div class="t m0 x1de h5e y612b ff19 fs10 fc0 sc0 ls0 ws0">for<span class="_"> </span><span class="ff1a">main</span></div><div class="t m0 x74 h2e y612c ff19 fs11 fc0 sc0 ls0 ws0">stack frame</div><div class="t m0 xa9 h4f y612d ff19 fs11 fc0 sc0 ls0 ws0">for<span class="_"> </span><span class="ff1a">f1</span></div><div class="t m0 x59 h2f y612e ff19 fs12 fc0 sc0 ls0 ws0">bottom of stack</div><div class="t m0 x171 h30 y612f ff19 fs13 fc0 sc0 ls0 ws0">direction of</div><div class="t m0 x30 h30 y6130 ff19 fs13 fc0 sc0 ls0 ws0">stack growth</div><div class="t m0 x13c h63 y6131 ff18 fs13 fc0 sc0 ls0 ws0">Figure C.9<span class="_ _5a"> </span><span class="ff19">Stack frames when<span class="_"> </span><span class="ff1a">vfork<span class="_ _e"> </span></span>is called</span></div><div class="t m0 x32 h6e y6132 ff18 fs31 fc0 sc0 ls0 ws0">8.4<span class="_ _9b"> </span><span class="ff19">In Figur<span class="ls1836">e8<span class="_ _8"></span><span class="ls0">.13, <span class="_ _3"></span>we <span class="_ _2"></span>have <span class="_ _2"></span>the <span class="_ _2"></span>parent <span class="_ _2"></span>write <span class="_ _2"></span>its <span class="_ _2"></span>output <span class="_ _2"></span>ﬁrst.<span class="_ _61"> </span>When <span class="_ _3"></span>the <span class="_ _2"></span>parent is <span class="_ _3"></span>done,</span></span></span></div><div class="t m0 x215 h6e y6133 ff19 fs31 fc0 sc0 ls0 ws0">the <span class="_ _23"></span>child <span class="_ _23"></span>writes <span class="_ _9"></span>its <span class="_ _23"> </span>output, <span class="_ _23"> </span>but <span class="_ _23"> </span>we <span class="_ _23"></span>let <span class="_ _23"></span>the <span class="_ _23"></span>parent <span class="_ _9"></span>terminate.<span class="_ _51"> </span>Whether <span class="_ _23"></span>the <span class="_ _9"></span>parent</div><div class="t m0 x215 h6e y6134 ff19 fs31 fc0 sc0 ls0 ws0">terminates <span class="_ _23"> </span>or <span class="_ _23"> </span>whether <span class="_ _23"> </span>the <span class="_ _42"> </span>child <span class="_ _23"></span>ﬁnishes <span class="_ _23"> </span>its <span class="_ _23"> </span>output <span class="_ _23"> </span>ﬁrst <span class="_ _42"> </span>depends <span class="_ _23"></span>on <span class="_ _23"> </span>the <span class="_ _23"> </span>kernel’s</div><div class="t m0 x215 h6e y6135 ff19 fs31 fc0 sc0 ls0 ws0">scheduling <span class="_ _45"> </span>of <span class="_ _45"> </span>the <span class="_ _45"> </span>two <span class="_ _47"> </span>processes <span class="_ _45"> </span>(another <span class="_ _45"> </span>race <span class="_ _45"> </span>condition).<span class="_ _5f"> </span>When <span class="_ _45"> </span>the <span class="_ _45"> </span>parent</div><div class="t m0 x215 h6e y6136 ff19 fs31 fc0 sc0 ls0 ws0">terminates, <span class="_ _66"> </span>the <span class="_ _47"> </span>shell <span class="_ _66"> </span>starts <span class="_ _47"> </span>up <span class="_ _47"> </span>the <span class="_ _66"> </span>next <span class="_ _47"> </span>program, <span class="_"> </span>and <span class="_ _47"> </span>this <span class="_ _66"> </span>next <span class="_ _47"> </span>program <span class="_"> </span>can</div><div class="t m0 x215 h6e y6137 ff19 fs31 fc0 sc0 ls0 ws0">interfer<span class="ls229">ew<span class="_ _4f"></span><span class="ls0">ith the output from the previous child.</span></span></div><div class="t m0 x215 h6e y6138 ff19 fs31 fc0 sc0 ls43f ws0">We <span class="_ _80"> </span>c<span class="_ _23"></span><span class="ls0">an <span class="_ _3"></span>prevent <span class="_ _3"></span>this <span class="_ _3"></span>from <span class="_ _3"></span>happening <span class="_ _9"></span>by <span class="_ _3"></span>not <span class="_ _9"></span>letting <span class="_ _3"></span>the <span class="_ _9"></span>parent <span class="_ _2"></span>terminate <span class="_ _9"></span>until <span class="_ _3"></span>the</span></div><div class="t m0 x215 h64 y6139 ff19 fs31 fc0 sc0 ls0 ws0">child <span class="_ _9"></span>has <span class="_ _9"></span>also <span class="_ _9"></span>ﬁnished <span class="_ _9"></span>its <span class="_ _9"></span>output.<span class="_ _5a"> </span>Replace <span class="_ _9"></span>the <span class="_ _9"></span>code <span class="_ _23"></span>following <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>with <span class="_ _9"></span>the</div><div class="t m0 x215 h6e y613a ff19 fs31 fc0 sc0 ls0 ws0">following:</div><div class="t m0 x1a7 h65 y613b ff1a fs32 fc0 sc0 ls0 ws0">else if (pid == 0) {</div><div class="t m0 x148 h65 y613c ff1a fs32 fc0 sc0 ls0 ws0">WAIT_PARENT(); <span class="_ _176"> </span>/*<span class="_"> </span>parent goes first */</div><div class="t m0 x148 h65 y613d ff1a fs32 fc0 sc0 ls0 ws0">charatatime(&quot;output from child\n&quot;);</div><div class="t m0 x148 h65 y613e ff1a fs32 fc0 sc0 ls0 ws0">TELL_PARENT(getppid()); /* tell parent we’re done */</div><div class="t m0 x1a7 h65 y613f ff1a fs32 fc0 sc0 ls441 ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x148 h65 y6140 ff1a fs32 fc0 sc0 ls0 ws0">charatatime(&quot;output from parent\n&quot;);</div><div class="t m0 x148 h65 y6141 ff1a fs32 fc0 sc0 ls0 ws0">TELL_CHILD(pid); <span class="_ _b7"> </span>/*<span class="_"> </span>tell child we’re done */</div><div class="t m0 x148 h65 y6142 ff1a fs32 fc0 sc0 ls0 ws0">WAIT_CHILD(); <span class="_ _74"> </span>/*<span class="_"> </span>wait for child to finish */</div><div class="t m0 x1a7 h65 y6143 ff1a fs32 fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h6e y6144 ff19 fs31 fc0 sc0 ls43f ws0">We <span class="_ _66"> </span>w<span class="_ _9"></span><span class="ls0">on’t <span class="_ _23"></span>see <span class="_ _9"></span>this <span class="_ _9"></span>happen <span class="_ _9"></span>if <span class="_ _9"></span>we <span class="_ _23"></span>let <span class="_ _9"></span>the <span class="_ _9"></span>child <span class="_ _9"></span>go <span class="_ _9"></span>ﬁrst, <span class="_ _23"></span>since <span class="_ _9"></span>the <span class="_ _9"></span>shell <span class="_ _9"></span>doesn’t <span class="_ _9"></span>start</span></div><div class="t m0 x215 h6e y6145 ff19 fs31 fc0 sc0 ls0 ws0">the next program until the par<span class="_ _0"></span>ent terminates.</div><div class="t m0 x32 h64 y6146 ff18 fs31 fc0 sc0 ls0 ws0">8.5<span class="_ _9b"> </span><span class="ff19">The <span class="_ _23"> </span>same <span class="_ _53"> </span>value <span class="_ _42"> </span>(<span class="ff1a">/home/sar/bin/testinterp</span><span class="ls1837">)i<span class="_ _43"></span><span class="ls1838">sp<span class="_ _c"></span><span class="ls0">rinted <span class="_ _42"> </span>for<span class="_ _44"> </span><span class="ff1a">argv[2]</span><span class="ls1839">.T<span class="_ _52"></span><span class="ls0">he</span></span></span></span></span></span></div><div class="t m0 x215 h64 y6147 ff19 fs31 fc0 sc0 ls225 ws0">re<span class="ls0">ason <span class="_ _23"></span>is <span class="_ _9"></span>that<span class="_ _45"> </span><span class="ff1a">execlp<span class="_ _35"> </span></span>ends <span class="_ _9"></span>up <span class="_ _9"></span>calling<span class="_ _35"> </span><span class="ff1a">execve<span class="_ _45"> </span></span>with <span class="_ _9"></span>the <span class="_ _23"></span>same<span class="_ _45"> </span><span class="ff1b">pathname<span class="_ _45"> </span></span>as <span class="_ _9"></span>when</span></div><div class="t m0 x215 h64 y6148 ff19 fs31 fc0 sc0 ls0 ws0">we call<span class="_"> </span><span class="ff1a">execl<span class="_ _80"> </span></span>directly<span class="_ _4"></span><span class="ls171d">.R<span class="_ _4a"></span><span class="ls0">ecall Figur<span class="ls229">e8<span class="_ _d"></span><span class="ls0">.15.</span></span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
