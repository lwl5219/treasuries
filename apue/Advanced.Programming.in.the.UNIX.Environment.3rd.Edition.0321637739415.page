<div id="pf19f" class="pf w4 h1f" data-page-no="19f"><div class="pc pc19f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg19f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Chapter <span class="_"> </span>10<span class="_ _183"> </span>Exercises<span class="_ _1fb"> </span><span class="ff18">381</span></div><div class="t m0 x35 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">10.23 <span class="_ _66"> </span>Summary</div><div class="t m0 x32 h2a y4de ff19 fsf fc0 sc0 ls0 ws0">Signals <span class="_ _42"> </span>ar<span class="lsbfb">eu<span class="_ _c"></span><span class="ls0">sed <span class="_ _42"> </span>in <span class="_ _42"> </span>most <span class="_ _42"> </span>nontrivial <span class="_ _42"> </span>applications.<span class="_ _51"> </span>An <span class="_ _42"> </span>understanding <span class="_ _42"> </span>of <span class="_ _42"> </span>the <span class="_ _42"> </span>hows <span class="_ _42"> </span>and</span></span></div><div class="t m0 x32 h2a y6d0 ff19 fsf fc0 sc0 ls0 ws0">whys <span class="_ _e"> </span>of <span class="_ _e"> </span>signal <span class="_ _e"> </span>handling <span class="_ _e"> </span>is <span class="_ _e"> </span>essential <span class="_ _e"> </span>to <span class="_ _e"> </span>advanced <span class="_ _e"> </span>UNIX <span class="_ _e"> </span>System <span class="_ _e"> </span>programming. <span class="_ _4b"> </span>This</div><div class="t m0 x32 h2a y6d1 ff19 fsf fc0 sc0 ls0 ws0">chapter <span class="_ _42"> </span>has <span class="_ _42"> </span>taken <span class="_ _42"> </span>a <span class="_ _42"> </span>long <span class="_ _53"> </span>and <span class="_ _42"> </span>thorough <span class="_ _42"> </span>look <span class="_ _42"> </span>at <span class="_ _42"> </span>UNIX <span class="_ _42"> </span>System <span class="_ _42"> </span>signals.<span class="_ _54"> </span><span class="ls5f">We <span class="_ _35"> </span>s<span class="_ _9"></span></span>tarted <span class="_ _42"> </span>by</div><div class="t m0 x32 h2a y6d2 ff19 fsf fc0 sc0 ls0 ws0">looking <span class="_ _53"> </span>at <span class="_ _e"> </span>the <span class="_ _53"> </span>warts <span class="_ _e"> </span>in <span class="_ _53"> </span>previous <span class="_ _53"> </span>implementations <span class="_ _e"> </span>of <span class="_ _53"> </span>signals <span class="_ _e"> </span>and <span class="_ _53"> </span>how <span class="_ _e"> </span>they <span class="_ _53"> </span>manifest</div><div class="t m0 x32 h2a y6d3 ff19 fsf fc0 sc0 ls0 ws0">themselves. <span class="_ _46"> </span>W<span class="_ _1"></span><span class="ls1a7">et<span class="_ _1d"></span><span class="ls0">hen <span class="_ _47"> </span>proceeded <span class="_"> </span>to <span class="_ _47"> </span>the <span class="_ _66"> </span>POSIX.1 <span class="_ _47"> </span>reliable-signal <span class="_"> </span>concept <span class="_ _66"> </span>and <span class="_ _47"> </span>all <span class="_ _66"> </span>the</span></span></div><div class="t m0 x32 h2a y6d4 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">lated <span class="_ _44"> </span>functions.<span class="_ _93"> </span>Once <span class="_ _44"> </span>we <span class="_ _44"> </span>covered <span class="_ _44"> </span>all <span class="_ _44"> </span>these <span class="_ _44"> </span>details, <span class="_ _44"> </span>we <span class="_ _44"> </span>wer<span class="lsd65">ea<span class="_ _64"></span><span class="ls0">ble <span class="_ _44"> </span>to <span class="_ _44"> </span>provide</span></span></span></div><div class="t m0 x32 h26 y6d5 ff19 fsf fc0 sc0 ls0 ws0">implementations <span class="_ _42"> </span>of <span class="_ _53"> </span>the <span class="_ _42"> </span>POSIX.1<span class="_ _44"> </span><span class="ff1a">abort</span>,<span class="_ _4b"> </span><span class="ff1a">system</span><span class="lsd66">,a<span class="_ _c"></span><span class="ls0">nd<span class="_ _44"> </span><span class="ff1a">sleep<span class="_ _44"> </span></span>functions. <span class="_ _4b"> </span>W<span class="_ _6"></span><span class="lsd66">eﬁ<span class="_ _c"></span><span class="ls0">nished</span></span></span></span></div><div class="t m0 x32 h2a y6d6 ff19 fsf fc0 sc0 ls0 ws0">with <span class="_ _3"></span>a <span class="_ _9"></span>look <span class="_ _3"></span>at <span class="_ _9"></span>the <span class="_ _3"></span>job-control <span class="_ _3"></span>signals <span class="_ _9"></span>and <span class="_ _3"></span>the <span class="_ _9"></span>ways <span class="_ _3"></span>that <span class="_ _9"></span>we <span class="_ _3"></span>can <span class="_ _9"></span>convert <span class="_ _3"></span>between <span class="_ _9"></span>signal</div><div class="t m0 x32 h2a y6d7 ff19 fsf fc0 sc0 ls0 ws0">names and signal numbers.</div><div class="t m0 x32 h53 y9fe ff16 fs2b fc0 sc0 ls0 ws0">Exer<span class="_ _0"></span>cises</div><div class="t m0 x32 h57 y30b2 ff18 fs2d fc0 sc0 ls0 ws0">10.1<span class="_ _6e"> </span><span class="ff19">In Figur<span class="_ _0"></span><span class="ls110">e1<span class="_ _5"></span><span class="ls0">0.2, remove the<span class="_"> </span><span class="ff1a">for <span class="_ _d"></span>(;;)<span class="_ _e"> </span><span class="ff19">statement. <span class="_"> </span>What<span class="_"> </span>happens and why?</span></span></span></span></span></div><div class="t m0 x32 h57 y30b3 ff18 fs2d fc0 sc0 ls0 ws0">10.2<span class="_ _6e"> </span><span class="ff19">Implement the<span class="_"> </span><span class="ff1a">sig2str<span class="_ _e"> </span></span>function described in Section 10.22.</span></div><div class="t m0 x32 h5f y30b4 ff18 fs2d fc0 sc0 ls0 ws0">10.3<span class="_ _6e"> </span><span class="ff19">Draw pictur<span class="_ _0"></span>es of the stack frames when we run the pr<span class="_ _0"></span>ogram from Figur<span class="_ _0"></span><span class="ls110">e1<span class="_ _5"></span><span class="ls0">0.9.</span></span></span></div><div class="t m0 x32 h5f y30b5 ff18 fs2d fc0 sc0 ls0 ws0">10.4<span class="_ _6e"> </span><span class="ff19">In <span class="_ _53"> </span>Figur<span class="lsd67">e1<span class="_ _c"></span><span class="ls0">0.1<span class="_ _1"></span>1, <span class="_"> </span>we <span class="_ _53"> </span>showed <span class="_"> </span>a <span class="_ _53"> </span>technique <span class="_"> </span>that’s <span class="_ _53"> </span>often <span class="_"> </span>used <span class="_ _53"> </span>to <span class="_"> </span>set <span class="_ _53"> </span>a <span class="_"> </span>timeout <span class="_ _53"> </span>on <span class="_"> </span>an <span class="_ _53"> </span>I/O</span></span></span></div><div class="t m0 xe1 h57 y30b6 ff19 fs2d fc0 sc0 ls0 ws0">operation using<span class="_"> </span><span class="ff1a">setjmp<span class="_ _e"> </span></span>and<span class="_"> </span><span class="ff1a">longjmp</span><span class="ls614">.T<span class="_ _c"></span><span class="ls0">he following code has also been seen:</span></span></div><div class="t m0 x1c h57 y30b7 ff1a fs2d fc0 sc0 ls0 ws0">signal(SIGALRM, sig_alrm);</div><div class="t m0 x1c h57 y30b8 ff1a fs2d fc0 sc0 ls0 ws0">alarm(60);</div><div class="t m0 x1c h57 y30b9 ff1a fs2d fc0 sc0 ls0 ws0">if (setjmp(env_alrm) != 0) {</div><div class="t m0 x13a h57 y30ba ff1a fs2d fc0 sc0 ls0 ws0">/* handle timeout */</div><div class="t m0 x13a h57 y30bb ff1a fs2d fc0 sc0 ls0 ws0">...</div><div class="t m0 x1c h57 y30bc ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x1c h57 y30bd ff1a fs2d fc0 sc0 ls0 ws0">...</div><div class="t m0 xe1 h5f y30be ff19 fs2d fc0 sc0 ls0 ws0">What else is wrong with this sequence of code?</div><div class="t m0 x32 h57 y30bf ff18 fs2d fc0 sc0 ls0 ws0">10.5<span class="_ _6e"> </span><span class="ff19">Using only a <span class="_ _2"></span>single <span class="_ _2"></span>timer <span class="_ _2"></span>(either<span class="_"> </span><span class="ff1a">alarm<span class="_ _66"> </span></span>or the <span class="_ _2"></span>higher-precision<span class="_"> </span><span class="ff1a">setitimer</span>), provide <span class="_ _2"></span>a set</span></div><div class="t m0 xe1 h5f y30c0 ff19 fs2d fc0 sc0 ls0 ws0">of functions that allows a process to set any number of timers.</div><div class="t m0 x32 h5f y30c1 ff18 fs2d fc0 sc0 ls0 ws0">10.6<span class="_ _6e"> </span><span class="ff19 ls467">Wr<span class="_ _2"></span><span class="ls0">ite <span class="_ _44"> </span>the <span class="_ _35"> </span>following <span class="_ _35"> </span>program <span class="_ _35"> </span>to <span class="_ _35"> </span>test <span class="_ _35"> </span>the <span class="_ _44"> </span>par<span class="_ _0"></span>ent–child <span class="_ _35"> </span>synchronization <span class="_ _35"> </span>functions <span class="_ _35"> </span>in</span></span></div><div class="t m0 xe1 h5f y30c2 ff19 fs2d fc0 sc0 ls0 ws0">Figur<span class="lsd68">e1<span class="_ _d"></span><span class="ls0">0.24. <span class="_"> </span>The<span class="_"> </span>process creates a ﬁle and writes the integer 0 to the ﬁle.<span class="_ _4b"> </span>The process then</span></span></div><div class="t m0 xe1 h57 y30c3 ff19 fs2d fc0 sc0 ls0 ws0">calls<span class="_ _47"> </span><span class="ff1a">fork</span><span class="lsd69">,a<span class="_ _8"></span><span class="ls0">nd <span class="_ _23"></span>the <span class="_ _9"></span>parent <span class="_ _9"></span>and <span class="_ _9"></span>child <span class="_ _23"> </span>alternate <span class="_ _9"></span>incrementing <span class="_ _9"></span>the <span class="_ _9"></span>counter <span class="_ _23"> </span>in <span class="_ _9"></span>the <span class="_ _23"> </span>ﬁle.<span class="_ _61"> </span>Each</span></span></div><div class="t m0 xe1 h5f y30c4 ff19 fs2d fc0 sc0 ls0 ws0">time <span class="_ _66"> </span>the <span class="_ _47"> </span>counter <span class="_ _47"> </span>is <span class="_ _47"> </span>incremented, <span class="_ _66"> </span>print <span class="_ _47"> </span>which <span class="_ _66"> </span>process <span class="_ _66"> </span>(parent <span class="_ _47"> </span>or <span class="_ _66"> </span>child) <span class="_ _47"> </span>is <span class="_ _47"> </span>doing <span class="_ _66"> </span>the</div><div class="t m0 xe1 h5f y30c5 ff19 fs2d fc0 sc0 ls0 ws0">increment.</div><div class="t m0 x32 h57 y30c6 ff18 fs2d fc0 sc0 ls0 ws0">10.7<span class="_ _6e"> </span><span class="ff19">In <span class="_ _2"></span>the <span class="_ _9"></span>function <span class="_ _3"></span>shown <span class="_ _9"></span>in <span class="_ _3"></span>Figur<span class="lsd6a">e1<span class="_ _8"></span><span class="ls0">0.25, <span class="_ _9"></span>if <span class="_ _3"></span>the <span class="_ _3"></span>caller <span class="_ _9"></span>catches<span class="_ _47"> </span><span class="ff1a">SIGABRT<span class="_ _66"> </span></span>and <span class="_ _9"></span>returns <span class="_ _2"></span>from <span class="_ _3"></span>the</span></span></span></div><div class="t m0 xe1 h5f y30c7 ff19 fs2d fc0 sc0 ls0 ws0">signal <span class="_ _3"></span>handler<span class="_ _1"></span><span class="lsd6b">,w<span class="_ _4f"></span><span class="ls0">hy <span class="_ _3"></span>do <span class="_ _9"></span>we <span class="_ _9"></span>go <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>trouble <span class="_ _3"></span>of <span class="_ _9"></span>resetting <span class="_ _3"></span>the <span class="_ _3"></span>disposition <span class="_ _9"></span>to <span class="_ _9"></span>its <span class="_ _3"></span>default <span class="_ _9"></span>and</span></span></div><div class="t m0 xe1 h57 y30c8 ff19 fs2d fc0 sc0 ls0 ws0">call<span class="_"> </span><span class="ff1a">kill<span class="_ _e"> </span></span>the second time, instead of simply calling<span class="_"> </span><span class="ff1a">_exit</span>?</div><div class="t m0 x32 h57 y30c9 ff18 fs2d fc0 sc0 ls0 ws0">10.8<span class="_ _6e"> </span><span class="ff19">Why do <span class="_ _3"></span>you <span class="_ _2"></span>think <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">siginfo<span class="_ _66"> </span></span>structur<span class="lsd6c">e(<span class="_ _4f"></span><span class="ls0">Section <span class="_ _2"></span>10.14) <span class="_ _2"></span>includes <span class="_ _3"></span>the <span class="_ _2"></span>real <span class="_ _2"></span>user <span class="_ _2"></span>ID, <span class="_ _2"></span>instead</span></span></span></div><div class="t m0 xe1 h57 y30ca ff19 fs2d fc0 sc0 ls0 ws0">of the effective user ID, in the<span class="_"> </span><span class="ff1a">si_uid<span class="_ _e"> </span></span>ﬁeld?</div><div class="t m0 x32 h5f y30cb ff18 fs2d fc0 sc0 ls0 ws0">10.9<span class="_ _6e"> </span><span class="ff19">Rewrite <span class="_"> </span>the <span class="_ _80"> </span>function <span class="_ _66"> </span>in <span class="_"> </span>Figur<span class="lsd6d">e1<span class="_ _55"></span><span class="ls0">0.14 <span class="_"> </span>to <span class="_ _66"> </span>handle <span class="_"> </span>all <span class="_ _66"> </span>the <span class="_"> </span>signals <span class="_ _66"> </span>from <span class="_"> </span>Figur<span class="lsd6e">e1<span class="_ _4a"></span><span class="ls0">0.1. <span class="_ _59"> </span>The</span></span></span></span></span></div><div class="t m0 xe1 h5f y30cc ff19 fs2d fc0 sc0 ls0 ws0">function <span class="_ _23"></span>should <span class="_ _9"></span>consist <span class="_ _23"> </span>of <span class="_ _23"> </span>a <span class="_ _23"> </span>single <span class="_ _23"></span>loop <span class="_ _9"></span>that <span class="_ _23"> </span>iterates <span class="_ _23"> </span>once <span class="_ _23"> </span>for <span class="_ _23"></span>every <span class="_ _9"></span>signal <span class="_ _23"> </span>in <span class="_ _23"> </span>the <span class="_ _23"> </span>current</div><div class="t m0 xe1 h5f y30cd ff19 fs2d fc0 sc0 ls0 ws0">signal mask (not once for every possible signal).</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:90.803810px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
