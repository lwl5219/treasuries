<div id="pf177" class="pf w4 h1f" data-page-no="177"><div class="pc pc177 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg177.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.10<span class="_ _110"> </span><span class="ff1a">alarm<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">pause<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">341</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y158c ff1a fs2d fc0 sc0 ls0 ws0">unsigned int<span class="_ _15"> </span>sleep2(unsigned int);</div><div class="t m0 x32 h57 y3c1 ff1a fs2d fc0 sc0 ls0 ws0">static void<span class="_ _8a"> </span>sig_int(int);</div><div class="t m0 x32 h57 y1f3b ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y1d34 ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h57 y158d ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y158e ff1a fs2d fc0 sc0 ls0 ws0">unsigned int<span class="_ _15"> </span>unslept;</div><div class="t m0 x8a h57 y1d36 ff1a fs2d fc0 sc0 ls0 ws0">if (signal(SIGINT, sig_int) == SIG_ERR)</div><div class="t m0 x9d h57 y1590 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;signal(SIGINT) error&quot;);</div><div class="t m0 x8a h57 y1591 ff1a fs2d fc0 sc0 ls0 ws0">unslept = sleep2(5);</div><div class="t m0 x8a h57 y1d37 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;sleep2 returned: %u\n&quot;, unslept);</div><div class="t m0 x8a h57 y1d38 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y3cb ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y1d39 ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y24c6 ff1a fs2d fc0 sc0 ls0 ws0">sig_int(int signo)</div><div class="t m0 x32 h57 y24c7 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1f3c ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>i,<span class="_"> </span>j;</div><div class="t m0 x8a h57 y1f3d ff1a fs2d fc0 sc0 ls0 ws0">volatile int<span class="_ _15"> </span>k;</div><div class="t m0 x8a h57 y1d3e ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 xe1 h57 y855 ff1a fs2d fc0 sc0 ls15c ws0">*T<span class="_ _1d"></span><span class="ls0">une these loops to run for more than 5 seconds</span></div><div class="t m0 xe1 h57 y1d3f ff1a fs2d fc0 sc0 ls0 ws0">*<span class="_"> </span>on<span class="_"> </span>whatever system this test program is run.</div><div class="t m0 xe1 h57 y2aad ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x8a h57 y2aae ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;\nsig_int starting\n&quot;);</div><div class="t m0 x8a h57 y2aaf ff1a fs2d fc0 sc0 ls0 ws0">for (i = 0; i &lt; 300000; i++)</div><div class="t m0 x9d h57 y2ba7 ff1a fs2d fc0 sc0 ls0 ws0">for (j = 0; j &lt; 4000; j++)</div><div class="t m0 x1f h57 y2ba8 ff1a fs2d fc0 sc0 ls0 ws0">k<span class="_"> </span>+=<span class="_"> </span>i<span class="_"> </span>*<span class="_"> </span>j;</div><div class="t m0 x8a h57 y2ba9 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;sig_int finished\n&quot;);</div><div class="t m0 x32 h57 y2baa ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x54 h5e y2bab ff18 fs10 fc0 sc0 ls0 ws0">Figure 10.9<span class="_ _5a"> </span><span class="ff19">Calling<span class="_"> </span><span class="ff1a">sleep2<span class="_ _e"> </span></span>from a program that catches other signals</span></div><div class="t m0 x3f h49 y2bac ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _53"> </span>we <span class="_ _e"> </span>execute <span class="_ _53"> </span>the <span class="_ _e"> </span>program <span class="_ _53"> </span>shown <span class="_ _53"> </span>in <span class="_ _e"> </span>Figur<span class="lsc83">e1<span class="_ _55"></span><span class="ls0">0.9 <span class="_ _53"> </span>and <span class="_ _e"> </span>interrupt <span class="_ _53"> </span>the <span class="_ _53"> </span>sleep <span class="_ _e"> </span>by</span></span></div><div class="t m0 x32 h49 y2bad ff19 fs26 fc0 sc0 ls0 ws0">typing the interrupt character<span class="_ _6"></span>,<span class="_"> </span>we<span class="_"> </span>get the following output:</div><div class="t m0 x3f h4e y2bae ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h4e y2baf ff1f fs28 fc0 sc0 ls0 ws0">ˆC<span class="_ _22c"> </span><span class="ff1b">we type the interrupt character</span></div><div class="t m0 x3f h4e y2bb0 ff1a fs28 fc0 sc0 ls0 ws0">sig_int starting</div><div class="t m0 x3f h4e y2bb1 ff1a fs28 fc0 sc0 ls0 ws0">sleep2 returned: 0</div><div class="t m0 x32 h4d y2bb2 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _4b"> </span>c<span class="_ _9"></span><span class="ls0">an <span class="_ _66"> </span>see <span class="_ _47"> </span>that <span class="_"> </span>the<span class="_ _61"> </span><span class="ff1a">longjmp<span class="_ _61"> </span></span>from <span class="_"> </span>the<span class="_ _46"> </span><span class="ff1a">sleep2<span class="_ _61"> </span></span>function <span class="_ _66"> </span>aborted <span class="_ _47"> </span>the <span class="_"> </span>other <span class="_ _66"> </span>signal</span></div><div class="t m0 x32 h4d y2bb3 ff19 fs26 fc0 sc0 ls0 ws0">handler<span class="_ _6"></span>,<span class="_ _47"> </span><span class="ff1a">sig_int</span><span class="lsc84">,e<span class="_ _4f"></span><span class="ls0">ven <span class="_ _2"></span>though <span class="_ _3"></span>it <span class="_ _2"></span>wasn’t <span class="_ _3"></span>ﬁnished.<span class="_ _16"> </span>This <span class="_ _2"></span>is <span class="_ _3"></span>what <span class="_ _2"></span>you’ll <span class="_ _3"></span>encounter <span class="_ _3"></span>if <span class="_ _2"></span>you</span></span></div><div class="t m0 x32 h4d y2bb4 ff19 fs26 fc0 sc0 ls0 ws0">mix the SVR2<span class="_"> </span><span class="ff1a">sleep<span class="_ _80"> </span></span>function with other signal handling.<span class="_ _46"> </span>See Exercise 10.3.</div><div class="t m0 x3f h54 y2bb5 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _2"></span>purpose <span class="_ _2"></span>of <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">sleep1<span class="_ _66"> </span></span>and<span class="_ _47"> </span><span class="ff1a">sleep2<span class="_ _66"> </span></span>examples <span class="_ _2"></span>is <span class="_ _3"></span>to <span class="_ _2"></span>show <span class="_ _2"></span>the <span class="_ _2"></span>pitfalls <span class="_ _2"></span>in <span class="_ _3"></span>dealing</div><div class="t m0 x32 h55 y2bb6 ff19 fs2c fc0 sc0 ls0 ws0">naively with <span class="_ _2"></span>signals.<span class="_ _61"> </span>The <span class="_ _2"></span>following <span class="_ _2"></span>sections <span class="_ _2"></span>will show <span class="_ _2"></span>ways <span class="_ _2"></span>around all <span class="_ _2"></span>these <span class="_ _2"></span>problems,</div><div class="t m0 x32 h55 y2bb7 ff19 fs2c fc0 sc0 ls0 ws0">so we can handle signals reliably<span class="_ _4"></span><span class="ls142">,w<span class="_ _d"></span><span class="ls0">ithout interfering with other pieces of code.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
