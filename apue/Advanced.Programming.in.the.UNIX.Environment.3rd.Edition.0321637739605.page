<div id="pf25d" class="pf w4 h1f" data-page-no="25d"><div class="pc pc25d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg25d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>15.9<span class="_ _24c"> </span>Shar<span class="_ _0"></span>ed <span class="_"> </span>Memory<span class="_ _1b"> </span><span class="ff18">571</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">byte; <span class="_ _2"></span>to <span class="_ _3"></span>release <span class="_ _2"></span>it, <span class="_ _2"></span>we <span class="_ _3"></span>unlock <span class="_ _2"></span>the <span class="_ _3"></span>byte.<span class="_ _61"> </span>The <span class="_ _3"></span>recor<span class="_ _0"></span><span class="ls1258">dl<span class="_ _8"></span><span class="ls0">ocking <span class="_ _3"></span>properties <span class="_ _2"></span>guarantee <span class="_ _2"></span>that <span class="_ _3"></span>if <span class="_ _2"></span>a</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">process terminates while holding a lock, the kernel automatically r<span class="_ _0"></span>eleases the lock.</div><div class="t m0 x3f h2a y131 ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _45"> </span>u<span class="_ _9"></span><span class="ls0">se <span class="_ _53"> </span>a <span class="_ _42"> </span>mutex, <span class="_ _53"> </span>we <span class="_ _42"> </span>need <span class="_ _53"> </span>both <span class="_ _42"> </span>processes <span class="_ _42"> </span>to <span class="_ _53"> </span>map <span class="_ _42"> </span>the <span class="_ _53"> </span>same <span class="_ _42"> </span>ﬁle <span class="_ _53"> </span>into <span class="_ _42"> </span>their <span class="_ _42"> </span>address</span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">spaces <span class="_ _60"> </span>and <span class="_ _48"> </span>initialize <span class="_ _60"> </span>a <span class="_ _60"> </span>mutex <span class="_ _60"> </span>at <span class="_ _48"> </span>the <span class="_ _60"> </span>same <span class="_ _60"> </span>offset <span class="_ _48"> </span>in <span class="_ _60"> </span>the <span class="_ _60"> </span>ﬁle <span class="_ _60"> </span>using <span class="_ _48"> </span>the</div><div class="t m0 x32 h26 y133 ff1a fsf fc0 sc0 ls0 ws0">PTHREAD_PROCESS_SHARED<span class="_ _59"> </span><span class="ff19">mutex <span class="_"> </span>attribute.<span class="_ _48"> </span><span class="ls5f">To <span class="_ _44"> </span>a<span class="_ _9"></span></span>llocate <span class="_"> </span>the <span class="_"> </span>r<span class="_ _0"></span>esource, <span class="_ _e"> </span>we <span class="_"> </span>lock <span class="_ _e"> </span>the</span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">mutex; <span class="_ _23"> </span>to <span class="_ _42"> </span>release <span class="_ _23"></span>the <span class="_ _23"></span>resour<span class="_ _0"></span>ce, <span class="_ _23"> </span>we <span class="_ _42"> </span>unlock <span class="_ _23"></span>the <span class="_ _23"> </span>mutex.<span class="_ _54"> </span>If <span class="_ _23"></span>a <span class="_ _23"> </span>process <span class="_ _23"> </span>terminates <span class="_ _42"> </span>without</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">leasing <span class="_ _66"> </span>the <span class="_ _66"> </span>mutex, <span class="_ _66"> </span>recovery <span class="_"> </span>is <span class="_"> </span>difﬁcult <span class="_"> </span>unless <span class="_ _66"> </span>we <span class="_ _66"> </span>use <span class="_"> </span>a <span class="_ _66"> </span>robust <span class="_"> </span>mutex <span class="_ _66"> </span>(recall <span class="_"> </span>the</span></div><div class="t m0 x32 h26 y136 ff1a fsf fc0 sc0 ls0 ws0">pthread_mutex_consistent<span class="_ _80"> </span><span class="ff19">function discussed in Section 12.4.1).</span></div><div class="t m0 x3f h2a y137 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls480">e1<span class="_ _b"></span><span class="ls0">5.29 <span class="_ _3"></span>shows <span class="_ _9"></span>the <span class="_ _9"></span>time <span class="_ _9"></span>requir<span class="_ _0"></span>ed <span class="_ _3"></span>to <span class="_ _9"></span>perform <span class="_ _9"></span>these <span class="_ _9"></span>three <span class="_ _3"></span>locking <span class="_ _9"></span>techniques <span class="_ _9"></span>on</span></span></div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">Linux. <span class="_ _47"> </span>In<span class="_ _47"> </span>each <span class="_ _3"></span>case, <span class="_ _2"></span>the <span class="_ _3"></span>resource <span class="_ _2"></span>was <span class="_ _3"></span>allocated <span class="_ _3"></span>and <span class="_ _3"></span>then <span class="_ _2"></span>released <span class="_ _3"></span>1,000,000 <span class="_ _3"></span>times.<span class="_ _61"> </span>This</div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls0 ws0">was done <span class="_ _2"></span>simultaneously <span class="_ _2"></span>by <span class="_ _2"></span>three <span class="_ _2"></span>differ<span class="_ _0"></span>ent processes. <span class="_ _66"> </span>The<span class="_ _66"> </span>times <span class="_ _2"></span>in <span class="_ _2"></span>Figur<span class="ls81d">e1<span class="_ _4f"></span><span class="ls0">5.29 <span class="_ _2"></span>ar<span class="ls81d">et<span class="_ _4f"></span><span class="ls0">he</span></span></span></span></div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">totals in seconds for all three pr<span class="_ _0"></span>ocesses.</div><div class="t m0 x1d2 h2d y450c ff19 fs10 fc0 sc0 ls0 ws0">Operation <span class="_ _6f"> </span>User<span class="_ _87"> </span>System <span class="_ _6d"> </span>Clock</div><div class="t m0 xea h2e y450d ff19 fs11 fc0 sc0 ls0 ws0">semaphores with undo<span class="_ _1a8"> </span>0.50 <span class="_ _15"> </span>6.08 <span class="_ _15"> </span>7.55</div><div class="t m0 xea h2e y450e ff19 fs11 fc0 sc0 ls0 ws0">advisory recor<span class="_ _0"></span><span class="lsdb">dl<span class="_ _84"></span><span class="ls0">ocking <span class="_ _76"> </span>0.51<span class="_ _1c4"> </span>9.06 <span class="_ _2a8"> </span>4.38</span></span></div><div class="t m0 xea h2e y450f ff19 fs11 fc0 sc0 ls0 ws0">mutex in shared memory<span class="_ _1fb"> </span>0.21 <span class="_ _2a8"> </span>0.40 <span class="_ _15"> </span>0.25</div><div class="t m0 x12f h2f y4510 ff18 fs12 fc0 sc0 ls0 ws0">Figure 15.29<span class="_ _5a"> </span><span class="ff19 ls3b5">Ti<span class="_ _3"></span><span class="ls0">ming comparison of locking alternatives on Linux</span></span></div><div class="t m0 x3f h50 y4511 ff19 fs29 fc0 sc0 ls0 ws0">On <span class="_ _2"></span>Linux, <span class="_ _2"></span>recor<span class="ls1259">dl<span class="_ _8"></span><span class="ls0">ocking <span class="_ _2"></span>is <span class="_ _2"></span>faster <span class="_ _3"></span>than <span class="_ _2"></span>semaphores, but <span class="_ _3"></span>mutexes <span class="_ _2"></span>in <span class="_ _2"></span>shared <span class="_ _2"></span>memory</span></span></div><div class="t m0 x32 h50 y4512 ff19 fs29 fc0 sc0 ls0 ws0">outperform <span class="_ _2"></span>both <span class="_ _2"></span>semaphores and <span class="_ _3"></span>recor<span class="_ _0"></span><span class="ls125a">dl<span class="_ _8"></span><span class="ls0">ocking. <span class="_ _47"> </span>If<span class="_ _66"> </span>we’r<span class="ls125a">el<span class="_ _4f"></span><span class="ls0">ocking <span class="_ _2"></span>a <span class="_ _2"></span>single <span class="_ _2"></span>resource and</span></span></span></span></div><div class="t m0 x32 h50 y4513 ff19 fs29 fc0 sc0 ls0 ws0">don’t <span class="_ _42"> </span>need <span class="_ _42"> </span>all <span class="_ _42"> </span>the <span class="_ _23"> </span>fancy <span class="_ _42"> </span>features <span class="_ _42"> </span>of <span class="_ _42"> </span>XSI <span class="_ _42"> </span>semaphores, <span class="_ _23"></span>recor<span class="_ _0"></span><span class="ls125b">dl<span class="_ _43"></span><span class="ls0">ocking <span class="_ _23"> </span>is <span class="_ _42"> </span>preferred <span class="_ _23"> </span>over</span></span></div><div class="t m0 x32 h50 y4514 ff19 fs29 fc0 sc0 ls0 ws0">semaphores. <span class="_ _61"> </span>The<span class="_ _16"> </span><span class="lsdf">re<span class="_ _2"></span></span>asons <span class="_ _47"> </span>ar<span class="ls125c">et<span class="_ _62"></span><span class="ls0">hat <span class="_ _45"> </span>it <span class="_ _47"> </span>is <span class="_ _47"> </span>much <span class="_ _47"> </span>simpler <span class="_ _45"> </span>to <span class="_ _47"> </span>use, <span class="_ _47"> </span>it <span class="_ _45"> </span>is <span class="_ _47"> </span>faster <span class="_ _47"> </span>(on <span class="_ _47"> </span>this</span></span></div><div class="t m0 x32 h50 y4515 ff19 fs29 fc0 sc0 ls0 ws0">platform), <span class="_ _9"></span>and <span class="_ _3"></span>the <span class="_ _9"></span>system <span class="_ _9"></span>takes <span class="_ _9"></span>care<span class="_ _47"> </span>of<span class="_ _45"> </span>any <span class="_ _9"></span>lingering <span class="_ _9"></span>locks <span class="_ _9"></span>when <span class="_ _3"></span>a <span class="_ _9"></span>process <span class="_ _3"></span>terminates.</div><div class="t m0 x32 h50 y4516 ff19 fs29 fc0 sc0 ls0 ws0">Even <span class="_ _2"></span>though <span class="_ _2"></span>using <span class="_ _2"></span>a <span class="_ _2"></span>mutex <span class="_ _2"></span>in <span class="_ _3"></span>shared memory <span class="_ _2"></span>is <span class="_ _3"></span>the <span class="_ _2"></span>fastest <span class="_ _2"></span>option <span class="_ _2"></span>on <span class="_ _2"></span>this <span class="_ _2"></span>platform, <span class="_ _3"></span>we</div><div class="t m0 x32 h50 y4517 ff19 fs29 fc0 sc0 ls0 ws0">still <span class="_ _3"></span>prefer <span class="_ _2"></span>to <span class="_ _3"></span>use <span class="_ _3"></span>recor<span class="ls125d">dl<span class="_ _b"></span><span class="ls0">ocking, <span class="_ _3"></span>unless <span class="_ _3"></span>performance <span class="_ _3"></span>is <span class="_ _9"></span>the <span class="_ _2"></span>primary <span class="_ _9"></span>concern.<span class="_ _61"> </span>Ther<span class="ls125d">ea<span class="_ _8"></span><span class="lsdf">re</span></span></span></span></div><div class="t m0 x32 h50 y4518 ff19 fs29 fc0 sc0 ls0 ws0">two <span class="_ _9"></span>reasons <span class="_ _23"></span>for <span class="_ _9"></span>this. <span class="_ _23"> </span>First, <span class="_ _23"></span>recovery <span class="_ _9"></span>from <span class="_ _9"></span>process <span class="_ _9"></span>termination <span class="_ _23"></span>is <span class="_ _23"></span>mor<span class="_ _0"></span><span class="ls125e">ed<span class="_ _b"></span><span class="ls0">if<span class="_ _0"></span>ﬁcult <span class="_ _9"></span>using <span class="_ _23"> </span>a</span></span></div><div class="t m0 x32 h5b y4519 ff19 fs29 fc0 sc0 ls0 ws0">mutex <span class="_ _23"></span>in <span class="_ _9"></span>memory <span class="_ _23"> </span>shared <span class="_ _23"></span>among <span class="_ _9"></span>multiple <span class="_ _23"> </span>processes. <span class="_ _45"> </span>Second,<span class="_ _35"> </span>the<span class="_ _45"> </span><span class="ff1b">process-shared<span class="_ _45"> </span></span>mutex</div><div class="t m0 x32 h50 y451a ff19 fs29 fc0 sc0 ls0 ws0">attribute <span class="_ _44"> </span>isn’t <span class="_ _44"> </span>universally <span class="_ _44"> </span>supported <span class="_ _44"> </span>yet.<span class="_ _98"> </span>In <span class="_ _44"> </span>older <span class="_ _44"> </span>versions <span class="_ _44"> </span>of <span class="_ _44"> </span>the <span class="_ _44"> </span>Single <span class="_ _44"> </span>UNIX</div><div class="t m0 x32 h50 y451b ff19 fs29 fc0 sc0 ls0 ws0">Speciﬁcation, <span class="_ _3"></span>it <span class="_ _9"></span>was <span class="_ _9"></span>optional.<span class="_ _5a"> </span>Although <span class="_ _3"></span>it <span class="_ _9"></span>is <span class="_ _9"></span>still <span class="_ _9"></span>optional <span class="_ _3"></span>in <span class="_ _9"></span>SUSv4, <span class="_ _9"></span>it <span class="_ _9"></span>is <span class="_ _3"></span>now <span class="_ _9"></span>required</div><div class="t m0 x32 h50 y451c ff19 fs29 fc0 sc0 ls0 ws0">by all XSI-conforming implementations.</div><div class="t m0 x76 h2f y451d ff19 fs12 fc0 sc0 ls0 ws0">Of the four <span class="_ _2"></span>platforms covered in <span class="_ _2"></span>this text, <span class="_ _2"></span>only Linux <span class="_ _2"></span>3.2.0 and Solaris <span class="_ _2"></span>10 currently support <span class="_ _2"></span>the</div><div class="t m0 x76 hd1 y451e ff1b fs12 fc0 sc0 ls0 ws0">process-shar<span class="_ _0"></span>ed<span class="_"> </span><span class="ff19">mutex attribute.</span></div><div class="t m0 x35 h78 y451f ff16 fs3a fc0 sc0 ls0 ws0">15.9 <span class="_ _93"> </span>Shared<span class="_ _54"> </span>Memor <span class="_ _b"></span>y</div><div class="t m0 x32 h6e yd78 ff19 fs31 fc0 sc0 ls0 ws0">Shared <span class="_ _2"></span>memory <span class="_ _3"></span>allows <span class="_ _3"></span>two <span class="_ _3"></span>or <span class="_ _3"></span>mor<span class="ls125f">ep<span class="_ _b"></span><span class="ls225">ro<span class="_ _2"></span><span class="ls0">cesses <span class="_ _3"></span>to <span class="_ _3"></span>shar<span class="ls125f">eag<span class="_ _8"></span><span class="ls0">iven <span class="_ _2"></span>region <span class="_ _3"></span>of <span class="_ _3"></span>memory<span class="_ _4"></span><span class="ls1260">.T<span class="_ _1d"></span><span class="ls0">his</span></span></span></span></span></span></span></div><div class="t m0 x32 h6e y4520 ff19 fs31 fc0 sc0 ls0 ws0">is the fastest form of IPC, because the data does not need to be copied between the client</div><div class="t m0 x32 h6e y4521 ff19 fs31 fc0 sc0 ls0 ws0">and <span class="_ _42"> </span>the <span class="_ _53"> </span>server<span class="_ _1"></span><span class="ls1261">.T<span class="_ _52"></span><span class="ls0">he <span class="_ _42"> </span>only <span class="_ _53"> </span>trick <span class="_ _53"> </span>in <span class="_ _42"> </span>using <span class="_ _53"> </span>shared <span class="_ _42"> </span>memory <span class="_ _53"> </span>is <span class="_ _53"> </span>synchronizing <span class="_ _42"> </span>access <span class="_ _53"> </span>to <span class="_ _42"> </span>a</span></span></div><div class="t m0 x32 h6e y4522 ff19 fs31 fc0 sc0 ls0 ws0">given <span class="_"> </span>r<span class="_ _1"></span>egion <span class="_"> </span>among <span class="_"> </span>multiple <span class="_ _e"> </span>processes. <span class="_ _4b"> </span>If<span class="_ _46"> </span>the <span class="_"> </span>server <span class="_ _e"> </span>is <span class="_"> </span>placing <span class="_ _e"> </span>data <span class="_"> </span>into <span class="_ _e"> </span>a <span class="_"> </span>shar<span class="_ _0"></span>ed</div><div class="t m0 x32 h6e y4523 ff19 fs31 fc0 sc0 ls0 ws0">memory <span class="_ _e"> </span>region, <span class="_ _e"> </span>the <span class="_ _e"> </span>client <span class="_"> </span>shouldn’t <span class="_ _53"> </span>try <span class="_"> </span>to <span class="_ _e"> </span>access <span class="_ _e"> </span>the <span class="_"> </span>data <span class="_ _53"> </span>until <span class="_"> </span>the <span class="_ _e"> </span>server <span class="_ _e"> </span>is <span class="_"> </span>done.</div><div class="t m0 x32 h6e y4524 ff19 fs31 fc0 sc0 ls0 ws0">Often, <span class="_ _9"></span>semaphores <span class="_ _9"></span>ar<span class="ls1262">eu<span class="_ _b"></span><span class="ls0">sed <span class="_ _9"></span>to <span class="_ _23"></span>synchronize <span class="_ _9"></span>shared <span class="_ _9"></span>memory <span class="_ _23"></span>access.<span class="_ _5a"> </span>(But <span class="_ _23"></span>as <span class="_ _9"></span>we <span class="_ _23"></span>saw <span class="_ _9"></span>at</span></span></div><div class="t m0 x32 h6e y4525 ff19 fs31 fc0 sc0 ls0 ws0">the end of the previous section, r<span class="_ _0"></span>ecor<span class="_ _0"></span><span class="ls229">dl<span class="_ _d"></span><span class="ls0">ocking or mutexes can also be used.)</span></span></div><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.893467px;bottom:306.410992px;width:129.480294px;height:19.680008px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
