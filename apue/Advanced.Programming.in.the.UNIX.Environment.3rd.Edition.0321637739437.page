<div id="pf1b5" class="pf w4 h1f" data-page-no="1b5"><div class="pc pc1b5 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1b5.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">403</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x32 h57 y13a0 ff1a fs2d fc0 sc0 ls0 ws0">#define NHASH 29</div><div class="t m0 x32 h57 y846 ff1a fs2d fc0 sc0 ls0 ws0">#define HASH(id) (((unsigned long)id)%NHASH)</div><div class="t m0 x32 h57 y366 ff1a fs2d fc0 sc0 ls0 ws0">struct foo *fh[NHASH];</div><div class="t m0 x32 h57 y3341 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_t hashlock = PTHREAD_MUTEX_INITIALIZER;</div><div class="t m0 x32 h57 y3342 ff1a fs2d fc0 sc0 ls0 ws0">struct foo {</div><div class="t m0 x8a h57 y3062 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>f_count;</div><div class="t m0 x8a h57 y3063 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_t f_lock;</div><div class="t m0 x8a h57 y3064 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>f_id;</div><div class="t m0 x8a h57 y36c ff1a fs2d fc0 sc0 ls0 ws0">struct foo<span class="_ _8a"> </span>*f_next; /* protected by hashlock */</div><div class="t m0 x8a h57 y36d ff1a fs2d fc0 sc0 ls0 ws0">/* ... more stuff here ... */</div><div class="t m0 x32 h57 y13a2 ff1a fs2d fc0 sc0 ls0 ws0">};</div><div class="t m0 x32 h57 y36f ff1a fs2d fc0 sc0 ls0 ws0">struct foo *</div><div class="t m0 x32 h57 y3343 ff1a fs2d fc0 sc0 ls0 ws0">foo_alloc(int id) /* allocate the object */</div><div class="t m0 x32 h57 y3344 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y3345 ff1a fs2d fc0 sc0 ls0 ws0">struct foo<span class="_ _d9"> </span>*fp;</div><div class="t m0 x8a h57 y3346 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _186"> </span>idx;</div><div class="t m0 x8a h57 y3347 ff1a fs2d fc0 sc0 ls0 ws0">if ((fp = malloc(sizeof(struct foo))) != NULL) {</div><div class="t m0 x9d h57 y3348 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_count = 1;</div><div class="t m0 x9d h57 y3349 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_id = id;</div><div class="t m0 x9d h57 y1fe1 ff1a fs2d fc0 sc0 ls0 ws0">if (pthread_mutex_init(&amp;fp-&gt;f_lock, NULL) != 0) {</div><div class="t m0 x1f h57 y1fe2 ff1a fs2d fc0 sc0 ls0 ws0">free(fp);</div><div class="t m0 x1f h57 y1fe3 ff1a fs2d fc0 sc0 ls0 ws0">return(NULL);</div><div class="t m0 x9d h57 y1fe4 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y334a ff1a fs2d fc0 sc0 ls0 ws0">idx = HASH(id);</div><div class="t m0 x9d h57 y334b ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;hashlock);</div><div class="t m0 x9d h57 y334c ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_next = fh[idx];</div><div class="t m0 x9d h57 y2e91 ff1a fs2d fc0 sc0 ls0 ws0">fh[idx] = fp;</div><div class="t m0 x9d h57 y2e92 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;fp-&gt;f_lock);</div><div class="t m0 x9d h57 y2e93 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x9d h57 y860 ff1a fs2d fc0 sc0 ls0 ws0">/* ... continue initialization ... */</div><div class="t m0 x9d h57 y2e94 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;fp-&gt;f_lock);</div><div class="t m0 x8a h57 y2e95 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y334d ff1a fs2d fc0 sc0 ls0 ws0">return(fp);</div><div class="t m0 x32 h57 y334e ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y2e98 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y2e99 ff1a fs2d fc0 sc0 ls0 ws0">foo_hold(struct foo *fp) /* add a reference to the object */</div><div class="t m0 x32 h57 y334f ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y3350 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;fp-&gt;f_lock);</div><div class="t m0 x8a h57 y3351 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_count++;</div><div class="t m0 x8a h57 y3352 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;fp-&gt;f_lock);</div><div class="t m0 x32 h57 y3353 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y3354 ff1a fs2d fc0 sc0 ls0 ws0">struct foo *</div><div class="t m0 x32 h57 y3355 ff1a fs2d fc0 sc0 ls0 ws0">foo_find(int id) /* find an existing object */</div><div class="t m0 x32 h57 y3356 ff1a fs2d fc0 sc0 ls0 ws0">{</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
