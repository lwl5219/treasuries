<div id="pf190" class="pf w4 h1f" data-page-no="190"><div class="pc pc190 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg190.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">366<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x76 h52 y2a3 ff19 fs2a fc0 sc0 ls0 ws0">4.3BSD <span class="_ _23"> </span>generated <span class="_ _23"> </span>the<span class="_ _47"> </span><span class="ff1a">SIGILL<span class="_ _47"> </span></span>signal. <span class="_ _45"> </span>Befor<span class="lscfd">ed<span class="_ _b"></span><span class="ls0">oing <span class="_ _23"> </span>this, <span class="_ _23"> </span>the <span class="_ _23"> </span>4.3BSD <span class="_ _9"> </span>function <span class="_ _23"> </span>unblocked <span class="_ _23"> </span>the</span></span></div><div class="t m0 x76 h52 y2a4 ff19 fs2a fc0 sc0 ls0 ws0">signal <span class="_"> </span>and <span class="_"> </span>r<span class="_ _0"></span>eset <span class="_"> </span>its <span class="_"> </span>disposition <span class="_"> </span>to<span class="_ _35"> </span><span class="ff1a">SIG_DFL<span class="_ _35"> </span></span>(terminate <span class="_"> </span>with<span class="_ _35"> </span><span class="ff1a">core<span class="_ _44"> </span></span>ﬁle). <span class="_ _35"> </span>This<span class="_ _35"> </span>prevented <span class="_"> </span>a</div><div class="t m0 x76 h51 y2a5 ff19 fs2a fc0 sc0 ls0 ws0">process fr<span class="_ _0"></span>om either ignoring the signal or catching it.</div><div class="t m0 x76 h52 y2eda ff19 fs2a fc0 sc0 ls0 ws0">Historically<span class="_ _6"></span><span class="lscfe">,i<span class="_ _b"></span><span class="ls0">mplementations <span class="_ _23"> </span>of<span class="_ _35"> </span><span class="ff1a">abort<span class="_ _45"> </span></span>have <span class="_ _42"> </span>differed <span class="_ _42"> </span>in <span class="_ _42"> </span>how <span class="_ _42"> </span>they <span class="_ _42"> </span>deal <span class="_ _42"> </span>with <span class="_ _42"> </span>standar<span class="lscfe">dI<span class="_ _43"></span><span class="ls0">/O</span></span></span></span></div><div class="t m0 x76 h51 y2edb ff19 fs2a fc0 sc0 ls0 ws0">streams. <span class="_ _35"> </span>For<span class="_ _35"> </span>defensive <span class="_"> </span>programming <span class="_"> </span>and <span class="_"> </span>improved <span class="_"> </span>portability<span class="_ _6"></span>,<span class="_ _35"> </span>if<span class="_ _44"> </span>we<span class="_ _35"> </span>want <span class="_"> </span>standar<span class="lscff">dI<span class="_ _43"></span><span class="ls0">/O</span></span></div><div class="t m0 x76 h52 y2edc ff19 fs2a fc0 sc0 ls0 ws0">streams to <span class="_ _2"></span>be <span class="_ _3"></span>ﬂushed, <span class="_ _2"></span>we <span class="_ _2"></span>speciﬁcally <span class="_ _2"></span>do <span class="_ _3"></span>it <span class="_ _2"></span>befor<span class="lsd00">ec<span class="_ _5"></span><span class="ls0">alling<span class="_ _e"> </span><span class="ff1a">abort</span><span class="lsd01">.W<span class="_ _4a"></span><span class="ls0">e<span class="_ _80"> </span>do<span class="_ _80"> </span>this <span class="_ _2"></span>in <span class="_ _2"></span>the<span class="_ _80"> </span><span class="ff1a">err_dump</span></span></span></span></span></div><div class="t m0 x76 h51 y2edd ff19 fs2a fc0 sc0 ls0 ws0">function (Appendix B).</div><div class="t m0 x76 h52 y2ede ff19 fs2a fc0 sc0 ls0 ws0">Since most UNIX System implementations <span class="_ _2"></span>of<span class="_"> </span><span class="ff1a">tmpfile<span class="_ _e"> </span></span>call<span class="_"> </span><span class="ff1a">unlink<span class="_ _e"> </span></span>immediately after creating</div><div class="t m0 x76 h51 y2edf ff19 fs2a fc0 sc0 ls0 ws0">the ﬁle, the ISO C warning about temporary ﬁles does not usually concern us.</div><div class="t m0 x35 h27 y1571 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h26 y2ee0 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">0.25 shows an implementation of the<span class="_"> </span><span class="ff1a">abort<span class="_ _66"> </span></span>function as speciﬁed by POSIX.1.</span></span></div><div class="t m0 x32 h4e y2ee1 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;signal.h&gt;</div><div class="t m0 x32 h4e y2ee2 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x32 h4e y2ee3 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x32 h4e y2ee4 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;unistd.h&gt;</div><div class="t m0 x32 h4e y2ee5 ff1a fs28 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h4e y2ee6 ff1a fs28 fc0 sc0 ls0 ws0">abort(void) <span class="_ _186"> </span>/*<span class="_"> </span>POSIX-style abort() function */</div><div class="t m0 x32 h4e y2ee7 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y2ee8 ff1a fs28 fc0 sc0 ls0 ws0">sigset_t <span class="_ _bd"> </span>mask;</div><div class="t m0 x8a h4e y2ee9 ff1a fs28 fc0 sc0 ls0 ws0">struct sigaction<span class="_ _15"> </span>action;</div><div class="t m0 x8a h4e y2eea ff1a fs28 fc0 sc0 ls0 ws0">/* Caller can’t ignore SIGABRT, if so reset to default */</div><div class="t m0 x8a h4e y2eeb ff1a fs28 fc0 sc0 ls0 ws0">sigaction(SIGABRT, NULL, &amp;action);</div><div class="t m0 x8a h4e y2eec ff1a fs28 fc0 sc0 ls0 ws0">if (action.sa_handler == SIG_IGN) {</div><div class="t m0 x9d h4e y2eed ff1a fs28 fc0 sc0 ls0 ws0">action.sa_handler = SIG_DFL;</div><div class="t m0 x9d h4e y2eee ff1a fs28 fc0 sc0 ls0 ws0">sigaction(SIGABRT, &amp;action, NULL);</div><div class="t m0 x8a h4e y2eef ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y2ef0 ff1a fs28 fc0 sc0 ls0 ws0">if (action.sa_handler == SIG_DFL)</div><div class="t m0 x9d h4e y2ef1 ff1a fs28 fc0 sc0 ls0 ws0">fflush(NULL); <span class="_ _74"> </span>/*<span class="_"> </span>flush all open stdio streams */</div><div class="t m0 x8a h4e y2ef2 ff1a fs28 fc0 sc0 ls0 ws0">/* Caller can’t block SIGABRT; make sure it’s unblocked */</div><div class="t m0 x8a h4e y2ef3 ff1a fs28 fc0 sc0 ls0 ws0">sigfillset(&amp;mask);</div><div class="t m0 x8a h4e y2ef4 ff1a fs28 fc0 sc0 ls0 ws0">sigdelset(&amp;mask, SIGABRT);<span class="_ _d9"> </span>/* mask has only SIGABRT turned off */</div><div class="t m0 x8a h4e y2ef5 ff1a fs28 fc0 sc0 ls0 ws0">sigprocmask(SIG_SETMASK, &amp;mask, NULL);</div><div class="t m0 x8a h4e y2ef6 ff1a fs28 fc0 sc0 ls0 ws0">kill(getpid(), SIGABRT);<span class="_ _15"> </span>/* send the signal */</div><div class="t m0 x8a h4e y2ef7 ff1a fs28 fc0 sc0 ls0 ws0">/* If we’re here, process caught SIGABRT and returned */</div><div class="t m0 x8a h4e y2ef8 ff1a fs28 fc0 sc0 ls0 ws0">fflush(NULL); <span class="_ _12d"> </span>/*<span class="_"> </span>flush all open stdio streams */</div><div class="t m0 x8a h4e y2ef9 ff1a fs28 fc0 sc0 ls0 ws0">action.sa_handler = SIG_DFL;</div><div class="t m0 x8a h4e y2efa ff1a fs28 fc0 sc0 ls0 ws0">sigaction(SIGABRT, &amp;action, NULL);<span class="_ _d9"> </span>/* reset to default */</div><div class="t m0 x8a h4e y2efb ff1a fs28 fc0 sc0 ls0 ws0">sigprocmask(SIG_SETMASK, &amp;mask, NULL);<span class="_ _d9"> </span>/* just in case ... */</div><div class="t m0 x8a h4e y2efc ff1a fs28 fc0 sc0 ls0 ws0">kill(getpid(), SIGABRT);<span class="_ _1e7"> </span>/* and one more time */</div><div class="t m0 x8a h4e y2efd ff1a fs28 fc0 sc0 ls0 ws0">exit(1); <span class="_ _68"> </span>/*<span class="_"> </span>this should never be executed ... */</div><div class="t m0 x32 h4e y2efe ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x1d0 h4f y2eff ff18 fs11 fc0 sc0 ls0 ws0">Figure 10.25<span class="_ _5a"> </span><span class="ff19">Implementation of POSIX.1<span class="_"> </span><span class="ff1a">abort</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
