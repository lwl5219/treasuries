<div id="pf1a3" class="pf w4 h1f" data-page-no="1a3"><div class="pc pc1a3 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1a3.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.4 <span class="_ _283"> </span>Thread <span class="_"> </span>Cr<span class="_ _0"></span>eation<span class="_ _1b"> </span><span class="ff18">385</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y30ff ff1a fs2d fc0 sc0 ls0 ws0">int pthread_equal(pthread_t<span class="_"> </span><span class="ff1b">tid1</span><span class="ls15c">,p<span class="_ _1d"></span><span class="ls0">thread_t<span class="_"> </span><span class="ff1b">tid2</span>);</span></span></div><div class="t m0 x174 h5f y3100 ff19 fs2d fc0 sc0 ls0 ws0">Returns: nonzero<span class="_"> </span>if<span class="_"> </span>equal, 0 otherwise</div><div class="t m0 x76 h5e y3101 ff19 fs10 fc0 sc0 ls0 ws0">Linux <span class="_ _2"></span>3.2.0 <span class="_ _3"></span>uses <span class="_ _2"></span>an <span class="_ _3"></span>unsigned <span class="_ _2"></span>long <span class="_ _3"></span>integer <span class="_ _2"></span>for <span class="_ _3"></span>the<span class="_ _80"> </span><span class="ff1a">pthread_t<span class="_ _80"> </span></span>data <span class="_ _2"></span>type.<span class="_ _4b"> </span>Solaris <span class="_ _3"></span>10 <span class="_ _2"></span>represents</div><div class="t m0 x76 h5e y3102 ff19 fs10 fc0 sc0 ls0 ws0">the<span class="_ _45"> </span><span class="ff1a">pthread_t<span class="_ _47"> </span></span>data <span class="_ _23"> </span>type <span class="_ _42"> </span>as <span class="_ _23"> </span>an <span class="_ _23"> </span>unsigned <span class="_ _23"> </span>integer<span class="_ _1"></span><span class="lsd84">.F<span class="_ _5b"></span><span class="ls21d">re<span class="_ _2"></span><span class="ls0">eBSD <span class="_ _23"> </span>8.0 <span class="_ _23"> </span>and <span class="_ _42"> </span>Mac <span class="_ _23"> </span>OS <span class="_ _23"> </span>X <span class="_ _23"> </span>10.6.8 <span class="_ _23"> </span>use <span class="_ _42"> </span>a</span></span></span></div><div class="t m0 x76 h5e y3103 ff19 fs10 fc0 sc0 ls0 ws0">pointer to the<span class="_"> </span><span class="ff1a">pthread<span class="_ _53"> </span></span>structur<span class="ls136">ef<span class="_ _84"></span><span class="ls0">or the<span class="_"> </span><span class="ff1a">pthread_t<span class="_ _53"> </span></span>data type.</span></span></div><div class="t m0 x3f h4d y3104 ff19 fs26 fc0 sc0 lsd85 ws0">Ac<span class="_ _8"></span><span class="ls0">onsequence <span class="_ _3"></span>of <span class="_ _3"></span>allowing <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">pthread_t<span class="_ _45"> </span></span>data <span class="_ _2"></span>type <span class="_ _3"></span>to <span class="_ _9"></span>be <span class="_ _2"></span>a <span class="_ _9"></span>structur<span class="_ _0"></span>e<span class="_ _47"> </span>is<span class="_ _47"> </span>that <span class="_ _3"></span>there</span></div><div class="t m0 x32 h49 y3105 ff19 fs26 fc0 sc0 ls0 ws0">is <span class="_ _3"></span>no <span class="_ _3"></span>portable <span class="_ _3"></span>way <span class="_ _3"></span>to <span class="_ _3"></span>print <span class="_ _3"></span>its <span class="_ _3"></span>value.<span class="_ _16"> </span>Sometimes, <span class="_ _3"></span>it <span class="_ _3"></span>is <span class="_ _3"></span>useful <span class="_ _3"></span>to <span class="_ _3"></span>print <span class="_ _3"></span>thread <span class="_ _2"></span>IDs <span class="_ _3"></span>during</div><div class="t m0 x32 h49 y3106 ff19 fs26 fc0 sc0 ls0 ws0">program <span class="_ _23"> </span>debugging, <span class="_ _53"> </span>but <span class="_ _42"> </span>there<span class="_ _35"> </span>is<span class="_ _44"> </span>usually <span class="_ _53"> </span>no <span class="_ _42"> </span>need <span class="_ _42"> </span>to <span class="_ _42"> </span>do <span class="_ _53"> </span>so <span class="_ _42"> </span>otherwise.<span class="_ _54"> </span>At <span class="_ _42"> </span>worst, <span class="_ _42"> </span>this</div><div class="t m0 x32 h49 y3107 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">sults in nonportable debug code, so it is not much of a limitation.</span></div><div class="t m0 x3f h4d y3108 ff19 fs26 fc0 sc0 lsd3 ws0">At<span class="_ _d"></span><span class="ls0">hread can obtain its own thread ID by calling the<span class="_"> </span><span class="ff1a">pthread_self<span class="_ _e"> </span></span>function.</span></div><div class="t m0 x3f h4e y3109 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h4e y310a ff1a fs28 fc0 sc0 ls0 ws0">pthread_t pthread_self(void);</div><div class="t m0 x7f h7c y310b ff19 fs28 fc0 sc0 ls0 ws0">Returns: the thread ID of the calling thr<span class="_ _0"></span>ead</div><div class="t m0 x32 h54 y310c ff19 fs2c fc0 sc0 ls0 ws0">This <span class="_ _3"></span>function <span class="_ _9"></span>can <span class="_ _3"></span>be <span class="_ _9"></span>used <span class="_ _9"></span>with<span class="_ _47"> </span><span class="ff1a">pthread_equal<span class="_ _45"> </span></span>when <span class="_ _3"></span>a <span class="_ _9"></span>thread <span class="_ _3"></span>needs <span class="_ _3"></span>to <span class="_ _9"></span>identify <span class="_ _9"></span>data</div><div class="t m0 x32 h55 y310d ff19 fs2c fc0 sc0 ls0 ws0">structur<span class="_ _0"></span>es <span class="_ _2"></span>that <span class="_ _3"></span>ar<span class="lsd86">et<span class="_ _8"></span><span class="ls0">agged <span class="_ _3"></span>with <span class="_ _2"></span>its <span class="_ _3"></span>thread <span class="_ _2"></span>ID.<span class="_ _61"> </span>For <span class="_ _3"></span>example, <span class="_ _3"></span>a <span class="_ _2"></span>master <span class="_ _3"></span>thread <span class="_ _2"></span>might <span class="_ _2"></span>place</span></span></div><div class="t m0 x32 h55 y310e ff19 fs2c fc0 sc0 ls0 ws0">work <span class="_ _23"></span>assignments <span class="_ _9"></span>on <span class="_ _23"> </span>a <span class="_ _23"> </span>queue <span class="_ _23"> </span>and <span class="_ _23"></span>use <span class="_ _23"></span>the <span class="_ _23"></span>thr<span class="_ _0"></span>ead <span class="_ _23"></span>ID <span class="_ _23"></span>to <span class="_ _9"></span>control <span class="_ _23"></span>which <span class="_ _23"></span>jobs <span class="_ _9"></span>go <span class="_ _23"> </span>to <span class="_ _23"> </span>each</div><div class="t m0 x32 h55 y310f ff19 fs2c fc0 sc0 ls0 ws0">worker thread. <span class="_"> </span>This<span class="_"> </span>situation <span class="_ _2"></span>is illustrated <span class="_ _2"></span>in Figur<span class="lsd87">e1<span class="_ _b"></span><span class="ls0">1.1. <span class="_ _66"> </span>A<span class="_ _66"> </span>single <span class="_ _2"></span>master thread places</span></span></div><div class="t m0 x32 h55 y3110 ff19 fs2c fc0 sc0 ls0 ws0">new <span class="_ _53"> </span>jobs <span class="_ _e"> </span>on <span class="_ _e"> </span>a <span class="_ _53"> </span>work <span class="_ _e"> </span>queue.<span class="_ _48"> </span><span class="lsd88">Ap<span class="_ _55"></span><span class="ls0">ool <span class="_ _e"> </span>of <span class="_ _e"> </span>three <span class="_ _53"> </span>worker <span class="_ _53"> </span>threads <span class="_ _e"> </span>removes <span class="_ _53"> </span>jobs <span class="_ _53"> </span>from <span class="_ _53"> </span>the</span></span></div><div class="t m0 x32 h55 y3111 ff19 fs2c fc0 sc0 ls0 ws0">queue. <span class="_ _45"> </span>Instead<span class="_ _35"> </span>of <span class="_ _9"></span>allowing <span class="_ _23"></span>each <span class="_ _23"></span>thr<span class="_ _0"></span>ead <span class="_ _9"></span>to <span class="_ _23"> </span>process <span class="_ _9"></span>whichever <span class="_ _23"></span>job <span class="_ _23"></span>is <span class="_ _9"></span>at <span class="_ _23"></span>the <span class="_ _9"></span>head <span class="_ _23"> </span>of <span class="_ _23"></span>the</div><div class="t m0 x32 h55 y3112 ff19 fs2c fc0 sc0 ls0 ws0">queue, <span class="_ _23"></span>the <span class="_ _9"></span>master <span class="_ _23"> </span>thread <span class="_ _23"></span>controls <span class="_ _9"></span>job <span class="_ _23"></span>assignment <span class="_ _23"></span>by <span class="_ _9"></span>placing <span class="_ _23"> </span>the <span class="_ _23"> </span>ID <span class="_ _23"> </span>of <span class="_ _23"></span>the <span class="_ _23"></span>thread <span class="_ _9"></span>that</div><div class="t m0 x32 h55 y3113 ff19 fs2c fc0 sc0 ls0 ws0">should process the job in each job structure. <span class="_"> </span>Each<span class="_"> </span>worker thread then removes only jobs</div><div class="t m0 x32 h55 y3114 ff19 fs2c fc0 sc0 ls0 ws0">that ar<span class="ls142">et<span class="_ _4f"></span><span class="ls0">agged with its own thread ID.</span></span></div><div class="t m0 x35 h99 y3115 ff16 fs3b fc0 sc0 ls0 ws0">11.4 <span class="_ _93"> </span>Thread<span class="_ _54"> </span>Creation</div><div class="t m0 x32 h55 y3116 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _23"> </span>traditional <span class="_ _23"> </span>UNIX <span class="_ _42"> </span>process <span class="_ _9"></span>model <span class="_ _42"> </span>supports <span class="_ _23"> </span>only <span class="_ _23"> </span>one <span class="_ _42"> </span>thread <span class="_ _23"></span>of <span class="_ _23"></span>control <span class="_ _23"></span>per <span class="_ _23"></span>process.</div><div class="t m0 x32 h55 y3117 ff19 fs2c fc0 sc0 ls0 ws0">Conceptually<span class="_ _4"></span><span class="lsd89">,t<span class="_ _8"></span><span class="ls0">his <span class="_ _9"></span>is <span class="_ _3"></span>the <span class="_ _9"></span>same <span class="_ _3"></span>as <span class="_ _9"></span>a <span class="_ _3"></span>threads-based <span class="_ _3"></span>model <span class="_ _9"></span>whereby <span class="_ _2"></span>each <span class="_ _9"></span>process <span class="_ _3"></span>is <span class="_ _3"></span>made</span></span></div><div class="t m0 x32 h55 y3118 ff19 fs2c fc0 sc0 ls0 ws0">up of only one thread. <span class="_"> </span>W<span class="_ _1"></span>ith pthreads, when a pr<span class="_ _0"></span>ogram runs, it also starts out as a single</div><div class="t m0 x32 h55 y3119 ff19 fs2c fc0 sc0 ls0 ws0">process <span class="_ _23"></span>with <span class="_ _23"> </span>a <span class="_ _42"> </span>single <span class="_ _23"> </span>thread <span class="_ _42"> </span>of <span class="_ _23"> </span>control. <span class="_ _35"> </span>As<span class="_ _35"> </span>the <span class="_ _42"> </span>program <span class="_ _23"></span>runs, <span class="_ _23"> </span>its <span class="_ _42"> </span>behavior <span class="_ _23"> </span>should <span class="_ _42"> </span>be</div><div class="t m0 x32 h55 y311a ff19 fs2c fc0 sc0 ls0 ws0">indistinguishable <span class="_ _23"></span>from <span class="_ _9"></span>the <span class="_ _23"> </span>traditional <span class="_ _23"></span>process, <span class="_ _9"></span>until <span class="_ _23"> </span>it <span class="_ _23"> </span>creates <span class="_ _9"></span>mor<span class="lsd8a">et<span class="_ _b"></span><span class="ls0">hr<span class="_ _0"></span>eads <span class="_ _9"></span>of <span class="_ _23"> </span>control.</span></span></div><div class="t m0 x32 h54 y311b ff19 fs2c fc0 sc0 ls0 ws0">Additional threads can be cr<span class="_ _0"></span>eated by calling the<span class="_"> </span><span class="ff1a">pthread_create<span class="_ _80"> </span></span>function.</div><div class="t m0 x3f h5d y311c ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h5d y311d ff1a fs2f fc0 sc0 ls0 ws0">int pthread_create(pthread_t *restrict<span class="_"> </span><span class="ff1b">tidp</span>,</div><div class="t m0 x1d2 h5d y311e ff1a fs2f fc0 sc0 ls0 ws0">const pthread_attr_t *restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x1d2 h5d y311f ff1a fs2f fc0 sc0 ls0 ws0">void *(*<span class="ff1b">start_rtn</span>)(void *), void *restrict<span class="_"> </span><span class="ff1b">arg</span>);</div><div class="t m0 x78 hc2 y3120 ff19 fs2f fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.891993px;bottom:473.234997px;width:131.351998px;height:19.679016px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
