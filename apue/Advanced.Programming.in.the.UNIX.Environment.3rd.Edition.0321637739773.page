<div id="pf305" class="pf w4 h1f" data-page-no="305"><div class="pc pc305 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg305.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>19.6<span class="_ _30e"> </span>Using <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1a">pty<span class="_ _4b"> </span></span>Program<span class="_ _1b"> </span><span class="ff18">739</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _42"> </span>we <span class="_ _42"> </span>run <span class="_ _53"> </span>the<span class="_ _44"> </span><span class="ff1a">telnet<span class="_ _44"> </span></span>program <span class="_ _42"> </span>interactively<span class="_ _4"></span>,<span class="_ _44"> </span>we<span class="_ _44"> </span>wait <span class="_ _42"> </span>for <span class="_ _53"> </span>the <span class="_ _42"> </span>remote <span class="_ _42"> </span>host <span class="_ _42"> </span>to</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">prompt for <span class="_ _2"></span>a <span class="_ _2"></span>passwor<span class="ls15d8">db<span class="_ _4f"></span><span class="ls0">efore<span class="_"> </span>we<span class="_ _47"> </span>type <span class="_ _2"></span>it, <span class="_ _2"></span>but <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">pty<span class="_ _47"> </span></span>program doesn’t <span class="_ _2"></span>know <span class="_ _2"></span>to <span class="_ _2"></span>do <span class="_ _3"></span>this.</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">This <span class="_ _9"></span>is <span class="_ _3"></span>why <span class="_ _9"></span>it <span class="_ _9"></span>takes <span class="_ _9"></span>a <span class="_ _9"></span>mor<span class="ls60f">es<span class="_ _b"></span><span class="ls0">ophisticated <span class="_ _3"></span>program <span class="_ _9"></span>than<span class="_ _45"> </span><span class="ff1a">pty</span><span class="ls60f">,s<span class="_ _b"></span><span class="ls0">uch <span class="_ _9"></span>as<span class="_ _47"> </span><span class="ff1a">expect</span>,<span class="_ _45"> </span>to<span class="_ _45"> </span>drive</span></span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">an interactive program fr<span class="_ _0"></span>om a script ﬁle.</div><div class="t m0 x3f h26 y133 ff19 fsf fc0 sc0 ls0 ws0">Even <span class="_ _3"></span>running<span class="_ _47"> </span><span class="ff1a">pty<span class="_ _47"> </span></span>from <span class="_ _3"></span>the <span class="_ _3"></span>program <span class="_ _2"></span>in <span class="_ _3"></span>Figur<span class="lsc46">e1<span class="_ _8"></span><span class="ls0">5.18, <span class="_ _3"></span>as <span class="_ _3"></span>we <span class="_ _3"></span>showed <span class="_ _9"></span>earlier<span class="_ _6"></span><span class="ls1064">,d<span class="_ _8"></span><span class="ls0">oesn’t</span></span></span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">help, <span class="_ _9"></span>because <span class="_ _23"> </span>the <span class="_ _23"></span>program <span class="_ _9"></span>in <span class="_ _23"></span>Figur<span class="lsaff">e1<span class="_ _43"></span><span class="ls0">5.18 <span class="_ _23"></span>assumes <span class="_ _9"></span>that <span class="_ _23"> </span>each <span class="_ _23"></span>line <span class="_ _9"></span>it <span class="_ _23"> </span>writes <span class="_ _23"></span>to <span class="_ _9"></span>the <span class="_ _23"> </span>pipe</span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">generates <span class="_ _9"></span>exactly <span class="_ _23"></span>one <span class="_ _9"></span>line <span class="_ _23"> </span>on <span class="_ _23"></span>the <span class="_ _9"></span>other <span class="_ _23"></span>pipe.<span class="_ _5a"> </span><span class="ls65">Wi<span class="_ _3"></span></span>th <span class="_ _23"></span>an <span class="_ _9"></span>interactive <span class="_ _23"> </span>program, <span class="_ _9"></span>one <span class="_ _23"></span>line <span class="_ _9"></span>of</div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">input <span class="_ _42"> </span>may <span class="_ _23"> </span>generate <span class="_ _42"> </span>many <span class="_ _42"> </span>lines <span class="_ _42"> </span>of <span class="_ _42"> </span>output.<span class="_ _54"> </span>Furthermore, <span class="_ _23"></span>the <span class="_ _42"> </span>program <span class="_ _23"> </span>in <span class="_ _42"> </span>Figur<span class="ls15d9">e1<span class="_ _c"></span><span class="ls0">5.18</span></span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">always <span class="_ _42"> </span>sent <span class="_ _42"> </span>a <span class="_ _42"> </span>line <span class="_ _23"> </span>to <span class="_ _42"> </span>the <span class="_ _42"> </span>coprocess <span class="_ _42"> </span>befor<span class="ls15da">er<span class="_ _55"></span><span class="ls0">eading <span class="_ _42"> </span>from <span class="_ _42"> </span>it.<span class="_ _51"> </span>This <span class="_ _42"> </span>strategy <span class="_ _42"> </span>won’t <span class="_ _42"> </span>work</span></span></div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">when we want to read fr<span class="_ _0"></span>om the copr<span class="_ _0"></span>ocess befor<span class="ls44">es<span class="_ _4f"></span><span class="ls0">ending it anything.</span></span></div><div class="t m0 x3f h2a y139 ff19 fsf fc0 sc0 ls0 ws0">Ther<span class="ls15db">ea<span class="_ _5b"></span><span class="ls45">re <span class="_ _47"> </span>a <span class="_ _47"> </span>f<span class="ls0">ew <span class="_ _66"> </span>ways <span class="_ _66"> </span>to <span class="_ _66"> </span>proceed <span class="_"> </span>from <span class="_"> </span>here<span class="_ _59"> </span>to<span class="_ _46"> </span>be<span class="_ _61"> </span>able <span class="_"> </span>to <span class="_ _66"> </span>drive <span class="_ _66"> </span>an <span class="_ _66"> </span>interactive</span></span></span></div><div class="t m0 x32 h26 y13a ff19 fsf fc0 sc0 ls0 ws0">program from <span class="_ _2"></span>a <span class="_ _3"></span>script.<span class="_ _61"> </span><span class="ls5f">We <span class="_ _80"> </span>c<span class="_ _9"></span></span>ould <span class="_ _3"></span>add <span class="_ _2"></span>a <span class="_ _3"></span>command <span class="_ _2"></span>language <span class="_ _3"></span>and <span class="_ _2"></span>interpreter <span class="_ _2"></span>to<span class="_ _47"> </span><span class="ff1a">pty</span><span class="ls14d">,b<span class="_ _4f"></span><span class="ls0">ut</span></span></div><div class="t m0 x32 h26 y254 ff19 fsf fc0 sc0 lsd28 ws0">ar<span class="_ _4a"></span><span class="ls0">easonable <span class="_"> </span>command <span class="_ _e"> </span>language <span class="_"> </span>would <span class="_ _e"> </span>probably <span class="_"> </span>be <span class="_ _e"> </span>ten <span class="_"> </span>times <span class="_ _e"> </span>larger <span class="_"> </span>than <span class="_ _e"> </span>the<span class="_ _59"> </span><span class="ff1a">pty</span></span></div><div class="t m0 x32 h26 y255 ff19 fsf fc0 sc0 ls0 ws0">program. <span class="_ _59"> </span>Another<span class="_ _61"> </span>option <span class="_ _66"> </span>is <span class="_ _66"> </span>to <span class="_ _66"> </span>take <span class="_ _66"> </span>a <span class="_ _66"> </span>command <span class="_ _47"> </span>language <span class="_"> </span>and <span class="_ _66"> </span>use <span class="_ _66"> </span>the<span class="_ _61"> </span><span class="ff1a">pty_fork</span></div><div class="t m0 x32 h26 y13b ff19 fsf fc0 sc0 ls0 ws0">function to invoke interactive programs. <span class="_"> </span>This<span class="_"> </span>is what the<span class="_"> </span><span class="ff1a">expect<span class="_ _80"> </span></span>program does.</div><div class="t m0 x3f h26 y13c ff19 fsf fc0 sc0 ls5f ws0">We<span class="_ _9"></span><span class="ls0">’ll <span class="_ _9"></span>take <span class="_ _9"></span>a <span class="_ _3"></span>different <span class="_ _3"></span>path <span class="_ _9"></span>her<span class="ls480">ea<span class="_ _b"></span><span class="ls0">nd <span class="_ _3"></span>just <span class="_ _9"></span>provide <span class="_ _9"></span>an <span class="_ _3"></span>option <span class="_ _9"></span>(<span class="ff1a">-d</span>)<span class="_ _45"> </span>to<span class="_ _45"> </span>allow<span class="_ _47"> </span><span class="ff1a">pty<span class="_ _45"> </span></span>to <span class="_ _9"></span>be</span></span></span></div><div class="t m0 x32 h2a y256 ff19 fsf fc0 sc0 ls0 ws0">connected <span class="_ _53"> </span>to <span class="_ _e"> </span>a <span class="_ _e"> </span>driver <span class="_ _e"> </span>process <span class="_ _53"> </span>for <span class="_ _e"> </span>its <span class="_ _e"> </span>input <span class="_ _53"> </span>and <span class="_ _e"> </span>output.<span class="_ _48"> </span>The <span class="_ _53"> </span>standar<span class="ls15dc">do<span class="_ _55"></span><span class="ls0">utput <span class="_ _e"> </span>of <span class="_ _e"> </span>the</span></span></div><div class="t m0 x32 h26 y257 ff19 fsf fc0 sc0 ls0 ws0">driver is<span class="_"> </span><span class="ff1a">pty</span>’s standar<span class="lsb5d">di<span class="_ _4f"></span><span class="ls0">nput, and vice versa.<span class="_ _46"> </span>This is similar to a coprocess, but on ‘<span class="_ _1"></span>‘the</span></span></div><div class="t m0 x32 h26 y258 ff19 fsf fc0 sc0 ls0 ws0">other <span class="_ _66"> </span>side’<span class="lsa8d">’o<span class="_ _1d"></span><span class="ls0">f<span class="_ _61"> </span><span class="ff1a">pty</span><span class="ls15dd">.T<span class="_ _49"></span><span class="ls0">he <span class="_ _66"> </span>resulting <span class="_ _66"> </span>arrangement <span class="_ _47"> </span>of <span class="_ _47"> </span>processes <span class="_"> </span>is <span class="_ _47"> </span>almost <span class="_ _47"> </span>identical <span class="_ _66"> </span>to</span></span></span></span></div><div class="t m0 x32 h26 y161 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="lsb82">e1<span class="_ _c"></span><span class="ls0">9.15, <span class="_ _42"> </span>but <span class="_ _42"> </span>in <span class="_ _42"> </span>the <span class="_ _42"> </span>current <span class="_ _23"> </span>scenario,<span class="_ _44"> </span><span class="ff1a">pty<span class="_ _44"> </span></span>does <span class="_ _42"> </span>the<span class="_ _35"> </span><span class="ff1a">fork<span class="_ _44"> </span></span>and<span class="_ _44"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>of <span class="_ _42"> </span>the <span class="_ _42"> </span>driver</span></span></div><div class="t m0 x32 h2a y162 ff19 fsf fc0 sc0 ls0 ws0">process. <span class="_ _35"> </span>Also,<span class="_ _44"> </span>instead <span class="_ _53"> </span>of <span class="_ _42"> </span>two <span class="_ _42"> </span>half-duplex <span class="_ _53"> </span>pipes, <span class="_ _42"> </span>we’ll <span class="_ _53"> </span>use <span class="_ _42"> </span>a <span class="_ _42"> </span>single <span class="_ _53"> </span>bidirectional <span class="_ _42"> </span>pipe</div><div class="t m0 x32 h26 y1db ff19 fsf fc0 sc0 ls0 ws0">between<span class="_"> </span><span class="ff1a">pty<span class="_ _80"> </span></span>and the driver process.</div><div class="t m0 x3f h26 y25a ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls13e8">e1<span class="_ _b"></span><span class="ls0">9.16 <span class="_ _3"></span>shows <span class="_ _23"></span>the <span class="_ _9"></span>source <span class="_ _3"></span>for <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">do_driver<span class="_ _45"> </span></span>function, <span class="_ _9"></span>which <span class="_ _9"></span>is <span class="_ _9"></span>called <span class="_ _23"></span>by <span class="_ _9"></span>the</span></span></div><div class="t m0 x32 h26 y164 ff1a fsf fc0 sc0 ls0 ws0">main<span class="_ _80"> </span><span class="ff19">function of<span class="_"> </span></span>pty<span class="_ _66"> </span><span class="ff19">(Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">9.1<span class="_ _0"></span>1) when the<span class="_"> </span><span class="ff1a">-d<span class="_ _80"> </span></span>option is speciﬁed.</span></span></span></div><div class="t m0 x32 h4e y5509 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y550a ff1a fs28 fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h4e y550b ff1a fs28 fc0 sc0 ls0 ws0">do_driver(char *driver)</div><div class="t m0 x32 h4e y550c ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y550d ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>child;</div><div class="t m0 x8a h4e y550e ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>pipe[2];</div><div class="t m0 x8a h4e y550f ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x214 h4e y5510 ff1a fs28 fc0 sc0 ls1b6 ws0">*C<span class="_ _1d"></span><span class="ls0">reate a full-duplex pipe to communicate with the driver.</span></div><div class="t m0 x214 h4e y5511 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x8a h4e y5512 ff1a fs28 fc0 sc0 ls0 ws0">if (fd_pipe(pipe) &lt; 0)</div><div class="t m0 x9d h4e y5513 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;can’t create stream pipe&quot;);</div><div class="t m0 x8a h4e y5514 ff1a fs28 fc0 sc0 ls0 ws0">if ((child = fork()) &lt; 0) {</div><div class="t m0 x9d h4e y5515 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h4e y5516 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (child == 0) {<span class="_ _186"> </span>/* child */</span></div><div class="t m0 x9d h4e y5517 ff1a fs28 fc0 sc0 ls0 ws0">close(pipe[1]);</div><div class="t m0 x9d h4e y5518 ff1a fs28 fc0 sc0 ls0 ws0">/* stdin for driver */</div><div class="t m0 x9d h4e y5519 ff1a fs28 fc0 sc0 ls0 ws0">if (dup2(pipe[0], STDIN_FILENO) != STDIN_FILENO)</div><div class="t m0 x1f h4e y551a ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;dup2 error to stdin&quot;);</div><div class="t m0 x9d h4e y551b ff1a fs28 fc0 sc0 ls0 ws0">/* stdout for driver */</div><div class="t m0 x9d h4e y551c ff1a fs28 fc0 sc0 ls0 ws0">if (dup2(pipe[0], STDOUT_FILENO) != STDOUT_FILENO)</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
