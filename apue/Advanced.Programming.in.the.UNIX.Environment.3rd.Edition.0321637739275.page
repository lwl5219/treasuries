<div id="pf113" class="pf w4 h1f" data-page-no="113"><div class="pc pc113 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg113.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.6<span class="_ _225"> </span><span class="ff1a">wait<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">waitpid<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">241</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;sys/wait.h&gt;</div><div class="t m0 x32 h57 y13a0 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y846 ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h57 y847 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y13a1 ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h57 y1fb8 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>status;</div><div class="t m0 x8a h57 y848 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0)</div><div class="t m0 x9d h57 y849 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h57 y84a ff1a fs2d fc0 sc0 ls0 ws0">else if (pid == 0)<span class="_ _12d"> </span>/* child */</div><div class="t m0 x9d h57 y1fdc ff1a fs2d fc0 sc0 ls0 ws0">exit(7);</div><div class="t m0 x8a h57 y84c ff1a fs2d fc0 sc0 ls0 ws0">if (wait(&amp;status) != pid)<span class="_ _b7"> </span>/* wait for child */</div><div class="t m0 x9d h57 y84d ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;wait error&quot;);</div><div class="t m0 x8a h57 y84e ff1a fs2d fc0 sc0 ls0 ws0">pr_exit(status); <span class="_ _227"> </span>/*<span class="_"> </span>and print its status */</div><div class="t m0 x8a h57 y1fdd ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0)</div><div class="t m0 x9d h57 y1d3a ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h57 y1d3b ff1a fs2d fc0 sc0 ls0 ws0">else if (pid == 0)<span class="_ _12d"> </span>/* child */</div><div class="t m0 x9d h57 y1d3c ff1a fs2d fc0 sc0 ls0 ws0">abort(); <span class="_ _1e9"> </span>/*<span class="_"> </span>generates SIGABRT */</div><div class="t m0 x8a h57 y1fde ff1a fs2d fc0 sc0 ls0 ws0">if (wait(&amp;status) != pid)<span class="_ _b7"> </span>/* wait for child */</div><div class="t m0 x9d h57 y1fdf ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;wait error&quot;);</div><div class="t m0 x8a h57 y1fe0 ff1a fs2d fc0 sc0 ls0 ws0">pr_exit(status); <span class="_ _227"> </span>/*<span class="_"> </span>and print its status */</div><div class="t m0 x8a h57 y1fe1 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0)</div><div class="t m0 x9d h57 y1fe2 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h57 y1fe3 ff1a fs2d fc0 sc0 ls0 ws0">else if (pid == 0)<span class="_ _12d"> </span>/* child */</div><div class="t m0 x9d h57 y1fe4 ff1a fs2d fc0 sc0 ls0 ws0">status /= 0;<span class="_ _1e7"> </span>/* divide by 0 generates SIGFPE */</div><div class="t m0 x8a h57 y1fe5 ff1a fs2d fc0 sc0 ls0 ws0">if (wait(&amp;status) != pid)<span class="_ _b7"> </span>/* wait for child */</div><div class="t m0 x9d h57 y1fe6 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;wait error&quot;);</div><div class="t m0 x8a h57 y1fe7 ff1a fs2d fc0 sc0 ls0 ws0">pr_exit(status); <span class="_ _227"> </span>/*<span class="_"> </span>and print its status */</div><div class="t m0 x8a h57 y1fe8 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y1fe9 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x2f h5e y1fea ff18 fs10 fc0 sc0 ls0 ws0">Figure 8.6<span class="_ _5a"> </span><span class="ff19">Demonstrate various<span class="_"> </span><span class="ff1a">exit<span class="_ _e"> </span></span>statuses</span></div><div class="t m0 x32 h49 y1feb ff19 fs26 fc0 sc0 ls0 ws0">again. <span class="_ _45"> </span>What<span class="_ _45"> </span>we <span class="_ _9"></span>need <span class="_ _9"></span>is <span class="_ _9"></span>a <span class="_ _9"></span>function <span class="_ _9"></span>that <span class="_ _9"></span>waits <span class="_ _23"></span>for <span class="_ _9"></span>a <span class="_ _9"></span>speciﬁc <span class="_ _9"></span>process. <span class="_ _47"> </span>This<span class="_ _45"> </span>functionality</div><div class="t m0 x32 h4d y1fec ff19 fs26 fc0 sc0 ls0 ws0">(and more) is pr<span class="_ _0"></span>ovided by the POSIX.1<span class="_"> </span><span class="ff1a">waitpid<span class="_ _80"> </span></span>function.</div><div class="t m0 x3f h4d y1fed ff19 fs26 fc0 sc0 ls0 ws0">The interpretation of the<span class="_"> </span><span class="ff1b">pid<span class="_"> </span></span>ar<span class="_ _0"></span>gument for<span class="_"> </span><span class="ff1a">waitpid<span class="_ _80"> </span></span>depends on its value:</div><div class="t m0 x3f h4d y1fee ff1b fs26 fc0 sc0 ls0 ws0">pid<span class="_ _59"> </span><span class="ff1a">==<span class="_ _46"> </span><span class="ff20">−<span class="ff19 ls9a5">1W<span class="_ _91"></span><span class="ls0">aits <span class="_ _2"></span>for <span class="_ _3"></span>any <span class="_ _9"></span>child <span class="_ _3"></span>process. <span class="_ _47"> </span>In<span class="_ _45"> </span>this <span class="_ _2"></span>respect,<span class="_ _47"> </span><span class="ff1a">waitpid<span class="_ _45"> </span></span>is <span class="_ _3"></span>equivalent</span></span></span></span></div><div class="t m0 x185 h4d y1fef ff19 fs26 fc0 sc0 ls0 ws0">to<span class="_"> </span><span class="ff1a">wait</span>.</div><div class="t m0 x3f h4d y1ff0 ff1b fs26 fc0 sc0 ls0 ws0">pid<span class="_ _59"> </span><span class="ff1a">&gt;<span class="_ _46"> </span><span class="ff19 ls9a6">0W<span class="_ _228"></span><span class="ls0">aits for the child whose process ID equals<span class="_"> </span><span class="ff1b">pid</span>.</span></span></span></div><div class="t m0 x3f h4d y1ff1 ff1b fs26 fc0 sc0 ls0 ws0">pid<span class="_ _59"> </span><span class="ff1a">==<span class="_ _46"> </span><span class="ff19 ls9a7">0W<span class="_ _229"></span><span class="ls0">aits <span class="_"> </span>for <span class="_"> </span>any <span class="_ _66"> </span>child <span class="_ _66"> </span>whose <span class="_ _66"> </span>process <span class="_"> </span>group <span class="_"> </span>ID <span class="_"> </span>equals <span class="_ _66"> </span>that <span class="_"> </span>of <span class="_ _66"> </span>the</span></span></span></div><div class="t m0 x185 h49 y1ff2 ff19 fs26 fc0 sc0 ls0 ws0">calling process. <span class="_"> </span>(W<span class="_ _4"></span><span class="lsd3">ed<span class="_ _5"></span><span class="ls0">iscuss process gr<span class="_ _1"></span>oups in Section 9.4.)</span></span></div><div class="t m0 x3f h4d y1ff3 ff1b fs26 fc0 sc0 ls0 ws0">pid<span class="_ _59"> </span><span class="ff1a">&lt;<span class="_ _46"> </span><span class="ff20">−<span class="ff19 ls9a8">1W<span class="_ _22a"></span><span class="ls0">aits <span class="_ _53"> </span>for <span class="_ _e"> </span>any <span class="_ _e"> </span>child <span class="_ _e"> </span>whose <span class="_ _e"> </span>process <span class="_ _53"> </span>group <span class="_ _53"> </span>ID <span class="_ _e"> </span>equals <span class="_ _e"> </span>the <span class="_ _e"> </span>absolute</span></span></span></span></div><div class="t m0 x185 h4a y1ff4 ff19 fs26 fc0 sc0 ls0 ws0">value of<span class="_"> </span><span class="ff1b">pid</span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
