<div id="pf1da" class="pf w4 h1f" data-page-no="1da"><div class="pc pc1da w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1da.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">440<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x3f h2b y12f ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _23"></span>only <span class="_ _9"></span>attribute <span class="_ _23"> </span>supported <span class="_ _23"></span>for <span class="_ _9"></span>reader–writer <span class="_ _23"></span>locks <span class="_ _9"></span>is <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1b">process-shar<span class="_ _1"></span>ed<span class="_ _35"> </span><span class="ff19">attribute.</span></span></div><div class="t m0 x32 h2b y130 ff19 fsf fc0 sc0 ls0 ws0">It <span class="_ _3"></span>is <span class="_ _3"></span>identical <span class="_ _3"></span>to <span class="_ _3"></span>the <span class="_ _3"></span>mutex<span class="_ _47"> </span><span class="ff1b">process-shared<span class="_ _47"> </span></span>attribute. <span class="_ _47"> </span>Just<span class="_ _47"> </span>as <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _3"></span>mutex<span class="_ _47"> </span><span class="ff1b">process-shared</span></div><div class="t m0 x32 h2b y131 ff19 fsf fc0 sc0 ls0 ws0">attributes, <span class="_ _9"></span>a <span class="_ _23"></span>pair <span class="_ _23"></span>of <span class="_ _9"></span>functions <span class="_ _23"></span>is <span class="_ _9"></span>provided <span class="_ _23"></span>to <span class="_ _9"></span>get <span class="_ _23"></span>and <span class="_ _9"></span>set <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1b">process-shared<span class="_ _45"> </span></span>attributes <span class="_ _9"></span>of</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ader–writer locks.</span></div><div class="t m0 x3f h57 y2685 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y36d1 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *</div><div class="t m0 x7f h57 y36d2 ff1a fs2d fc0 sc0 ls0 ws0">restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x7f h57 y36d3 ff1a fs2d fc0 sc0 ls0 ws0">int *restrict<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 x3f h57 y36d4 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_rwlockattr_setpshared(pthread_rwlockattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x7f h57 y36d5 ff1a fs2d fc0 sc0 ls0 ws0">int<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 xca h5f y36d6 ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x32 h49 y36d7 ff19 fs26 fc0 sc0 ls0 ws0">Although POSIX deﬁnes <span class="_ _2"></span>only one reader–writer lock <span class="_ _2"></span>attribute, implementations ar<span class="lsec0">ef<span class="_ _d"></span><span class="lscc">re<span class="ls0">e</span></span></span></div><div class="t m0 x32 h49 y36d8 ff19 fs26 fc0 sc0 ls0 ws0">to deﬁne additional, nonstandar<span class="lsd3">do<span class="_ _4f"></span><span class="ls0">nes.</span></span></div><div class="t m0 x32 h4b y36d9 ff16 fs27 fc0 sc0 ls0 ws0">12.4.3 <span class="_ _54"> </span>Condition<span class="_ _54"> </span><span class="lsd9c">Va<span class="_ _9"></span></span>riable <span class="_"> </span>Attrib<span class="_ _0"></span>utes</div><div class="t m0 x32 h49 y36da ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _9"></span>Single <span class="_ _9"></span>UNIX <span class="_ _23"></span>Speciﬁcation <span class="_ _9"></span>currently <span class="_ _9"></span>deﬁnes <span class="_ _9"></span>two <span class="_ _23"></span>attributes <span class="_ _9"></span>for <span class="_ _9"></span>condition <span class="_ _9"></span>variables:</div><div class="t m0 x32 h4a y36db ff19 fs26 fc0 sc0 ls0 ws0">the<span class="_ _47"> </span><span class="ff1b">process-shared<span class="_ _47"> </span></span>attribute <span class="_ _3"></span>and <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1b">clock<span class="_ _45"> </span></span>attribute. <span class="_ _47"> </span>As<span class="_ _45"> </span>with <span class="_ _3"></span>the <span class="_ _9"></span>other <span class="_ _3"></span>attribute <span class="_ _9"></span>objects, <span class="_ _3"></span>a</div><div class="t m0 x32 h49 y36dc ff19 fs26 fc0 sc0 ls0 ws0">pair of functions initialize and deinitialize condition variable attribute objects.</div><div class="t m0 x3f h4e y36dd ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h4e y36de ff1a fs28 fc0 sc0 ls0 ws0">int pthread_condattr_init(pthread_condattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 x3f h4e y36df ff1a fs28 fc0 sc0 ls0 ws0">int pthread_condattr_destroy(pthread_condattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 xca h7c y36e0 ff19 fs28 fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h60 y36e1 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _47"> </span><span class="ff1b">process-shar<span class="_ _1"></span>ed<span class="_ _47"> </span><span class="ff19">attribute <span class="_ _3"></span>is <span class="_ _3"></span>the <span class="_ _2"></span>same <span class="_ _3"></span>as <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _2"></span>other <span class="_ _3"></span>synchronization <span class="_ _2"></span>attributes.</span></span></div><div class="t m0 x32 h55 y36e2 ff19 fs2c fc0 sc0 ls0 ws0">It <span class="_ _9"></span>controls <span class="_ _9"></span>whether <span class="_ _9"></span>condition <span class="_ _23"></span>variables <span class="_ _9"></span>can <span class="_ _9"></span>be <span class="_ _23"></span>used <span class="_ _9"></span>by <span class="_ _9"></span>threads <span class="_ _9"></span>within <span class="_ _23"></span>a <span class="_ _9"></span>single <span class="_ _9"></span>process</div><div class="t m0 x32 h60 y36e3 ff19 fs2c fc0 sc0 ls0 ws0">only <span class="_ _9"></span>or <span class="_ _23"></span>from <span class="_ _9"></span>within <span class="_ _23"></span>multiple <span class="_ _9"></span>processes. <span class="_ _45"> </span>T<span class="_ _6"></span><span class="lsec1">oﬁ<span class="_ _b"></span><span class="ls0">nd <span class="_ _9"></span>the <span class="_ _23"></span>current <span class="_ _9"></span>value <span class="_ _9"></span>of <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1b">process-shared</span></span></span></div><div class="t m0 x32 h54 y36e4 ff19 fs2c fc0 sc0 ls0 ws0">attribute, <span class="_ _2"></span>we <span class="_ _3"></span>use <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">pthread_condattr_getpshared<span class="_ _47"> </span></span>function. <span class="_ _47"> </span>T<span class="_ _6"></span><span class="lsa9c">os<span class="_ _4f"></span><span class="ls0">et <span class="_ _3"></span>its <span class="_ _3"></span>value, <span class="_ _2"></span>we</span></span></div><div class="t m0 x32 h54 y36e5 ff19 fs2c fc0 sc0 ls0 ws0">use the<span class="_"> </span><span class="ff1a">pthread_condattr_setpshared<span class="_ _80"> </span></span>function.</div><div class="t m0 x3f h5d y36e6 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h5d y36e7 ff1a fs2f fc0 sc0 ls0 ws0">int pthread_condattr_getpshared(const pthread_condattr_t *</div><div class="t m0 x1cd h5d y36e8 ff1a fs2f fc0 sc0 ls0 ws0">restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x1cd h5d y36e9 ff1a fs2f fc0 sc0 ls0 ws0">int *restrict<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 x3f h5d y36ea ff1a fs2f fc0 sc0 ls0 ws0">int pthread_condattr_setpshared(pthread_condattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x1cd h5d y36eb ff1a fs2f fc0 sc0 ls0 ws0">int<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 xcb hc2 y36ec ff19 fs2f fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h5b y36ed ff19 fs29 fc0 sc0 ls0 ws0">The<span class="_ _16"> </span><span class="ff1b">clock<span class="_ _5a"> </span></span>attribute <span class="_ _45"> </span>controls <span class="_ _47"> </span>which <span class="_ _45"> </span>clock <span class="_ _45"> </span>is <span class="_ _47"> </span>used <span class="_ _45"> </span>when <span class="_ _45"> </span>evaluating <span class="_ _47"> </span>the <span class="_ _45"> </span>timeout</div><div class="t m0 x32 h5c y36ee ff19 fs29 fc0 sc0 ls0 ws0">argument <span class="_ _2"></span>(<span class="ff1b">tsptr</span>)<span class="_ _47"> </span>of<span class="_ _47"> </span>the<span class="_ _47"> </span><span class="ff1a">pthread_cond_timedwait<span class="_ _47"> </span></span>function. <span class="_ _47"> </span>The<span class="_ _47"> </span>legal <span class="_ _3"></span>values <span class="_ _3"></span>ar<span class="lsec2">et<span class="_ _8"></span><span class="ls0">he</span></span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:156.492009px;bottom:799.973988px;width:214.980988px;height:19.679017px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
