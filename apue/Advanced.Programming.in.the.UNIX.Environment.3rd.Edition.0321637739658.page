<div id="pf292" class="pf w4 h1f" data-page-no="292"><div class="pc pc292 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg292.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">624<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>c<span class="_ _9"></span><span class="ls0">an set a socket option with the<span class="_"> </span><span class="ff1a">setsockopt<span class="_ _66"> </span></span>function.</span></div><div class="t m0 x3f h57 ya9b ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x3f h57 y4a88 ff1a fs2d fc0 sc0 ls0 ws0">int setsockopt(int<span class="_"> </span><span class="ff1b">sockfd</span><span class="ls15c">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">level</span><span class="ls15c">,i<span class="_ _5b"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">option</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">onst void *<span class="ff1b">val</span>,</span></span></span></span></span></span></div><div class="t m0 x12b h57 y4a89 ff1a fs2d fc0 sc0 ls0 ws0">socklen_t<span class="_"> </span><span class="ff1b">len</span>);</div><div class="t m0 x153 h5f y4a8a ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h4a y4a8b ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_ _66"> </span><span class="ff1b">level<span class="_ _47"> </span></span>argument <span class="_ _2"></span>identiﬁes <span class="_ _2"></span>the <span class="_ _2"></span>protocol <span class="_ _2"></span>to <span class="_ _3"></span>which <span class="_ _2"></span>the <span class="_ _2"></span>option <span class="_ _3"></span>applies.<span class="_ _61"> </span>If <span class="_ _2"></span>the <span class="_ _3"></span>option <span class="_ _2"></span>is <span class="_ _3"></span>a</div><div class="t m0 x32 h4d y4a8c ff19 fs26 fc0 sc0 ls0 ws0">generic <span class="_ _23"></span>socket-level <span class="_ _23"></span>option, <span class="_ _23"></span>then<span class="_ _35"> </span><span class="ff1b">level<span class="_ _45"> </span></span>is <span class="_ _23"> </span>set <span class="_ _23"> </span>to<span class="_ _35"> </span><span class="ff1a">SOL_SOCKET</span><span class="ls137c">.O<span class="_ _26"></span><span class="ls0">therwise,<span class="_ _35"> </span><span class="ff1b">level<span class="_ _45"> </span></span>is <span class="_ _23"> </span>set <span class="_ _23"> </span>to</span></span></div><div class="t m0 x32 h4d y4a8d ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _23"> </span>number <span class="_ _42"> </span>of <span class="_ _23"></span>the <span class="_ _23"> </span>protocol <span class="_ _23"> </span>that <span class="_ _42"> </span>controls <span class="_ _9"></span>the <span class="_ _42"> </span>option.<span class="_ _51"> </span>Examples <span class="_ _23"> </span>are<span class="_ _35"> </span><span class="ff1a">IPPROTO_TCP<span class="_ _35"> </span></span>for</div><div class="t m0 x32 h4d y4a8e ff19 fs26 fc0 sc0 ls0 ws0">TCP <span class="_ _53"> </span>options <span class="_ _e"> </span>and<span class="_ _4b"> </span><span class="ff1a">IPPROTO_IP<span class="_ _4b"> </span></span>for <span class="_ _e"> </span>IP <span class="_ _53"> </span>options.<span class="_ _48"> </span>Figur<span class="ls137d">e1<span class="_ _55"></span><span class="ls0">6.21 <span class="_ _53"> </span>summarizes <span class="_ _e"> </span>the <span class="_ _e"> </span>generic</span></span></div><div class="t m0 x32 h49 y4a8f ff19 fs26 fc0 sc0 ls0 ws0">socket-level options deﬁned by the Single UNIX Speciﬁcation.</div><div class="t m0 x33 h56 y4a90 ff19 fs11 fc0 sc0 ls0 ws0">Option <span class="_ _e0"> </span>T<span class="_ _1"></span>ype of<span class="_"> </span><span class="ff1b">val<span class="_"> </span></span>argument <span class="_ _cb"> </span>Description</div><div class="t m0 x130 h6d y4a91 ff1a fs12 fc0 sc0 ls0 ws0">SO_ACCEPTCONN <span class="_ _48"> </span>int<span class="_ _19d"> </span><span class="ff19">Return whether a socket is enabled for listening</span></div><div class="t m0 x1df h6d y4a92 ff19 fs12 fc0 sc0 ls0 ws0">(<span class="ff1a">getsockopt<span class="_ _53"> </span></span>only).</div><div class="t m0 x130 h6d y4a93 ff1a fs12 fc0 sc0 ls0 ws0">SO_BROADCAST <span class="_ _6e"> </span>int<span class="_ _19d"> </span><span class="ff19">Broadcast datagrams if<span class="_"> </span></span>*val<span class="_ _53"> </span><span class="ff19">is nonzero.</span></div><div class="t m0 x130 h6d y4a94 ff1a fs12 fc0 sc0 ls0 ws0">SO_DEBUG <span class="_ _10b"> </span>int<span class="_ _253"> </span><span class="ff19">Debugging in network drivers enabled if<span class="_"> </span></span>*val<span class="_ _53"> </span><span class="ff19">is nonzero.</span></div><div class="t m0 x130 h6d y4a95 ff1a fs12 fc0 sc0 ls0 ws0">SO_DONTROUTE <span class="_ _6e"> </span>int<span class="_ _19d"> </span><span class="ff19">Bypass normal routing if<span class="_"> </span></span>*val<span class="_ _53"> </span><span class="ff19">is nonzero.</span></div><div class="t m0 x130 h6d y4a96 ff1a fs12 fc0 sc0 ls0 ws0">SO_ERROR <span class="_ _10b"> </span>int<span class="_ _253"> </span><span class="ff19">Return and clear pending socket error (</span>getsockopt<span class="_ _53"> </span><span class="ff19">only).</span></div><div class="t m0 x130 h6d y4a97 ff1a fs12 fc0 sc0 ls0 ws0">SO_KEEPALIVE <span class="_ _6e"> </span>int<span class="_ _19d"> </span><span class="ff19">Periodic keep-alive messages enabled if<span class="_"> </span></span>*val<span class="_ _e"> </span><span class="ff19">is nonzero.</span></div><div class="t m0 x130 h6d y4a98 ff1a fs12 fc0 sc0 ls0 ws0">SO_LINGER <span class="_ _6c"> </span>struct<span class="_"> </span>linger<span class="_ _78"> </span><span class="ff19">Delay time when unsent messages exist and socket is closed.</span></div><div class="t m0 x130 h6d y4a99 ff1a fs12 fc0 sc0 ls0 ws0">SO_OOBINLINE <span class="_ _6e"> </span>int<span class="_ _19d"> </span><span class="ff19">Out-of-band data placed inline with normal data if<span class="_"> </span></span>*val<span class="_ _e"> </span><span class="ff19">is</span></div><div class="t m0 x1df h2f y4a9a ff19 fs12 fc0 sc0 ls0 ws0">nonzero.</div><div class="t m0 x130 h6d y4a9b ff1a fs12 fc0 sc0 ls0 ws0">SO_RCVBUF <span class="_ _6c"> </span>int<span class="_ _19d"> </span><span class="ff19">The size in bytes of the receive buffer<span class="_ _6"></span>.</span></div><div class="t m0 x130 h6d y4a9c ff1a fs12 fc0 sc0 ls0 ws0">SO_RCVLOWAT <span class="_ _75"> </span>int<span class="_ _19d"> </span><span class="ff19">The minimum amount of data in bytes to return on a receive</span></div><div class="t m0 x1df h2f y4a9d ff19 fs12 fc0 sc0 ls0 ws0">call.</div><div class="t m0 x130 h6d y4a9e ff1a fs12 fc0 sc0 ls0 ws0">SO_RCVTIMEO <span class="_ _75"> </span>struct<span class="_"> </span>timeval<span class="_ _72"> </span><span class="ff19">The timeout value for a socket receive call.</span></div><div class="t m0 x130 h6d y4a9f ff1a fs12 fc0 sc0 ls0 ws0">SO_REUSEADDR <span class="_ _6e"> </span>int<span class="_ _19d"> </span><span class="ff19">Reuse addresses in<span class="_"> </span></span>bind<span class="_ _53"> </span><span class="ff19">if<span class="_"> </span></span>*val<span class="_ _e"> </span><span class="ff19">is nonzero.</span></div><div class="t m0 x130 h6d y4aa0 ff1a fs12 fc0 sc0 ls0 ws0">SO_SNDBUF <span class="_ _6c"> </span>int<span class="_ _19d"> </span><span class="ff19">The size in bytes of the send buffer<span class="_ _1"></span>.</span></div><div class="t m0 x130 h6d y4aa1 ff1a fs12 fc0 sc0 ls0 ws0">SO_SNDLOWAT <span class="_ _75"> </span>int<span class="_ _19d"> </span><span class="ff19">The minimum amount of data in bytes to transmit in a send</span></div><div class="t m0 x1df h2f y4aa2 ff19 fs12 fc0 sc0 ls0 ws0">call.</div><div class="t m0 x130 h6d y4aa3 ff1a fs12 fc0 sc0 ls0 ws0">SO_SNDTIMEO <span class="_ _75"> </span>struct<span class="_"> </span>timeval<span class="_ _72"> </span><span class="ff19">The timeout value for a socket send call.</span></div><div class="t m0 x130 h6d y4aa4 ff1a fs12 fc0 sc0 ls0 ws0">SO_TYPE <span class="_ _9f"> </span>int<span class="_ _19d"> </span><span class="ff19">Identify the socket type (</span>getsockopt<span class="_ _e"> </span><span class="ff19">only).</span></div><div class="t m0 x4b h30 y4aa5 ff18 fs13 fc0 sc0 ls0 ws0">Figure 16.21<span class="_ _5a"> </span><span class="ff19">Socket options</span></div><div class="t m0 x3f h79 y2127 ff19 fs31 fc0 sc0 ls0 ws0">The<span class="_ _47"> </span><span class="ff1b">val<span class="_ _47"> </span></span>argument <span class="_ _2"></span>points <span class="_ _3"></span>to <span class="_ _3"></span>a <span class="_ _2"></span>data <span class="_ _3"></span>structure<span class="_ _47"> </span>or<span class="_ _47"> </span>an<span class="_ _47"> </span>integer<span class="_ _6"></span><span class="ls137e">,d<span class="_ _4f"></span><span class="ls0">epending <span class="_ _2"></span>on <span class="_ _3"></span>the <span class="_ _3"></span>option.</span></span></div><div class="t m0 x32 h6e y4aa6 ff19 fs31 fc0 sc0 ls0 ws0">Some <span class="_ _2"></span>options <span class="_ _3"></span>ar<span class="ls137f">eo<span class="_ _8"></span><span class="ls0">n/of<span class="ls137f">fs<span class="_ _8"></span><span class="ls0">witches. <span class="_ _47"> </span>If<span class="_ _47"> </span>the <span class="_ _3"></span>integer <span class="_ _3"></span>is <span class="_ _3"></span>nonzero, <span class="_ _2"></span>then <span class="_ _3"></span>the <span class="_ _3"></span>option <span class="_ _3"></span>is <span class="_ _3"></span>enabled.</span></span></span></span></div><div class="t m0 x32 h79 y2128 ff19 fs31 fc0 sc0 ls0 ws0">If <span class="_ _3"></span>the <span class="_ _2"></span>integer <span class="_ _3"></span>is <span class="_ _3"></span>zero, <span class="_ _3"></span>then <span class="_ _3"></span>the <span class="_ _3"></span>option <span class="_ _3"></span>is <span class="_ _3"></span>disabled.<span class="_ _61"> </span>The<span class="_ _45"> </span><span class="ff1b">len<span class="_ _66"> </span></span>argument <span class="_ _3"></span>speciﬁes <span class="_ _3"></span>the <span class="_ _3"></span>size <span class="_ _3"></span>of</div><div class="t m0 x32 h79 y2129 ff19 fs31 fc0 sc0 ls0 ws0">the object to which<span class="_"> </span><span class="ff1b">val<span class="_"> </span></span>points.</div><div class="t m0 x3f h64 y212a ff19 fs31 fc0 sc0 ls43f ws0">We <span class="_ _53"> </span>c<span class="_ _9"></span><span class="ls0">an ﬁnd out the current value of an option with the<span class="_"> </span><span class="ff1a">getsockopt<span class="_ _80"> </span></span>function.</span></div><div class="t m0 x3f h65 y4aa7 ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x3f h65 y4aa8 ff1a fs32 fc0 sc0 ls0 ws0">int getsockopt(int<span class="_"> </span><span class="ff1b">sockfd</span><span class="ls441">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">level</span><span class="ls441">,i<span class="_ _5b"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">option</span><span class="ls441">,v<span class="_ _1d"></span><span class="ls0">oid *restrict<span class="_"> </span><span class="ff1b">val</span>,</span></span></span></span></span></span></div><div class="t m0 x12b h65 y4aa9 ff1a fs32 fc0 sc0 ls0 ws0">socklen_t *restrict<span class="_"> </span><span class="ff1b">lenp</span>);</div><div class="t m0 x153 h92 y4aaa ff19 fs32 fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
