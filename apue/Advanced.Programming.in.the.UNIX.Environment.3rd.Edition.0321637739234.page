<div id="pfea" class="pf w4 h1f" data-page-no="ea"><div class="pc pcea w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bgea.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">200<span class="_ _1b"> </span><span class="ff19">Process <span class="_"> </span>Envir<span class="_ _0"></span>onment <span class="_ _1c1"> </span>Chapter<span class="_ _44"> </span>7</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">Now if we enable the 1999 ISO <span class="_ _2"></span>C compiler extensions, we see that <span class="_ _2"></span>the exit code changes:</div><div class="t m0 x3f h57 ya9b ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">gcc -std=c99 hello.c<span class="_ _16e"> </span><span class="ff1b">enable gcc’<span class="_ _0"></span><span class="ls110">s1<span class="_ _5"></span><span class="ls0">999 ISO C extensions</span></span></span></span></div><div class="t m0 x3f h57 yac1 ff1a fs2d fc0 sc0 ls0 ws0">hello.c:4: warning: return type defaults to ’int’</div><div class="t m0 x3f h57 yac2 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 yac3 ff1a fs2d fc0 sc0 ls0 ws0">hello, world</div><div class="t m0 x3f h57 yac4 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">echo $?<span class="_ _af"> </span><span class="ff1b">print the exit status</span></span></div><div class="t m0 x3f h57 yac5 ff1a fs2d fc0 sc0 ls0 ws0">0</div><div class="t m0 x76 h51 y1b04 ff19 fs2a fc0 sc0 ls0 ws0">Note <span class="_"> </span>the <span class="_"> </span>compiler <span class="_ _42"> </span>warning <span class="_"> </span>when <span class="_"> </span>we <span class="_"> </span>enable <span class="_"> </span>the <span class="_ _42"> </span>1999 <span class="_"> </span>ISO <span class="_"> </span>C <span class="_"> </span>extensions.<span class="_ _16"> </span>This <span class="_"> </span>warning <span class="_"> </span>is</div><div class="t m0 x76 h52 y1b05 ff19 fs2a fc0 sc0 ls0 ws0">printed <span class="_ _2"></span>because <span class="_ _2"></span>the <span class="_ _2"></span>type <span class="_ _3"></span>of <span class="_ _2"></span>the<span class="_ _80"> </span><span class="ff1a">main<span class="_ _80"> </span></span>function <span class="_ _2"></span>is <span class="_ _2"></span>not <span class="_ _3"></span>explicitly <span class="_ _2"></span>declared <span class="_ _2"></span>to <span class="_ _2"></span>be <span class="_ _2"></span>an <span class="_ _2"></span>integer<span class="_ _1"></span><span class="ls839">.I<span class="_ _43"></span><span class="ls83a">fw<span class="_ _d"></span><span class="ls0">e</span></span></span></div><div class="t m0 x76 h51 y1b06 ff19 fs2a fc0 sc0 ls0 ws0">were<span class="_ _80"> </span>to<span class="_ _66"> </span>add <span class="_ _3"></span>this <span class="_ _9"></span>declaration, <span class="_ _3"></span>the <span class="_ _3"></span>message <span class="_ _9"></span>would <span class="_ _3"></span>go <span class="_ _3"></span>away<span class="_ _6"></span><span class="ls83b">.H<span class="_ _55"></span><span class="ls0">owever<span class="_ _1"></span>,<span class="_ _66"> </span>if<span class="_ _66"> </span>we<span class="_ _66"> </span>were<span class="_ _66"> </span>to<span class="_ _66"> </span>enable <span class="_ _3"></span>all</span></span></div><div class="t m0 x76 h52 y1b07 ff19 fs2a fc0 sc0 ls34e ws0">re<span class="ls0">commended <span class="_ _80"> </span>warnings <span class="_ _80"> </span>from <span class="_"> </span>the <span class="_ _80"> </span>compiler <span class="_ _80"> </span>(with <span class="_ _e"> </span>the<span class="_ _4b"> </span><span class="ff1a">-Wall<span class="_ _44"> </span></span>ﬂag), <span class="_ _80"> </span>then <span class="_ _80"> </span>we <span class="_ _e"> </span>would <span class="_ _80"> </span>see <span class="_ _80"> </span>a</span></div><div class="t m0 x76 h51 y1b08 ff19 fs2a fc0 sc0 ls0 ws0">warning message something like ‘<span class="_ _0"></span>‘control r<span class="_ _0"></span>eaches end of nonvoid function.’<span class="_ _0"></span>’</div><div class="t m0 x76 h52 y1b09 ff19 fs2a fc0 sc0 ls0 ws0">The <span class="_"> </span>declaration <span class="_ _42"> </span>of<span class="_ _35"> </span><span class="ff1a">main<span class="_ _44"> </span></span>as <span class="_ _42"> </span>returning <span class="_"> </span>an <span class="_"> </span>integer <span class="_ _42"> </span>and <span class="_"> </span>the <span class="_"> </span>use <span class="_ _42"> </span>of<span class="_ _35"> </span><span class="ff1a">exit<span class="_ _35"> </span></span>instead <span class="_"> </span>of<span class="_ _35"> </span><span class="ff1a">return</span></div><div class="t m0 x76 h52 y1b0a ff19 fs2a fc0 sc0 ls0 ws0">produces <span class="_ _3"></span>needless <span class="_ _3"></span>warnings <span class="_ _9"></span>from <span class="_ _3"></span>some <span class="_ _3"></span>compilers <span class="_ _9"></span>and <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">lint</span></div><div class="t m0 xbb h51 y1b0b ff19 fs2a fc0 sc0 ls0 ws0">(</div><div class="t m0 x5e h51 y1b0a ff19 fs2a fc0 sc0 ls0 ws0">1</div><div class="t m0 x49 h51 y1b0b ff19 fs2a fc0 sc0 ls0 ws0">)</div><div class="t m0 x168 h51 y1b0a ff19 fs2a fc0 sc0 ls0 ws0">program. <span class="_ _80"> </span>The<span class="_ _66"> </span>problem <span class="_ _3"></span>is</div><div class="t m0 x76 h52 y1b0c ff19 fs2a fc0 sc0 ls0 ws0">that <span class="_ _3"></span>these <span class="_ _2"></span>compilers <span class="_ _3"></span>don’t <span class="_ _3"></span>know <span class="_ _3"></span>that <span class="_ _3"></span>an<span class="_ _66"> </span><span class="ff1a">exit<span class="_ _66"> </span></span>from<span class="_ _80"> </span><span class="ff1a">main<span class="_ _80"> </span></span>is <span class="_ _3"></span>the <span class="_ _3"></span>same <span class="_ _3"></span>as <span class="_ _3"></span>a<span class="_ _66"> </span><span class="ff1a">return</span><span class="ls83c">.O<span class="_ _55"></span><span class="ls0">ne <span class="_ _3"></span>way</span></span></div><div class="t m0 x76 h52 y1b0d ff19 fs2a fc0 sc0 ls0 ws0">around <span class="_ _23"> </span>these <span class="_ _23"> </span>warnings, <span class="_ _23"> </span>which <span class="_ _23"> </span>become <span class="_ _23"> </span>annoying <span class="_ _42"> </span>after <span class="_ _23"> </span>a <span class="_ _23"> </span>while, <span class="_ _23"> </span>is <span class="_ _42"> </span>to <span class="_ _23"> </span>use<span class="_ _47"> </span><span class="ff1a">return<span class="_ _45"> </span></span>instead <span class="_ _23"> </span>of</div><div class="t m0 x76 h52 y1b0e ff1a fs2a fc0 sc0 ls0 ws0">exit<span class="_ _47"> </span><span class="ff19">from<span class="_ _66"> </span></span>main<span class="ff19 ls83d">.B<span class="_ _4a"></span><span class="ls0">ut <span class="_ _9"> </span>doing <span class="_ _23"> </span>this <span class="_ _9"></span>prevents <span class="_ _9"></span>us <span class="_ _9"></span>from <span class="_ _9"></span>using <span class="_ _9"></span>the <span class="_ _9"> </span>UNIX <span class="_ _23"> </span>System’s<span class="_ _47"> </span><span class="ff1a">grep<span class="_ _66"> </span></span>utility <span class="_ _23"> </span>to</span></span></div><div class="t m0 x76 h52 y1b0f ff19 fs2a fc0 sc0 ls0 ws0">locate <span class="_ _42"> </span>all <span class="_ _23"> </span>calls <span class="_ _42"> </span>to<span class="_ _35"> </span><span class="ff1a">exit<span class="_ _45"> </span></span>from <span class="_ _23"> </span>a <span class="_ _42"> </span>program. <span class="_ _45"> </span>Another<span class="_ _45"> </span>solution <span class="_ _42"> </span>is <span class="_ _42"> </span>to <span class="_ _23"> </span>declare<span class="_ _45"> </span><span class="ff1a">main<span class="_ _35"> </span></span>as <span class="_ _23"> </span>returning</div><div class="t m0 x76 h52 y1b10 ff1a fs2a fc0 sc0 ls0 ws0">void<span class="ff19 ls83e">,i<span class="_ _4f"></span><span class="ls0">nstead <span class="_ _9"></span>of<span class="_ _47"> </span><span class="ff1a">int</span><span class="ls83e">,a<span class="_ _8"></span><span class="ls0">nd <span class="_ _9"> </span>continue <span class="_ _23"> </span>calling<span class="_ _66"> </span><span class="ff1a">exit</span><span class="ls83f">.T<span class="_ _4a"></span><span class="ls0">his <span class="_ _9"> </span>gets <span class="_ _23"> </span>rid <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>compiler <span class="_ _9"></span>warning <span class="_ _9"></span>but</span></span></span></span></span></span></div><div class="t m0 x76 h51 y1b11 ff19 fs2a fc0 sc0 ls0 ws0">doesn’t <span class="_ _66"> </span>look <span class="_ _80"> </span>right <span class="_ _66"> </span>(especially <span class="_ _66"> </span>in <span class="_ _66"> </span>a <span class="_ _66"> </span>programming <span class="_ _80"> </span>text), <span class="_ _66"> </span>and <span class="_ _66"> </span>can <span class="_ _66"> </span>generate <span class="_ _66"> </span>other <span class="_ _66"> </span>compiler</div><div class="t m0 x76 h52 y1b12 ff19 fs2a fc0 sc0 ls0 ws0">warnings, <span class="_ _9"></span>since <span class="_ _23"> </span>the <span class="_ _9"></span>return <span class="_ _9"></span>type <span class="_ _9"> </span>of<span class="_ _47"> </span><span class="ff1a">main<span class="_ _47"> </span></span>is <span class="_ _23"> </span>supposed <span class="_ _9"></span>to <span class="_ _23"> </span>be <span class="_ _9"></span>a <span class="_ _9"> </span>signed <span class="_ _23"> </span>integer<span class="_ _1"></span><span class="ls840">.I<span class="_ _4a"></span><span class="ls841">nt<span class="_ _8"></span><span class="ls0">his <span class="_ _23"> </span>text, <span class="_ _9"></span>we</span></span></span></div><div class="t m0 x76 h52 y1b13 ff19 fs2a fc0 sc0 ls0 ws0">show<span class="_ _47"> </span><span class="ff1a">main<span class="_ _45"> </span></span>as <span class="_ _9"></span>returning <span class="_ _23"> </span>an <span class="_ _9"> </span>integer<span class="_ _0"></span><span class="ls842">,s<span class="_ _b"></span><span class="ls0">ince <span class="_ _23"> </span>that <span class="_ _23"> </span>is <span class="_ _23"> </span>the <span class="_ _23"> </span>deﬁnition <span class="_ _9"> </span>speciﬁed <span class="_ _23"> </span>by <span class="_ _23"> </span>both <span class="_ _23"> </span>ISO <span class="_ _23"> </span>C <span class="_ _9"> </span>and</span></span></div><div class="t m0 x76 h51 y1b14 ff19 fs2a fc0 sc0 ls0 ws0">POSIX.1.</div><div class="t m0 x76 h51 y1b15 ff19 fs2a fc0 sc0 ls0 ws0">Differ<span class="_ _0"></span>ent <span class="_ _9"> </span>compilers <span class="_ _23"> </span>vary <span class="_ _23"> </span>in <span class="_ _9"></span>the <span class="_ _23"> </span>verbosity <span class="_ _9"> </span>of <span class="_ _23"> </span>their <span class="_ _23"> </span>warnings.<span class="_ _59"> </span>Note <span class="_ _23"> </span>that <span class="_ _23"> </span>the <span class="_ _9"></span>GNU <span class="_ _23"> </span>C <span class="_ _9"> </span>compiler</div><div class="t m0 x76 h51 y1b16 ff19 fs2a fc0 sc0 ls0 ws0">usually <span class="_ _23"> </span>doesn’t <span class="_ _9"></span>emit <span class="_ _23"> </span>these <span class="_ _23"> </span>extraneous <span class="_ _9"></span>compiler <span class="_ _23"> </span>warnings <span class="_ _23"> </span>unless <span class="_ _9"> </span>additional <span class="_ _23"> </span>warning <span class="_ _23"> </span>options</div><div class="t m0 x76 h51 y1b17 ff19 fs2a fc0 sc0 ls0 ws0">ar<span class="lse9">eu<span class="_ _5"></span><span class="ls0">sed.</span></span></div><div class="t m0 x32 h49 y1b18 ff19 fs26 fc0 sc0 ls0 ws0">In <span class="_ _2"></span>the <span class="_ _2"></span>next <span class="_ _2"></span>chapter<span class="_ _1"></span><span class="ls843">,w<span class="_ _4f"></span><span class="ls0">e’ll <span class="_ _2"></span>see <span class="_ _2"></span>how <span class="_ _2"></span>any <span class="_ _2"></span>process can <span class="_ _3"></span>cause <span class="_ _2"></span>a <span class="_ _2"></span>program to <span class="_ _2"></span>be <span class="_ _2"></span>executed, <span class="_ _2"></span>wait</span></span></div><div class="t m0 x32 h49 y1b19 ff19 fs26 fc0 sc0 ls0 ws0">for the process to complete, and then fetch its exit status.</div><div class="t m0 x35 h4d y1b1a ff1f fs26 fc0 sc0 ls0 ws0">atexit<span class="_ _66"> </span><span class="ff16">Function</span></div><div class="t m0 x32 h49 y1b1b ff19 fs26 fc0 sc0 ls3aa ws0">Wi<span class="_ _3"></span><span class="ls0">th <span class="_ _3"></span>ISO <span class="_ _9"></span>C, <span class="_ _3"></span>a <span class="_ _9"></span>process <span class="_ _2"></span>can <span class="_ _9"></span>register <span class="_ _3"></span>at <span class="_ _3"></span>least <span class="_ _9"></span>32 <span class="_ _3"></span>functions <span class="_ _9"></span>that <span class="_ _3"></span>ar<span class="ls844">ea<span class="_ _b"></span><span class="ls0">utomatically <span class="_ _9"></span>called <span class="_ _3"></span>by</span></span></span></div><div class="t m0 x32 h4d y1b1c ff1a fs26 fc0 sc0 ls0 ws0">exit<span class="ff19 ls199">.T<span class="_ _4a"></span><span class="ls0">hese ar<span class="lsd3">ec<span class="_ _4f"></span><span class="ls0">alled<span class="_"> </span><span class="ff1b">exit handlers<span class="_"> </span></span>and ar<span class="lsd3">er<span class="_ _4f"></span><span class="ls0">egistered by calling the<span class="_"> </span><span class="ff1a">atexit<span class="_ _80"> </span></span>function.</span></span></span></span></span></span></div><div class="t m0 x3f h4e y1b1d ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x3f h4e y1b1e ff1a fs28 fc0 sc0 ls0 ws0">int atexit(void (*<span class="ff1b">func</span>)(void));</div><div class="t m0 x81 h7c y1b1f ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK, nonzero<span class="_"> </span>on<span class="_"> </span>err<span class="_ _0"></span>or</div><div class="t m0 x32 h54 y1b20 ff19 fs2c fc0 sc0 ls0 ws0">This declaration <span class="_ _2"></span>says that <span class="_ _2"></span>we <span class="_ _2"></span>pass the <span class="_ _2"></span>address of a <span class="_ _2"></span>function <span class="_ _2"></span>as the <span class="_ _2"></span>argument to<span class="_"> </span><span class="ff1a">atexit</span>.</div><div class="t m0 x32 h55 y1b21 ff19 fs2c fc0 sc0 ls0 ws0">When <span class="_ _53"> </span>this <span class="_ _53"> </span>function <span class="_ _e"> </span>is <span class="_ _53"> </span>called, <span class="_ _53"> </span>it <span class="_ _e"> </span>is <span class="_ _53"> </span>not <span class="_ _53"> </span>passed <span class="_ _e"> </span>any <span class="_ _53"> </span>arguments <span class="_ _53"> </span>and <span class="_ _53"> </span>is <span class="_ _53"> </span>not <span class="_ _53"> </span>expected <span class="_ _e"> </span>to</div><div class="t m0 x32 h54 y1b22 ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">turn <span class="_ _47"> </span>a <span class="_ _45"> </span>value.<span class="_ _50"> </span>The<span class="_ _16"> </span><span class="ff1a">exit<span class="_ _16"> </span></span>function <span class="_ _47"> </span>calls <span class="_ _45"> </span>these <span class="_ _47"> </span>functions <span class="_ _47"> </span>in <span class="_ _47"> </span>reverse <span class="_ _47"> </span>or<span class="_ _0"></span>der <span class="_ _47"> </span>of <span class="_ _47"> </span>their</span></div><div class="t m0 x32 h55 y1b23 ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">gistration. <span class="_"> </span>Each<span class="_"> </span>function is called as many times as it was registered.</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
