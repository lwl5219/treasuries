<div id="pf1dd" class="pf w4 h1f" data-page-no="1dd"><div class="pc pc1dd w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1dd.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.5<span class="_ _292"> </span>Reentrancy<span class="_ _1b"> </span><span class="ff18">443</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">thread-safe <span class="_ _42"> </span>versions <span class="_ _42"> </span>of <span class="_ _53"> </span>these <span class="_ _53"> </span>functions.<span class="_ _54"> </span>The <span class="_ _53"> </span>functions <span class="_ _53"> </span>have <span class="_ _42"> </span>the <span class="_ _53"> </span>same <span class="_ _53"> </span>names <span class="_ _53"> </span>as <span class="_ _42"> </span>their</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">non-thread-safe <span class="_ _3"></span>relatives, <span class="_ _9"></span>but <span class="_ _9"></span>with <span class="_ _23"></span>an<span class="_ _45"> </span><span class="ff1a">_r<span class="_ _45"> </span></span>appended <span class="_ _9"></span>at <span class="_ _9"></span>the <span class="_ _23"></span>end <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>name, <span class="_ _23"></span>signifying</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">that <span class="_"> </span>these <span class="_ _53"> </span>versions <span class="_"> </span>ar<span class="lsed1">er<span class="_ _5b"></span><span class="ls0">eentrant. <span class="_ _59"> </span>Many<span class="_ _59"> </span>functions <span class="_"> </span>ar<span class="_ _0"></span><span class="lsed1">en<span class="_ _4a"></span><span class="ls0">ot <span class="_"> </span>thr<span class="_ _0"></span>ead-safe, <span class="_ _e"> </span>because <span class="_"> </span>they</span></span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">turn <span class="_ _23"> </span>data <span class="_ _23"> </span>stored <span class="_ _23"></span>in <span class="_ _23"></span>a <span class="_ _23"></span>static <span class="_ _23"></span>memory <span class="_ _23"></span>buffer<span class="_ _6"></span><span class="lsed2">.T<span class="_ _7"></span><span class="ls0">hey <span class="_ _23"> </span>ar<span class="lsed3">em<span class="_ _43"></span><span class="ls0">ade <span class="_ _23"> </span>thread-safe <span class="_ _23"></span>by <span class="_ _23"></span>changing</span></span></span></span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">their interfaces to requir<span class="_ _0"></span><span class="ls44">et<span class="_ _d"></span><span class="ls0">hat the caller provide its own buf<span class="_ _0"></span>fer<span class="_ _6"></span>.</span></span></div><div class="t m0 x17f h5e y3733 ff1a fs10 fc0 sc0 ls0 ws0">getgrgid_r <span class="_ _48"> </span>localtime_r</div><div class="t m0 x17f h5e y3734 ff1a fs10 fc0 sc0 ls0 ws0">getgrnam_r <span class="_ _48"> </span>readdir_r</div><div class="t m0 x17f h5e y3735 ff1a fs10 fc0 sc0 ls0 ws0">getlogin_r <span class="_ _48"> </span>strerror_r</div><div class="t m0 x17f h5e y3736 ff1a fs10 fc0 sc0 ls0 ws0">getpwnam_r <span class="_ _48"> </span>strtok_r</div><div class="t m0 x17f h5e y3737 ff1a fs10 fc0 sc0 ls0 ws0">getpwuid_r <span class="_ _48"> </span>ttyname_r</div><div class="t m0 x17f h5e y3738 ff1a fs10 fc0 sc0 ls0 ws0">gmtime_r</div><div class="t m0 x2f h2e y3739 ff18 fs11 fc0 sc0 ls0 ws0">Figure 12.10<span class="_ _5a"> </span><span class="ff19">Alternative thread-safe functions</span></div><div class="t m0 x3f h55 y373a ff19 fs2c fc0 sc0 ls0 ws0">If <span class="_ _45"> </span>a <span class="_ _45"> </span>function <span class="_ _45"> </span>is <span class="_ _35"> </span>r<span class="_ _0"></span>eentrant <span class="_ _45"> </span>with <span class="_ _45"> </span>respect <span class="_ _45"> </span>to <span class="_ _45"> </span>multiple <span class="_ _45"> </span>threads, <span class="_ _45"> </span>we <span class="_ _45"> </span>say <span class="_ _45"> </span>that <span class="_ _45"> </span>it <span class="_ _35"> </span>is</div><div class="t m0 x32 h55 y373b ff19 fs2c fc0 sc0 ls0 ws0">thread-safe. <span class="_ _61"> </span>This<span class="_ _16"> </span>doesn’t <span class="_ _47"> </span>tell <span class="_ _47"> </span>us, <span class="_ _45"> </span>however<span class="_ _6"></span><span class="lsed4">,w<span class="_ _1d"></span><span class="ls0">hether <span class="_ _47"> </span>the <span class="_ _47"> </span>function <span class="_ _45"> </span>is <span class="_ _47"> </span>r<span class="_ _0"></span>eentrant <span class="_ _47"> </span>with</span></span></div><div class="t m0 x32 h55 y373c ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">spect <span class="_ _23"></span>to <span class="_ _9"></span>signal <span class="_ _23"> </span>handlers.<span class="_ _51"> </span><span class="ls155">We <span class="_ _66"> </span>s<span class="_ _9"></span></span>ay <span class="_ _23"> </span>that <span class="_ _23"></span>a <span class="_ _9"></span>function <span class="_ _23"></span>that <span class="_ _9"></span>is <span class="_ _23"></span>safe <span class="_ _23"></span>to <span class="_ _9"></span>be <span class="_ _23"></span>reenter<span class="_ _0"></span>ed <span class="_ _9"></span>from <span class="_ _9"></span>an</span></div><div class="t m0 x32 h60 y373d ff19 fs2c fc0 sc0 ls0 ws0">asynchronous signal <span class="_ _2"></span>handler <span class="_ _2"></span>is<span class="_ _47"> </span><span class="ff1b">async-signal <span class="_ _2"></span>safe</span><span class="lsed5">.W<span class="_ _7"></span><span class="lsed6">es<span class="_ _d"></span><span class="ls0">aw <span class="_ _2"></span>the <span class="_ _2"></span>async-signal <span class="_ _2"></span>safe <span class="_ _2"></span>functions</span></span></span></div><div class="t m0 x32 h55 y373e ff19 fs2c fc0 sc0 ls0 ws0">in Figur<span class="ls142">e1<span class="_ _4f"></span><span class="ls0">0.4 when we discussed reentrant functions in Section 10.6.</span></span></div><div class="t m0 x3f h55 y373f ff19 fs2c fc0 sc0 ls0 ws0">In <span class="_"> </span>addition <span class="_"> </span>to <span class="_ _66"> </span>the <span class="_ _66"> </span>functions <span class="_ _66"> </span>listed <span class="_ _66"> </span>in <span class="_"> </span>Figur<span class="lsed7">e1<span class="_ _5b"></span><span class="ls0">2.10, <span class="_ _66"> </span>POSIX.1 <span class="_ _66"> </span>provides <span class="_"> </span>a <span class="_"> </span>way <span class="_ _66"> </span>to</span></span></div><div class="t m0 x32 h54 y3740 ff19 fs2c fc0 sc0 ls0 ws0">manage<span class="_ _5c"> </span><span class="ff1a">FILE<span class="_ _98"> </span></span>objects <span class="_ _51"> </span>in <span class="_ _51"> </span>a <span class="_ _51"> </span>thread-safe <span class="_ _5a"> </span>way<span class="_ _6"></span><span class="lsed8">.Y<span class="_ _1be"></span><span class="ls0">ou <span class="_ _51"> </span>can <span class="_ _51"> </span>use<span class="_ _98"> </span><span class="ff1a">flockfile<span class="_ _5c"> </span></span>and</span></span></div><div class="t m0 x32 h54 y3741 ff1a fs2c fc0 sc0 ls0 ws0">ftrylockfile<span class="_ _59"> </span><span class="ff19">to <span class="_"> </span>obtain <span class="_ _e"> </span>a <span class="_"> </span>lock <span class="_"> </span>associated <span class="_ _e"> </span>with <span class="_"> </span>a <span class="_"> </span>given<span class="_ _4b"> </span></span>FILE<span class="_ _46"> </span><span class="ff19">object. <span class="_ _59"> </span>This<span class="_ _59"> </span>lock <span class="_"> </span>is</span></div><div class="t m0 x32 h55 y3742 ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">cursive: <span class="_ _e"> </span>you <span class="_ _53"> </span>can <span class="_ _53"> </span>acquire<span class="_ _4b"> </span>it<span class="_ _4b"> </span>again, <span class="_ _53"> </span>while <span class="_ _53"> </span>you <span class="_ _e"> </span>already <span class="_ _42"> </span>hold <span class="_ _e"> </span>it, <span class="_ _53"> </span>without <span class="_ _e"> </span>deadlocking.</span></div><div class="t m0 x32 h55 y3743 ff19 fs2c fc0 sc0 ls0 ws0">Although <span class="_ _2"></span>the <span class="_ _3"></span>exact <span class="_ _2"></span>implementation <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _2"></span>lock <span class="_ _3"></span>is <span class="_ _2"></span>unspeciﬁed, <span class="_ _3"></span>all <span class="_ _2"></span>standar<span class="lsed9">dI<span class="_ _4f"></span><span class="ls0">/O <span class="_ _2"></span>routines</span></span></div><div class="t m0 x32 h54 y3744 ff19 fs2c fc0 sc0 ls0 ws0">that <span class="_ _42"> </span>manipulate<span class="_ _4b"> </span><span class="ff1a">FILE<span class="_ _44"> </span></span>objects <span class="_ _53"> </span>ar<span class="lseda">er<span class="_ _55"></span><span class="ls0">equired <span class="_ _42"> </span>to <span class="_ _53"> </span>behave <span class="_ _53"> </span>as <span class="_ _42"> </span>if <span class="_ _53"> </span>they <span class="_ _53"> </span>call<span class="_ _44"> </span><span class="ff1a">flockfile<span class="_ _4b"> </span></span>and</span></span></div><div class="t m0 x32 h54 y3745 ff1a fs2c fc0 sc0 ls0 ws0">funlockfile<span class="_ _80"> </span><span class="ff19">internally<span class="_ _6"></span>.</span></div><div class="t m0 x3f h5d y3746 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;stdio.h&gt;</div><div class="t m0 x3f h5d y3747 ff1a fs2f fc0 sc0 ls0 ws0">int ftrylockfile(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 xcc hc2 y3748 ff19 fs2f fc0 sc0 ls0 ws0">Returns: 0 if OK, nonzero<span class="_"> </span>if<span class="_"> </span>lock can’t be acquir<span class="_ _0"></span>ed</div><div class="t m0 x3f h5d y3749 ff1a fs2f fc0 sc0 ls0 ws0">void flockfile(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x3f h5d y374a ff1a fs2f fc0 sc0 ls0 ws0">void funlockfile(FILE *<span class="ff1b">fp</span>);</div><div class="t m0 x3f h50 y374b ff19 fs29 fc0 sc0 ls0 ws0">Although <span class="_ _9"></span>the <span class="_ _9"></span>standar<span class="lsedb">dI<span class="_ _b"></span><span class="ls0">/O <span class="_ _3"></span>routines <span class="_ _9"></span>might <span class="_ _9"></span>be <span class="_ _9"></span>implemented <span class="_ _9"></span>to <span class="_ _9"></span>be <span class="_ _9"></span>thread-safe <span class="_ _9"></span>from</span></span></div><div class="t m0 x32 h50 y374c ff19 fs29 fc0 sc0 ls0 ws0">the <span class="_ _e"> </span>perspective <span class="_"> </span>of <span class="_ _e"> </span>their <span class="_ _e"> </span>own <span class="_"> </span>internal <span class="_ _e"> </span>data <span class="_ _e"> </span>structures, <span class="_ _e"> </span>it <span class="_"> </span>is <span class="_ _53"> </span>still <span class="_"> </span>useful <span class="_ _e"> </span>to <span class="_"> </span>expose <span class="_ _53"> </span>the</div><div class="t m0 x32 h50 y374d ff19 fs29 fc0 sc0 ls0 ws0">locking <span class="_ _3"></span>to <span class="_ _3"></span>applications.<span class="_ _5a"> </span>This <span class="_ _3"></span>allows <span class="_ _3"></span>applications <span class="_ _9"></span>to <span class="_ _3"></span>compose <span class="_ _3"></span>multiple <span class="_ _9"></span>calls <span class="_ _3"></span>to <span class="_ _9"></span>standard</div><div class="t m0 x32 h5c y374e ff19 fs29 fc0 sc0 ls0 ws0">I/O <span class="_ _e"> </span>functions <span class="_"> </span>into <span class="_ _e"> </span>atomic <span class="_ _e"> </span>sequences.<span class="_ _60"> </span>Of <span class="_ _e"> </span>course, <span class="_"> </span>when <span class="_ _53"> </span>dealing <span class="_"> </span>with <span class="_ _e"> </span>multiple<span class="_ _59"> </span><span class="ff1a">FILE</span></div><div class="t m0 x32 h50 y374f ff19 fs29 fc0 sc0 ls0 ws0">objects, you need to beware<span class="_"> </span>of<span class="_"> </span>potential deadlocks and to or<span class="_ _0"></span>der your locks car<span class="_ _0"></span>efully<span class="_ _4"></span>.</div><div class="t m0 x3f h50 y3750 ff19 fs29 fc0 sc0 ls0 ws0">If <span class="_ _9"></span>the <span class="_ _9"></span>standar<span class="lsedc">dI<span class="_ _b"></span><span class="ls0">/O <span class="_ _9"></span>routines <span class="_ _3"></span>acquir<span class="lsedd">et<span class="_ _b"></span><span class="ls0">heir <span class="_ _9"></span>own <span class="_ _9"></span>locks, <span class="_ _23"></span>then <span class="_ _9"></span>we <span class="_ _9"></span>can <span class="_ _9"></span>run <span class="_ _9"></span>into <span class="_ _9"></span>serious</span></span></span></span></div><div class="t m0 x32 h50 y3751 ff19 fs29 fc0 sc0 ls0 ws0">performance degradation <span class="_ _2"></span>when doing <span class="_ _2"></span>character-at-a-time I/O.<span class="_ _46"> </span>In <span class="_ _2"></span>this <span class="_ _2"></span>situation, we <span class="_ _2"></span>end</div><div class="t m0 x32 h50 y3752 ff19 fs29 fc0 sc0 ls0 ws0">up <span class="_ _42"> </span>acquiring <span class="_ _53"> </span>and <span class="_ _53"> </span>releasing <span class="_ _42"> </span>a <span class="_ _42"> </span>lock <span class="_ _53"> </span>for <span class="_ _53"> </span>every <span class="_ _42"> </span>character <span class="_ _53"> </span>read <span class="_ _42"> </span>or <span class="_ _53"> </span>written.<span class="_ _54"> </span><span class="lse2">To <span class="_ _35"> </span>a<span class="_ _9"></span></span>void <span class="_ _42"> </span>this</div><div class="t m0 x32 h50 y3753 ff19 fs29 fc0 sc0 ls0 ws0">overhead, unlocked <span class="_ _2"></span>versions of <span class="_ _2"></span>the <span class="_ _2"></span>character-based standar<span class="lsede">dI<span class="_ _4f"></span><span class="ls0">/O <span class="_ _2"></span>routines ar<span class="lsede">ea<span class="_ _4f"></span><span class="ls0">vailable.</span></span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
