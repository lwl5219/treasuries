<div id="pf2d" class="pf w4 h1f" data-page-no="2d"><div class="pc pc2d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1.6<span class="_ _86"> </span>Programs <span class="_"> </span>and <span class="_"> </span>Pr<span class="_ _0"></span>ocesses<span class="_ _1b"> </span><span class="ff18 ls153">11</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Processes and Pr<span class="_ _1"></span>ocess ID</div><div class="t m0 x32 h2b y342 ff19 fsf fc0 sc0 ls0 ws0">An executing instance of <span class="_ _2"></span>a program is called a<span class="_"> </span><span class="ff1b">process</span><span class="ls154">,a</span>term used on <span class="_ _2"></span>almost every page</div><div class="t m0 x32 h2b y343 ff19 fsf fc0 sc0 ls0 ws0">of this <span class="_ _2"></span>text.<span class="_ _46"> </span>Some operating <span class="_ _2"></span>systems use <span class="_ _2"></span>the term<span class="_ _66"> </span><span class="ff1b">task<span class="_ _66"> </span></span>to refer to <span class="_ _2"></span>a program that <span class="_ _2"></span>is being</div><div class="t m0 x32 h2a y344 ff19 fsf fc0 sc0 ls0 ws0">executed.</div><div class="t m0 x3f h2a y345 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _42"> </span>UNIX <span class="_ _42"> </span>System <span class="_ _42"> </span>guarantees <span class="_ _42"> </span>that <span class="_ _53"> </span>every <span class="_ _42"> </span>process <span class="_ _42"> </span>has <span class="_ _42"> </span>a <span class="_ _42"> </span>unique <span class="_ _42"> </span>numeric <span class="_ _53"> </span>identiﬁer</div><div class="t m0 x32 h2b y346 ff19 fsf fc0 sc0 ls0 ws0">called the<span class="_"> </span><span class="ff1b">process ID</span><span class="ls86">.T<span class="_ _5b"></span><span class="ls0">he process ID is always a non-negative integer<span class="_ _6"></span>.</span></span></div><div class="t m0 x35 h27 y348 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y1d2 ff19 fsf fc0 sc0 ls0 ws0">The program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _d"></span><span class="ls0">.6 prints its process ID.</span></span></div><div class="t m0 x32 h4e y3a4 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y3a5 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y3a6 ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y3a7 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y3a8 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;hello world from process ID %ld\n&quot;, (long)getpid());</div><div class="t m0 x8a h4e y3a9 ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y3aa ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 xac h2e y3ab ff18 fs11 fc0 sc0 ls0 ws0">Figure 1.6<span class="_ _5a"> </span><span class="ff19">Print the process ID</span></div><div class="t m0 x32 h54 y3ac ff19 fs2c fc0 sc0 ls0 ws0">If we compile this program into the ﬁle<span class="_"> </span><span class="ff1a">a.out<span class="_ _80"> </span></span>and execute it, we have</div><div class="t m0 x3f h5d y3ad ff1a fs2f fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h5d y3ae ff1a fs2f fc0 sc0 ls0 ws0">hello world from process ID 851</div><div class="t m0 x3f h5d y3af ff1a fs2f fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h5d y3b0 ff1a fs2f fc0 sc0 ls0 ws0">hello world from process ID 854</div><div class="t m0 x32 h54 y3b1 ff19 fs2c fc0 sc0 ls0 ws0">When <span class="_ _9"></span>this <span class="_ _23"></span>program <span class="_ _3"></span>runs, <span class="_ _23"></span>it <span class="_ _9"></span>calls <span class="_ _9"></span>the <span class="_ _23"></span>function<span class="_ _45"> </span><span class="ff1a">getpid<span class="_ _45"> </span></span>to <span class="_ _23"></span>obtain <span class="_ _9"></span>its <span class="_ _23"></span>process <span class="_ _3"></span>ID.<span class="_ _51"> </span>As <span class="_ _9"></span>we</div><div class="t m0 x32 h54 y3b2 ff19 fs2c fc0 sc0 ls0 ws0">shall <span class="_ _2"></span>see <span class="_ _2"></span>later<span class="_ _1"></span>,<span class="_ _66"> </span><span class="ff1a">getpid<span class="_ _47"> </span></span><span class="ls150">re</span>turns <span class="_ _3"></span>a<span class="_ _66"> </span><span class="ff1a">pid_t<span class="_ _47"> </span></span>data <span class="_ _2"></span>type.<span class="_ _61"> </span><span class="ls155">We <span class="_ _80"> </span>d<span class="_ _9"></span></span>on’t <span class="_ _2"></span>know <span class="_ _2"></span>its <span class="_ _3"></span>size; <span class="_ _2"></span>all <span class="_ _2"></span>we <span class="_ _2"></span>know</div><div class="t m0 x32 h55 y3b3 ff19 fs2c fc0 sc0 ls0 ws0">is <span class="_ _3"></span>that <span class="_ _3"></span>the <span class="_ _3"></span>standards <span class="_ _3"></span>guarantee <span class="_ _3"></span>that <span class="_ _9"></span>it <span class="_ _3"></span>will <span class="_ _3"></span>ﬁt <span class="_ _3"></span>in <span class="_ _9"></span>a <span class="_ _3"></span>long <span class="_ _3"></span>integer<span class="_ _1"></span><span class="ls156">.B<span class="_ _62"></span><span class="ls0">ecause <span class="_ _9"></span>we <span class="_ _3"></span>have <span class="_ _3"></span>to <span class="_ _9"></span>tell</span></span></div><div class="t m0 x32 h54 y3b4 ff1a fs2c fc0 sc0 ls0 ws0">printf<span class="_ _66"> </span><span class="ff19">the <span class="_ _2"></span>size <span class="_ _2"></span>of <span class="_ _2"></span>each argument <span class="_ _2"></span>to be <span class="_ _2"></span>printed, <span class="_ _2"></span>we <span class="_ _2"></span>have <span class="_ _2"></span>to <span class="_ _2"></span>cast <span class="_ _2"></span>the <span class="_ _2"></span>value to <span class="_ _2"></span>the <span class="_ _2"></span>largest</span></div><div class="t m0 x32 h55 y3b5 ff19 fs2c fc0 sc0 ls0 ws0">data type <span class="_ _2"></span>that <span class="_ _2"></span>it might <span class="_ _2"></span>use <span class="_ _2"></span>(in this <span class="_ _2"></span>case, <span class="_ _2"></span>a long <span class="_ _2"></span>integer).<span class="_ _46"> </span>Although <span class="_ _2"></span>most <span class="_ _2"></span>process IDs will</div><div class="t m0 x32 h54 y3b6 ff19 fs2c fc0 sc0 ls0 ws0">ﬁt in an<span class="_"> </span><span class="ff1a">int</span><span class="ls142">,u<span class="_ _d"></span><span class="ls0">sing a<span class="_"> </span><span class="ff1a">long<span class="_ _66"> </span></span>promotes portability<span class="_ _4"></span>.</span></span></div><div class="t m0 x35 h5a y3b7 ff16 fs29 fc0 sc0 ls0 ws0">Process Contr<span class="_ _1"></span>ol</div><div class="t m0 x32 h5c y3b8 ff19 fs29 fc0 sc0 ls0 ws0">Ther<span class="ls157">ea<span class="_ _8"></span><span class="lsdf">re <span class="_ _9"></span>t<span class="ls0">hree <span class="_ _2"></span>primary <span class="_ _3"></span>functions <span class="_ _2"></span>for <span class="_ _3"></span>process control:<span class="_ _47"> </span><span class="ff1a">fork</span>,<span class="_ _66"> </span><span class="ff1a">exec</span><span class="ls158">,a<span class="_ _4f"></span><span class="ls0">nd<span class="_ _47"> </span><span class="ff1a">waitpid</span><span class="ls159">.(<span class="_ _5b"></span><span class="ls0">The</span></span></span></span></span></span></span></div><div class="t m0 x32 h5c y3b9 ff1a fs29 fc0 sc0 ls0 ws0">exec<span class="_ _47"> </span><span class="ff19">function <span class="_ _9"></span>has <span class="_ _3"></span>seven <span class="_ _3"></span>variants, <span class="_ _9"></span>but <span class="_ _3"></span>we <span class="_ _3"></span>often <span class="_ _9"></span>refer <span class="_ _2"></span>to <span class="_ _9"></span>them <span class="_ _3"></span>collectively <span class="_ _3"></span>as <span class="_ _9"></span>simply <span class="_ _3"></span>the</span></div><div class="t m0 x32 h5c y3ba ff1a fs29 fc0 sc0 ls0 ws0">exec<span class="_ _80"> </span><span class="ff19">function.)</span></div><div class="t m0 x35 h5a y3bb ff16 fs29 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h50 y3bc ff19 fs29 fc0 sc0 ls0 ws0">The <span class="_"> </span>pr<span class="_ _0"></span>ocess <span class="_"> </span>contr<span class="_ _0"></span>ol <span class="_"> </span>featur<span class="_ _0"></span>es <span class="_"> </span>of <span class="_"> </span>the <span class="_ _e"> </span>UNIX <span class="_"> </span>System <span class="_"> </span>ar<span class="ls15a">ed<span class="_ _5b"></span><span class="ls0">emonstrated <span class="_"> </span>using <span class="_"> </span>a <span class="_"> </span>simple</span></span></div><div class="t m0 x32 h50 y3bd ff19 fs29 fc0 sc0 ls0 ws0">program <span class="_ _66"> </span>(Figur<span class="ls15b">e1<span class="_ _1d"></span><span class="ls0">.7) <span class="_ _47"> </span>that <span class="_ _47"> </span>reads <span class="_ _47"> </span>commands <span class="_ _47"> </span>from <span class="_ _66"> </span>standar<span class="ls15b">di<span class="_ _1d"></span><span class="ls0">nput <span class="_ _47"> </span>and <span class="_ _47"> </span>executes <span class="_ _47"> </span>the</span></span></span></span></div><div class="t m0 x32 h50 y3be ff19 fs29 fc0 sc0 ls0 ws0">commands. <span class="_"> </span>This<span class="_"> </span>is a bare-bones implementation of a shell</div><div class="t m0 xa4 h50 y3bf ff19 fs29 fc0 sc0 ls0 ws0">-</div><div class="t m0 xad h50 y3be ff19 fs29 fc0 sc0 ls0 ws0">like program.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
