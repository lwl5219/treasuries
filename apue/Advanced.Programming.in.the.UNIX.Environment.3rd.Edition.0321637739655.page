<div id="pf28f" class="pf w4 h1f" data-page-no="28f"><div class="pc pc28f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg28f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.5<span class="_ _2db"> </span>Data <span class="_"> </span>T<span class="_ _6"></span>ransfer<span class="_ _1b"> </span><span class="ff18">621</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>sockfd,<span class="_"> </span>err;</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">struct sigaction<span class="_ _15"> </span>sa;</div><div class="t m0 x8a h57 y3810 ff1a fs2d fc0 sc0 ls0 ws0">if (argc != 2)</div><div class="t m0 x9d h57 y31b5 ff1a fs2d fc0 sc0 ls0 ws0">err_quit(&quot;usage: ruptime hostname&quot;);</div><div class="t m0 x8a h57 y124b ff1a fs2d fc0 sc0 ls0 ws0">sa.sa_handler = sigalrm;</div><div class="t m0 x8a h57 y124c ff1a fs2d fc0 sc0 ls0 ws0">sa.sa_flags = 0;</div><div class="t m0 x8a h57 y124d ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;sa.sa_mask);</div><div class="t m0 x8a h57 y124e ff1a fs2d fc0 sc0 ls0 ws0">if (sigaction(SIGALRM, &amp;sa, NULL) &lt; 0)</div><div class="t m0 x9d h57 y124f ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;sigaction error&quot;);</div><div class="t m0 x8a h57 y1250 ff1a fs2d fc0 sc0 ls0 ws0">memset(&amp;hint, 0, sizeof(hint));</div><div class="t m0 x8a h57 y8d8 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_socktype = SOCK_DGRAM;</div><div class="t m0 x8a h57 y8d9 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_canonname = NULL;</div><div class="t m0 x8a h57 y8da ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_addr = NULL;</div><div class="t m0 x8a h57 y8db ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_next = NULL;</div><div class="t m0 x8a h57 y8dc ff1a fs2d fc0 sc0 ls0 ws0">if ((err = getaddrinfo(argv[1], &quot;ruptime&quot;, &amp;hint, &amp;ailist)) != 0)</div><div class="t m0 x9d h57 y8dd ff1a fs2d fc0 sc0 ls0 ws0">err_quit(&quot;getaddrinfo error: %s&quot;, gai_strerror(err));</div><div class="t m0 x8a h57 y2f72 ff1a fs2d fc0 sc0 ls0 ws0">for (aip = ailist; aip != NULL; aip = aip-&gt;ai_next) {</div><div class="t m0 x9d h57 y2f73 ff1a fs2d fc0 sc0 ls0 ws0">if ((sockfd = socket(aip-&gt;ai_family, SOCK_DGRAM, 0)) &lt; 0) {</div><div class="t m0 x1f h57 y8e0 ff1a fs2d fc0 sc0 ls0 ws0">err = errno;</div><div class="t m0 x9d h57 y8e1 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x1f h57 y2f74 ff1a fs2d fc0 sc0 ls0 ws0">print_uptime(sockfd, aip);</div><div class="t m0 x1f h57 y2f75 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x9d h57 y2f76 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y2f77 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y2f78 ff1a fs2d fc0 sc0 ls0 ws0">fprintf(stderr, &quot;can’t contact %s: %s\n&quot;, argv[1], strerror(err));</div><div class="t m0 x8a h57 y2f79 ff1a fs2d fc0 sc0 ls0 ws0">exit(1);</div><div class="t m0 x32 h57 y2f7a ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x89 h2d y4a3e ff18 fs10 fc0 sc0 ls0 ws0">Figure 16.19<span class="_ _5a"> </span><span class="ff19">Client command using datagram service</span></div><div class="t m0 x32 h4d y4a3f ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_ _54"> </span><span class="ff1a">main<span class="_ _54"> </span></span>function <span class="_ _44"> </span>for <span class="_ _44"> </span>the <span class="_ _44"> </span>datagram-based <span class="_ _44"> </span>client <span class="_ _44"> </span>is <span class="_ _44"> </span>similar <span class="_ _44"> </span>to <span class="_ _44"> </span>the <span class="_ _44"> </span>one <span class="_ _44"> </span>for <span class="_ _44"> </span>the</div><div class="t m0 x32 h4d y4a40 ff19 fs26 fc0 sc0 ls0 ws0">connection-oriented client, <span class="_ _2"></span>with <span class="_ _2"></span>the <span class="_ _2"></span>addition of <span class="_ _2"></span>installing <span class="_ _2"></span>a <span class="_ _2"></span>signal handler <span class="_ _2"></span>for<span class="_ _66"> </span><span class="ff1a">SIGALRM</span>.</div><div class="t m0 x32 h4d y4a41 ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _53"> </span>u<span class="_ _9"></span><span class="ls0">se the<span class="_"> </span><span class="ff1a">alarm<span class="_ _66"> </span></span>function to avoid blocking indeﬁnitely in the call to<span class="_"> </span><span class="ff1a">recvfrom</span>.</span></div><div class="t m0 x3f h49 y4a42 ff19 fs26 fc0 sc0 ls3aa ws0">Wi<span class="_ _3"></span><span class="ls0">th <span class="_ _23"> </span>the <span class="_ _42"> </span>connection-oriented <span class="_ _42"> </span>protocol, <span class="_ _23"></span>we <span class="_ _23"> </span>needed <span class="_ _42"> </span>to <span class="_ _23"> </span>connect <span class="_ _42"> </span>to <span class="_ _42"> </span>the <span class="_ _23"> </span>server <span class="_ _42"> </span>before</span></div><div class="t m0 x32 h49 y4a43 ff19 fs26 fc0 sc0 ls0 ws0">exchanging <span class="_"> </span>data.<span class="_ _60"> </span>The <span class="_"> </span>arrival <span class="_"> </span>of <span class="_ _66"> </span>the <span class="_"> </span>connect <span class="_"> </span>request <span class="_"> </span>was <span class="_"> </span>enough <span class="_"> </span>for <span class="_ _66"> </span>the <span class="_"> </span>server <span class="_"> </span>to</div><div class="t m0 x32 h49 y4a44 ff19 fs26 fc0 sc0 ls0 ws0">determine <span class="_ _23"> </span>that <span class="_ _42"> </span>it <span class="_ _23"> </span>needed <span class="_ _42"> </span>to <span class="_ _23"> </span>provide <span class="_ _23"> </span>service <span class="_ _42"> </span>to <span class="_ _42"> </span>a <span class="_ _23"> </span>client.<span class="_ _51"> </span>But <span class="_ _42"> </span>with <span class="_ _23"> </span>the <span class="_ _42"> </span>datagram-based</div><div class="t m0 x32 h49 y4a45 ff19 fs26 fc0 sc0 ls0 ws0">protocol, <span class="_ _9"></span>we <span class="_ _9"></span>need <span class="_ _23"></span>a <span class="_ _9"></span>way <span class="_ _9"></span>to <span class="_ _23"></span>notify <span class="_ _9"></span>the <span class="_ _23"></span>server <span class="_ _9"></span>that <span class="_ _23"></span>we <span class="_ _9"></span>want <span class="_ _9"></span>it <span class="_ _23"></span>to <span class="_ _9"></span>perform <span class="_ _23"></span>its <span class="_ _9"></span>service <span class="_ _23"></span>on</div><div class="t m0 x32 h49 y4a46 ff19 fs26 fc0 sc0 ls0 ws0">our <span class="_ _23"></span>behalf.<span class="_ _51"> </span>In <span class="_ _23"></span>this <span class="_ _23"></span>example, <span class="_ _23"></span>we <span class="_ _23"></span>simply <span class="_ _23"></span>send <span class="_ _23"></span>the <span class="_ _23"></span>server <span class="_ _23"></span>a <span class="_ _23"> </span>1</div><div class="t m0 x12c h49 y4a47 ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 x12d h49 y4a46 ff19 fs26 fc0 sc0 ls0 ws0">byte <span class="_ _23"></span>message.<span class="_ _51"> </span>The <span class="_ _23"></span>server</div><div class="t m0 x32 h49 y4a48 ff19 fs26 fc0 sc0 ls0 ws0">will <span class="_ _42"> </span>receive <span class="_ _53"> </span>it, <span class="_ _42"> </span>get <span class="_ _53"> </span>our <span class="_ _53"> </span>address <span class="_ _42"> </span>from <span class="_ _53"> </span>the <span class="_ _42"> </span>packet, <span class="_ _53"> </span>and <span class="_ _53"> </span>use <span class="_ _53"> </span>this <span class="_ _53"> </span>address <span class="_ _42"> </span>to <span class="_ _53"> </span>transmit <span class="_ _53"> </span>its</div><div class="t m0 x32 h49 y4a49 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">sponse. <span class="_ _45"> </span>If<span class="_ _45"> </span>the <span class="_ _9"></span>server <span class="_ _9"></span>offer<span class="_ _0"></span>ed <span class="_ _9"></span>multiple <span class="_ _9"></span>services, <span class="_ _9"></span>we <span class="_ _9"></span>could <span class="_ _3"></span>use <span class="_ _9"></span>this <span class="_ _9"></span>request <span class="_ _9"></span>message <span class="_ _9"></span>to</span></div><div class="t m0 x32 h49 y4a4a ff19 fs26 fc0 sc0 ls0 ws0">indicate the <span class="_ _2"></span>service we <span class="_ _2"></span>want, but <span class="_ _2"></span>since the server <span class="_ _2"></span>does only <span class="_ _2"></span>one thing, <span class="_ _2"></span>the content <span class="_ _2"></span>of the</div><div class="t m0 x32 h49 y4a4b ff19 fs26 fc0 sc0 ls0 ws0">1</div><div class="t m0 x2c h49 y4a4c ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 x1c2 h49 y4a4b ff19 fs26 fc0 sc0 ls0 ws0">byte message doesn’t matter<span class="_ _6"></span>.</div><div class="t m0 x3f h4d y4a4d ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _2"></span>the <span class="_ _2"></span>server <span class="_ _2"></span>isn’t <span class="_ _3"></span>running, <span class="_ _2"></span>the <span class="_ _2"></span>client <span class="_ _2"></span>will <span class="_ _3"></span>block <span class="_ _2"></span>indeﬁnitely <span class="_ _2"></span>in <span class="_ _2"></span>the <span class="_ _3"></span>call <span class="_ _2"></span>to<span class="_ _47"> </span><span class="ff1a">recvfrom</span>.</div><div class="t m0 x32 h4d y4a4e ff19 fs26 fc0 sc0 ls3aa ws0">Wi<span class="_ _3"></span><span class="ls0">th <span class="_"> </span>the <span class="_ _e"> </span>connection-oriented <span class="_"> </span>example, <span class="_ _53"> </span>the<span class="_ _59"> </span><span class="ff1a">connect<span class="_ _59"> </span></span>call <span class="_"> </span>will <span class="_"> </span>fail <span class="_ _53"> </span>if <span class="_"> </span>the <span class="_"> </span>server <span class="_ _53"> </span>isn’t</span></div><div class="t m0 x32 h4d y4a4f ff19 fs26 fc0 sc0 ls2b1 ws0">ru<span class="ls0">nning. <span class="_"> </span>T<span class="_ _6"></span><span class="ls1379">oa<span class="_ _d"></span><span class="ls0">void blocking indeﬁnitely<span class="_ _6"></span>,<span class="_"> </span>we<span class="_"> </span>set an alarm clock <span class="_ _2"></span>befor<span class="ls137a">ec<span class="_ _4f"></span><span class="ls0">alling<span class="_"> </span><span class="ff1a">recvfrom</span>.</span></span></span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
