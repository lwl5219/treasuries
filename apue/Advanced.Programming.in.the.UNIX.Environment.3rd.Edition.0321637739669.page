<div id="pf29d" class="pf w4 h1f" data-page-no="29d"><div class="pc pc29d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg29d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>17.3<span class="_ _282"> </span>Unique <span class="_"> </span>Connections<span class="_ _1b"> </span><span class="ff18">635</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">struct sockaddr_un un;</div><div class="t m0 x8a h57 y8f6 ff1a fs2d fc0 sc0 ls0 ws0">un.sun_family = AF_UNIX;</div><div class="t m0 x8a h57 y8f7 ff1a fs2d fc0 sc0 ls0 ws0">strcpy(un.sun_path, &quot;foo.socket&quot;);</div><div class="t m0 x8a h57 yae9 ff1a fs2d fc0 sc0 ls0 ws0">if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) &lt; 0)</div><div class="t m0 x9d h57 yaea ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;socket failed&quot;);</div><div class="t m0 x8a h57 yaeb ff1a fs2d fc0 sc0 ls0 ws0">size = offsetof(struct sockaddr_un, sun_path) + strlen(un.sun_path);</div><div class="t m0 x8a h57 y16f9 ff1a fs2d fc0 sc0 ls0 ws0">if (bind(fd, (struct sockaddr *)&amp;un, size) &lt; 0)</div><div class="t m0 x9d h57 y16df ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;bind failed&quot;);</div><div class="t m0 x8a h57 y16e0 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;UNIX domain socket bound\n&quot;);</div><div class="t m0 x8a h57 y16e1 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y16e2 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x25 h2d y4b6c ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.5<span class="_ _5a"> </span><span class="ff19">Binding an address to a UNIX domain socket</span></div><div class="t m0 x3f h4d y4b6d ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _23"></span>we <span class="_ _23"></span>run <span class="_ _23"></span>this <span class="_ _23"></span>program, <span class="_ _9"></span>the<span class="_ _35"> </span><span class="ff1a">bind<span class="_ _35"> </span></span><span class="lscc">re</span>quest <span class="_ _23"> </span>succeeds.<span class="_ _51"> </span>If <span class="_ _23"> </span>we <span class="_ _23"> </span>run <span class="_ _23"> </span>the <span class="_ _23"> </span>program <span class="_ _23"></span>a</div><div class="t m0 x32 h49 y4b6e ff19 fs26 fc0 sc0 ls0 ws0">second <span class="_ _42"> </span>time, <span class="_ _53"> </span>however<span class="_ _6"></span>,<span class="_ _4b"> </span>we<span class="_ _44"> </span>get <span class="_ _42"> </span>an <span class="_ _53"> </span>error<span class="_ _6"></span><span class="ls13a8">,b<span class="_ _c"></span><span class="ls0">ecause <span class="_ _53"> </span>the <span class="_ _53"> </span>ﬁle <span class="_ _42"> </span>already <span class="_ _42"> </span>exists.<span class="_ _54"> </span>The <span class="_ _53"> </span>program</span></span></div><div class="t m0 x32 h49 y4b6f ff19 fs26 fc0 sc0 ls0 ws0">won’t succeed again until we remove the ﬁle.</div><div class="t m0 x3f h4e y4b70 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out<span class="_ _8c"> </span><span class="ff1b">run the program</span></span></div><div class="t m0 x3f h4e y4b71 ff1a fs28 fc0 sc0 ls0 ws0">UNIX domain socket bound</div><div class="t m0 x3f h4e y4b72 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">ls -l foo.socket<span class="_ _127"> </span><span class="ff1b">look at the socket ﬁle</span></span></div><div class="t m0 x3f h4e y4b73 ff1a fs28 fc0 sc0 ls0 ws0">srwxr-xr-x <span class="_"> </span>1<span class="_"> </span>sar <span class="_ _189"> </span>0<span class="_"> </span>May 18 00:44 foo.socket</div><div class="t m0 x3f h4e y4b74 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out<span class="_ _8c"> </span><span class="ff1b">try to run the program again</span></span></div><div class="t m0 x3f h4e y4b75 ff1a fs28 fc0 sc0 ls0 ws0">bind failed: Address already in use</div><div class="t m0 x3f h4e y4b76 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">rm foo.socket<span class="_ _37"> </span><span class="ff1b ls8f5">re<span class="ls0">move the socket ﬁle</span></span></span></div><div class="t m0 x3f h4e y4b77 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out<span class="_ _8c"> </span><span class="ff1b">run the program a third time</span></span></div><div class="t m0 x3f h4e y4b78 ff1a fs28 fc0 sc0 ls0 ws0">UNIX domain socket bound<span class="_ _1e6"> </span><span class="ff1b">now it succeeds</span></div><div class="t m0 x3f h49 y4b79 ff19 fs26 fc0 sc0 ls0 ws0">The way <span class="_ _2"></span>we <span class="_ _2"></span>determine the <span class="_ _2"></span>size <span class="_ _2"></span>of <span class="_ _2"></span>the address to <span class="_ _2"></span>bind <span class="_ _2"></span>is <span class="_ _2"></span>to calculate <span class="_ _2"></span>the <span class="_ _2"></span>offset of the</div><div class="t m0 x32 h4d y4b7a ff1a fs26 fc0 sc0 ls0 ws0">sun_path<span class="_ _59"> </span><span class="ff19">member <span class="_"> </span>in <span class="_"> </span>the<span class="_ _4b"> </span></span>sockaddr_un<span class="_ _46"> </span><span class="ff19">structur<span class="lsc26">ea<span class="_ _5b"></span><span class="ls0">nd <span class="_"> </span>add <span class="_"> </span>to <span class="_"> </span>it <span class="_ _e"> </span>the <span class="_"> </span>length <span class="_"> </span>of <span class="_"> </span>the</span></span></span></div><div class="t m0 x32 h49 y4b7b ff19 fs26 fc0 sc0 ls0 ws0">pathname, <span class="_"> </span>not <span class="_"> </span>including <span class="_ _66"> </span>the <span class="_ _66"> </span>terminating <span class="_ _66"> </span>null <span class="_ _66"> </span>byte.<span class="_ _60"> </span>Since <span class="_ _66"> </span>implementations <span class="_ _66"> </span>vary <span class="_ _66"> </span>in</div><div class="t m0 x32 h4d y4b7c ff19 fs26 fc0 sc0 ls0 ws0">which <span class="_ _44"> </span>members <span class="_ _44"> </span>pr<span class="_ _0"></span>ecede<span class="_ _54"> </span><span class="ff1a">sun_path<span class="_ _54"> </span></span>in <span class="_ _44"> </span>the<span class="_ _54"> </span><span class="ff1a">sockaddr_un<span class="_ _54"> </span></span>structur<span class="_ _0"></span>e, <span class="_ _44"> </span>we <span class="_ _44"> </span>use <span class="_ _35"> </span>the</div><div class="t m0 x32 h4d y4b7d ff1a fs26 fc0 sc0 ls0 ws0">offsetof<span class="_ _66"> </span><span class="ff19">macr<span class="ls13a9">of<span class="_ _4f"></span><span class="lscc">ro<span class="ls0">m<span class="_ _66"> </span><span class="ff1a">&lt;stddef.h&gt;<span class="_ _66"> </span></span>(included <span class="_ _2"></span>by<span class="_ _66"> </span><span class="ff1a">apue.h</span>)<span class="_ _66"> </span>to<span class="_ _66"> </span>calculate <span class="_ _2"></span>the offset of <span class="_ _2"></span>the</span></span></span></span></div><div class="t m0 x32 h4d y4b7e ff1a fs26 fc0 sc0 ls0 ws0">sun_path<span class="_ _45"> </span><span class="ff19">member <span class="_ _3"></span>from <span class="_ _9"></span>the <span class="_ _3"></span>start <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>structure. <span class="_ _47"> </span>If<span class="_ _45"> </span>you <span class="_ _9"></span>look <span class="_ _9"></span>in<span class="_ _45"> </span></span>&lt;stddef.h&gt;<span class="ff19 ls13aa">,y<span class="_ _b"></span><span class="ls0">ou’ll</span></span></div><div class="t m0 x32 h49 y4b7f ff19 fs26 fc0 sc0 ls0 ws0">see a deﬁnition similar to the following:</div><div class="t m0 x3f h4e y4b80 ff1a fs28 fc0 sc0 ls0 ws0">#define offsetof(TYPE, MEMBER)<span class="_ _210"> </span>((int)&amp;((TYPE *)0)-&gt;MEMBER)</div><div class="t m0 x32 h49 y4b81 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _42"> </span>expression <span class="_ _42"> </span>evaluates <span class="_ _42"> </span>to <span class="_ _53"> </span>an <span class="_ _42"> </span>integer<span class="_ _1"></span><span class="ls13ab">,w<span class="_ _43"></span><span class="ls0">hich <span class="_ _42"> </span>is <span class="_ _42"> </span>the <span class="_ _42"> </span>starting <span class="_ _53"> </span>address <span class="_ _42"> </span>of <span class="_ _42"> </span>the <span class="_ _53"> </span>member<span class="_ _1"></span>,</span></span></div><div class="t m0 x32 h49 y4b82 ff19 fs26 fc0 sc0 ls0 ws0">assuming that the structur<span class="_ _0"></span><span class="lsd3">eb<span class="_ _d"></span><span class="ls0">egins at address 0.</span></span></div><div class="t m0 x35 h99 y4b83 ff16 fs3b fc0 sc0 ls0 ws0">17.3 <span class="_ _93"> </span>Unique<span class="_ _54"> </span>Connections</div><div class="t m0 x32 h55 y4b84 ff19 fs2c fc0 sc0 ls13ac ws0">As<span class="_ _4f"></span><span class="ls0">erver <span class="_ _2"></span>can arrange <span class="_ _2"></span>for unique <span class="_ _2"></span>UNIX domain <span class="_ _2"></span>connections to <span class="_ _2"></span>clients using the <span class="_ _2"></span>standard</span></div><div class="t m0 x32 h54 y4b85 ff1a fs2c fc0 sc0 ls0 ws0">bind<span class="ff19">,<span class="_ _66"> </span></span>listen<span class="ff19 ls13ad">,a<span class="_ _4f"></span><span class="ls0">nd<span class="_ _47"> </span><span class="ff1a">accept<span class="_ _66"> </span></span>functions. <span class="_ _66"> </span>Clients<span class="_ _47"> </span>use<span class="_ _66"> </span><span class="ff1a">connect<span class="_ _66"> </span></span>to <span class="_ _2"></span>contact <span class="_ _3"></span>the <span class="_ _2"></span>server; <span class="_ _2"></span>after</span></span></div><div class="t m0 x32 h55 y4b86 ff19 fs2c fc0 sc0 ls0 ws0">the <span class="_ _23"> </span>connect <span class="_ _23"> </span>request <span class="_ _23"> </span>is <span class="_ _23"> </span>accepted <span class="_ _42"> </span>by <span class="_ _23"> </span>the <span class="_ _23"> </span>server<span class="_ _1"></span><span class="lsec5">,au<span class="_ _43"></span><span class="ls0">nique <span class="_ _42"> </span>connection <span class="_ _23"></span>exists <span class="_ _23"> </span>between <span class="_ _23"> </span>the</span></span></div><div class="t m0 x32 h55 y4b87 ff19 fs2c fc0 sc0 ls0 ws0">client <span class="_"> </span>and <span class="_ _66"> </span>the <span class="_ _66"> </span>server<span class="_ _1"></span><span class="ls13ae">.T<span class="_ _49"></span><span class="ls0">his <span class="_ _66"> </span>style <span class="_ _66"> </span>of <span class="_ _66"> </span>operation <span class="_ _66"> </span>is <span class="_ _66"> </span>the <span class="_ _66"> </span>same <span class="_ _66"> </span>that <span class="_ _66"> </span>we <span class="_ _66"> </span>illustrated <span class="_ _66"> </span>with</span></span></div><div class="t m0 x32 h55 y4b88 ff19 fs2c fc0 sc0 ls0 ws0">Internet domain sockets in Figures 16.16 and 16.17.</div><a class="l" href="#pf12" data-dest-detail='[18,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892842px;bottom:271.021813px;width:156.011597px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
