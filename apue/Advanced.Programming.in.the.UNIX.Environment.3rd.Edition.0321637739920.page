<div id="pf398" class="pf w4 h1f" data-page-no="398"><div class="pc pc398 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg398.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">886<span class="_ _1b"> </span><span class="ff19">Function <span class="_"> </span>Prototypes <span class="_ _2d9"> </span>Appendix<span class="_ _44"> </span>A</span></div><div class="t m0 x32 h52 y2a3 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sigsuspend</span>(const sigset_t *<span class="ff1b">sigmask</span>);</div><div class="t m0 x36 h52 y5cfc ff1a fs2a fc0 sc0 ls0 ws0">&lt;signal.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 359</span></div><div class="t m0 x36 h52 y5cfd ff19 fs2a fc0 sc0 ls0 ws0">Returns:<span class="_"> </span><span class="ff20">−</span><span class="lse9">1w<span class="_ _84"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _53"> </span></span>set to<span class="_"> </span><span class="ff1a">EINTR</span></span></span></div><div class="t m0 x32 h52 y5e31 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sigwait</span>(const sigset_t *restrict<span class="_"> </span><span class="ff1b">set</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt *restrict<span class="_"> </span><span class="ff1b">signop</span>);</span></span></div><div class="t m0 x36 h52 y5e32 ff1a fs2a fc0 sc0 ls0 ws0">&lt;signal.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 454</span></div><div class="t m0 x36 h51 ybf4 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5d44 ff1a fs2a fc0 sc0 ls0 ws0">unsigned</div><div class="t m0 x32 h52 y5d9c ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sleep</span>(unsigned int<span class="_"> </span><span class="ff1b">seconds</span>);</div><div class="t m0 x36 h52 y5d9d ff1a fs2a fc0 sc0 ls0 ws0">&lt;unistd.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 373</span></div><div class="t m0 x36 h51 y5d47 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 or number of unslept seconds</div><div class="t m0 x32 h52 y5f3a ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">snprintf</span>(char *restrict<span class="_"> </span><span class="ff1b">buf</span><span class="lsf5a">,s<span class="_ _55"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">n</span>,</span></span></div><div class="t m0 x4 h52 y5dba ff1a fs2a fc0 sc0 ls0 ws0">const char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,.<span class="_ _4a"></span><span class="ls0">..);</span></span></div><div class="t m0 x36 h52 y5dbb ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 159</span></div><div class="t m0 x36 h51 y5d86 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters that would have been stored</div><div class="t m0 x136 h51 y5e5e ff19 fs2a fc0 sc0 ls0 ws0">in array if buffer was lar<span class="_ _0"></span>ge enough, negative value</div><div class="t m0 x136 h51 y5e5f ff19 fs2a fc0 sc0 ls0 ws0">if encoding error</div><div class="t m0 x32 h52 y5d29 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sockatmark</span>(int<span class="_"> </span><span class="ff1b">sockfd</span>);</div><div class="t m0 x36 h52 y5d2a ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/socket.h&gt;<span class="_ _31d"> </span><span class="ff19">p. 626</span></div><div class="t m0 x36 h51 y5e0c ff19 fs2a fc0 sc0 ls0 ws0">Returns: 1 if at mark, 0 if not at mark,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5f3b ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">socket</span>(int<span class="_"> </span><span class="ff1b">domain</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">type</span><span class="lsf5a">,i<span class="_ _4a"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">protocol</span>);</span></span></span></span></div><div class="t m0 x36 h52 y5e35 ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/socket.h&gt;<span class="_ _31d"> </span><span class="ff19">p. 590</span></div><div class="t m0 x36 h52 y5e36 ff1b fs2a fc0 sc0 ls0 ws0">type<span class="ff1a lsf5a">:S<span class="_ _4a"></span><span class="ls0">OCK_STREAM, SOCK_DGRAM, SOCK_SEQPACKET</span></span></div><div class="t m0 x36 h51 y5e37 ff19 fs2a fc0 sc0 ls0 ws0">Returns: ﬁle (socket) descriptor if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5d8f ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">socketpair</span>(int<span class="_"> </span><span class="ff1b">domain</span><span class="lsf5a">,i<span class="_ _55"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">type</span><span class="lsf5a">,i<span class="_ _4a"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">protocol</span><span class="lsf5a">,i<span class="_ _4a"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">sockfd</span>[2]);</span></span></span></span></span></span></div><div class="t m0 x36 h52 y5d90 ff1a fs2a fc0 sc0 ls0 ws0">&lt;sys/socket.h&gt;<span class="_ _31d"> </span><span class="ff19">p. 630</span></div><div class="t m0 x36 h52 y5d91 ff1b fs2a fc0 sc0 ls0 ws0">type<span class="ff1a lsf5a">:S<span class="_ _4a"></span><span class="ls0">OCK_STREAM, SOCK_DGRAM, SOCK_SEQPACKET</span></span></div><div class="t m0 x36 h51 y5e2e ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h52 y5e14 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sprintf</span>(char *restrict<span class="_"> </span><span class="ff1b">buf</span><span class="lsf5a">,c<span class="_ _55"></span><span class="ls0">onst char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,.<span class="_ _4a"></span><span class="ls0">..);</span></span></span></span></div><div class="t m0 x36 h52 y5e15 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 159</span></div><div class="t m0 x36 h51 y5ed4 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters stored in array if OK, negative</div><div class="t m0 x136 h51 y5d7a ff19 fs2a fc0 sc0 ls0 ws0">value if encoding error</div><div class="t m0 x32 h52 y5e66 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">sscanf</span>(const char *restrict<span class="_"> </span><span class="ff1b">buf</span>,</div><div class="t m0 x144 h52 y5e20 ff1a fs2a fc0 sc0 ls0 ws0">const char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,.<span class="_ _4a"></span><span class="ls0">..);</span></span></div><div class="t m0 x36 h52 y5e21 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;<span class="_ _26f"> </span><span class="ff19">p. 162</span></div><div class="t m0 x36 h52 y5e22 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of input items assigned,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>if input error or</div><div class="t m0 x136 h51 y5db5 ff19 fs2a fc0 sc0 ls0 ws0">end of ﬁle befor<span class="lse9">ea<span class="_ _5"></span><span class="ls0">ny conversion</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
