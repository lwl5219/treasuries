<div id="pf1df" class="pf w4 h1f" data-page-no="1df"><div class="pc pc1df w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1df.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.5<span class="_ _292"> </span>Reentrancy<span class="_ _1b"> </span><span class="ff18">445</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _35"> </span>s<span class="_ _23"></span><span class="ls0">how <span class="_ _e"> </span>a <span class="_"> </span>r<span class="_ _0"></span>eentrant <span class="_ _e"> </span>version <span class="_"> </span>of<span class="_ _4b"> </span><span class="ff1a">getenv<span class="_ _4b"> </span></span>in <span class="_"> </span>Figur<span class="lsee3">e1<span class="_ _4a"></span><span class="ls0">2.12. <span class="_ _4b"> </span>This<span class="_ _59"> </span>version <span class="_"> </span>is <span class="_ _e"> </span>called</span></span></span></div><div class="t m0 x32 h26 y130 ff1a fsf fc0 sc0 ls0 ws0">getenv_r<span class="ff19 lsee4">.I<span class="_ _49"></span><span class="lsee5">tu<span class="_ _1d"></span><span class="ls0">ses <span class="_ _47"> </span>the<span class="_ _61"> </span><span class="ff1a">pthread_once<span class="_ _46"> </span></span>function <span class="_ _47"> </span>to <span class="_ _66"> </span>ensur<span class="lsee5">et<span class="_ _1d"></span><span class="ls0">hat <span class="_ _47"> </span>the<span class="_ _61"> </span><span class="ff1a">thread_init</span></span></span></span></span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">function <span class="_ _3"></span>is <span class="_ _3"></span>called <span class="_ _9"></span>only <span class="_ _3"></span>once <span class="_ _9"></span>per <span class="_ _3"></span>process, <span class="_ _3"></span>regar<span class="_ _0"></span>dless <span class="_ _3"></span>of <span class="_ _3"></span>how <span class="_ _9"></span>many <span class="_ _3"></span>threads <span class="_ _3"></span>might <span class="_ _3"></span>race <span class="_ _9"></span>to</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">call<span class="_ _44"> </span><span class="ff1a">getenv_r<span class="_ _44"> </span></span>at <span class="_ _53"> </span>the <span class="_ _53"> </span>same <span class="_ _53"> </span>time.<span class="_ _65"> </span><span class="ls5f">We<span class="_ _9"></span></span>’ll <span class="_ _53"> </span>have <span class="_ _53"> </span>more<span class="_ _44"> </span>to<span class="_ _44"> </span>say <span class="_ _53"> </span>about <span class="_ _53"> </span>the<span class="_ _4b"> </span><span class="ff1a">pthread_once</span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">function in Section 12.6.</div><div class="t m0 x32 h4e y2259 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;string.h&gt;</div><div class="t m0 x32 h4e y225a ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h4e y3775 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x32 h4e y3776 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x32 h4e y225d ff1a fs28 fc0 sc0 ls0 ws0">extern char **environ;</div><div class="t m0 x32 h4e y3777 ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_t env_mutex;</div><div class="t m0 x32 h4e y3778 ff1a fs28 fc0 sc0 ls0 ws0">static pthread_once_t init_done = PTHREAD_ONCE_INIT;</div><div class="t m0 x32 h4e y3779 ff1a fs28 fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h4e y377a ff1a fs28 fc0 sc0 ls0 ws0">thread_init(void)</div><div class="t m0 x32 h4e y377b ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y377c ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutexattr_t attr;</div><div class="t m0 x8a h4e y377d ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutexattr_init(&amp;attr);</div><div class="t m0 x8a h4e y377e ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutexattr_settype(&amp;attr, PTHREAD_MUTEX_RECURSIVE);</div><div class="t m0 x8a h4e y377f ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_init(&amp;env_mutex, &amp;attr);</div><div class="t m0 x8a h4e y3780 ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutexattr_destroy(&amp;attr);</div><div class="t m0 x32 h4e y3781 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y3782 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y3783 ff1a fs28 fc0 sc0 ls0 ws0">getenv_r(const char *name, char *buf, int buflen)</div><div class="t m0 x32 h4e y3784 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y3785 ff1a fs28 fc0 sc0 ls0 ws0">int i, len, olen;</div><div class="t m0 x8a h4e y3786 ff1a fs28 fc0 sc0 ls0 ws0">pthread_once(&amp;init_done, thread_init);</div><div class="t m0 x8a h4e y3787 ff1a fs28 fc0 sc0 ls0 ws0">len = strlen(name);</div><div class="t m0 x8a h4e y3788 ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;env_mutex);</div><div class="t m0 x8a h4e y3789 ff1a fs28 fc0 sc0 ls0 ws0">for (i = 0; environ[i] != NULL; i++) {</div><div class="t m0 x9d h4e y378a ff1a fs28 fc0 sc0 ls0 ws0">if ((strncmp(name, environ[i], len) == 0) &amp;&amp;</div><div class="t m0 x76 h4e y378b ff1a fs28 fc0 sc0 ls0 ws0">(environ[i][len] == ’=’)) {</div><div class="t m0 x1f h4e y378c ff1a fs28 fc0 sc0 ls0 ws0">olen = strlen(&amp;environ[i][len+1]);</div><div class="t m0 x1f h4e y378d ff1a fs28 fc0 sc0 ls0 ws0">if (olen &gt;= buflen) {</div><div class="t m0 x1ca h4e y378e ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;env_mutex);</div><div class="t m0 x1ca h4e y378f ff1a fs28 fc0 sc0 ls0 ws0">return(ENOSPC);</div><div class="t m0 x1f h4e y3790 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x1f h4e y3791 ff1a fs28 fc0 sc0 ls0 ws0">strcpy(buf, &amp;environ[i][len+1]);</div><div class="t m0 x1f h4e y3792 ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;env_mutex);</div><div class="t m0 x1f h4e y3793 ff1a fs28 fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x9d h4e y3794 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y3795 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y3796 ff1a fs28 fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;env_mutex);</div><div class="t m0 x8a h4e y3797 ff1a fs28 fc0 sc0 ls0 ws0">return(ENOENT);</div><div class="t m0 x32 h4e y3798 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x25 h4f y3799 ff18 fs11 fc0 sc0 ls0 ws0">Figure 12.12<span class="_ _51"> </span><span class="ff19 lsdb">Ar<span class="_ _84"></span><span class="ls0">eentrant (thread-safe) version of<span class="_"> </span><span class="ff1a">getenv</span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
