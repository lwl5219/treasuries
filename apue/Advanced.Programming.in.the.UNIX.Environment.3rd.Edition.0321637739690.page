<div id="pf2b2" class="pf w4 h1f" data-page-no="2b2"><div class="pc pc2b2 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2b2.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">656<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">Now <span class="_ _3"></span>let’s <span class="_ _9"></span>look <span class="_ _9"></span>at <span class="_ _3"></span>the <span class="_ _9"></span>open <span class="_ _9"></span>server<span class="_ _6"></span><span class="ls13f1">.I<span class="_ _62"></span><span class="ls0">t<span class="_ _45"> </span>is<span class="_ _45"> </span>the <span class="_ _3"></span>program<span class="_ _47"> </span><span class="ff1a">opend<span class="_ _45"> </span></span>that <span class="_ _3"></span>is <span class="_ _9"></span>executed <span class="_ _9"></span>by <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">client in Figur<span class="ls9eb">e1<span class="_ _4f"></span><span class="ls0">7.19. <span class="_ _66"> </span>First,<span class="_"> </span>we have the<span class="_ _66"> </span><span class="ff1a">opend.h<span class="_ _66"> </span></span>header (Figur<span class="ls9eb">e1<span class="_ _4f"></span><span class="ls0">7.20), which <span class="_ _2"></span>includes</span></span></span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">the standar<span class="ls44">dh<span class="_ _4f"></span><span class="ls0">eaders and declares the global variables and function prototypes.</span></span></div><div class="t m0 x32 h4e y245e ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y245f ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h4e y4d53 ff1a fs28 fc0 sc0 ls0 ws0">#define CL_OPEN &quot;open&quot;<span class="_ _74"> </span>/* client’s request for server */</div><div class="t m0 x32 h4e y2c74 ff1a fs28 fc0 sc0 ls0 ws0">extern char<span class="_ _d9"> </span>errmsg[]; <span class="_"> </span>/*<span class="_"> </span>error message string to return to client */</div><div class="t m0 x32 h4e y2c75 ff1a fs28 fc0 sc0 ls0 ws0">extern int<span class="_ _68"> </span>oflag; <span class="_ _15"> </span>/*<span class="_"> </span>open() flag: O_xxx ... */</div><div class="t m0 x32 h4e y2c76 ff1a fs28 fc0 sc0 ls0 ws0">extern char *pathname;<span class="_ _d9"> </span>/* of file to open() for client */</div><div class="t m0 x32 h4e y2c77 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>cli_args(int,<span class="_"> </span>char **);</div><div class="t m0 x32 h4e y2c78 ff1a fs28 fc0 sc0 ls0 ws0">void <span class="_ _15"> </span>handle_request(char<span class="_"> </span>*, int, int);</div><div class="t m0 x199 h4f y4d54 ff18 fs11 fc0 sc0 ls0 ws0">Figure 17.20<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">opend.h<span class="_ _e"> </span></span>header<span class="_ _1"></span><span class="lsdb">,v<span class="_ _84"></span><span class="ls0">ersion 1</span></span></span></div><div class="t m0 x3f h54 y4d55 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _45"> </span><span class="ff1a">main<span class="_ _45"> </span></span>function <span class="_ _9"></span>(Figur<span class="lsd60">e1<span class="_ _b"></span><span class="ls0">7.21) <span class="_ _9"></span>reads <span class="_ _9"></span>the <span class="_ _9"></span>requests <span class="_ _9"></span>from <span class="_ _9"></span>the <span class="_ _9"></span>client <span class="_ _9"></span>on <span class="_ _23"></span>the <span class="_ _9"></span>fd-pipe</span></span></div><div class="t m0 x32 h54 y4d56 ff19 fs2c fc0 sc0 ls0 ws0">(its standar<span class="ls142">di<span class="_ _4f"></span><span class="ls0">nput) and calls the function<span class="_"> </span><span class="ff1a">handle_request</span>.</span></span></div><div class="t m0 x32 h62 y4d57 ff1a fs30 fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&quot;opend.h&quot;</div><div class="t m0 x32 h62 y4d58 ff1a fs30 fc0 sc0 ls0 ws0">char <span class="_ _15"> </span>errmsg[MAXLINE];</div><div class="t m0 x32 h62 y4d59 ff1a fs30 fc0 sc0 ls0 ws0">int <span class="_ _8a"> </span>oflag;</div><div class="t m0 x32 h62 y4d5a ff1a fs30 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>*pathname;</div><div class="t m0 x32 h62 y4d5b ff1a fs30 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h62 y4d5c ff1a fs30 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h62 y4d5d ff1a fs30 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h62 y4d5e ff1a fs30 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>nread;</div><div class="t m0 x8a h62 y4d5f ff1a fs30 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>buf[MAXLINE];</div><div class="t m0 x8a h62 y4d60 ff1a fs30 fc0 sc0 ls0 ws0">for ( ; ; ) {<span class="_ _68"> </span>/* read arg buffer from client, process request */</div><div class="t m0 x9d h62 y4d61 ff1a fs30 fc0 sc0 ls0 ws0">if ((nread = read(STDIN_FILENO, buf, MAXLINE)) &lt; 0)</div><div class="t m0 x1f h62 y4d62 ff1a fs30 fc0 sc0 ls0 ws0">err_sys(&quot;read error on stream pipe&quot;);</div><div class="t m0 x9d h62 y4d63 ff1a fs30 fc0 sc0 ls0 ws0">else if (nread == 0)</div><div class="t m0 x1f h62 y4d64 ff1a fs30 fc0 sc0 ls0 ws0">break; <span class="_ _8a"> </span>/*<span class="_"> </span>client has closed the stream pipe */</div><div class="t m0 x9d h62 y4d65 ff1a fs30 fc0 sc0 ls0 ws0">handle_request(buf, nread, STDOUT_FILENO);</div><div class="t m0 x8a h62 y4d66 ff1a fs30 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h62 y4d67 ff1a fs30 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h62 y4d68 ff1a fs30 fc0 sc0 ls0 ws0">}</div><div class="t m0 x3d h63 y4d69 ff18 fs13 fc0 sc0 ls0 ws0">Figure 17.21<span class="_ _5a"> </span><span class="ff19">The server<span class="_"> </span><span class="ff1a">main<span class="_ _e"> </span></span>function, version 1</span></div><div class="t m0 x3f h64 y4d6a ff19 fs31 fc0 sc0 ls0 ws0">The <span class="_"> </span>function<span class="_ _46"> </span><span class="ff1a">handle_request<span class="_ _46"> </span></span>in <span class="_"> </span>Figur<span class="ls13f2">e1<span class="_ _5b"></span><span class="ls0">7.22 <span class="_ _66"> </span>does <span class="_"> </span>all <span class="_"> </span>the <span class="_ _66"> </span>work.<span class="_ _60"> </span>It <span class="_ _66"> </span>calls <span class="_"> </span>the</span></span></div><div class="t m0 x32 h64 y4d6b ff19 fs31 fc0 sc0 ls0 ws0">function<span class="_ _54"> </span><span class="ff1a">buf_args<span class="_ _51"> </span></span>to <span class="_ _44"> </span>break <span class="_ _35"> </span>up <span class="_ _44"> </span>the <span class="_ _44"> </span>client’s <span class="_ _44"> </span>r<span class="_ _0"></span>equest <span class="_ _44"> </span>into <span class="_ _35"> </span>a <span class="_ _44"> </span>standard<span class="_ _51"> </span><span class="ff1a">argv</span>-style</div><div class="t m0 x32 h64 y4d6c ff19 fs31 fc0 sc0 ls0 ws0">argument <span class="_ _3"></span>list <span class="_ _3"></span>and <span class="_ _9"></span>calls <span class="_ _3"></span>the <span class="_ _9"></span>function<span class="_ _45"> </span><span class="ff1a">cli_args<span class="_ _47"> </span></span>to <span class="_ _9"></span>process <span class="_ _3"></span>the <span class="_ _3"></span>client’s <span class="_ _9"></span>arguments. <span class="_ _47"> </span>If<span class="_ _45"> </span>all</div><div class="t m0 x32 h64 y4d6d ff19 fs31 fc0 sc0 ls0 ws0">is <span class="_ _9"></span>OK,<span class="_ _45"> </span><span class="ff1a">open<span class="_ _45"> </span></span>is <span class="_ _23"></span>called <span class="_ _9"></span>to <span class="_ _9"></span>open <span class="_ _9"></span>the <span class="_ _23"></span>ﬁle, <span class="_ _9"></span>and <span class="_ _9"></span>then<span class="_ _45"> </span><span class="ff1a">send_fd<span class="_ _45"> </span></span>sends <span class="_ _23"></span>the <span class="_ _9"></span>descriptor <span class="_ _9"></span>back <span class="_ _9"></span>to</div><div class="t m0 x32 h64 y4d6e ff19 fs31 fc0 sc0 ls0 ws0">the client <span class="_ _2"></span>across the <span class="_ _2"></span>fd-pipe (its <span class="_ _2"></span>standar<span class="ls13f3">do<span class="_ _4f"></span><span class="ls0">utput). <span class="_ _66"> </span>If<span class="_ _66"> </span>an <span class="_ _2"></span>error is <span class="_ _2"></span>encountered,<span class="_"> </span><span class="ff1a">send_err</span></span></span></div><div class="t m0 x32 h6e y4d6f ff19 fs31 fc0 sc0 ls0 ws0">is <span class="_ _47"> </span>called <span class="_ _47"> </span>to <span class="_ _47"> </span>send <span class="_ _47"> </span>back <span class="_ _47"> </span>an <span class="_ _47"> </span>error <span class="_ _47"> </span>message, <span class="_ _47"> </span>using <span class="_ _47"> </span>the <span class="_ _47"> </span>client–server <span class="_ _47"> </span>protocol <span class="_ _66"> </span>that <span class="_ _47"> </span>we</div><div class="t m0 x32 h6e y4d70 ff19 fs31 fc0 sc0 ls0 ws0">described earlier<span class="_ _6"></span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
