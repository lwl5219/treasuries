<div id="pf3c0" class="pf w4 h1f" data-page-no="3c0"><div class="pc pc3c0 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3c0.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">926<span class="_ _1b"> </span><span class="ff19">Solutions <span class="_"> </span>to <span class="_"> </span>Selected <span class="_"> </span>Exercises <span class="_ _2eb"> </span>Appendix<span class="_ _4b"> </span>C</span></div><div class="t m0 xe2 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 xe2 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 xe2 h57 y2012 ff1a fs2d fc0 sc0 ls0 ws0">struct foo {</div><div class="t m0 x60 h57 y2013 ff1a fs2d fc0 sc0 ls0 ws0">int a, b, c, d;</div><div class="t m0 xe2 h57 y2014 ff1a fs2d fc0 sc0 ls0 ws0">};</div><div class="t m0 xe2 h57 y27e6 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 xe2 h57 y1cc2 ff1a fs2d fc0 sc0 ls0 ws0">printfoo(const char *s, const struct foo *fp)</div><div class="t m0 xe2 h57 y1cc3 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x60 h57 y1cc4 ff1a fs2d fc0 sc0 ls0 ws0">fputs(s, stdout);</div><div class="t m0 x60 h57 y1cc5 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; <span class="_"> </span>structure<span class="_"> </span>at 0x%lx\n&quot;, (unsigned long)fp);</div><div class="t m0 x60 h57 y2016 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; <span class="_"> </span>foo.a<span class="_"> </span><span class="ls15c">=%<span class="_ _1d"></span><span class="ls0">d\n&quot;, fp-&gt;a);</span></span></div><div class="t m0 x60 h57 y2017 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; <span class="_"> </span>foo.b<span class="_"> </span><span class="ls15c">=%<span class="_ _1d"></span><span class="ls0">d\n&quot;, fp-&gt;b);</span></span></div><div class="t m0 x60 h57 y2018 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; <span class="_"> </span>foo.c<span class="_"> </span><span class="ls15c">=%<span class="_ _1d"></span><span class="ls0">d\n&quot;, fp-&gt;c);</span></span></div><div class="t m0 x60 h57 y2ad4 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; <span class="_"> </span>foo.d<span class="_"> </span><span class="ls15c">=%<span class="_ _1d"></span><span class="ls0">d\n&quot;, fp-&gt;d);</span></span></div><div class="t m0 xe2 h57 y2ad5 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xe2 h57 y201b ff1a fs2d fc0 sc0 ls0 ws0">void *</div><div class="t m0 xe2 h57 y201c ff1a fs2d fc0 sc0 ls0 ws0">thr_fn1(void *arg)</div><div class="t m0 xe2 h57 y201d ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x60 h57 y201e ff1a fs2d fc0 sc0 ls0 ws0">struct foo *fp;</div><div class="t m0 x60 h57 y1ccb ff1a fs2d fc0 sc0 ls0 ws0">if ((fp = malloc(sizeof(struct foo))) == NULL)</div><div class="t m0 xb9 h57 y2315 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;can’t allocate memory&quot;);</div><div class="t m0 x60 h57 y2316 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;a = 1;</div><div class="t m0 x60 h57 y458d ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;b = 2;</div><div class="t m0 x60 h57 y2023 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;c = 3;</div><div class="t m0 x60 h57 y2024 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;d = 4;</div><div class="t m0 x60 h57 y2adf ff1a fs2d fc0 sc0 ls0 ws0">printfoo(&quot;thread:\n&quot;, fp);</div><div class="t m0 x60 h57 y458e ff1a fs2d fc0 sc0 ls0 ws0">return((void *)fp);</div><div class="t m0 xe2 h57 y57d0 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xe2 h57 y2028 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 xe2 h57 y2029 ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 xe2 h57 y202a ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x60 h57 y4c81 ff1a fs2d fc0 sc0 ls0 ws0">int err;</div><div class="t m0 x60 h57 y4c82 ff1a fs2d fc0 sc0 ls0 ws0">pthread_t tid1;</div><div class="t m0 x60 h57 y4c83 ff1a fs2d fc0 sc0 ls0 ws0">struct foo *fp;</div><div class="t m0 x60 h57 y1cd9 ff1a fs2d fc0 sc0 ls0 ws0">err = pthread_create(&amp;tid1, NULL, thr_fn1, NULL);</div><div class="t m0 x60 h57 y1cda ff1a fs2d fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 xb9 h57 y1cdb ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t create thread 1&quot;);</div><div class="t m0 x60 h57 y61a3 ff1a fs2d fc0 sc0 ls0 ws0">err = pthread_join(tid1, (void *)&amp;fp);</div><div class="t m0 x60 h57 y4c88 ff1a fs2d fc0 sc0 ls0 ws0">if (err != 0)</div><div class="t m0 xb9 h57 y4c89 ff1a fs2d fc0 sc0 ls0 ws0">err_exit(err, &quot;can’t join with thread 1&quot;);</div><div class="t m0 x60 h57 y4c8a ff1a fs2d fc0 sc0 ls0 ws0">printfoo(&quot;parent:\n&quot;, fp);</div><div class="t m0 x60 h57 y4c8b ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 xe2 h57 y4c8c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x124 h2d y4c8d ff18 fs10 fc0 sc0 ls0 ws0">Figure C.12<span class="_ _5a"> </span><span class="ff19">Correct use of thread r<span class="_ _0"></span>eturn value</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
