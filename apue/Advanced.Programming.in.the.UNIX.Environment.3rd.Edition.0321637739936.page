<div id="pf3a8" class="pf w4 h1f" data-page-no="3a8"><div class="pc pc3a8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3a8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">902<span class="_ _1b"> </span><span class="ff19">Miscellaneous <span class="_"> </span>Source <span class="_"> </span>Code<span class="_ _2c"> </span>Appendix <span class="_"> </span>B</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y3c0 ff1a fs2d fc0 sc0 ls15c ws0">*E<span class="_ _1d"></span><span class="ls0">rror routines for programs that can run as a daemon.</span></div><div class="t m0 x140 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y2013 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y2014 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;<span class="_ _189"> </span>/* for definition of errno */</div><div class="t m0 x32 h57 y2015 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;stdarg.h&gt;<span class="_ _8a"> </span>/* ISO C variable arguments */</div><div class="t m0 x32 h57 y33ad ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;syslog.h&gt;</div><div class="t m0 x32 h57 y1cc3 ff1a fs2d fc0 sc0 ls0 ws0">static void log_doit(int, int, int, const char *, va_list ap);</div><div class="t m0 x32 h57 y3b0a ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y4c79 ff1a fs2d fc0 sc0 ls15c ws0">*C<span class="_ _1d"></span><span class="ls0">aller must define and set this: nonzero if</span></div><div class="t m0 x140 h57 y4c7a ff1a fs2d fc0 sc0 ls15c ws0">*i<span class="_ _1d"></span><span class="ls0">nteractive, zero if daemon</span></div><div class="t m0 x140 h57 y4c7b ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y4c7c ff1a fs2d fc0 sc0 ls0 ws0">extern int<span class="_ _d9"> </span>log_to_stderr;</div><div class="t m0 x32 h57 y3cd ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y3ce ff1a fs2d fc0 sc0 ls15c ws0">*I<span class="_ _1d"></span><span class="ls0">nitialize syslog(), if running as daemon.</span></div><div class="t m0 x140 h57 y3cf ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y3d0 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y3d1 ff1a fs2d fc0 sc0 ls0 ws0">log_open(const char *ident, int option, int facility)</div><div class="t m0 x32 h57 y1cca ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1ccb ff1a fs2d fc0 sc0 ls0 ws0">if (log_to_stderr == 0)</div><div class="t m0 x9d h57 y2315 ff1a fs2d fc0 sc0 ls0 ws0">openlog(ident, option, facility);</div><div class="t m0 x32 h57 y2316 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y4c7e ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y4c7f ff1a fs2d fc0 sc0 ls15c ws0">*N<span class="_ _1d"></span><span class="ls0">onfatal error related to a system call.</span></div><div class="t m0 x140 h57 y4c80 ff1a fs2d fc0 sc0 ls15c ws0">*P<span class="_ _1d"></span><span class="ls0">rint a message with the systemâ€™s errno value and return.</span></div><div class="t m0 x140 h57 y2025 ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y2026 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y2027 ff1a fs2d fc0 sc0 ls0 ws0">log_ret(const char *fmt, ...)</div><div class="t m0 x32 h57 y2028 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y2029 ff1a fs2d fc0 sc0 ls0 ws0">va_list <span class="_ _15"> </span>ap;</div><div class="t m0 x8a h57 y5fc2 ff1a fs2d fc0 sc0 ls0 ws0">va_start(ap, fmt);</div><div class="t m0 x8a h57 y2ae1 ff1a fs2d fc0 sc0 ls0 ws0">log_doit(1, errno, LOG_ERR, fmt, ap);</div><div class="t m0 x8a h57 y2ae2 ff1a fs2d fc0 sc0 ls0 ws0">va_end(ap);</div><div class="t m0 x32 h57 y5fc3 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y5fc4 ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h57 y5fc5 ff1a fs2d fc0 sc0 ls15c ws0">*F<span class="_ _1d"></span><span class="ls0">atal error related to a system call.</span></div><div class="t m0 x140 h57 y5fc6 ff1a fs2d fc0 sc0 ls15c ws0">*P<span class="_ _1d"></span><span class="ls0">rint a message and terminate.</span></div><div class="t m0 x140 h57 y5fc7 ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h57 y5fc8 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y5fc9 ff1a fs2d fc0 sc0 ls0 ws0">log_sys(const char *fmt, ...)</div><div class="t m0 x32 h57 y5fca ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y5fcb ff1a fs2d fc0 sc0 ls0 ws0">va_list <span class="_ _15"> </span>ap;</div><div class="t m0 x8a h57 y5fcc ff1a fs2d fc0 sc0 ls0 ws0">va_start(ap, fmt);</div><div class="t m0 x8a h57 y5fcd ff1a fs2d fc0 sc0 ls0 ws0">log_doit(1, errno, LOG_ERR, fmt, ap);</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
