<div id="pf22e" class="pf w4 h1f" data-page-no="22e"><div class="pc pc22e w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg22e.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">524<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>I/O<span class="_ _16b"> </span>Chapter <span class="_"> </span>14</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">of <span class="_ _9"></span>ﬁle <span class="_ _9"></span>while <span class="_ _9"></span>reading, <span class="_ _9"></span>we <span class="_ _9"></span>return <span class="_ _9"></span>the <span class="_ _9"></span>number <span class="_ _9"></span>of <span class="_ _9"></span>bytes <span class="_ _9"></span>copied <span class="_ _9"></span>to <span class="_ _23"></span>the <span class="_ _9"></span>caller<span class="_ _3"></span>’s <span class="_ _9"></span>buffer <span class="_ _9"></span>if <span class="_ _9"></span>we</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">already r<span class="_ _0"></span>ead some data successfully and have not yet satisﬁed the amount r<span class="_ _0"></span>equested.</div><div class="t m0 x32 h4e y4010 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4011 ff1a fs28 fc0 sc0 ls0 ws0">ssize_t <span class="_ _82"> </span>/*<span class="_"> </span>Read &quot;n&quot; bytes from a descriptor<span class="_ _d9"> </span>*/</div><div class="t m0 x32 h4e y4012 ff1a fs28 fc0 sc0 ls0 ws0">readn(int fd, void *ptr, size_t n)</div><div class="t m0 x32 h4e y4013 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4014 ff1a fs28 fc0 sc0 ls0 ws0">size_t <span class="_ _8a"> </span>nleft;</div><div class="t m0 x8a h4e y4015 ff1a fs28 fc0 sc0 ls0 ws0">ssize_t <span class="_ _15"> </span>nread;</div><div class="t m0 x8a h4e y4016 ff1a fs28 fc0 sc0 ls0 ws0">nleft = n;</div><div class="t m0 x8a h4e y4017 ff1a fs28 fc0 sc0 ls0 ws0">while (nleft &gt; 0) {</div><div class="t m0 x9d h4e y4018 ff1a fs28 fc0 sc0 ls0 ws0">if ((nread = read(fd, ptr, nleft)) &lt; 0) {</div><div class="t m0 x1f h4e y4019 ff1a fs28 fc0 sc0 ls0 ws0">if (nleft == n)</div><div class="t m0 x1ca h4e y401a ff1a fs28 fc0 sc0 ls0 ws0">return(-1); /* error, return -1 */</div><div class="t m0 x1f h4e y401b ff1a fs28 fc0 sc0 ls0 ws0">else</div><div class="t m0 x1ca h4e y401c ff1a fs28 fc0 sc0 ls0 ws0">break; <span class="_ _8a"> </span>/*<span class="_"> </span>error, return amount read so far */</div><div class="t m0 x9d h4e y401d ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (nread == 0) {</span></div><div class="t m0 x1f h4e y401e ff1a fs28 fc0 sc0 ls0 ws0">break; <span class="_ _176"> </span>/*<span class="_"> </span>EOF */</div><div class="t m0 x9d h4e y401f ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y4020 ff1a fs28 fc0 sc0 ls0 ws0">nleft -= nread;</div><div class="t m0 x9d h4e y4021 ff1a fs28 fc0 sc0 ls0 ws0">ptr <span class="_ _d9"> </span>+=<span class="_"> </span>nread;</div><div class="t m0 x8a h4e y4022 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y4023 ff1a fs28 fc0 sc0 ls0 ws0">return(n - nleft);<span class="_ _189"> </span>/* return &gt;= 0 */</div><div class="t m0 x32 h4e y4024 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y4025 ff1a fs28 fc0 sc0 ls0 ws0">ssize_t <span class="_ _82"> </span>/*<span class="_"> </span>Write &quot;n&quot; bytes to a descriptor<span class="_ _d9"> </span>*/</div><div class="t m0 x32 h4e y4026 ff1a fs28 fc0 sc0 ls0 ws0">writen(int fd, const void *ptr, size_t n)</div><div class="t m0 x32 h4e y4027 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4028 ff1a fs28 fc0 sc0 ls0 ws0">size_t <span class="_ _8a"> </span>nleft;</div><div class="t m0 x8a h4e y4029 ff1a fs28 fc0 sc0 ls0 ws0">ssize_t <span class="_ _15"> </span>nwritten;</div><div class="t m0 x8a h4e y402a ff1a fs28 fc0 sc0 ls0 ws0">nleft = n;</div><div class="t m0 x8a h4e y402b ff1a fs28 fc0 sc0 ls0 ws0">while (nleft &gt; 0) {</div><div class="t m0 x9d h4e y402c ff1a fs28 fc0 sc0 ls0 ws0">if ((nwritten = write(fd, ptr, nleft)) &lt; 0) {</div><div class="t m0 x1f h4e y402d ff1a fs28 fc0 sc0 ls0 ws0">if (nleft == n)</div><div class="t m0 x1ca h4e y402e ff1a fs28 fc0 sc0 ls0 ws0">return(-1); /* error, return -1 */</div><div class="t m0 x1f h4e y402f ff1a fs28 fc0 sc0 ls0 ws0">else</div><div class="t m0 x1ca h4e y4030 ff1a fs28 fc0 sc0 ls0 ws0">break; <span class="_ _8a"> </span>/*<span class="_"> </span>error, return amount written so far */</div><div class="t m0 x9d h4e y4031 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (nwritten == 0) {</span></div><div class="t m0 x1f h4e y4032 ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x9d h4e y4033 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y4034 ff1a fs28 fc0 sc0 ls0 ws0">nleft -= nwritten;</div><div class="t m0 x9d h4e y4035 ff1a fs28 fc0 sc0 ls0 ws0">ptr <span class="_ _d9"> </span>+=<span class="_"> </span>nwritten;</div><div class="t m0 x8a h4e y4036 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y4037 ff1a fs28 fc0 sc0 ls0 ws0">return(n - nleft);<span class="_ _189"> </span>/* return &gt;= 0 */</div><div class="t m0 x32 h4e y4038 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8b h4f y4039 ff18 fs11 fc0 sc0 ls0 ws0">Figure 14.24<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">readn<span class="_ _e"> </span></span>and<span class="_"> </span><span class="ff1a">writen<span class="_ _e"> </span></span>functions</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
