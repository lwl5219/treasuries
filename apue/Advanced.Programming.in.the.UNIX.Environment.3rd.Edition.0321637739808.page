<div id="pf328" class="pf w4 h1f" data-page-no="328"><div class="pc pc328 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg328.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">774<span class="_ _1b"> </span><span class="ff19 ls30a">AD<span class="_ _55"></span><span class="ls0">atabase <span class="_"> </span>Library<span class="_ _245"> </span>Chapter <span class="_"> </span>20</span></span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">564 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">565 <span class="_ _68"> </span>*<span class="_"> </span>Store a record in the database.<span class="_ _3a"> </span>Return 0 if OK, 1 if record</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">566 <span class="_ _68"> </span>*<span class="_"> </span>exists and DB_INSERT specified, -1 on error.</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">567 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">568 <span class="_ _d9"> </span>int</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">569 <span class="_ _d9"> </span>db_store(DBHANDLE<span class="_"> </span>h, const char *key, const char *data, int flag)</div><div class="t m0 x32 h57 y56c7 ff1a fs2d fc0 sc0 ls0 ws0">570 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56c8 ff1a fs2d fc0 sc0 ls0 ws0">571 <span class="_ _15"> </span>DB<span class="_ _189"> </span>*db = h;</div><div class="t m0 x32 h57 y56c9 ff1a fs2d fc0 sc0 ls0 ws0">572 <span class="_ _15"> </span>int <span class="_ _15"> </span>rc,<span class="_"> </span>keylen, datlen;</div><div class="t m0 x32 h57 y56ca ff1a fs2d fc0 sc0 ls0 ws0">573 <span class="_ _15"> </span>off_t<span class="_ _68"> </span>ptrval;</div><div class="t m0 x32 h57 y1fbc ff1a fs2d fc0 sc0 ls0 ws0">574 <span class="_ _15"> </span>if<span class="_"> </span>(flag != DB_INSERT &amp;&amp; flag != DB_REPLACE &amp;&amp;</div><div class="t m0 x32 h57 y1fbd ff1a fs2d fc0 sc0 ls0 ws0">575 <span class="_ _189"> </span>flag<span class="_"> </span>!= DB_STORE) {</div><div class="t m0 x32 h57 y1fbe ff1a fs2d fc0 sc0 ls0 ws0">576 <span class="_ _186"> </span>errno<span class="_"> </span><span class="ls15c">=E<span class="_ _1d"></span><span class="ls0">INVAL;</span></span></div><div class="t m0 x32 h57 y1fbf ff1a fs2d fc0 sc0 ls0 ws0">577 <span class="_ _186"> </span>return(-1);</div><div class="t m0 x32 h57 y1fc0 ff1a fs2d fc0 sc0 ls0 ws0">578 <span class="_ _15"> </span>}</div><div class="t m0 x32 h57 y1fc1 ff1a fs2d fc0 sc0 ls0 ws0">579 <span class="_ _15"> </span>keylen<span class="_"> </span><span class="ls15c">=s<span class="_ _1d"></span><span class="ls0">trlen(key);</span></span></div><div class="t m0 x32 h57 y1fc2 ff1a fs2d fc0 sc0 ls0 ws0">580 <span class="_ _15"> </span>datlen<span class="_"> </span><span class="ls15c">=s<span class="_ _1d"></span><span class="ls0">trlen(data) + 1;<span class="_ _88"> </span>/* +1 for newline at end */</span></span></div><div class="t m0 x32 h57 y1fc3 ff1a fs2d fc0 sc0 ls0 ws0">581 <span class="_ _15"> </span>if<span class="_"> </span>(datlen &lt; DATLEN_MIN || datlen &gt; DATLEN_MAX)</div><div class="t m0 x32 h57 y1fc4 ff1a fs2d fc0 sc0 ls0 ws0">582 <span class="_ _186"> </span>err_dump(&quot;db_store:<span class="_"> </span>invalid data length&quot;);</div><div class="t m0 x32 h57 y458b ff1a fs2d fc0 sc0 ls0 ws0">583 <span class="_ _15"> </span>/*</div><div class="t m0 x32 h57 y458c ff1a fs2d fc0 sc0 ls0 ws0">584 <span class="_ _8a"> </span>*<span class="_"> </span>_db_find_and_lock calculates which hash table this new record</div><div class="t m0 x32 h57 y2ada ff1a fs2d fc0 sc0 ls0 ws0">585 <span class="_ _8a"> </span>*<span class="_"> </span>goes into (db-&gt;chainoff), regardless of whether it already</div><div class="t m0 x32 h57 y2adb ff1a fs2d fc0 sc0 ls0 ws0">586 <span class="_ _8a"> </span>*<span class="_"> </span>exists or not. The following calls to _db_writeptr change the</div><div class="t m0 x32 h57 y2adc ff1a fs2d fc0 sc0 ls0 ws0">587 <span class="_ _8a"> </span>*<span class="_"> </span>hash table entry for this chain to point to the new record.</div><div class="t m0 x32 h57 y2add ff1a fs2d fc0 sc0 ls0 ws0">588 <span class="_ _8a"> </span>*<span class="_"> </span>The new record is added to the front of the hash chain.</div><div class="t m0 x32 h57 y2ade ff1a fs2d fc0 sc0 ls0 ws0">589 <span class="_ _8a"> </span>*/</div><div class="t m0 x32 h57 y2c66 ff1a fs2d fc0 sc0 ls0 ws0">590 <span class="_ _15"> </span>if<span class="_"> </span>(_db_find_and_lock(db, key, 1) &lt; 0) { /* record not found */</div><div class="t m0 x32 h57 y2c67 ff1a fs2d fc0 sc0 ls0 ws0">591 <span class="_ _186"> </span>if<span class="_"> </span>(flag == DB_REPLACE) {</div><div class="t m0 x32 h57 y573f ff1a fs2d fc0 sc0 ls0 ws0">592 <span class="_ _82"> </span>rc<span class="_"> </span><span class="ls15c">=-<span class="_ _1d"></span><span class="ls0">1;</span></span></div><div class="t m0 x32 h57 y57b5 ff1a fs2d fc0 sc0 ls0 ws0">593 <span class="_ _82"> </span>db-&gt;cnt_storerr++;</div><div class="t m0 x32 h57 y57b6 ff1a fs2d fc0 sc0 ls0 ws0">594 <span class="_ _82"> </span>errno<span class="_"> </span><span class="ls15c">=E<span class="_ _1d"></span><span class="ls0">NOENT; <span class="_ _15"> </span>/*<span class="_"> </span>error, record does not exist */</span></span></div><div class="t m0 x32 h57 y57b7 ff1a fs2d fc0 sc0 ls0 ws0">595 <span class="_ _82"> </span>goto<span class="_"> </span>doreturn;</div><div class="t m0 x32 h57 y57b8 ff1a fs2d fc0 sc0 ls0 ws0">596 <span class="_ _186"> </span>}</div><div class="t m0 x32 h4d y57f5 ff19 fs26 fc0 sc0 ls0 ws0">[564 <span class="_ _a"></span>– <span class="_ _a"></span>582]<span class="_ _65"> </span><span class="ls164">We <span class="_ _e"> </span>u<span class="_ _9"></span></span>se<span class="_ _47"> </span><span class="ff1a">db_store<span class="_ _66"> </span></span>to <span class="_ _3"></span>add <span class="_ _2"></span>a <span class="_ _2"></span>record<span class="_"> </span>to<span class="_ _47"> </span>the <span class="_ _2"></span>database.<span class="_ _61"> </span><span class="ls164">We <span class="_ _80"> </span>ﬁ<span class="_ _9"></span></span>rst <span class="_ _2"></span>validate <span class="_ _2"></span>the <span class="_ _3"></span>ﬂag</div><div class="t m0 x11a h49 y57f6 ff19 fs26 fc0 sc0 ls0 ws0">value we ar<span class="ls16ae">ep<span class="_ _4f"></span><span class="ls0">assed. <span class="_"> </span>Then<span class="_ _66"> </span>we make sur<span class="ls16ae">et<span class="_ _d"></span><span class="ls0">hat the length of the data <span class="_ _2"></span>recor<span class="_ _0"></span><span class="ls16ae">di<span class="_ _d"></span><span class="ls0">s</span></span></span></span></span></span></div><div class="t m0 x11a h49 y57f7 ff19 fs26 fc0 sc0 ls0 ws0">valid. <span class="_ _66"> </span>If<span class="_ _47"> </span>it <span class="_ _2"></span>isn’t, <span class="_ _2"></span>we <span class="_ _2"></span>drop <span class="_ _2"></span>cor<span class="ls16af">ea<span class="_ _8"></span><span class="ls0">nd <span class="_ _2"></span>exit.<span class="_ _61"> </span>This <span class="_ _3"></span>is <span class="_ _2"></span>OK <span class="_ _2"></span>for <span class="_ _2"></span>an <span class="_ _3"></span>example, <span class="_ _2"></span>but <span class="_ _2"></span>if <span class="_ _2"></span>we</span></span></div><div class="t m0 x11a h49 y57f8 ff19 fs26 fc0 sc0 ls0 ws0">wer<span class="ls1269">eb<span class="_ _26"></span><span class="ls0">uilding <span class="_ _45"> </span>a <span class="_ _45"> </span>pr<span class="_ _0"></span>oduction-quality <span class="_ _45"> </span>library<span class="_ _4"></span><span class="ls16b0">,w<span class="_ _62"></span><span class="ls0">e’d <span class="_ _45"> </span>return <span class="_ _47"> </span>an <span class="_ _45"> </span>error <span class="_ _47"> </span>status</span></span></span></span></div><div class="t m0 x11a h49 y57f9 ff19 fs26 fc0 sc0 ls0 ws0">instead, which would give the application a chance to recover<span class="_ _6"></span>.</div><div class="t m0 x32 h4d y57fa ff19 fs26 fc0 sc0 ls0 ws0">[583 <span class="_ _a"></span>– <span class="_ _a"></span>596]<span class="_ _65"> </span><span class="ls164">We <span class="_ _80"> </span>c<span class="_ _9"></span></span>all<span class="_ _47"> </span><span class="ff1a">_db_find_and_lock<span class="_ _45"> </span></span>to <span class="_ _2"></span>see <span class="_ _9"></span>if <span class="_ _3"></span>the <span class="_ _3"></span>recor<span class="_ _0"></span><span class="lsa21">da<span class="_ _8"></span><span class="ls0">lready <span class="_ _2"></span>exists.<span class="_ _16"> </span>It <span class="_ _9"></span>is <span class="_ _3"></span>OK <span class="_ _3"></span>if</span></span></div><div class="t m0 x11a h4d y57fb ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _2"></span>recor<span class="ls16b1">dd<span class="_ _8"></span><span class="ls0">oesn’t <span class="_ _2"></span>exist <span class="_ _3"></span>and <span class="_ _3"></span>either<span class="_ _47"> </span><span class="ff1a">DB_INSERT<span class="_ _47"> </span></span>or<span class="_ _47"> </span><span class="ff1a">DB_STORE<span class="_ _47"> </span></span>is <span class="_ _2"></span>speciﬁed, <span class="_ _3"></span>or</span></span></div><div class="t m0 x11a h4d y57fc ff19 fs26 fc0 sc0 ls0 ws0">if <span class="_ _44"> </span>the <span class="_ _44"> </span>recor<span class="_ _0"></span><span class="ls16b2">da<span class="_ _52"></span><span class="ls0">lready <span class="_ _35"> </span>exists <span class="_ _44"> </span>and <span class="_ _44"> </span>either<span class="_ _65"> </span><span class="ff1a">DB_REPLACE<span class="_ _54"> </span></span>or<span class="_ _54"> </span><span class="ff1a">DB_STORE<span class="_ _54"> </span></span>is</span></span></div><div class="t m0 x11a h49 y57fd ff19 fs26 fc0 sc0 ls0 ws0">speciﬁed. <span class="_ _44"> </span>Replacing<span class="_ _44"> </span>an <span class="_ _53"> </span>existing <span class="_ _42"> </span>recor<span class="ls16b3">di<span class="_ _55"></span><span class="ls0">mplies <span class="_ _53"> </span>that <span class="_ _53"> </span>the <span class="_ _42"> </span>keys <span class="_ _53"> </span>ar<span class="ls16b3">ei<span class="_ _c"></span><span class="ls0">dentical</span></span></span></span></div><div class="t m0 x11a h49 y57fe ff19 fs26 fc0 sc0 ls0 ws0">but <span class="_ _42"> </span>that <span class="_ _42"> </span>the <span class="_ _42"> </span>data <span class="_ _42"> </span>records <span class="_ _42"> </span>pr<span class="_ _0"></span>obably <span class="_ _42"> </span>differ<span class="_ _6"></span><span class="ls16b4">.N<span class="_ _52"></span><span class="ls0">ote <span class="_ _53"> </span>that <span class="_ _42"> </span>the <span class="_ _42"> </span>ﬁnal <span class="_ _42"> </span>argument <span class="_ _42"> </span>to</span></span></div><div class="t m0 x11a h4d y57ff ff1a fs26 fc0 sc0 ls0 ws0">_db_find_and_lock<span class="_ _66"> </span><span class="ff19">speciﬁes <span class="_ _2"></span>that <span class="_ _2"></span>the <span class="_ _2"></span>hash <span class="_ _2"></span>chain <span class="_ _2"></span>must <span class="_ _2"></span>be <span class="_ _2"></span>write <span class="_ _2"></span>locked, as</span></div><div class="t m0 x11a h49 y5800 ff19 fs26 fc0 sc0 ls0 ws0">we will probably be modifying this hash chain.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
