<div id="pf1af" class="pf w4 h1f" data-page-no="1af"><div class="pc pc1af w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1af.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">397</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y19f8 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_detach(pthread_t<span class="_"> </span><span class="ff1b">tid</span>);</div><div class="t m0 x78 h5f y19f9 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h49 y3297 ff19 fs26 fc0 sc0 ls0 ws0">As we <span class="_ _2"></span>will <span class="_ _2"></span>see <span class="_ _2"></span>in the <span class="_ _2"></span>next <span class="_ _2"></span>chapter<span class="_ _6"></span>,<span class="_ _47"> </span>we<span class="_"> </span>can <span class="_ _2"></span>create a <span class="_ _2"></span>thread that <span class="_ _2"></span>is already in <span class="_ _2"></span>the <span class="_ _2"></span>detached</div><div class="t m0 x32 h4d y3298 ff19 fs26 fc0 sc0 ls0 ws0">state by modifying the thread attributes we pass to<span class="_"> </span><span class="ff1a">pthread_create</span>.</div><div class="t m0 x35 h4b y3299 ff16 fs27 fc0 sc0 ls0 ws0">11.6 <span class="_ _93"> </span>Thread<span class="_ _54"> </span>Synchr<span class="_ _0"></span>onization</div><div class="t m0 x32 h49 y329a ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _9"></span>multiple <span class="_ _23"> </span>threads <span class="_ _9"></span>of <span class="_ _23"> </span>control <span class="_ _9"></span>shar<span class="ls501">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>same <span class="_ _23"></span>memory<span class="_ _4"></span>,<span class="_ _45"> </span>we<span class="_ _35"> </span>need <span class="_ _23"></span>to <span class="_ _9"></span>make <span class="_ _23"></span>sur<span class="ls501">et<span class="_ _43"></span><span class="ls0">hat</span></span></span></span></div><div class="t m0 x32 h49 y329b ff19 fs26 fc0 sc0 ls0 ws0">each <span class="_ _9"></span>thread <span class="_ _9"></span>sees <span class="_ _23"> </span>a <span class="_ _23"></span>consistent <span class="_ _9"></span>view <span class="_ _23"></span>of <span class="_ _9"></span>its <span class="_ _23"> </span>data.<span class="_ _51"> </span>If <span class="_ _9"></span>each <span class="_ _23"></span>thr<span class="_ _0"></span>ead <span class="_ _9"></span>uses <span class="_ _23"> </span>variables <span class="_ _23"></span>that <span class="_ _9"></span>other</div><div class="t m0 x32 h49 y329c ff19 fs26 fc0 sc0 ls0 ws0">threads don’t <span class="_ _2"></span>read or <span class="_ _2"></span>modify<span class="_ _6"></span><span class="ls593">,n<span class="_ _4f"></span><span class="lsc2c">oc<span class="_ _4f"></span><span class="ls0">onsistency <span class="_ _2"></span>problems <span class="_ _2"></span>will <span class="_ _2"></span>exist.<span class="_ _61"> </span>Similarly<span class="_ _4"></span>,<span class="_ _47"> </span>if<span class="_"> </span>a<span class="_ _47"> </span>variable</span></span></span></div><div class="t m0 x32 h49 y329d ff19 fs26 fc0 sc0 ls0 ws0">is <span class="_ _53"> </span>read-only<span class="_ _4"></span><span class="lsdc0">,t<span class="_ _c"></span><span class="ls0">here<span class="_ _44"> </span>is<span class="_ _4b"> </span>n<span class="lsdc1">oc<span class="_ _c"></span><span class="ls0">onsistency <span class="_ _53"> </span>problem <span class="_ _53"> </span>with <span class="_ _53"> </span>mor<span class="lsdc1">et<span class="_ _55"></span><span class="ls0">han <span class="_ _e"> </span>one <span class="_ _53"> </span>thread <span class="_ _53"> </span>reading <span class="_ _42"> </span>its</span></span></span></span></span></span></div><div class="t m0 x32 h49 y329e ff19 fs26 fc0 sc0 ls0 ws0">value <span class="_ _23"> </span>at <span class="_ _42"> </span>the <span class="_ _23"> </span>same <span class="_ _42"> </span>time.<span class="_ _51"> </span>However<span class="_ _1"></span><span class="lsdc2">,w<span class="_ _43"></span><span class="ls0">hen <span class="_ _42"> </span>one <span class="_ _23"> </span>thread <span class="_ _23"> </span>can <span class="_ _42"> </span>modify <span class="_ _23"> </span>a <span class="_ _42"> </span>variable <span class="_ _23"> </span>that <span class="_ _42"> </span>other</span></span></div><div class="t m0 x32 h49 y329f ff19 fs26 fc0 sc0 ls0 ws0">threads <span class="_ _42"> </span>can <span class="_ _53"> </span>read <span class="_ _42"> </span>or <span class="_ _53"> </span>modify<span class="_ _6"></span>,<span class="_ _44"> </span>we<span class="_ _4b"> </span>need <span class="_ _42"> </span>to <span class="_ _e"> </span>synchronize <span class="_ _42"> </span>the <span class="_ _53"> </span>threads <span class="_ _42"> </span>to <span class="_ _53"> </span>ensur<span class="lsdc3">et<span class="_ _c"></span><span class="ls0">hat <span class="_ _53"> </span>they</span></span></div><div class="t m0 x32 h49 y32a0 ff19 fs26 fc0 sc0 ls0 ws0">don’t use an invalid value when accessing the variable’s memory contents.</div><div class="t m0 x3f h49 y32a1 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _5a"> </span>one <span class="_ _51"> </span>thread <span class="_ _5a"> </span>modiﬁes <span class="_ _51"> </span>a <span class="_ _5a"> </span>variable, <span class="_ _51"> </span>other <span class="_ _5a"> </span>threads <span class="_ _5a"> </span>can <span class="_ _51"> </span>potentially <span class="_ _5a"> </span>see</div><div class="t m0 x32 h49 y32a2 ff19 fs26 fc0 sc0 ls0 ws0">inconsistencies <span class="_ _9"></span>when <span class="_ _23"></span>reading <span class="_ _9"></span>the <span class="_ _9"></span>value <span class="_ _23"></span>of <span class="_ _9"></span>that <span class="_ _23"></span>variable.<span class="_ _5a"> </span>On <span class="_ _23"></span>processor <span class="_ _9"></span>architectur<span class="_ _0"></span>es <span class="_ _9"></span>in</div><div class="t m0 x32 h49 y32a3 ff19 fs26 fc0 sc0 ls0 ws0">which <span class="_ _9"></span>the <span class="_ _23"></span>modiﬁcation <span class="_ _9"></span>takes <span class="_ _9"></span>mor<span class="lsdc4">et<span class="_ _b"></span><span class="ls0">han <span class="_ _9"></span>one <span class="_ _9"></span>memory <span class="_ _23"></span>cycle, <span class="_ _9"></span>this <span class="_ _23"></span>can <span class="_ _9"></span>happen <span class="_ _9"></span>when <span class="_ _23"></span>the</span></span></div><div class="t m0 x32 h49 y32a4 ff19 fs26 fc0 sc0 ls0 ws0">memory <span class="_ _2"></span>read <span class="_ _2"></span>is <span class="_ _2"></span>interleaved <span class="_ _3"></span>between <span class="_ _2"></span>the <span class="_ _3"></span>memory <span class="_ _2"></span>write <span class="_ _2"></span>cycles.<span class="_ _16"> </span>Of <span class="_ _2"></span>course, <span class="_ _3"></span>this <span class="_ _2"></span>behavior</div><div class="t m0 x32 h49 y32a5 ff19 fs26 fc0 sc0 ls0 ws0">is <span class="_ _42"> </span>architectur<span class="lsdc5">ed<span class="_ _55"></span><span class="ls0">ependent, <span class="_ _53"> </span>but <span class="_ _53"> </span>portable <span class="_ _53"> </span>programs <span class="_ _42"> </span>can’t <span class="_ _53"> </span>make <span class="_ _53"> </span>any <span class="_ _53"> </span>assumptions <span class="_ _53"> </span>about</span></span></div><div class="t m0 x32 h49 y32a6 ff19 fs26 fc0 sc0 ls0 ws0">what type of processor ar<span class="_ _0"></span>chitectur<span class="_ _0"></span>e<span class="_"> </span>is<span class="_"> </span>being used.</div><div class="t m0 x3f h49 y32a7 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="ls60c">e1<span class="_ _55"></span><span class="ls0">1.7 <span class="_ _23"> </span>shows <span class="_ _23"> </span>a <span class="_ _23"> </span>hypothetical <span class="_ _23"> </span>example <span class="_ _23"> </span>of <span class="_ _23"> </span>two <span class="_ _23"> </span>threads <span class="_ _23"></span>reading <span class="_ _9"></span>and <span class="_ _23"> </span>writing <span class="_ _23"> </span>the</span></span></div><div class="t m0 x32 h49 y32a8 ff19 fs26 fc0 sc0 ls0 ws0">same variable.<span class="_ _46"> </span>In this example, <span class="_ _2"></span>thread A reads the variable and then writes a <span class="_ _2"></span>new value</div><div class="t m0 x32 h49 y32a9 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _53"> </span>it, <span class="_ _e"> </span>but <span class="_ _53"> </span>the <span class="_ _e"> </span>write <span class="_ _e"> </span>operation <span class="_ _53"> </span>takes <span class="_ _e"> </span>two <span class="_ _e"> </span>memory <span class="_ _53"> </span>cycles.<span class="_ _48"> </span>If <span class="_ _e"> </span>thread <span class="_ _53"> </span>B <span class="_ _53"> </span>reads <span class="_ _53"> </span>the <span class="_ _e"> </span>same</div><div class="t m0 x32 h49 y32aa ff19 fs26 fc0 sc0 ls0 ws0">variable between the two write cycles, it will see an inconsistent value.</div><div class="t m0 x1b7 h2e y32ab ff19 fs11 fc0 sc0 ls0 ws0">Thread A</div><div class="t m0 x121 h2f y32ac ff19 fs12 fc0 sc0 ls222 ws0">re<span class="ls0">ad</span></div><div class="t m0 x85 h30 y32ad ff19 fs13 fc0 sc0 ls0 ws0">write</div><div class="t m0 xcc h13f y32ae ff19 fsad fc0 sc0 ls0 ws0">1</div><div class="t m0 x85 h31 y32af ff19 fs14 fc0 sc0 ls0 ws0">write</div><div class="t m0 xcc h140 y32b0 ff19 fsae fc0 sc0 ls0 ws0">2</div><div class="t m0 x174 h32 y32b1 ff19 fs15 fc0 sc0 ls0 ws0">Thread B</div><div class="t m0 x19d h33 y32b2 ff19 fs16 fc0 sc0 lscd8 ws0">re<span class="ls0">ad</span></div><div class="t m0 x217 h83 y32b3 ff19 fs36 fc0 sc0 ls0 ws0">time</div><div class="t m0 xe9 h83 y32b4 ff18 fs36 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.7<span class="_ _d9"> </span><span class="ff19">Interleaved memory cycles with two threads</span></div><div class="t m0 x3f h74 y32b5 ff19 fs38 fc0 sc0 lsdc6 ws0">To <span class="_ _53"> </span>s<span class="_ _23"></span><span class="ls0">olve this <span class="_ _2"></span>problem, the <span class="_ _2"></span>threads have <span class="_ _2"></span>to <span class="_ _2"></span>use a <span class="_ _2"></span>lock <span class="_ _2"></span>that <span class="_ _2"></span>will <span class="_ _2"></span>allow only <span class="_ _2"></span>one <span class="_ _2"></span>thread</span></div><div class="t m0 x32 h74 y32b6 ff19 fs38 fc0 sc0 ls0 ws0">to <span class="_ _9"></span>access <span class="_ _23"></span>the <span class="_ _9"></span>variable <span class="_ _9"></span>at <span class="_ _23"></span>a <span class="_ _9"></span>time.<span class="_ _5a"> </span>Figur<span class="lsdc7">e1<span class="_ _43"></span><span class="ls0">1.8 <span class="_ _9"></span>shows <span class="_ _9"></span>this <span class="_ _23"></span>synchr<span class="_ _0"></span>onization. <span class="_ _45"> </span>If<span class="_ _45"> </span>it <span class="_ _23"></span>wants <span class="_ _9"></span>to</span></span></div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:1000.797064px;width:175.667701px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
