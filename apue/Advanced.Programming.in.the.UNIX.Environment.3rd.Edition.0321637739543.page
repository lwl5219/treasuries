<div id="pf21f" class="pf w4 h1f" data-page-no="21f"><div class="pc pc21f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg21f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>14.5<span class="_ _20d"> </span>Asynchronous <span class="_"> </span>I/O<span class="_ _1b"> </span><span class="ff18">509</span></div><div class="t m0 x76 h52 y2a3 ff19 fs2a fc0 sc0 ls0 ws0">None <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _3"></span>implementations <span class="_ _3"></span>described <span class="_ _3"></span>in <span class="_ _3"></span>this <span class="_ _3"></span>book <span class="_ _3"></span>restart<span class="_ _80"> </span><span class="ff1a">poll<span class="_ _66"> </span></span>or<span class="_ _66"> </span><span class="ff1a">select<span class="_ _80"> </span></span>when <span class="_ _3"></span>a <span class="_ _3"></span>signal <span class="_ _3"></span>is</div><div class="t m0 x76 h52 y2a4 ff19 fs2a fc0 sc0 ls34e ws0">re<span class="ls0">ceived, even if the<span class="_"> </span><span class="ff1a">SA_RESTART<span class="_ _e"> </span></span>ﬂag is used.</span></div><div class="t m0 x35 h53 yba0 ff16 fs2b fc0 sc0 ls0 ws0">14.5 <span class="_ _93"> </span>Asynchr<span class="_ _0"></span>onous <span class="_"> </span>I/O</div><div class="t m0 x32 h26 y1ab1 ff19 fsf fc0 sc0 ls0 ws0">Using<span class="_"> </span><span class="ff1a">select<span class="_ _47"> </span></span>and<span class="_"> </span><span class="ff1a">poll</span>,<span class="_ _66"> </span>as<span class="_ _47"> </span>described in <span class="_ _2"></span>the <span class="_ _2"></span>previous section, <span class="_ _2"></span>is <span class="_ _2"></span>a <span class="_ _2"></span>synchronous form <span class="_ _2"></span>of</div><div class="t m0 x32 h26 y3e69 ff19 fsf fc0 sc0 ls0 ws0">notiﬁcation. <span class="_ _66"> </span>The<span class="_ _47"> </span>system doesn’t <span class="_ _3"></span>tell <span class="_ _2"></span>us <span class="_ _2"></span>anything <span class="_ _2"></span>until <span class="_ _2"></span>we <span class="_ _2"></span>ask <span class="_ _2"></span>(by <span class="_ _2"></span>calling <span class="_ _2"></span>either<span class="_ _47"> </span><span class="ff1a">select</span></div><div class="t m0 x32 h26 y3e6a ff19 fsf fc0 sc0 ls0 ws0">or<span class="_ _51"> </span><span class="ff1a">poll</span>). <span class="_ _5a"> </span>As<span class="_ _51"> </span>we <span class="_ _35"> </span>saw <span class="_ _45"> </span>in <span class="_ _35"> </span>Chapter <span class="_ _35"> </span>10, <span class="_ _35"> </span>signals <span class="_ _45"> </span>provide <span class="_ _45"> </span>an <span class="_ _35"> </span>asynchronous <span class="_ _45"> </span>form <span class="_ _35"> </span>of</div><div class="t m0 x32 h2a y3e6b ff19 fsf fc0 sc0 ls0 ws0">notiﬁcation that <span class="_ _2"></span>something has <span class="_ _2"></span>happened.<span class="_ _46"> </span>All systems <span class="_ _2"></span>derived from BSD <span class="_ _2"></span>and System <span class="_ _2"></span>V</div><div class="t m0 x32 h26 y3e6c ff19 fsf fc0 sc0 ls0 ws0">provide <span class="_ _2"></span>some <span class="_ _3"></span>form <span class="_ _3"></span>of <span class="_ _2"></span>asynchronous <span class="_ _3"></span>I/O, <span class="_ _3"></span>using <span class="_ _2"></span>a <span class="_ _3"></span>signal <span class="_ _3"></span>(<span class="ff1a">SIGPOLL<span class="_ _47"> </span></span>in <span class="_ _3"></span>System <span class="_ _3"></span>V<span class="_ _1"></span>;<span class="_ _47"> </span><span class="ff1a">SIGIO</span></div><div class="t m0 x32 h2a ybf8 ff19 fsf fc0 sc0 ls0 ws0">in <span class="_ _9"></span>BSD) <span class="_ _23"></span>to <span class="_ _9"></span>notify <span class="_ _9"></span>the <span class="_ _23"></span>process <span class="_ _9"></span>that <span class="_ _9"></span>something <span class="_ _9"></span>of <span class="_ _23"></span>interest <span class="_ _9"></span>has <span class="_ _9"></span>happened <span class="_ _23"></span>on <span class="_ _9"></span>a <span class="_ _9"></span>descriptor<span class="_ _1"></span>.</div><div class="t m0 x32 h2a ybf9 ff19 fsf fc0 sc0 ls0 ws0">As <span class="_ _42"> </span>mentioned <span class="_ _53"> </span>in <span class="_ _53"> </span>the <span class="_ _53"> </span>previous <span class="_ _42"> </span>section, <span class="_ _53"> </span>these <span class="_ _53"> </span>forms <span class="_ _42"> </span>of <span class="_ _53"> </span>asynchronous <span class="_ _42"> </span>I/O <span class="_ _53"> </span>ar<span class="lse87">el<span class="_ _c"></span><span class="ls0">imited:</span></span></div><div class="t m0 x32 h2a y1ab3 ff19 fsf fc0 sc0 ls0 ws0">they <span class="_ _42"> </span>don’t <span class="_ _42"> </span>work <span class="_ _42"> </span>with <span class="_ _42"> </span>all <span class="_ _42"> </span>ﬁle <span class="_ _42"> </span>types <span class="_ _42"> </span>and <span class="_ _53"> </span>they <span class="_ _42"> </span>allow <span class="_ _42"> </span>the <span class="_ _42"> </span>use <span class="_ _42"> </span>of <span class="_ _42"> </span>only <span class="_ _42"> </span>one <span class="_ _42"> </span>signal.<span class="_ _54"> </span>If <span class="_ _42"> </span>we</div><div class="t m0 x32 h2a y1ab4 ff19 fsf fc0 sc0 ls0 ws0">enable <span class="_ _2"></span>mor<span class="ls1093">et<span class="_ _8"></span><span class="ls0">han <span class="_ _2"></span>one <span class="_ _3"></span>descriptor <span class="_ _2"></span>for <span class="_ _2"></span>asynchronous I/O, <span class="_ _3"></span>we <span class="_ _2"></span>cannot <span class="_ _2"></span>tell <span class="_ _2"></span>which <span class="_ _2"></span>descriptor</span></span></div><div class="t m0 x32 h2a y1ab5 ff19 fsf fc0 sc0 ls0 ws0">the signal corresponds to when the signal is deliver<span class="_ _0"></span>ed.</div><div class="t m0 x3f h2a y1ab6 ff19 fsf fc0 sc0 lsc1 ws0">Ve<span class="_ _23"></span><span class="ls0">rsion <span class="_ _42"> </span>4 <span class="_ _42"> </span>of <span class="_ _42"> </span>the <span class="_ _42"> </span>Single <span class="_ _42"> </span>UNIX <span class="_ _42"> </span>Speciﬁcation <span class="_ _42"> </span>moved <span class="_ _42"> </span>the <span class="_ _53"> </span>general <span class="_ _42"> </span>asynchronous <span class="_ _42"> </span>I/O</span></div><div class="t m0 x32 h2a y1ab7 ff19 fsf fc0 sc0 ls0 ws0">mechanism <span class="_ _e"> </span>from <span class="_ _53"> </span>the <span class="_ _e"> </span>real-time <span class="_ _53"> </span>extensions <span class="_"> </span>to <span class="_ _53"> </span>the <span class="_ _e"> </span>base <span class="_ _e"> </span>speciﬁcation.<span class="_ _48"> </span>This <span class="_ _e"> </span>mechanism</div><div class="t m0 x32 h2a y1ab8 ff19 fsf fc0 sc0 ls0 ws0">addresses the limitations that exist with these older asynchr<span class="_ _0"></span>onous I/O facilities.</div><div class="t m0 x3f h2a y3e6d ff19 fsf fc0 sc0 ls0 ws0">Before<span class="_ _47"> </span>we<span class="_ _45"> </span>look <span class="_ _9"></span>at <span class="_ _9"></span>the <span class="_ _23"></span>dif<span class="_ _0"></span>ferent <span class="_ _3"></span>ways <span class="_ _9"></span>to <span class="_ _23"></span>use <span class="_ _3"></span>asynchronous <span class="_ _9"></span>I/O, <span class="_ _9"></span>we <span class="_ _9"></span>need <span class="_ _9"></span>to <span class="_ _23"></span>discuss</div><div class="t m0 x32 h2a y3e6e ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _9"></span>costs.<span class="_ _5a"> </span>When <span class="_ _9"></span>we <span class="_ _9"></span>decide <span class="_ _9"></span>to <span class="_ _9"></span>use <span class="_ _9"></span>asynchronous <span class="_ _3"></span>I/O, <span class="_ _9"></span>we <span class="_ _9"></span>complicate <span class="_ _9"></span>the <span class="_ _9"></span>design <span class="_ _23"></span>of <span class="_ _3"></span>our</div><div class="t m0 x32 h2a y2b18 ff19 fsf fc0 sc0 ls0 ws0">application <span class="_ _9"></span>by <span class="_ _9"></span>choosing <span class="_ _9"></span>to <span class="_ _9"></span>juggle <span class="_ _9"></span>multiple <span class="_ _9"></span>concurrent <span class="_ _3"></span>operations.<span class="_ _5a"> </span><span class="ls134">As<span class="_ _b"></span><span class="ls0">impler <span class="_ _9"></span>approach</span></span></div><div class="t m0 x32 h2a y2b19 ff19 fsf fc0 sc0 ls0 ws0">may <span class="_ _23"> </span>be <span class="_ _42"> </span>to <span class="_ _23"> </span>use <span class="_ _42"> </span>multiple <span class="_ _42"> </span>threads, <span class="_ _23"></span>which <span class="_ _23"> </span>would <span class="_ _42"> </span>allow <span class="_ _23"> </span>us <span class="_ _42"> </span>to <span class="_ _23"> </span>write <span class="_ _42"> </span>the <span class="_ _42"> </span>program <span class="_ _23"></span>using <span class="_ _23"> </span>a</div><div class="t m0 x32 h2a y2b1a ff19 fsf fc0 sc0 ls0 ws0">synchronous model, and let the thr<span class="_ _0"></span>eads run asynchr<span class="_ _0"></span>onous to each other<span class="_ _6"></span>.</div><div class="t m0 x3f h2a y2b1b ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _5a"> </span>i<span class="_ _9"></span><span class="ls0">ncur <span class="_ _44"> </span>additional <span class="_ _35"> </span>complexity <span class="_ _44"> </span>when <span class="_ _35"> </span>we <span class="_ _44"> </span>use <span class="_ _44"> </span>the <span class="_ _35"> </span>POSIX <span class="_ _44"> </span>asynchronous <span class="_ _35"> </span>I/O</span></div><div class="t m0 x32 h2a y2b1c ff19 fsf fc0 sc0 ls0 ws0">interfaces:</div><div class="t m0 x3f h2a y3e6f ff19 fsf fc0 sc0 ls49 ws0">•W<span class="_ _4e"></span><span class="ls1094">eh<span class="_ _7"></span><span class="ls0">ave <span class="_ _44"> </span>to <span class="_ _35"> </span>worry <span class="_ _44"> </span>about <span class="_ _35"> </span>three <span class="_ _35"> </span>sources <span class="_ _35"> </span>of <span class="_ _44"> </span>err<span class="_ _0"></span>ors <span class="_ _35"> </span>for <span class="_ _44"> </span>every <span class="_ _35"> </span>asynchronous</span></span></div><div class="t m0 x15 h2a y3e70 ff19 fsf fc0 sc0 ls0 ws0">operation: <span class="_ _23"></span>one <span class="_ _23"></span>associated <span class="_ _23"></span>with <span class="_ _9"></span>the <span class="_ _23"> </span>submission <span class="_ _23"> </span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>operation, <span class="_ _23"> </span>one <span class="_ _23"> </span>associated</div><div class="t m0 x15 h2a y3e71 ff19 fsf fc0 sc0 ls0 ws0">with the result of the operation <span class="_ _2"></span>itself, and one <span class="_ _2"></span>associated with the <span class="_ _2"></span>functions used</div><div class="t m0 x15 h2a y3e72 ff19 fsf fc0 sc0 ls0 ws0">to determine the status of the asynchronous operations.</div><div class="t m0 x3f h2a y3e73 ff19 fsf fc0 sc0 ls49 ws0">•T<span class="_ _4d"></span><span class="ls0">he <span class="_"> </span>interfaces <span class="_ _47"> </span>themselves <span class="_"> </span>involve <span class="_ _66"> </span>a <span class="_ _47"> </span>lot <span class="_"> </span>of <span class="_ _47"> </span>extra <span class="_"> </span>setup <span class="_ _66"> </span>and <span class="_ _47"> </span>processing <span class="_"> </span>rules</span></div><div class="t m0 x15 h2a y3e74 ff19 fsf fc0 sc0 ls0 ws0">compared to their conventional counterparts, as we shall see.</div><div class="t m0 x38 h51 ya59 ff19 fs2a fc0 sc0 lsed ws0">We <span class="_"> </span>c<span class="_ _9"></span><span class="ls0">an’t really call the non-asynchronous I/O function calls ‘‘synchr<span class="_ _0"></span>onous,’<span class="_ _0"></span><span class="lsd24">’b<span class="_ _5"></span><span class="ls0">ecause</span></span></span></div><div class="t m0 x38 h51 y3e75 ff19 fs2a fc0 sc0 ls0 ws0">although <span class="_ _66"> </span>they <span class="_ _47"> </span>ar<span class="ls1095">es<span class="_ _4a"></span><span class="ls0">ynchronous <span class="_ _66"> </span>with <span class="_ _66"> </span>respect <span class="_ _66"> </span>to <span class="_ _47"> </span>the <span class="_ _66"> </span>program <span class="_ _47"> </span>ﬂow<span class="_ _6"></span><span class="ls1096">,t<span class="_ _4a"></span><span class="ls0">hey <span class="_ _47"> </span>aren’t</span></span></span></span></div><div class="t m0 x38 h51 y3e76 ff19 fs2a fc0 sc0 ls0 ws0">synchronous with <span class="_ _2"></span>respect to <span class="_ _2"></span>the I/O.<span class="_ _4b"> </span>Recall the <span class="_ _2"></span>discussion <span class="_ _2"></span>of <span class="_ _2"></span>synchronous writes <span class="_ _2"></span>in</div><div class="t m0 x38 h51 y3e77 ff19 fs2a fc0 sc0 ls0 ws0">Chapter 3.<span class="_ _44"> </span><span class="lsed">We <span class="_ _53"> </span>c<span class="_ _3"></span></span>all <span class="_ _2"></span>a <span class="_ _2"></span>write ‘‘synchr<span class="_ _0"></span>onous’<span class="_ _0"></span>’<span class="_"> </span>if<span class="_ _80"> </span>the data <span class="_ _2"></span>we write <span class="_ _2"></span>is persistent <span class="_ _2"></span>when <span class="_ _2"></span>we</div><div class="t m0 x38 h52 y3e78 ff19 fs2a fc0 sc0 ls34e ws0">re<span class="ls0">turn <span class="_ _45"> </span>from <span class="_ _45"> </span>the <span class="_ _45"> </span>call <span class="_ _45"> </span>to <span class="_ _45"> </span>the<span class="_ _16"> </span><span class="ff1a">write<span class="_ _61"> </span></span>function. <span class="_ _16"> </span>W<span class="_ _1"></span><span class="ls1097">ea<span class="_ _1d"></span><span class="ls0">lso <span class="_ _45"> </span>can’t <span class="_ _45"> </span>differentiate <span class="_ _45"> </span>the</span></span></span></div><div class="t m0 x38 h51 y3e79 ff19 fs2a fc0 sc0 ls0 ws0">conventional <span class="_"> </span>I/O <span class="_"> </span>function <span class="_"> </span>calls <span class="_ _42"> </span>from <span class="_"> </span>the <span class="_"> </span>asynchr<span class="_ _0"></span>onous <span class="_"> </span>ones <span class="_"> </span>by <span class="_"> </span>r<span class="_ _0"></span>eferring <span class="_"> </span>to <span class="_"> </span>the</div><div class="t m0 x38 h51 y3e7a ff19 fs2a fc0 sc0 ls0 ws0">conventional <span class="_ _3"></span>calls <span class="_ _3"></span>as <span class="_ _9"></span>the <span class="_ _3"></span>‘‘standar<span class="_ _0"></span>d’<span class="_ _0"></span><span class="ls1098">’I<span class="_ _4f"></span><span class="ls0">/O <span class="_ _9"></span>calls, <span class="_ _3"></span>because <span class="_ _9"></span>this <span class="_ _3"></span>confuses <span class="_ _3"></span>them <span class="_ _9"></span>with <span class="_ _3"></span>the</span></span></div><div class="t m0 x38 h51 y3e7b ff19 fs2a fc0 sc0 ls0 ws0">function <span class="_ _42"> </span>calls <span class="_ _42"> </span>in <span class="_"> </span>the <span class="_ _23"> </span>standar<span class="ls1099">dI<span class="_ _b"></span><span class="ls0">/O <span class="_ _42"> </span>library<span class="_ _6"></span><span class="ls109a">.T<span class="_ _7"></span><span class="ls1099">oa<span class="_ _b"></span><span class="ls0">void <span class="_ _23"> </span>confusion, <span class="_"> </span>we’ll <span class="_ _23"> </span>refer <span class="_ _42"> </span>to <span class="_"> </span>the</span></span></span></span></span></div><div class="t m0 x38 h52 y3e7c ff1a fs2a fc0 sc0 ls0 ws0">read<span class="_ _53"> </span><span class="ff19">and<span class="_"> </span></span>write<span class="_ _e"> </span><span class="ff19">functions as the ‘‘conventional’<span class="_ _1"></span><span class="lse9">’I<span class="_ _84"></span><span class="ls0">/O function calls in this section.</span></span></span></div><div class="t m0 x3f h2a y3e7d ff19 fsf fc0 sc0 ls49 ws0">•R<span class="_ _4d"></span><span class="ls0">ecovering <span class="_ _e"> </span>from <span class="_ _e"> </span>errors <span class="_ _53"> </span>can <span class="_"> </span>be <span class="_ _53"> </span>difﬁcult. <span class="_ _4b"> </span>For<span class="_ _59"> </span>example, <span class="_"> </span>if <span class="_ _53"> </span>we <span class="_"> </span>submit <span class="_ _53"> </span>multiple</span></div><div class="t m0 x15 h2a y3e7e ff19 fsf fc0 sc0 ls0 ws0">asynchronous <span class="_ _23"></span>writes <span class="_ _23"> </span>and <span class="_ _42"> </span>one <span class="_ _42"> </span>fails, <span class="_ _23"> </span>how <span class="_ _42"> </span>should <span class="_ _23"> </span>we <span class="_ _42"> </span>proceed? <span class="_ _35"> </span>If<span class="_ _35"> </span>the <span class="_ _42"> </span>writes <span class="_ _23"> </span>are</div><div class="t m0 x15 h2a y3e7f ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">lated, we might have to undo the ones that succeeded.</span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.893259px;bottom:1143.888916px;width:142.332398px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
