<div id="pf2ae" class="pf w4 h1f" data-page-no="2ae"><div class="pc pc2ae w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2ae.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">652<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x1f h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">err_ret(&quot;recvmsg error&quot;);</div><div class="t m0 x1f h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (nr == 0) {</span></div><div class="t m0 x1f h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">err_ret(&quot;connection closed by server&quot;);</div><div class="t m0 x1f h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y23ca ff1a fs2d fc0 sc0 ls0 ws0">/*</div><div class="t m0 x175 h57 y23cb ff1a fs2d fc0 sc0 ls15c ws0">*S<span class="_ _1d"></span><span class="ls0">ee if this is the final data with null &amp; status.<span class="_ _3a"> </span>Null</span></div><div class="t m0 x175 h57 y86e ff1a fs2d fc0 sc0 ls0 ws0">*<span class="_"> </span>is<span class="_"> </span>next to last byte of buffer; status byte is last byte.</div><div class="t m0 x175 h57 y86f ff1a fs2d fc0 sc0 ls15c ws0">*Z<span class="_ _1d"></span><span class="ls0">ero status means there is a file descriptor to receive.</span></div><div class="t m0 x175 h57 y870 ff1a fs2d fc0 sc0 ls0 ws0">*/</div><div class="t m0 x9d h57 y871 ff1a fs2d fc0 sc0 ls0 ws0">for (ptr = buf; ptr &lt; &amp;buf[nr]; ) {</div><div class="t m0 x1f h57 y36a3 ff1a fs2d fc0 sc0 ls0 ws0">if (*ptr++ == 0) {</div><div class="t m0 x1ca h57 y36a4 ff1a fs2d fc0 sc0 ls0 ws0">if (ptr != &amp;buf[nr-1])</div><div class="t m0 x36 h57 y36a5 ff1a fs2d fc0 sc0 ls0 ws0">err_dump(&quot;message format error&quot;);</div><div class="t m0 x1ca h57 y36a6 ff1a fs2d fc0 sc0 ls0 ws0">status = *ptr &amp; 0xFF;<span class="_ _68"> </span>/* prevent sign extension */</div><div class="t m0 x1ca h57 y36a7 ff1a fs2d fc0 sc0 ls0 ws0">if (status == 0) {</div><div class="t m0 x36 h57 y465b ff1a fs2d fc0 sc0 ls0 ws0">if (msg.msg_controllen != CONTROLLEN)</div><div class="t m0 xee h57 y4cff ff1a fs2d fc0 sc0 ls0 ws0">err_dump(&quot;status = 0 but no fd&quot;);</div><div class="t m0 x36 h57 y879 ff1a fs2d fc0 sc0 ls0 ws0">/* process the control data */</div><div class="t m0 x36 h57 y87a ff1a fs2d fc0 sc0 ls0 ws0">for (cmp = CMSG_FIRSTHDR(&amp;msg);</div><div class="t m0 x1f7 h57 y87b ff1a fs2d fc0 sc0 ls0 ws0">cmp != NULL; cmp = CMSG_NXTHDR(&amp;msg, cmp)) {</div><div class="t m0 xee h57 y87c ff1a fs2d fc0 sc0 ls0 ws0">if (cmp-&gt;cmsg_level != SOL_SOCKET)</div><div class="t m0 x5b h57 y87d ff1a fs2d fc0 sc0 ls0 ws0">continue;</div><div class="t m0 xee h57 y87e ff1a fs2d fc0 sc0 ls0 ws0">switch (cmp-&gt;cmsg_type) {</div><div class="t m0 xee h57 y87f ff1a fs2d fc0 sc0 ls0 ws0">case SCM_RIGHTS:</div><div class="t m0 x5b h57 y880 ff1a fs2d fc0 sc0 ls0 ws0">newfd = *(int *)CMSG_DATA(cmp);</div><div class="t m0 x5b h57 y4d00 ff1a fs2d fc0 sc0 ls0 ws0">break;</div><div class="t m0 xee h57 y4d01 ff1a fs2d fc0 sc0 ls0 ws0">case SCM_CREDTYPE:</div><div class="t m0 x5b h57 y38c2 ff1a fs2d fc0 sc0 ls0 ws0">credp = (struct CREDSTRUCT *)CMSG_DATA(cmp);</div><div class="t m0 x5b h57 y38c3 ff1a fs2d fc0 sc0 ls0 ws0">*uidptr = credp-&gt;CR_UID;</div><div class="t m0 xee h57 y38c4 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x36 h57 y38c5 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x1ca h57 y42b6 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x36 h57 y42b7 ff1a fs2d fc0 sc0 ls0 ws0">newfd = -status;</div><div class="t m0 x1ca h57 y42b8 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x1ca h57 y42b9 ff1a fs2d fc0 sc0 ls0 ws0">nr -= 2;</div><div class="t m0 x1f h57 y42ba ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y42bb ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y42bc ff1a fs2d fc0 sc0 ls0 ws0">if (nr &gt; 0 &amp;&amp; (*userfunc)(STDERR_FILENO, buf, nr) != nr)</div><div class="t m0 x1f h57 y42bd ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y42be ff1a fs2d fc0 sc0 ls0 ws0">if (status &gt;= 0)<span class="_ _15"> </span>/* final data has arrived */</div><div class="t m0 x1f h57 y4d02 ff1a fs2d fc0 sc0 ls0 ws0">return(newfd); <span class="_"> </span>/*<span class="_"> </span>descriptor, or -status */</div><div class="t m0 x8a h57 y4d03 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y4d04 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xe7 h2d y4d05 ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.16<span class="_ _5a"> </span><span class="ff19">Receiving credentials over UNIX domain sockets</span></div><div class="t m0 x32 h4d y4d06 ff19 fs26 fc0 sc0 ls0 ws0">On <span class="_ _44"> </span>FreeBSD, <span class="_ _35"> </span>we <span class="_ _44"> </span>specify<span class="_ _54"> </span><span class="ff1a">SCM_CREDS<span class="_ _54"> </span></span>to <span class="_ _44"> </span>transmit <span class="_ _44"> </span>credentials; <span class="_ _35"> </span>on <span class="_ _44"> </span>Linux, <span class="_ _44"> </span>we <span class="_ _44"> </span>use</div><div class="t m0 x32 h4d y4d07 ff1a fs26 fc0 sc0 ls0 ws0">SCM_CREDENTIALS<span class="ff19">.</span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
