<div id="pf167" class="pf w4 h1f" data-page-no="167"><div class="pc pc167 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg167.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.3<span class="_ _23a"> </span><span class="ff1a">signal<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">325</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>i<span class="_ _23"></span><span class="ls0">nvoke the <span class="_ _2"></span>program in <span class="_ _2"></span>the background <span class="_ _2"></span>and use <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">kill</span></span></div><div class="t m0 x213 h2a y1ac ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x1a1 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 x16a h2a y1ac ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 xd3 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">command to <span class="_ _2"></span>send <span class="_ _2"></span>it</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">signals. <span class="_ _46"> </span>Note<span class="_ _61"> </span>that <span class="_ _66"> </span>the <span class="_ _47"> </span>term<span class="_ _46"> </span><span class="ff1b">kill<span class="_ _61"> </span></span>in <span class="_ _66"> </span>the <span class="_ _47"> </span>UNIX <span class="_"> </span>System <span class="_ _47"> </span>is <span class="_"> </span>a <span class="_ _47"> </span>misnomer<span class="_ _6"></span><span class="lsbe3">.T<span class="_ _49"></span><span class="ls0">he<span class="_ _61"> </span><span class="ff1a">kill</span></span></span></div><div class="t m0 x40 h2a y29cf ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 x1b2 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">1</div><div class="t m0 x17e h2a y29cf ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">command <span class="_ _42"> </span>and <span class="_ _23"> </span>the<span class="_ _44"> </span><span class="ff1a">kill</span></div><div class="t m0 xbe h2a y17a ff19 fsf fc0 sc0 ls0 ws0">(</div><div class="t m0 xbf h2a y131 ff19 fsf fc0 sc0 ls0 ws0">2</div><div class="t m0 xf3 h2a y17a ff19 fsf fc0 sc0 ls0 ws0">)</div><div class="t m0 x124 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">function <span class="_ _42"> </span>just <span class="_ _23"> </span>send <span class="_ _42"> </span>a <span class="_ _42"> </span>signal <span class="_ _23"> </span>to <span class="_ _42"> </span>a <span class="_ _42"> </span>process <span class="_ _23"> </span>or <span class="_ _42"> </span>process <span class="_ _23"> </span>group.</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">Whether <span class="_ _45"> </span>that <span class="_ _47"> </span>signal <span class="_ _45"> </span>terminates <span class="_ _47"> </span>the <span class="_ _45"> </span>process <span class="_ _47"> </span>depends <span class="_ _45"> </span>on <span class="_ _45"> </span>which <span class="_ _47"> </span>signal <span class="_ _45"> </span>is <span class="_ _47"> </span>sent <span class="_ _45"> </span>and</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">whether the process has arranged to catch the signal.</div><div class="t m0 x3f h57 y2280 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out &amp;<span class="_ _194"> </span><span class="ff1b">start process in backgr<span class="_ _0"></span>ound</span></span></div><div class="t m0 x3f h57 y26a6 ff1a fs2d fc0 sc0 ls0 ws0">[1] <span class="_ _8a"> </span>7216<span class="_ _af"> </span><span class="ff1b">job-control shell prints job number and process ID</span></div><div class="t m0 x3f h57 y26a7 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">kill -USR1 7216<span class="_ _c7"> </span><span class="ff1b">send it<span class="_"> </span></span></span>SIGUSR1</div><div class="t m0 x3f h57 y26a8 ff1a fs2d fc0 sc0 ls0 ws0">received SIGUSR1</div><div class="t m0 x3f h57 y26a9 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">kill -USR2 7216<span class="_ _c7"> </span><span class="ff1b">send it<span class="_"> </span></span></span>SIGUSR2</div><div class="t m0 x3f h57 y26aa ff1a fs2d fc0 sc0 ls0 ws0">received SIGUSR2</div><div class="t m0 x3f h57 y26ab ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">kill 7216<span class="_ _194"> </span><span class="ff1b">now send it<span class="_"> </span></span></span>SIGTERM</div><div class="t m0 x3f h57 y29d0 ff1a fs2d fc0 sc0 ls0 ws0">[1]+ <span class="_"> </span>Terminated<span class="_ _186"> </span>./a.out</div><div class="t m0 x32 h26 y29d1 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _2"></span>we <span class="_ _3"></span>send <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">SIGTERM<span class="_ _47"> </span></span>signal, <span class="_ _3"></span>the <span class="_ _3"></span>process <span class="_ _2"></span>is <span class="_ _3"></span>terminated, <span class="_ _3"></span>since <span class="_ _3"></span>it <span class="_ _2"></span>doesn’t <span class="_ _3"></span>catch <span class="_ _3"></span>the</div><div class="t m0 x32 h2a y29d2 ff19 fsf fc0 sc0 ls0 ws0">signal, and the default action for the signal is termination.</div><div class="t m0 x35 h4c y29d3 ff16 fs26 fc0 sc0 ls0 ws0">Program Start-Up</div><div class="t m0 x32 h49 y29d4 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _47"> </span>a <span class="_ _47"> </span>program <span class="_"> </span>is <span class="_ _47"> </span>executed, <span class="_ _47"> </span>the <span class="_ _47"> </span>status <span class="_ _47"> </span>of <span class="_ _47"> </span>all <span class="_ _47"> </span>signals <span class="_ _47"> </span>is <span class="_ _47"> </span>either <span class="_ _47"> </span>default <span class="_ _47"> </span>or <span class="_ _66"> </span>ignore.</div><div class="t m0 x32 h4d y29d5 ff19 fs26 fc0 sc0 ls0 ws0">Normally<span class="_ _4"></span><span class="lsbe4">,a<span class="_ _4f"></span><span class="ls0">ll <span class="_ _2"></span>signals <span class="_ _3"></span>ar<span class="lsbe4">es<span class="_ _8"></span><span class="ls0">et <span class="_ _3"></span>to <span class="_ _3"></span>their <span class="_ _3"></span>default <span class="_ _3"></span>action, <span class="_ _3"></span>unless <span class="_ _3"></span>the <span class="_ _3"></span>process <span class="_ _2"></span>that <span class="_ _3"></span>calls<span class="_ _47"> </span><span class="ff1a">exec<span class="_ _47"> </span></span>is</span></span></span></span></div><div class="t m0 x32 h4d y29d6 ff19 fs26 fc0 sc0 ls0 ws0">ignoring <span class="_"> </span>the <span class="_"> </span>signal.<span class="_ _50"> </span>Speciﬁcally<span class="_ _4"></span><span class="lsbe5">,t<span class="_ _4a"></span><span class="ls0">he<span class="_ _46"> </span><span class="ff1a">exec<span class="_ _46"> </span></span>functions <span class="_"> </span>change <span class="_ _66"> </span>the <span class="_ _66"> </span>disposition <span class="_"> </span>of <span class="_ _66"> </span>any</span></span></div><div class="t m0 x32 h49 y29d7 ff19 fs26 fc0 sc0 ls0 ws0">signals <span class="_ _53"> </span>being <span class="_ _e"> </span>caught <span class="_ _e"> </span>to <span class="_ _e"> </span>their <span class="_ _e"> </span>default <span class="_ _e"> </span>action <span class="_ _e"> </span>and <span class="_ _53"> </span>leave <span class="_ _e"> </span>the <span class="_ _e"> </span>status <span class="_ _e"> </span>of <span class="_ _e"> </span>all <span class="_ _e"> </span>other <span class="_ _e"> </span>signals</div><div class="t m0 x32 h4d y29d8 ff19 fs26 fc0 sc0 ls0 ws0">alone. <span class="_ _45"> </span>(Naturally<span class="_ _6"></span><span class="lsbe6">,as<span class="_ _b"></span><span class="ls0">ignal <span class="_ _9"></span>that <span class="_ _9"></span>is <span class="_ _23"></span>being <span class="_ _9"></span>caught <span class="_ _23"></span>by <span class="_ _9"></span>a <span class="_ _23"></span>process <span class="_ _3"></span>that <span class="_ _23"></span>calls<span class="_ _45"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>cannot <span class="_ _9"></span>be</span></span></div><div class="t m0 x32 h49 y29d9 ff19 fs26 fc0 sc0 ls0 ws0">caught <span class="_"> </span>by <span class="_"> </span>the <span class="_"> </span>same <span class="_"> </span>function <span class="_"> </span>in <span class="_"> </span>the <span class="_"> </span>new <span class="_"> </span>pr<span class="_ _1"></span>ogram, <span class="_"> </span>since <span class="_"> </span>the <span class="_"> </span>address <span class="_"> </span>of <span class="_"> </span>the <span class="_"> </span>signal-</div><div class="t m0 x32 h49 y29da ff19 fs26 fc0 sc0 ls0 ws0">catching <span class="_ _3"></span>function <span class="_ _3"></span>in <span class="_ _3"></span>the <span class="_ _3"></span>caller <span class="_ _3"></span>probably <span class="_ _3"></span>has <span class="_ _3"></span>no <span class="_ _3"></span>meaning <span class="_ _3"></span>in <span class="_ _3"></span>the <span class="_ _3"></span>new <span class="_ _3"></span>program <span class="_ _3"></span>ﬁle <span class="_ _3"></span>that <span class="_ _3"></span>is</div><div class="t m0 x32 h49 y29db ff19 fs26 fc0 sc0 ls0 ws0">executed.)</div><div class="t m0 x3f h49 y29dc ff19 fs26 fc0 sc0 ls0 ws0">One <span class="_ _2"></span>speciﬁc <span class="_ _2"></span>example <span class="_ _3"></span>of <span class="_ _2"></span>this <span class="_ _2"></span>signal <span class="_ _3"></span>status <span class="_ _2"></span>behavior <span class="_ _2"></span>is <span class="_ _3"></span>how <span class="_ _2"></span>an <span class="_ _3"></span>interactive <span class="_ _2"></span>shell <span class="_ _2"></span>treats</div><div class="t m0 x32 h49 y29dd ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_"> </span>interrupt <span class="_"> </span>and <span class="_"> </span>quit <span class="_"> </span>signals <span class="_"> </span>for <span class="_"> </span>a <span class="_"> </span>backgr<span class="_ _0"></span>ound <span class="_"> </span>process. <span class="_ _59"> </span>W<span class="_ _1"></span>ith <span class="_"> </span>a <span class="_"> </span>shell <span class="_"> </span>that <span class="_"> </span>doesn’t</div><div class="t m0 x32 h49 y29de ff19 fs26 fc0 sc0 ls0 ws0">support job control, when we execute a pr<span class="_ _0"></span>ocess in the backgr<span class="_ _0"></span>ound, as in</div><div class="t m0 x3f h4e y29df ff1a fs28 fc0 sc0 ls0 ws0">cc main.c &amp;</div><div class="t m0 x32 h49 y29e0 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_"> </span>shell <span class="_"> </span>automatically <span class="_"> </span>sets <span class="_"> </span>the <span class="_"> </span>disposition <span class="_"> </span>of <span class="_"> </span>the <span class="_"> </span>interr<span class="_ _0"></span>upt <span class="_"> </span>and <span class="_"> </span>quit <span class="_"> </span>signals <span class="_"> </span>in <span class="_"> </span>the</div><div class="t m0 x32 h49 y29e1 ff19 fs26 fc0 sc0 ls0 ws0">background <span class="_ _66"> </span>process <span class="_ _47"> </span>to <span class="_ _47"> </span>be <span class="_ _47"> </span>ignored. <span class="_ _61"> </span>This<span class="_ _16"> </span>is <span class="_ _47"> </span>done <span class="_ _47"> </span>so <span class="_ _47"> </span>that <span class="_ _47"> </span>if <span class="_ _47"> </span>we <span class="_ _47"> </span>type <span class="_ _47"> </span>the <span class="_ _47"> </span>interrupt</div><div class="t m0 x32 h49 y29e2 ff19 fs26 fc0 sc0 ls0 ws0">character<span class="_ _6"></span>,<span class="_ _35"> </span>it<span class="_ _45"> </span>doesn’t <span class="_ _9"></span>affect <span class="_ _9"></span>the <span class="_ _23"></span>backgr<span class="_ _0"></span>ound <span class="_ _9"></span>process. <span class="_ _45"> </span>If<span class="_ _45"> </span>this <span class="_ _23"></span>weren’t <span class="_ _9"></span>done <span class="_ _9"></span>and <span class="_ _23"></span>we <span class="_ _9"></span>typed</div><div class="t m0 x32 h49 y29e3 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _3"></span>interrupt <span class="_ _2"></span>character<span class="_ _1"></span>,<span class="_ _47"> </span>it<span class="_ _47"> </span>would <span class="_ _3"></span>terminate <span class="_ _3"></span>not <span class="_ _3"></span>only <span class="_ _3"></span>the <span class="_ _3"></span>foregr<span class="_ _0"></span>ound <span class="_ _2"></span>process, <span class="_ _3"></span>but <span class="_ _3"></span>also <span class="_ _3"></span>all</div><div class="t m0 x32 h49 y29e4 ff19 fs26 fc0 sc0 ls0 ws0">the background pr<span class="_ _0"></span>ocesses.</div><div class="t m0 x3f h49 y29e5 ff19 fs26 fc0 sc0 ls0 ws0">Many interactive programs that catch these two signals have code that looks like</div><div class="t m0 xc2 h4e y29e6 ff1a fs28 fc0 sc0 ls0 ws0">void sig_int(int), sig_quit(int);</div><div class="t m0 xc2 h4e y29e7 ff1a fs28 fc0 sc0 ls0 ws0">if (signal(SIGINT, SIG_IGN) != SIG_IGN)</div><div class="t m0 x16e h4e y29e8 ff1a fs28 fc0 sc0 ls0 ws0">signal(SIGINT, sig_int);</div><div class="t m0 xc2 h4e y29e9 ff1a fs28 fc0 sc0 ls0 ws0">if (signal(SIGQUIT, SIG_IGN) != SIG_IGN)</div><div class="t m0 x16e h4e y29ea ff1a fs28 fc0 sc0 ls0 ws0">signal(SIGQUIT, sig_quit);</div><div class="t m0 x32 h49 y29eb ff19 fs26 fc0 sc0 ls0 ws0">Following this <span class="_ _2"></span>approach, the process catches <span class="_ _2"></span>the signal <span class="_ _2"></span>only <span class="_ _2"></span>if the <span class="_ _2"></span>signal is <span class="_ _2"></span>not <span class="_ _2"></span>currently</div><div class="t m0 x32 h49 y29ec ff19 fs26 fc0 sc0 ls0 ws0">being ignored.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
