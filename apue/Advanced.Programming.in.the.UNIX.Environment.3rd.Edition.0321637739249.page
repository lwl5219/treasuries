<div id="pff9" class="pf w4 h1f" data-page-no="f9"><div class="pc pcf9 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bgf9.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>7.10<span class="_ _15b"> </span><span class="ff1a">setjmp<span class="_ _4b"> </span></span>and<span class="_ _59"> </span><span class="ff1a">longjmp<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">215</span></div><div class="t m0 x129 h51 y1ce2 ff19 fs2a fc0 sc0 ls0 ws0">stack frame</div><div class="t m0 x1ed h52 y1ce3 ff19 fs2a fc0 sc0 ls0 ws0">for<span class="_"> </span><span class="ff1a">main</span></div><div class="t m0 x129 h2d y1ce4 ff19 fs10 fc0 sc0 ls0 ws0">stack frame</div><div class="t m0 x113 h5e y1ce5 ff19 fs10 fc0 sc0 ls0 ws0">for<span class="_"> </span><span class="ff1a">do_line</span></div><div class="t m0 x129 h2e y1ce6 ff19 fs11 fc0 sc0 ls0 ws0">stack frame</div><div class="t m0 x113 h4f y1ce7 ff19 fs11 fc0 sc0 ls0 ws0">for<span class="_"> </span><span class="ff1a">cmd_add</span></div><div class="t m0 x123 h2f y1ce8 ff19 fs12 fc0 sc0 ls0 ws0">bottom of stack<span class="_ _b9"> </span>higher address</div><div class="t m0 x1bf h2f y1ce9 ff19 fs12 fc0 sc0 ls0 ws0">lower address</div><div class="t m0 x9f h30 y1cea ff19 fs13 fc0 sc0 ls0 ws0">direction of</div><div class="t m0 x185 h30 y1ceb ff19 fs13 fc0 sc0 ls0 ws0">stack growth</div><div class="t m0 x9f h63 y1cec ff18 fs13 fc0 sc0 ls0 ws0">Figure 7.10<span class="_ _5a"> </span><span class="ff19">Stack frames after<span class="_"> </span><span class="ff1a">cmd_add<span class="_ _e"> </span></span>has been called</span></div><div class="t m0 x32 h6e y1ced ff19 fs31 fc0 sc0 ls0 ws0">Storage <span class="_ _53"> </span>for <span class="_ _53"> </span>the <span class="_ _53"> </span>automatic <span class="_ _42"> </span>variables <span class="_ _53"> </span>is <span class="_ _53"> </span>within <span class="_ _53"> </span>the <span class="_ _53"> </span>stack <span class="_ _53"> </span>frame <span class="_ _53"> </span>for <span class="_ _53"> </span>each <span class="_ _53"> </span>function.<span class="_ _65"> </span>The</div><div class="t m0 x32 h64 y1cee ff19 fs31 fc0 sc0 ls0 ws0">array<span class="_ _44"> </span><span class="ff1a">line<span class="_ _44"> </span></span>is <span class="_ _42"> </span>in <span class="_ _53"> </span>the <span class="_ _42"> </span>stack <span class="_ _53"> </span>frame <span class="_ _53"> </span>for<span class="_ _44"> </span><span class="ff1a">main</span><span class="ls8c6">,t<span class="_ _c"></span><span class="ls0">he <span class="_ _53"> </span>integer<span class="_ _44"> </span><span class="ff1a">cmd<span class="_ _44"> </span></span>is <span class="_ _53"> </span>in <span class="_ _42"> </span>the <span class="_ _53"> </span>stack <span class="_ _53"> </span>frame <span class="_ _42"> </span>for</span></span></div><div class="t m0 x32 h64 y1cef ff1a fs31 fc0 sc0 ls0 ws0">do_line<span class="ff19 ls229">,a<span class="_ _d"></span><span class="ls0">nd the integer<span class="_"> </span><span class="ff1a">token<span class="_ _66"> </span></span>is in the stack frame for<span class="_"> </span><span class="ff1a">cmd_add</span>.</span></span></div><div class="t m0 x3f h6e y1cf0 ff19 fs31 fc0 sc0 ls0 ws0">As <span class="_ _42"> </span>we’ve <span class="_ _42"> </span>said, <span class="_ _42"> </span>this <span class="_ _42"> </span>type <span class="_ _42"> </span>of <span class="_ _42"> </span>arrangement <span class="_ _42"> </span>of <span class="_ _53"> </span>the <span class="_ _42"> </span>stack <span class="_ _42"> </span>is <span class="_ _42"> </span>typical, <span class="_ _42"> </span>but <span class="_ _42"> </span>not <span class="_ _42"> </span>required.</div><div class="t m0 x32 h6e y1cf1 ff19 fs31 fc0 sc0 ls0 ws0">Stacks <span class="_ _23"> </span>do <span class="_ _42"> </span>not <span class="_ _23"> </span>have <span class="_ _42"> </span>to <span class="_ _23"> </span>grow <span class="_ _23"> </span>towar<span class="ls8c7">dl<span class="_ _43"></span><span class="ls0">ower <span class="_ _23"> </span>memory <span class="_ _42"> </span>addresses. <span class="_ _35"> </span>On<span class="_ _35"> </span>systems <span class="_ _23"> </span>that <span class="_ _42"> </span>don’t</span></span></div><div class="t m0 x32 h6e y1cf2 ff19 fs31 fc0 sc0 ls0 ws0">have <span class="_ _9"></span>built-in <span class="_ _23"></span>hardwar<span class="_ _0"></span><span class="ls8c8">es<span class="_ _b"></span><span class="ls0">upport <span class="_ _9"></span>for <span class="_ _9"></span>stacks, <span class="_ _23"></span>a <span class="_ _9"></span>C <span class="_ _23"> </span>implementation <span class="_ _23"></span>might <span class="_ _9"></span>use <span class="_ _23"></span>a <span class="_ _9"></span>linked <span class="_ _23"></span>list</span></span></div><div class="t m0 x32 h6e y1cf3 ff19 fs31 fc0 sc0 ls0 ws0">for its stack frames.</div><div class="t m0 x3f h6e y1cf4 ff19 fs31 fc0 sc0 ls0 ws0">The <span class="_ _3"></span>coding <span class="_ _9"></span>problem <span class="_ _2"></span>that’s <span class="_ _9"></span>often <span class="_ _3"></span>encountered <span class="_ _3"></span>with <span class="_ _3"></span>programs <span class="_ _3"></span>like <span class="_ _9"></span>the <span class="_ _3"></span>one <span class="_ _3"></span>shown <span class="_ _9"></span>in</div><div class="t m0 x32 h64 y1cf5 ff19 fs31 fc0 sc0 ls0 ws0">Figur<span class="ls8c9">e7<span class="_ _4a"></span><span class="ls0">.9 <span class="_"> </span>is <span class="_ _53"> </span>how <span class="_"> </span>to <span class="_ _e"> </span>handle <span class="_ _e"> </span>nonfatal <span class="_"> </span>err<span class="_ _0"></span>ors. <span class="_ _4b"> </span>For<span class="_ _59"> </span>example, <span class="_"> </span>if <span class="_ _53"> </span>the<span class="_ _59"> </span><span class="ff1a">cmd_add<span class="_ _59"> </span></span>function</span></span></div><div class="t m0 x32 h6e y1cf6 ff19 fs31 fc0 sc0 ls0 ws0">encounters <span class="_ _2"></span>an <span class="_ _2"></span>error <span class="_ _a"></span>— <span class="_ _a"></span>say<span class="_ _6"></span>,<span class="_"> </span>an<span class="_ _47"> </span>invalid <span class="_ _2"></span>number<span class="_ _9"></span><span class="ls417">—i<span class="_ _6"></span><span class="ls8ca">tm<span class="_ _4f"></span><span class="ls0">ight <span class="_ _3"></span>want <span class="_ _2"></span>to <span class="_ _2"></span>print <span class="_ _2"></span>an <span class="_ _2"></span>error <span class="_ _2"></span>message,</span></span></span></div><div class="t m0 x32 h64 y1cf7 ff19 fs31 fc0 sc0 ls0 ws0">ignor<span class="ls8cb">et<span class="_ _b"></span><span class="ls0">he <span class="_ _3"></span>rest <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>input <span class="_ _9"></span>line, <span class="_ _3"></span>and <span class="_ _3"></span>return <span class="_ _2"></span>to <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1a">main<span class="_ _47"> </span></span>function <span class="_ _9"></span>to <span class="_ _3"></span>read <span class="_ _2"></span>the <span class="_ _3"></span>next <span class="_ _9"></span>input</span></span></div><div class="t m0 x32 h64 y1cf8 ff19 fs31 fc0 sc0 ls0 ws0">line. <span class="_"> </span>But<span class="_"> </span>when <span class="_ _2"></span>we’r<span class="ls8cc">ed<span class="_ _4f"></span><span class="ls0">eeply nested <span class="_ _2"></span>numerous levels down from the<span class="_"> </span><span class="ff1a">main<span class="_ _66"> </span></span>function, this</span></span></div><div class="t m0 x32 h64 y1cf9 ff19 fs31 fc0 sc0 ls0 ws0">is <span class="_ _3"></span>difﬁcult <span class="_ _3"></span>to <span class="_ _3"></span>do <span class="_ _9"></span>in <span class="_ _3"></span>C.<span class="_ _16"> </span>(In <span class="_ _9"></span>this <span class="_ _3"></span>example, <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">cmd_add<span class="_ _47"> </span></span>function <span class="_ _3"></span>is <span class="_ _9"></span>only <span class="_ _3"></span>two <span class="_ _3"></span>levels <span class="_ _9"></span>down</div><div class="t m0 x32 h64 y1cfa ff19 fs31 fc0 sc0 ls0 ws0">from<span class="_ _35"> </span><span class="ff1a">main</span><span class="ls8cd">,b<span class="_ _43"></span><span class="ls0">ut <span class="_ _23"> </span>it’s <span class="_ _42"> </span>not <span class="_ _23"> </span>uncommon <span class="_ _42"> </span>to <span class="_ _42"> </span>be <span class="_ _23"> </span>ﬁve <span class="_ _42"> </span>or <span class="_ _23"> </span>mor<span class="ls8ce">el<span class="_ _43"></span><span class="ls0">evels <span class="_ _42"> </span>down <span class="_ _23"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>point <span class="_ _42"> </span>to</span></span></span></span></div><div class="t m0 x32 h6e y1cfb ff19 fs31 fc0 sc0 ls0 ws0">which <span class="_ _23"></span>we <span class="_ _9"></span>want <span class="_ _23"></span>to <span class="_ _23"></span>return.) <span class="_ _45"> </span>It<span class="_ _45"> </span>becomes <span class="_ _23"></span>messy <span class="_ _23"></span>if <span class="_ _9"></span>we <span class="_ _23"> </span>have <span class="_ _23"></span>to <span class="_ _9"></span>code <span class="_ _23"> </span>each <span class="_ _23"></span>function <span class="_ _23"></span>with <span class="_ _9"></span>a</div><div class="t m0 x32 h6e y1cfc ff19 fs31 fc0 sc0 ls0 ws0">special return value that tells it to r<span class="_ _0"></span>eturn one level.</div><div class="t m0 x3f h64 y1cfd ff19 fs31 fc0 sc0 ls0 ws0">The <span class="_ _9"></span>solution <span class="_ _9"></span>to <span class="_ _9"></span>this <span class="_ _23"></span>problem <span class="_ _3"></span>is <span class="_ _23"></span>to <span class="_ _9"></span>use <span class="_ _9"></span>a <span class="_ _9"></span>nonlocal<span class="_ _45"> </span><span class="ff1a">goto</span><span class="ls8cf">:t<span class="_ _b"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1a">setjmp<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">longjmp</span></span></span></div><div class="t m0 x32 h64 y1cfe ff19 fs31 fc0 sc0 ls0 ws0">functions. <span class="_ _44"> </span>The<span class="_ _44"> </span>adjective <span class="_ _42"> </span>‘<span class="_ _0"></span>‘nonlocal’<span class="_ _1"></span><span class="ls8d0">’i<span class="_ _43"></span><span class="ls0">ndicates <span class="_ _42"> </span>that <span class="_ _42"> </span>we’r<span class="ls8d1">en<span class="_ _c"></span><span class="ls0">ot <span class="_ _53"> </span>doing <span class="_ _42"> </span>a <span class="_ _53"> </span>normal <span class="_ _42"> </span>C<span class="_ _44"> </span><span class="ff1a">goto</span></span></span></span></span></div><div class="t m0 x32 h6e y1cff ff19 fs31 fc0 sc0 ls0 ws0">statement <span class="_ _3"></span>within <span class="_ _3"></span>a <span class="_ _3"></span>function; <span class="_ _3"></span>instead, <span class="_ _3"></span>we’r<span class="ls8d2">eb<span class="_ _8"></span><span class="ls0">ranching <span class="_ _3"></span>back <span class="_ _3"></span>through <span class="_ _3"></span>the <span class="_ _3"></span>call <span class="_ _3"></span>frames <span class="_ _3"></span>to <span class="_ _3"></span>a</span></span></div><div class="t m0 x32 h6e y1d00 ff19 fs31 fc0 sc0 ls0 ws0">function that is in the call path of the current function.</div><div class="t m0 x3f h65 y1d01 ff1a fs32 fc0 sc0 ls0 ws0">#include &lt;setjmp.h&gt;</div><div class="t m0 x3f h65 y1d02 ff1a fs32 fc0 sc0 ls0 ws0">int setjmp(jmp_buf<span class="_"> </span><span class="ff1b">env</span>);</div><div class="t m0 x126 h65 y1d03 ff19 fs32 fc0 sc0 ls0 ws0">Returns: 0 if called directly<span class="_ _4"></span><span class="ls443">,n<span class="_ _5"></span><span class="ls0">onzero<span class="_"> </span>if<span class="_"> </span>returning fr<span class="_ _0"></span>om a call to<span class="_"> </span><span class="ff1a">longjmp</span></span></span></div><div class="t m0 x3f h65 y1d04 ff1a fs32 fc0 sc0 ls0 ws0">void longjmp(jmp_buf<span class="_"> </span><span class="ff1b">env</span><span class="ls441">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">val</span>);</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
