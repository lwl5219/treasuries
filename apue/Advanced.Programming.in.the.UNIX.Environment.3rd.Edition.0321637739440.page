<div id="pf1b8" class="pf w4 h1f" data-page-no="1b8"><div class="pc pc1b8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1b8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">406<span class="_ _1b"> </span><span class="ff19">Threads <span class="_ _24b"> </span>Chapter<span class="_ _78"> </span><span class="ls7ed">11</span></span></div><div class="t m0 x1f h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">return(NULL);</div><div class="t m0 x9d h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">idx = HASH(id);</div><div class="t m0 x9d h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;hashlock);</div><div class="t m0 x9d h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_next = fh[idx];</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">fh[idx] = fp;</div><div class="t m0 x9d h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;fp-&gt;f_lock);</div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x9d h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">/* ... continue initialization ... */</div><div class="t m0 x9d h57 y807 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;fp-&gt;f_lock);</div><div class="t m0 x8a h57 y808 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y809 ff1a fs2d fc0 sc0 ls0 ws0">return(fp);</div><div class="t m0 x32 h57 y80a ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y16e5 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y16e6 ff1a fs2d fc0 sc0 ls0 ws0">foo_hold(struct foo *fp) /* add a reference to the object */</div><div class="t m0 x32 h57 y16e7 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y16e8 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;hashlock);</div><div class="t m0 x8a h57 y16e9 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_count++;</div><div class="t m0 x8a h57 y16ea ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x32 h57 y337f ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y16ec ff1a fs2d fc0 sc0 ls0 ws0">struct foo *</div><div class="t m0 x32 h57 y8e2 ff1a fs2d fc0 sc0 ls0 ws0">foo_find(int id) /* find an existing object */</div><div class="t m0 x32 h57 y8e3 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y8e4 ff1a fs2d fc0 sc0 ls0 ws0">struct foo<span class="_ _d9"> </span>*fp;</div><div class="t m0 x8a h57 y3380 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;hashlock);</div><div class="t m0 x8a h57 y3381 ff1a fs2d fc0 sc0 ls0 ws0">for (fp = fh[HASH(id)]; fp != NULL; fp = fp-&gt;f_next) {</div><div class="t m0 x9d h57 y3382 ff1a fs2d fc0 sc0 ls0 ws0">if (fp-&gt;f_id == id) {</div><div class="t m0 x1f h57 y3383 ff1a fs2d fc0 sc0 ls0 ws0">fp-&gt;f_count++;</div><div class="t m0 x1f h57 y3384 ff1a fs2d fc0 sc0 ls0 ws0">break;</div><div class="t m0 x9d h57 y3385 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y3386 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y3387 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_unlock(&amp;hashlock);</div><div class="t m0 x8a h57 y3388 ff1a fs2d fc0 sc0 ls0 ws0">return(fp);</div><div class="t m0 x32 h57 y3389 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y338a ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y338b ff1a fs2d fc0 sc0 ls0 ws0">foo_rele(struct foo *fp) /* release a reference to the object */</div><div class="t m0 x32 h57 y338c ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y338d ff1a fs2d fc0 sc0 ls0 ws0">struct foo<span class="_ _d9"> </span>*tfp;</div><div class="t m0 x8a h57 y338e ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _186"> </span>idx;</div><div class="t m0 x8a h57 y3361 ff1a fs2d fc0 sc0 ls0 ws0">pthread_mutex_lock(&amp;hashlock);</div><div class="t m0 x8a h57 y3362 ff1a fs2d fc0 sc0 ls0 ws0">if (--fp-&gt;f_count == 0) { /* last reference, remove from list */</div><div class="t m0 x9d h57 y3363 ff1a fs2d fc0 sc0 ls0 ws0">idx = HASH(fp-&gt;f_id);</div><div class="t m0 x9d h57 y3364 ff1a fs2d fc0 sc0 ls0 ws0">tfp = fh[idx];</div><div class="t m0 x9d h57 y3365 ff1a fs2d fc0 sc0 ls0 ws0">if (tfp == fp) {</div><div class="t m0 x1f h57 y3366 ff1a fs2d fc0 sc0 ls0 ws0">fh[idx] = fp-&gt;f_next;</div><div class="t m0 x9d h57 y338f ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x1f h57 y3390 ff1a fs2d fc0 sc0 ls0 ws0">while (tfp-&gt;f_next != fp)</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
