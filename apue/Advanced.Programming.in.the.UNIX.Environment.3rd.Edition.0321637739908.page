<div id="pf38c" class="pf w4 h1f" data-page-no="38c"><div class="pc pc38c w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg38c.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">874<span class="_ _1b"> </span><span class="ff19">Function <span class="_"> </span>Prototypes <span class="_ _2d9"> </span>Appendix<span class="_ _44"> </span>A</span></div><div class="t m0 x32 h52 y2a3 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_mutex_unlock</span>(pthread_mutex_t *<span class="ff1b">mutex</span>);</div><div class="t m0 x36 h52 y5cfc ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 400</span></div><div class="t m0 x36 h51 y5cfd ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5e24 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_once</span>(pthread_once_t *<span class="ff1b">initﬂag</span><span class="lsf5a">,v<span class="_ _55"></span><span class="ls0">oid (*<span class="ff1b">initfn</span>)(void));</span></span></div><div class="t m0 x36 h52 y5e25 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 448</span></div><div class="t m0 x36 h52 y5eee ff1a fs2a fc0 sc0 ls0 ws0">pthread_once_t<span class="_"> </span><span class="ff1b">initﬂag<span class="_ _59"> </span></span><span class="lsf5a">=P<span class="_ _4a"></span><span class="ls0">THREAD_ONCE_INIT;</span></span></div><div class="t m0 x36 h51 y5eef ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5e7d ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlockattr_destroy</span>(pthread_rwlockattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 x36 h52 y5e7e ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 439</span></div><div class="t m0 x36 h51 y5d83 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5d66 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlockattr_getpshared</span>(const pthread_rwlockattr_t</div><div class="t m0 x7f h52 y5df9 ff1a fs2a fc0 sc0 ls0 ws0">*restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x114 h52 y5e1d ff1a fs2a fc0 sc0 ls0 ws0">int *restrict<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 x36 h52 y5eb5 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 440</span></div><div class="t m0 x36 h51 y5e1e ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5d4f ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlockattr_init</span>(pthread_rwlockattr_t *<span class="ff1b">attr</span>);</div><div class="t m0 x36 h52 y5d50 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 439</span></div><div class="t m0 x36 h51 y5e2b ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5e0e ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlockattr_setpshared</span>(pthread_rwlockattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x114 h52 y5d53 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_"> </span><span class="ff1b">pshared</span>);</div><div class="t m0 x36 h52 y5e2d ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 440</span></div><div class="t m0 x36 h52 y5dbf ff1b fs2a fc0 sc0 ls0 ws0">pshared<span class="ff1a lsf5a">:P<span class="_ _4a"></span><span class="ls0">THREAD_PROCESS_PRIVATE,</span></span></div><div class="t m0 x17c h52 y5de8 ff1a fs2a fc0 sc0 ls0 ws0">PTHREAD_PROCESS_SHARED</div><div class="t m0 x36 h51 y5de9 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5ef0 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlock_destroy</span>(pthread_rwlock_t *<span class="ff1b">rwlock</span>);</div><div class="t m0 x36 h52 y5d12 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 409</span></div><div class="t m0 x36 h51 y5d13 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5e04 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlock_init</span>(pthread_rwlock_t *restrict<span class="_"> </span><span class="ff1b">rwlock</span>,</div><div class="t m0 x19b h52 y5d59 ff1a fs2a fc0 sc0 ls0 ws0">const pthread_rwlockattr_t</div><div class="t m0 xed h52 y5ef1 ff1a fs2a fc0 sc0 ls0 ws0">*restrict<span class="_"> </span><span class="ff1b">attr</span>);</div><div class="t m0 x36 h52 y5ef2 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 409</span></div><div class="t m0 x36 h51 y5ef3 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h52 y5dc6 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">pthread_rwlock_rdlock</span>(pthread_rwlock_t *<span class="ff1b">rwlock</span>);</div><div class="t m0 x36 h52 y5dc7 ff1a fs2a fc0 sc0 ls0 ws0">&lt;pthread.h&gt;<span class="_ _31e"> </span><span class="ff19">p. 410</span></div><div class="t m0 x36 h51 y5dc8 ff19 fs2a fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
