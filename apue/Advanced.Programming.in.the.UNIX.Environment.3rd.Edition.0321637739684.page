<div id="pf2ac" class="pf w4 h1f" data-page-no="2ac"><div class="pc pc2ac w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2ac.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">650<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x8a h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_name <span class="_ _68"> </span>=<span class="_"> </span>NULL;</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_namelen = 0;</div><div class="t m0 x8a h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_flags = 0;</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">if (fd_to_send &lt; 0) {</div><div class="t m0 x9d h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control <span class="_ _68"> </span>=<span class="_"> </span>NULL;</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = 0;</div><div class="t m0 x9d h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = -fd_to_send;<span class="_ _68"> </span>/* nonzero status means error */</div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">if (buf[1] == 0)</div><div class="t m0 x1f h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = 1; /* -256, etc. would screw up protocol */</div><div class="t m0 x8a h57 y807 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x9d h57 y808 ff1a fs2d fc0 sc0 ls0 ws0">if (cmptr == NULL &amp;&amp; (cmptr = malloc(CONTROLLEN)) == NULL)</div><div class="t m0 x1f h57 y809 ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h57 y80a ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control <span class="_ _68"> </span>=<span class="_"> </span>cmptr;</div><div class="t m0 x9d h57 y80b ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = CONTROLLEN;</div><div class="t m0 x9d h57 y80c ff1a fs2d fc0 sc0 ls0 ws0">cmp = cmptr;</div><div class="t m0 x9d h57 y80d ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_level <span class="_"> </span>=<span class="_"> </span>SOL_SOCKET;</div><div class="t m0 x9d h57 y80e ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_type <span class="_ _d9"> </span>=<span class="_"> </span>SCM_RIGHTS;</div><div class="t m0 x9d h57 y80f ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_len <span class="_ _68"> </span>=<span class="_"> </span>RIGHTSLEN;</div><div class="t m0 x9d h57 y810 ff1a fs2d fc0 sc0 ls0 ws0">*(int *)CMSG_DATA(cmp) = fd_to_send;<span class="_ _15"> </span>/* the fd to pass */</div><div class="t m0 x9d h57 y811 ff1a fs2d fc0 sc0 ls0 ws0">cmp = CMSG_NXTHDR(&amp;msg, cmp);</div><div class="t m0 x9d h57 y812 ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_level <span class="_"> </span>=<span class="_"> </span>SOL_SOCKET;</div><div class="t m0 x9d h57 y813 ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_type <span class="_ _d9"> </span>=<span class="_"> </span>SCM_CREDTYPE;</div><div class="t m0 x9d h57 y814 ff1a fs2d fc0 sc0 ls0 ws0">cmp-&gt;cmsg_len <span class="_ _68"> </span>=<span class="_"> </span>CREDSLEN;</div><div class="t m0 x9d h57 y815 ff1a fs2d fc0 sc0 ls0 ws0">credp = (struct CREDSTRUCT *)CMSG_DATA(cmp);</div><div class="t m0 x32 h57 y816 ff1a fs2d fc0 sc0 ls0 ws0">#if defined(SCM_CREDENTIALS)</div><div class="t m0 x9d h57 y817 ff1a fs2d fc0 sc0 ls0 ws0">credp-&gt;uid = geteuid();</div><div class="t m0 x9d h57 y818 ff1a fs2d fc0 sc0 ls0 ws0">credp-&gt;gid = getegid();</div><div class="t m0 x9d h57 y819 ff1a fs2d fc0 sc0 ls0 ws0">credp-&gt;pid = getpid();</div><div class="t m0 x32 h57 y81a ff1a fs2d fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x9d h57 y81b ff1a fs2d fc0 sc0 ls0 ws0">buf[1] = 0;<span class="_ _8a"> </span>/* zero status means OK */</div><div class="t m0 x8a h57 y81c ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y81d ff1a fs2d fc0 sc0 ls0 ws0">buf[0] = 0;<span class="_ _176"> </span>/* null byte flag to recv_ufd() */</div><div class="t m0 x8a h57 y81e ff1a fs2d fc0 sc0 ls0 ws0">if (sendmsg(fd, &amp;msg, 0) != 2)</div><div class="t m0 x9d h57 y81f ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h57 y820 ff1a fs2d fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x32 h57 y821 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x126 h2d y4cee ff18 fs10 fc0 sc0 ls0 ws0">Figure 17.15<span class="_ _5a"> </span><span class="ff19">Sending credentials over UNIX domain sockets</span></div><div class="t m0 x32 h49 y4cef ff19 fs26 fc0 sc0 ls0 ws0">Note that we need to initialize the credentials str<span class="_ _0"></span>uctur<span class="lsd3">eo<span class="_ _4f"></span><span class="ls0">nly on Linux.</span></span></div><div class="t m0 x3f h4d y4cf0 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _23"></span>function <span class="_ _9"></span>in <span class="_ _23"> </span>Figur<span class="ls39a">e1<span class="_ _43"></span><span class="ls0">7.16 <span class="_ _23"> </span>is <span class="_ _23"></span>a <span class="_ _23"></span>modiÔ¨Åed <span class="_ _9"></span>version <span class="_ _23"></span>of<span class="_ _45"> </span><span class="ff1a">recv_fd</span><span class="ls96d">,c<span class="_ _b"></span><span class="ls0">alled<span class="_ _45"> </span><span class="ff1a">recv_ufd</span>,</span></span></span></span></div><div class="t m0 x32 h49 y4cf1 ff19 fs26 fc0 sc0 ls0 ws0">that returns the user ID of the sender thr<span class="_ _0"></span>ough a r<span class="_ _0"></span>eference parameter<span class="_ _6"></span>.</div><div class="t m0 x32 h5d y4cf2 ff1a fs2f fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h5d y4cf3 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;<span class="_ _8a"> </span>/* struct msghdr */</div><div class="t m0 x32 h5d y4cf4 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;sys/un.h&gt;</div><div class="t m0 x32 h5d y4cf5 ff1a fs2f fc0 sc0 ls0 ws0">#if defined(SCM_CREDS)<span class="_ _74"> </span>/* BSD interface */</div><div class="t m0 x32 h5d y4cf6 ff1a fs2f fc0 sc0 ls0 ws0">#define CREDSTRUCT<span class="_ _189"> </span>cmsgcred</div><div class="t m0 x32 h5d y4cf7 ff1a fs2f fc0 sc0 ls0 ws0">#define CR_UID<span class="_ _74"> </span>cmcred_uid</div><div class="t m0 x32 h5d y4cf8 ff1a fs2f fc0 sc0 ls0 ws0">#define SCM_CREDTYPE<span class="_ _15"> </span>SCM_CREDS</div><div class="t m0 x32 h5d y4cf9 ff1a fs2f fc0 sc0 ls0 ws0">#elif defined(SCM_CREDENTIALS)<span class="_ _d9"> </span>/* Linux interface */</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
