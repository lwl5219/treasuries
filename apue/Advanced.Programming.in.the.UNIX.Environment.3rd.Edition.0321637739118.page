<div id="pf76" class="pf w4 h1f" data-page-no="76"><div class="pc pc76 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg76.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">84<span class="_ _1b"> </span><span class="ff19">File <span class="_"> </span>I/O<span class="_ _169"> </span>Chapter <span class="_"> </span>3</span></div><div class="t m0 x35 h27 y12f ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a yce9 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>program <span class="_ _9"></span>in <span class="_ _23"></span>Figur<span class="_ _0"></span><span class="ls420">e3<span class="_ _b"></span><span class="ls0">.1<span class="_ _1"></span><span class="ls420">1t<span class="_ _b"></span><span class="ls0">akes <span class="_ _9"></span>a <span class="_ _9"></span>single <span class="_ _23"></span>command</span></span></span></span></div><div class="t m0 xb4 h2a ycea ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x172 h2a yce9 ff19 fsf fc0 sc0 ls0 ws0">line <span class="_ _9"></span>argument <span class="_ _9"></span>that <span class="_ _23"></span>speciﬁes <span class="_ _9"></span>a <span class="_ _9"></span>ﬁle</div><div class="t m0 x32 h2a yceb ff19 fsf fc0 sc0 ls0 ws0">descriptor and prints a description of selected ﬁle ﬂags for that descriptor<span class="_ _6"></span>.</div><div class="t m0 x32 h4e ycec ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e yced ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;fcntl.h&gt;</div><div class="t m0 x32 h4e ycee ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e ycef ff1a fs28 fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h4e ycf0 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e ycf1 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>val;</div><div class="t m0 x8a h4e ycf2 ff1a fs28 fc0 sc0 ls0 ws0">if (argc != 2)</div><div class="t m0 x9d h4e ycf3 ff1a fs28 fc0 sc0 ls0 ws0">err_quit(&quot;usage: a.out &lt;descriptor#&gt;&quot;);</div><div class="t m0 x8a h4e ycf4 ff1a fs28 fc0 sc0 ls0 ws0">if ((val = fcntl(atoi(argv[1]), F_GETFL, 0)) &lt; 0)</div><div class="t m0 x9d h4e ycf5 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fcntl error for fd %d&quot;, atoi(argv[1]));</div><div class="t m0 x8a h4e ycf6 ff1a fs28 fc0 sc0 ls0 ws0">switch (val &amp; O_ACCMODE) {</div><div class="t m0 x8a h4e ycf7 ff1a fs28 fc0 sc0 ls0 ws0">case O_RDONLY:</div><div class="t m0 x9d h4e ycf8 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;read only&quot;);</div><div class="t m0 x9d h4e ycf9 ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e ycfa ff1a fs28 fc0 sc0 ls0 ws0">case O_WRONLY:</div><div class="t m0 x9d h4e ycfb ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;write only&quot;);</div><div class="t m0 x9d h4e ycfc ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e ycfd ff1a fs28 fc0 sc0 ls0 ws0">case O_RDWR:</div><div class="t m0 x9d h4e ycfe ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;read write&quot;);</div><div class="t m0 x9d h4e ycff ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e yd00 ff1a fs28 fc0 sc0 ls0 ws0">default:</div><div class="t m0 x9d h4e yd01 ff1a fs28 fc0 sc0 ls0 ws0">err_dump(&quot;unknown access mode&quot;);</div><div class="t m0 x8a h4e yd02 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e yd03 ff1a fs28 fc0 sc0 ls0 ws0">if (val &amp; O_APPEND)</div><div class="t m0 x9d h4e yd04 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;, append&quot;);</div><div class="t m0 x8a h4e yd05 ff1a fs28 fc0 sc0 ls0 ws0">if (val &amp; O_NONBLOCK)</div><div class="t m0 x9d h4e yd06 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;, nonblocking&quot;);</div><div class="t m0 x8a h4e yd07 ff1a fs28 fc0 sc0 ls0 ws0">if (val &amp; O_SYNC)</div><div class="t m0 x9d h4e yd08 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;, synchronous writes&quot;);</div><div class="t m0 x32 h4e yd09 ff1a fs28 fc0 sc0 ls0 ws0">#if !defined(_POSIX_C_SOURCE) &amp;&amp; defined(O_FSYNC) &amp;&amp; (O_FSYNC != O_SYNC)</div><div class="t m0 x8a h4e yd0a ff1a fs28 fc0 sc0 ls0 ws0">if (val &amp; O_FSYNC)</div><div class="t m0 x9d h4e yd0b ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;, synchronous writes&quot;);</div><div class="t m0 x32 h4e yd0c ff1a fs28 fc0 sc0 ls0 ws0">#endif</div><div class="t m0 x8a h4e yd0d ff1a fs28 fc0 sc0 ls0 ws0">putchar(’\n’);</div><div class="t m0 x8a h4e yd0e ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e yd0f ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x26 h2e yd10 ff18 fs11 fc0 sc0 ls0 ws0">Figure 3.1<span class="_ _0"></span>1<span class="_ _5a"> </span><span class="ff19">Print ﬁle ﬂags for speciﬁed descriptor</span></div><div class="t m0 x32 h54 yd11 ff19 fs2c fc0 sc0 ls0 ws0">Note <span class="_ _3"></span>that <span class="_ _3"></span>we <span class="_ _3"></span>use <span class="_ _3"></span>the <span class="_ _9"></span>featur<span class="ls421">et<span class="_ _b"></span><span class="ls0">est <span class="_ _3"></span>macro<span class="_ _47"> </span><span class="ff1a">_POSIX_C_SOURCE<span class="_ _47"> </span></span>and <span class="_ _3"></span>conditionally <span class="_ _9"></span>compile</span></span></div><div class="t m0 x32 h55 yd12 ff19 fs2c fc0 sc0 ls0 ws0">the <span class="_ _66"> </span>ﬁle <span class="_ _47"> </span>access <span class="_"> </span>ﬂags <span class="_ _47"> </span>that <span class="_ _66"> </span>ar<span class="ls422">en<span class="_ _1d"></span><span class="ls0">ot <span class="_ _47"> </span>part <span class="_ _66"> </span>of <span class="_ _47"> </span>POSIX.1.<span class="_ _60"> </span>The <span class="_ _47"> </span>following <span class="_ _66"> </span>script <span class="_ _47"> </span>shows <span class="_"> </span>the</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
