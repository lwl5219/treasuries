<div id="pf361" class="pf w4 h1f" data-page-no="361"><div class="pc pc361 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg361.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>21.5<span class="_ _eb"> </span>Source <span class="_"> </span>Code<span class="_ _1fb"> </span><span class="ff18">831</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">581 <span class="_ _d9"> </span>/*</div><div class="t m0 x32 h57 y3c0 ff1a fs2d fc0 sc0 ls0 ws0">582 <span class="_ _68"> </span>*<span class="_"> </span>Add an option to the IPP header.</div><div class="t m0 x32 h57 y845 ff1a fs2d fc0 sc0 ls0 ws0">583 <span class="_ _68"> </span>*</div><div class="t m0 x32 h57 y56c4 ff1a fs2d fc0 sc0 ls0 ws0">584 <span class="_ _68"> </span>*<span class="_"> </span>LOCKING: none.</div><div class="t m0 x32 h57 y56c5 ff1a fs2d fc0 sc0 ls0 ws0">585 <span class="_ _68"> </span>*/</div><div class="t m0 x32 h57 y56c6 ff1a fs2d fc0 sc0 ls0 ws0">586 <span class="_ _d9"> </span>char<span class="_"> </span>*</div><div class="t m0 x32 h57 y56c7 ff1a fs2d fc0 sc0 ls0 ws0">587 <span class="_ _d9"> </span>add_option(char<span class="_"> </span>*cp, int tag, char *optname, char *optval)</div><div class="t m0 x32 h57 y56c8 ff1a fs2d fc0 sc0 ls0 ws0">588 <span class="_ _d9"> </span>{</div><div class="t m0 x32 h57 y56c9 ff1a fs2d fc0 sc0 ls0 ws0">589 <span class="_ _15"> </span>int <span class="_ _15"> </span>n;</div><div class="t m0 x32 h57 y56ca ff1a fs2d fc0 sc0 ls0 ws0">590 <span class="_ _15"> </span>union<span class="_"> </span>{</div><div class="t m0 x32 h57 y56cb ff1a fs2d fc0 sc0 ls0 ws0">591 <span class="_ _186"> </span>int16_t<span class="_"> </span>s;</div><div class="t m0 x32 h57 y56cc ff1a fs2d fc0 sc0 ls0 ws0">592 <span class="_ _186"> </span>char<span class="_"> </span>c[2];</div><div class="t m0 x32 h57 y56cd ff1a fs2d fc0 sc0 ls0 ws0">593 <span class="_ _15"> </span>}<span class="_ _b7"> </span>u;</div><div class="t m0 x32 h57 y2f26 ff1a fs2d fc0 sc0 ls0 ws0">594 <span class="_ _15"> </span>*cp++<span class="_"> </span><span class="ls15c">=t<span class="_ _1d"></span><span class="ls0">ag;</span></span></div><div class="t m0 x32 h57 y2f27 ff1a fs2d fc0 sc0 ls0 ws0">595 <span class="_ _15"> </span>n<span class="_"> </span><span class="ls15c">=s<span class="_ _1d"></span><span class="ls0">trlen(optname);</span></span></div><div class="t m0 x32 h57 y2f28 ff1a fs2d fc0 sc0 ls0 ws0">596 <span class="_ _15"> </span>u.s<span class="_"> </span><span class="ls15c">=h<span class="_ _1d"></span><span class="ls0">tons(n);</span></span></div><div class="t m0 x32 h57 y2f29 ff1a fs2d fc0 sc0 ls0 ws0">597 <span class="_ _15"> </span>*cp++<span class="_"> </span><span class="ls15c">=u<span class="_ _1d"></span><span class="ls0">.c[0];</span></span></div><div class="t m0 x32 h57 y2f2a ff1a fs2d fc0 sc0 ls0 ws0">598 <span class="_ _15"> </span>*cp++<span class="_"> </span><span class="ls15c">=u<span class="_ _1d"></span><span class="ls0">.c[1];</span></span></div><div class="t m0 x32 h57 y2f2b ff1a fs2d fc0 sc0 ls0 ws0">599 <span class="_ _15"> </span>strcpy(cp,<span class="_"> </span>optname);</div><div class="t m0 x32 h57 y2f2c ff1a fs2d fc0 sc0 ls0 ws0">600 <span class="_ _15"> </span>cp<span class="_"> </span>+= n;</div><div class="t m0 x32 h57 y2f2d ff1a fs2d fc0 sc0 ls0 ws0">601 <span class="_ _15"> </span>n<span class="_"> </span><span class="ls15c">=s<span class="_ _1d"></span><span class="ls0">trlen(optval);</span></span></div><div class="t m0 x32 h57 y2f2e ff1a fs2d fc0 sc0 ls0 ws0">602 <span class="_ _15"> </span>u.s<span class="_"> </span><span class="ls15c">=h<span class="_ _1d"></span><span class="ls0">tons(n);</span></span></div><div class="t m0 x32 h57 y2f2f ff1a fs2d fc0 sc0 ls0 ws0">603 <span class="_ _15"> </span>*cp++<span class="_"> </span><span class="ls15c">=u<span class="_ _1d"></span><span class="ls0">.c[0];</span></span></div><div class="t m0 x32 h57 y2f30 ff1a fs2d fc0 sc0 ls0 ws0">604 <span class="_ _15"> </span>*cp++<span class="_"> </span><span class="ls15c">=u<span class="_ _1d"></span><span class="ls0">.c[1];</span></span></div><div class="t m0 x32 h57 y56fd ff1a fs2d fc0 sc0 ls0 ws0">605 <span class="_ _15"> </span>strcpy(cp,<span class="_"> </span>optval);</div><div class="t m0 x32 h57 y5848 ff1a fs2d fc0 sc0 ls0 ws0">606 <span class="_ _15"> </span>return(cp<span class="_"> </span><span class="ls15c">+n<span class="_ _1d"></span><span class="ls0">);</span></span></div><div class="t m0 x32 h57 y5849 ff1a fs2d fc0 sc0 ls0 ws0">607 <span class="_ _d9"> </span>}</div><div class="t m0 x32 h4d y5c45 ff19 fs26 fc0 sc0 ls0 ws0">[581 <span class="_ _a"></span>– <span class="_ _a"></span>593]<span class="_ _65"> </span>The<span class="_ _45"> </span><span class="ff1a">add_option<span class="_ _35"> </span></span>function <span class="_ _9"></span>is <span class="_ _23"></span>used <span class="_ _9"></span>to <span class="_ _23"> </span>add <span class="_ _23"></span>an <span class="_ _9"></span>option <span class="_ _23"></span>to <span class="_ _23"></span>the <span class="_ _9"></span>IPP <span class="_ _23"></span>header <span class="_ _9"></span>that</div><div class="t m0 x11a h49 y5c46 ff19 fs26 fc0 sc0 ls0 ws0">we build <span class="_ _2"></span>to <span class="_ _2"></span>send <span class="_ _2"></span>to <span class="_ _2"></span>the <span class="_ _2"></span>printer<span class="_ _1"></span><span class="ls79c">.R<span class="_ _5b"></span><span class="ls0">ecall <span class="_ _2"></span>from Figur<span class="ls17b2">e2<span class="_ _4f"></span><span class="ls0">1.4 <span class="_ _2"></span>that <span class="_ _2"></span>the <span class="_ _2"></span>format <span class="_ _2"></span>of <span class="_ _2"></span>an</span></span></span></span></div><div class="t m0 x11a h49 y5c47 ff19 fs26 fc0 sc0 ls0 ws0">attribute <span class="_ _3"></span>is <span class="_ _9"></span>a <span class="_ _3"></span>1</div><div class="t m0 x199 h49 y5c48 ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 x1e h49 y5c47 ff19 fs26 fc0 sc0 ls0 ws0">byte <span class="_ _3"></span>tag <span class="_ _9"></span>describing <span class="_ _3"></span>the <span class="_ _9"></span>type <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>attribute, <span class="_ _9"></span>followed <span class="_ _3"></span>by <span class="_ _9"></span>the</div><div class="t m0 x11a h49 y5c49 ff19 fs26 fc0 sc0 ls0 ws0">length <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>attribute <span class="_ _2"></span>name <span class="_ _3"></span>stored in <span class="_ _2"></span>binary <span class="_ _3"></span>as <span class="_ _2"></span>a <span class="_ _2"></span>2</div><div class="t m0 x155 h49 y5c4a ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 x158 h49 y5c49 ff19 fs26 fc0 sc0 ls0 ws0">byte <span class="_ _2"></span>integer<span class="_ _6"></span><span class="ls17b3">,f<span class="_ _d"></span><span class="ls0">ollowed <span class="_ _2"></span>by</span></span></div><div class="t m0 x11a h49 y5c4b ff19 fs26 fc0 sc0 ls0 ws0">the name, the size of the attribute value, and ﬁnally the value itself.</div><div class="t m0 x11a h49 y5c4c ff19 fs26 fc0 sc0 ls0 ws0">IPP <span class="_ _45"> </span>makes <span class="_ _45"> </span>no <span class="_ _45"> </span>attempt <span class="_ _45"> </span>to <span class="_ _45"> </span>control <span class="_ _45"> </span>the <span class="_ _45"> </span>alignment <span class="_ _45"> </span>of <span class="_ _45"> </span>the <span class="_ _45"> </span>binary <span class="_ _45"> </span>integers</div><div class="t m0 x11a h49 y5c4d ff19 fs26 fc0 sc0 ls0 ws0">embedded <span class="_ _3"></span>in <span class="_ _9"></span>the <span class="_ _3"></span>header<span class="_ _1"></span><span class="ls17b4">.S<span class="_ _62"></span><span class="ls0">ome <span class="_ _9"></span>processor <span class="_ _3"></span>architectur<span class="_ _0"></span>es, <span class="_ _3"></span>such <span class="_ _9"></span>as <span class="_ _3"></span>the <span class="_ _9"></span>SP<span class="_ _6"></span>ARC,</span></span></div><div class="t m0 x11a h49 y5c4e ff19 fs26 fc0 sc0 ls0 ws0">can’t <span class="_ _23"> </span>load <span class="_ _42"> </span>an <span class="_ _42"> </span>integer <span class="_ _23"> </span>from <span class="_ _42"> </span>an <span class="_ _23"> </span>arbitrary <span class="_ _42"> </span>address. <span class="_ _35"> </span>This<span class="_ _35"> </span>means <span class="_ _42"> </span>that <span class="_ _42"> </span>we <span class="_ _23"> </span>can’t</div><div class="t m0 x11a h4d y5c4f ff19 fs26 fc0 sc0 ls0 ws0">stor<span class="lsd40">et<span class="_ _5b"></span><span class="ls0">he <span class="_"> </span>integers <span class="_"> </span>in <span class="_"> </span>the <span class="_"> </span>header <span class="_ _e"> </span>by <span class="_"> </span>casting <span class="_"> </span>a <span class="_ _e"> </span>pointer <span class="_"> </span>to<span class="_ _59"> </span><span class="ff1a">int16_t<span class="_ _59"> </span></span>to <span class="_"> </span>the</span></span></div><div class="t m0 x11a h49 y5c50 ff19 fs26 fc0 sc0 ls0 ws0">address <span class="_ _2"></span>in <span class="_ _3"></span>the <span class="_ _3"></span>header <span class="_ _9"></span>wher<span class="lsc23">et<span class="_ _b"></span><span class="ls0">he <span class="_ _3"></span>integer <span class="_ _3"></span>is <span class="_ _3"></span>to <span class="_ _9"></span>be <span class="_ _3"></span>stored. <span class="_ _66"> </span>Instead,<span class="_ _45"> </span>we <span class="_ _2"></span>need <span class="_ _3"></span>to</span></span></div><div class="t m0 x11a h4d y5c51 ff19 fs26 fc0 sc0 ls0 ws0">copy <span class="_ _45"> </span>the <span class="_ _47"> </span>integer <span class="_ _45"> </span>1 <span class="_ _45"> </span>byte <span class="_ _47"> </span>at <span class="_ _45"> </span>a <span class="_ _45"> </span>time.<span class="_ _5f"> </span>This <span class="_ _45"> </span>is <span class="_ _45"> </span>why <span class="_ _47"> </span>we <span class="_ _45"> </span>deﬁne <span class="_ _45"> </span>the<span class="_ _16"> </span><span class="ff1a">union</span></div><div class="t m0 x11a h49 y5c52 ff19 fs26 fc0 sc0 ls0 ws0">containing a 16</div><div class="t m0 x6b h49 y5c53 ff19 fs26 fc0 sc0 ls0 ws0">-</div><div class="t m0 x1d2 h49 y5c52 ff19 fs26 fc0 sc0 ls0 ws0">bit integer and 2 bytes.</div><div class="t m0 x32 h49 y5c54 ff19 fs26 fc0 sc0 ls0 ws0">[594 <span class="_ _a"></span>– <span class="_ _a"></span>607]<span class="_ _65"> </span><span class="ls164">We <span class="_ _53"> </span>s<span class="_ _9"></span></span>tor<span class="lsd09">et<span class="_ _d"></span><span class="ls0">he tag in the header and convert the length of the attribute name to</span></span></div><div class="t m0 x11a h49 y5c55 ff19 fs26 fc0 sc0 ls0 ws0">network byte <span class="_ _2"></span>order<span class="_ _6"></span><span class="ls17b5">.W<span class="_ _26"></span><span class="ls17b6">ec<span class="_ _d"></span><span class="ls0">opy <span class="_ _2"></span>the length <span class="_ _2"></span>1 <span class="_ _2"></span>byte <span class="_ _2"></span>at <span class="_ _2"></span>a <span class="_ _2"></span>time <span class="_ _2"></span>to <span class="_ _2"></span>the header<span class="_ _1"></span><span class="ls17b7">.T<span class="_ _5b"></span><span class="ls0">hen</span></span></span></span></span></div><div class="t m0 x11a h49 y5c56 ff19 fs26 fc0 sc0 ls0 ws0">we <span class="_ _23"></span>copy <span class="_ _23"></span>the <span class="_ _23"></span>attribute <span class="_ _23"></span>name.<span class="_ _51"> </span><span class="ls164">We <span class="_ _47"> </span>r<span class="_ _3"></span></span>epeat <span class="_ _23"> </span>this <span class="_ _23"> </span>process <span class="_ _23"></span>for <span class="_ _23"></span>the <span class="_ _23"></span>attribute <span class="_ _23"></span>value</div><div class="t m0 x11a h49 y5c57 ff19 fs26 fc0 sc0 ls0 ws0">and <span class="_"> </span>r<span class="_ _0"></span>eturn <span class="_ _e"> </span>the <span class="_"> </span>address <span class="_ _e"> </span>in <span class="_"> </span>the <span class="_ _e"> </span>header <span class="_"> </span>wher<span class="_ _0"></span><span class="ls17b8">et<span class="_ _4a"></span><span class="ls0">he <span class="_"> </span>next <span class="_"> </span>part <span class="_ _e"> </span>of <span class="_"> </span>the <span class="_ _e"> </span>header</span></span></div><div class="t m0 x11a h49 y5c58 ff19 fs26 fc0 sc0 ls0 ws0">should begin.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
