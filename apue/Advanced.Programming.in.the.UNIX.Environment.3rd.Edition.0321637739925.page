<div id="pf39d" class="pf w4 h1f" data-page-no="39d"><div class="pc pc39d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg39d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Appendix <span class="_"> </span>A<span class="_ _293"> </span>Function <span class="_"> </span>Pr<span class="_ _1"></span>ototypes<span class="_ _1b"> </span><span class="ff18">891</span></div><div class="t m0 x32 h52 y2a3 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vdprintf</span>(int<span class="_"> </span><span class="ff1b">fd</span><span class="lsf5a">,c<span class="_ _55"></span><span class="ls0">onst char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,v<span class="_ _4a"></span><span class="ls0">a_list<span class="_"> </span><span class="ff1b">arg</span>);</span></span></span></span></div><div class="t m0 x36 h52 y5cfc ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 161</span></div><div class="t m0 x36 h52 y5d5e ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h51 y5d3f ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters output if OK, negative</div><div class="t m0 x136 h51 y5d40 ff19 fs2a fc0 sc0 ls0 ws0">value if output error</div><div class="t m0 x32 h52 y5ecf ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vfprintf</span>(FILE *restrict<span class="_"> </span><span class="ff1b">fp</span><span class="lsf5a">,c<span class="_ _55"></span><span class="ls0">onst char *restrict<span class="_"> </span><span class="ff1b">format</span>,</span></span></div><div class="t m0 x4 h52 y5d5f ff1a fs2a fc0 sc0 ls0 ws0">va_list<span class="_"> </span><span class="ff1b">arg</span>);</div><div class="t m0 x36 h52 y5d60 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 161</span></div><div class="t m0 x36 h52 y5d61 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h51 y5ee6 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters output if OK, negative</div><div class="t m0 x136 h51 y5ee7 ff19 fs2a fc0 sc0 ls0 ws0">value if output error</div><div class="t m0 x32 h52 y5d9e ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vfscanf</span>(FILE *restrict<span class="_"> </span><span class="ff1b">fp</span><span class="lsf5a">,c<span class="_ _55"></span><span class="ls0">onst char *restrict<span class="_"> </span><span class="ff1b">format</span>,</span></span></div><div class="t m0 x1ca h52 y5d49 ff1a fs2a fc0 sc0 ls0 ws0">va_list<span class="_"> </span><span class="ff1b">arg</span>);</div><div class="t m0 x36 h52 y5d4a ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 163</span></div><div class="t m0 x36 h52 y5e5d ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h52 y5e28 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of input items assigned,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>if input error</div><div class="t m0 x136 h51 y5edb ff19 fs2a fc0 sc0 ls0 ws0">or end of ﬁle befor<span class="lse9">ea<span class="_ _5"></span><span class="ls0">ny conversion</span></span></div><div class="t m0 x32 h52 y5e6c ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vprintf</span>(const char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,v<span class="_ _55"></span><span class="ls0">a_list<span class="_"> </span><span class="ff1b">arg</span>);</span></span></div><div class="t m0 x36 h52 y5f14 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 161</span></div><div class="t m0 x36 h52 y5f27 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h51 y5f42 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters output if OK, negative</div><div class="t m0 x136 h51 y5ee9 ff19 fs2a fc0 sc0 ls0 ws0">value if output error</div><div class="t m0 x32 h52 y5da5 ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vscanf</span>(const char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,v<span class="_ _55"></span><span class="ls0">a_list<span class="_"> </span><span class="ff1b">arg</span>);</span></span></div><div class="t m0 x36 h52 y5da6 ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 163</span></div><div class="t m0 x36 h52 y5eea ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h52 y5d0e ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of input items assigned,<span class="_"> </span><span class="ff1a">EOF<span class="_ _53"> </span></span>if input error</div><div class="t m0 x136 h51 y5d0f ff19 fs2a fc0 sc0 ls0 ws0">or end of ﬁle befor<span class="lse9">ea<span class="_ _5"></span><span class="ls0">ny conversion</span></span></div><div class="t m0 x32 h52 y5f3e ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vsnprintf</span>(char *restrict<span class="_"> </span><span class="ff1b">buf</span><span class="lsf5a">,s<span class="_ _55"></span><span class="ls0">ize_t<span class="_"> </span><span class="ff1b">n</span>,</span></span></div><div class="t m0 x14e h52 y5ec9 ff1a fs2a fc0 sc0 ls0 ws0">const char *restrict<span class="_"> </span><span class="ff1b">format</span><span class="lsf5a">,v<span class="_ _4a"></span><span class="ls0">a_list<span class="_"> </span><span class="ff1b">arg</span>);</span></span></div><div class="t m0 x36 h52 y5eca ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 161</span></div><div class="t m0 x36 h52 y5deb ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h51 y5e13 ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters that would have been stored</div><div class="t m0 x136 h51 y5e38 ff19 fs2a fc0 sc0 ls0 ws0">in array if buffer was lar<span class="_ _0"></span>ge enough, negative value</div><div class="t m0 x136 h51 y5e39 ff19 fs2a fc0 sc0 ls0 ws0">if encoding error</div><div class="t m0 x32 h52 y5ecd ff1a fs2a fc0 sc0 ls0 ws0">int<span class="_ _1eb"> </span><span class="ff1f">vsprintf</span>(char *restrict<span class="_"> </span><span class="ff1b">buf</span><span class="lsf5a">,c<span class="_ _55"></span><span class="ls0">onst char *restrict<span class="_"> </span><span class="ff1b">format</span>,</span></span></div><div class="t m0 x4 h52 y5db2 ff1a fs2a fc0 sc0 ls0 ws0">va_list<span class="_"> </span><span class="ff1b">arg</span>);</div><div class="t m0 x36 h52 y5d5b ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdarg.h&gt;<span class="_ _1c0"> </span><span class="ff19">p. 161</span></div><div class="t m0 x36 h52 y5d3b ff1a fs2a fc0 sc0 ls0 ws0">&lt;stdio.h&gt;</div><div class="t m0 x36 h51 y5d3c ff19 fs2a fc0 sc0 ls0 ws0">Returns: number of characters stored in array if OK, negative</div><div class="t m0 x136 h51 y5d3d ff19 fs2a fc0 sc0 ls0 ws0">value if encoding error</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
