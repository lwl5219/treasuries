<div id="pf1e3" class="pf w4 h1f" data-page-no="1e3"><div class="pc pc1e3 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1e3.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.6<span class="_ _293"> </span>Thread</div><div class="t m0 xd3 h24 y37ae ff19 fs0 fc0 sc0 ls0 ws0">-</div><div class="t m0 xd4 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Speciﬁc <span class="_"> </span>Data<span class="_ _1b"> </span><span class="ff18">449</span></div><div class="t m0 x3f h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x3f h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">thread_init(void)</div><div class="t m0 x3f h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x21b h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">err = pthread_key_create(&amp;key, destructor);</div><div class="t m0 x3f h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x3f h57 y124c ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x3f h57 y124d ff1a fs2d fc0 sc0 ls0 ws0">threadfunc(void *arg)</div><div class="t m0 x3f h57 y124e ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x21b h57 y124f ff1a fs2d fc0 sc0 ls0 ws0">pthread_once(&amp;init_done, thread_init);</div><div class="t m0 x21b h57 y1250 ff1a fs2d fc0 sc0 ls0 ws0">.</div><div class="t m0 x21b h57 y37f1 ff1a fs2d fc0 sc0 ls0 ws0">.</div><div class="t m0 x21b h57 y37f2 ff1a fs2d fc0 sc0 ls0 ws0">.</div><div class="t m0 x3f h57 y37f3 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x3f h2a y37f4 ff19 fsf fc0 sc0 ls0 ws0">Once <span class="_ _3"></span>a <span class="_ _3"></span>key <span class="_ _3"></span>is <span class="_ _9"></span>created, <span class="_ _2"></span>we <span class="_ _9"></span>can <span class="_ _3"></span>associate <span class="_ _3"></span>thread-speciﬁc <span class="_ _3"></span>data <span class="_ _3"></span>with <span class="_ _3"></span>the <span class="_ _9"></span>key <span class="_ _3"></span>by <span class="_ _3"></span>calling</div><div class="t m0 x32 h26 y37f5 ff1a fsf fc0 sc0 ls0 ws0">pthread_setspecific<span class="ff19 lseff">.W<span class="_ _5d"></span><span class="ls462">ec<span class="_ _43"></span><span class="ls0">an <span class="_ _42"> </span>obtain <span class="_ _23"> </span>the <span class="_ _42"> </span>address <span class="_ _23"></span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>thread-speciﬁc <span class="_ _23"> </span>data <span class="_ _42"> </span>with</span></span></span></div><div class="t m0 x32 h26 y37f6 ff1a fsf fc0 sc0 ls0 ws0">pthread_getspecific<span class="ff19">.</span></div><div class="t m0 x3f h57 y37f7 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y37f8 ff1a fs2d fc0 sc0 ls0 ws0">void *pthread_getspecific(pthread_key_t<span class="_"> </span><span class="ff1b">key</span>);</div><div class="t m0 x5c h57 y37f9 ff19 fs2d fc0 sc0 ls0 ws0">Returns: thread-speciﬁc data value or<span class="_"> </span><span class="ff1a">NULL<span class="_ _e"> </span></span>if no value</div><div class="t m0 x1a8 h5f y37fa ff19 fs2d fc0 sc0 ls0 ws0">has been associated with the key</div><div class="t m0 x3f h57 y37fb ff1a fs2d fc0 sc0 ls0 ws0">int pthread_setspecific(pthread_key_t<span class="_"> </span><span class="ff1b">key</span><span class="ls15c">,c<span class="_ _1d"></span><span class="ls0">onst void *<span class="ff1b">value</span>);</span></span></div><div class="t m0 x78 h5f y37fc ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK, error number on failur<span class="_ _0"></span>e</div><div class="t m0 x32 h4d y37fd ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _2"></span>no <span class="_ _3"></span>thread-speciﬁc <span class="_ _2"></span>data <span class="_ _3"></span>has <span class="_ _3"></span>been <span class="_ _2"></span>associated <span class="_ _3"></span>with <span class="_ _3"></span>a <span class="_ _3"></span>key<span class="_ _4"></span>,<span class="_ _47"> </span><span class="ff1a">pthread_getspecific<span class="_ _47"> </span></span>will</div><div class="t m0 x32 h49 y37fe ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turn <span class="_ _2"></span>a null pointer<span class="_ _1"></span><span class="lsf00">.W<span class="_ _26"></span><span class="ls901">ec<span class="_ _d"></span><span class="ls0">an <span class="_ _2"></span>use this return value to <span class="_ _2"></span>determine whether we <span class="_ _2"></span>need to call</span></span></span></span></div><div class="t m0 x32 h4d y37ff ff1a fs26 fc0 sc0 ls0 ws0">pthread_setspecific<span class="ff19">.</span></div><div class="t m0 x35 h4c y3800 ff16 fs26 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h4d y3801 ff19 fs26 fc0 sc0 ls0 ws0">In <span class="_ _42"> </span>Figur<span class="lsf01">e1<span class="_ _c"></span><span class="ls0">2.1<span class="_ _1"></span>1, <span class="_ _53"> </span>we <span class="_ _53"> </span>showed <span class="_ _42"> </span>a <span class="_ _53"> </span>hypothetical <span class="_ _42"> </span>implementation <span class="_ _53"> </span>of<span class="_ _44"> </span><span class="ff1a">getenv</span><span class="lsf02">.W<span class="_ _49"></span><span class="lsf03">ec<span class="_ _43"></span><span class="ls0">ame <span class="_ _42"> </span>up</span></span></span></span></span></div><div class="t m0 x32 h49 y3802 ff19 fs26 fc0 sc0 ls0 ws0">with <span class="_ _47"> </span>a <span class="_ _47"> </span>new <span class="_ _47"> </span>interface <span class="_ _45"> </span>to <span class="_ _47"> </span>provide <span class="_ _66"> </span>the <span class="_ _47"> </span>same <span class="_ _45"> </span>functionality<span class="_ _4"></span><span class="lse97">,b<span class="_ _1d"></span><span class="ls0">ut <span class="_ _47"> </span>in <span class="_ _47"> </span>a <span class="_ _45"> </span>thr<span class="_ _0"></span>ead-safe <span class="_ _47"> </span>way</span></span></div><div class="t m0 x32 h49 y3803 ff19 fs26 fc0 sc0 ls0 ws0">(Figur<span class="lse7c">e1<span class="_ _4f"></span><span class="ls0">2.12). <span class="_"> </span>But<span class="_"> </span>what <span class="_ _2"></span>would happen if we <span class="_ _2"></span>couldn’t modify our application <span class="_ _2"></span>programs</span></span></div><div class="t m0 x32 h49 y3804 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _9"></span>use <span class="_ _9"></span>the <span class="_ _9"></span>new <span class="_ _9"></span>interface?<span class="_ _16"> </span>In <span class="_ _9"></span>that <span class="_ _9"></span>case, <span class="_ _9"></span>we <span class="_ _9"></span>could <span class="_ _9"></span>use <span class="_ _9"></span>thread-speciﬁc <span class="_ _9"></span>data <span class="_ _9"></span>to <span class="_ _9"></span>maintain <span class="_ _9"></span>a</div><div class="t m0 x32 h49 y3805 ff19 fs26 fc0 sc0 ls0 ws0">per-thr<span class="_ _0"></span>ead <span class="_ _53"> </span>copy <span class="_ _53"> </span>of <span class="_ _53"> </span>the <span class="_ _e"> </span>data <span class="_ _53"> </span>buffer <span class="_ _53"> </span>used <span class="_ _53"> </span>to <span class="_ _e"> </span>hold <span class="_ _53"> </span>the <span class="_ _53"> </span>return <span class="_ _53"> </span>string.<span class="_ _65"> </span>This <span class="_ _53"> </span>is <span class="_ _e"> </span>shown <span class="_ _53"> </span>in</div><div class="t m0 x32 h49 y3806 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lsd3">e1<span class="_ _4f"></span><span class="ls0">2.13.</span></span></div><div class="t m0 x32 h5d y3807 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;limits.h&gt;</div><div class="t m0 x32 h5d y3808 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;string.h&gt;</div><div class="t m0 x32 h5d y3809 ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x32 h5d y380a ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;stdlib.h&gt;</div><div class="t m0 x32 h5d y380b ff1a fs2f fc0 sc0 ls0 ws0">#define MAXSTRINGSZ 4096</div><div class="t m0 x32 h5d y380c ff1a fs2f fc0 sc0 ls0 ws0">static pthread_key_t key;</div><div class="t m0 x32 h5d y380d ff1a fs2f fc0 sc0 ls0 ws0">static pthread_once_t init_done = PTHREAD_ONCE_INIT;</div><div class="t m0 x32 h5d y380e ff1a fs2f fc0 sc0 ls0 ws0">pthread_mutex_t env_mutex = PTHREAD_MUTEX_INITIALIZER;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
