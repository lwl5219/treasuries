<div id="pf1c8" class="pf w4 h1f" data-page-no="1c8"><div class="pc pc1c8 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1c8.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">422<span class="_ _1b"> </span><span class="ff19">Threads <span class="_ _24b"> </span>Chapter<span class="_ _78"> </span><span class="ls7ed">11</span></span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">This <span class="_ _3"></span>example <span class="_ _3"></span>shows <span class="_ _3"></span>the <span class="_ _3"></span>use <span class="_ _3"></span>of <span class="_ _3"></span>a <span class="_ _3"></span>barrier <span class="_ _3"></span>in <span class="_ _3"></span>a <span class="_ _3"></span>simpliﬁed <span class="_ _3"></span>situation <span class="_ _9"></span>wher<span class="lse54">et<span class="_ _b"></span><span class="ls0">he <span class="_ _3"></span>threads</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">perform <span class="_ _42"> </span>only <span class="_ _42"> </span>one <span class="_ _42"> </span>task.<span class="_ _51"> </span>In <span class="_ _42"> </span>mor<span class="lse55">er<span class="_ _c"></span><span class="ls0">ealistic <span class="_ _42"> </span>situations, <span class="_ _42"> </span>the <span class="_ _42"> </span>worker <span class="_ _42"> </span>threads <span class="_ _42"> </span>will <span class="_ _42"> </span>continue</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">with other activities after the call to<span class="_"> </span><span class="ff1a">pthread_barrier_wait<span class="_ _80"> </span></span><span class="ls45">re<span class="_ _2"></span></span>turns.</div><div class="t m0 x3f h2a y132 ff19 fsf fc0 sc0 ls0 ws0">In <span class="_ _2"></span>the <span class="_ _2"></span>example, <span class="_ _2"></span>we <span class="_ _3"></span>use <span class="_ _2"></span>eight <span class="_ _2"></span>threads <span class="_ _2"></span>to <span class="_ _2"></span>divide <span class="_ _2"></span>the <span class="_ _3"></span>job <span class="_ _2"></span>of <span class="_ _2"></span>sorting <span class="_ _3"></span>8 <span class="_ _2"></span>million <span class="_ _2"></span>numbers.</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">Each <span class="_ _2"></span>thread <span class="_ _2"></span>sorts <span class="_ _2"></span>1 <span class="_ _3"></span>million <span class="_ _2"></span>numbers <span class="_ _3"></span>using <span class="_ _2"></span>the <span class="_ _2"></span>heapsort <span class="_ _3"></span>algorithm <span class="_ _2"></span>(see <span class="_ _3"></span>Knuth</div><div class="t m0 xd1 h2a y18af ff19 fsf fc0 sc0 ls0 ws0">[</div><div class="t m0 xd6 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">1998</div><div class="t m0 x162 h2a y18af ff19 fsf fc0 sc0 ls0 ws0">]</div><div class="t m0 x192 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">for</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">details). <span class="_"> </span>Then<span class="_"> </span>the main thread calls a function to mer<span class="_ _0"></span>ge the r<span class="_ _0"></span>esults.</div><div class="t m0 x3f h26 y135 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _80"> </span>d<span class="_ _9"></span><span class="ls0">on’t <span class="_ _9"></span>need <span class="_ _3"></span>to <span class="_ _3"></span>use <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1a">PTHREAD_BARRIER_SERIAL_THREAD<span class="_ _45"> </span></span><span class="ls45">re</span>turn <span class="_ _3"></span>value <span class="_ _3"></span>from</span></div><div class="t m0 x32 h26 y136 ff1a fsf fc0 sc0 ls0 ws0">pthread_barrier_wait<span class="_ _45"> </span><span class="ff19">to <span class="_ _23"></span>decide <span class="_ _9"></span>which <span class="_ _23"></span>thread <span class="_ _9"></span>merges <span class="_ _9"></span>the <span class="_ _23"></span>r<span class="_ _0"></span>esults, <span class="_ _9"></span>because <span class="_ _23"> </span>we <span class="_ _23"></span>use</span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">the main thread for this <span class="_ _2"></span>task.<span class="_ _46"> </span>That is <span class="_ _2"></span>why we specify <span class="_ _2"></span>the barrier <span class="_ _2"></span>count as one <span class="_ _2"></span>mor<span class="ls57c">et<span class="_ _4f"></span><span class="ls0">han</span></span></div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">the number of worker threads; the main thr<span class="_ _0"></span>ead counts as one waiter<span class="_ _6"></span>.</div><div class="t m0 x3f h2a y139 ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _3"></span>we <span class="_ _3"></span>write <span class="_ _3"></span>a <span class="_ _3"></span>program <span class="_ _2"></span>to <span class="_ _3"></span>sort <span class="_ _3"></span>8 <span class="_ _3"></span>million <span class="_ _3"></span>numbers <span class="_ _3"></span>with <span class="_ _3"></span>heapsort <span class="_ _3"></span>using <span class="_ _3"></span>1 <span class="_ _3"></span>thread <span class="_ _2"></span>only<span class="_ _6"></span>,</div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">we <span class="_ _35"> </span>will <span class="_ _35"> </span>see <span class="_ _35"> </span>a <span class="_ _35"> </span>performance <span class="_ _35"> </span>improvement <span class="_ _35"> </span>when <span class="_ _35"> </span>comparing <span class="_ _35"> </span>it <span class="_ _35"> </span>to <span class="_ _35"> </span>the <span class="_ _35"> </span>pr<span class="_ _0"></span>ogram <span class="_ _35"> </span>in</div><div class="t m0 x32 h2a y254 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="lse56">e1<span class="_ _55"></span><span class="ls0">1.16. <span class="_ _35"> </span>On<span class="_ _35"> </span><span class="lse56">as<span class="_ _43"></span><span class="ls0">ystem <span class="_ _23"> </span>with <span class="_ _23"> </span>8 <span class="_ _23"> </span>cores, <span class="_ _23"></span>the <span class="_ _23"></span>single-threaded <span class="_ _9"></span>program <span class="_ _23"></span>sorted <span class="_ _23"></span>8 <span class="_ _23"></span>million</span></span></span></span></div><div class="t m0 x32 h2a y255 ff19 fsf fc0 sc0 ls0 ws0">numbers in <span class="_ _2"></span>12.14 <span class="_ _2"></span>seconds.<span class="_ _46"> </span>On <span class="_ _2"></span>the same <span class="_ _2"></span>system, <span class="_ _2"></span>using 8 <span class="_ _2"></span>threads in <span class="_ _2"></span>parallel <span class="_ _2"></span>and 1 <span class="_ _2"></span>thread</div><div class="t m0 x32 h2a y13b ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _23"></span>merge <span class="_ _23"></span>the <span class="_ _23"></span>results, <span class="_ _9"></span>the <span class="_ _42"> </span>same <span class="_ _23"></span>set <span class="_ _23"></span>of <span class="_ _23"> </span>8 <span class="_ _23"> </span>million <span class="_ _23"> </span>numbers <span class="_ _23"> </span>was <span class="_ _42"> </span>sorted <span class="_ _23"></span>in <span class="_ _23"></span>1.91 <span class="_ _23"> </span>seconds, <span class="_ _23"> </span>6</div><div class="t m0 x32 h2a y13c ff19 fsf fc0 sc0 ls0 ws0">times faster<span class="_ _6"></span>.</div><div class="t m0 x35 h4b y3521 ff16 fs27 fc0 sc0 ls0 ws0">11.7 <span class="_ _93"> </span>Summary</div><div class="t m0 x32 h49 y3334 ff19 fs26 fc0 sc0 ls0 ws0">In <span class="_ _47"> </span>this <span class="_ _47"> </span>chapter<span class="_ _1"></span>,<span class="_ _16"> </span>we<span class="_ _16"> </span>introduced <span class="_ _47"> </span>the <span class="_ _47"> </span>concept <span class="_ _45"> </span>of <span class="_ _47"> </span>threads <span class="_ _47"> </span>and <span class="_ _47"> </span>discussed <span class="_ _47"> </span>the <span class="_ _45"> </span>POSIX.1</div><div class="t m0 x32 h49 y3335 ff19 fs26 fc0 sc0 ls0 ws0">primitives <span class="_ _53"> </span>available <span class="_ _53"> </span>to <span class="_ _53"> </span>create <span class="_ _42"> </span>and <span class="_ _e"> </span>destroy <span class="_ _42"> </span>them.<span class="_ _65"> </span><span class="ls164">We <span class="_ _35"> </span>a<span class="_ _9"></span></span>lso <span class="_ _53"> </span>introduced <span class="_ _42"> </span>the <span class="_ _e"> </span>problem <span class="_ _42"> </span>of</div><div class="t m0 x32 h49 y3336 ff19 fs26 fc0 sc0 ls0 ws0">thread <span class="_ _141"> </span>synchr<span class="_ _0"></span>onization. <span class="_ _9b"> </span>W<span class="_ _6"></span><span class="lse57">ed<span class="_ _259"></span><span class="ls0">iscussed <span class="_ _141"> </span>ﬁve <span class="_ _141"> </span>fundamental <span class="_ _288"> </span>synchronization</span></span></div><div class="t m0 x32 h49 y3337 ff19 fs26 fc0 sc0 ls0 ws0">mechanisms <span class="_ _a"></span>— <span class="_ _a"></span>mutexes,<span class="_ _60"> </span><span class="lscc">re<span class="_ _2"></span></span>ader–writer <span class="_ _46"> </span>locks, <span class="_ _46"> </span>condition <span class="_ _59"> </span>variables, <span class="_ _46"> </span>spin <span class="_ _46"> </span>locks, <span class="_ _46"> </span>and</div><div class="t m0 x32 h49 y3338 ff19 fs26 fc0 sc0 ls0 ws0">barriers <span class="_ _a"></span>— <span class="_ _a"></span>and<span class="_"> </span>we saw how to use them to protect shared r<span class="_ _0"></span>esources.</div><div class="t m0 x32 h4b y3522 ff16 fs27 fc0 sc0 ls0 ws0">Exer<span class="_ _0"></span>cises</div><div class="t m0 x32 h7c y3523 ff18 fs28 fc0 sc0 lse58 ws0">11<span class="_ _2"></span><span class="ls0">.1<span class="_ _6e"> </span><span class="ff19">Modify <span class="_ _9"></span>the <span class="_ _9"></span>example <span class="_ _9"></span>code <span class="_ _9"></span>shown <span class="_ _9"></span>in <span class="_ _9"></span>Figur<span class="lse59">e1<span class="_ _b"></span><span class="ls0">1.4 <span class="_ _3"></span>to <span class="_ _9"></span>pass <span class="_ _9"></span>the <span class="_ _9"></span>structur<span class="lse5a">eb<span class="_ _b"></span><span class="ls0">etween <span class="_ _9"></span>the <span class="_ _9"></span>threads</span></span></span></span></span></span></div><div class="t m0 xe1 h7c y3524 ff19 fs28 fc0 sc0 ls0 ws0">properly<span class="_ _4"></span>.</div><div class="t m0 x32 h7c y3525 ff18 fs28 fc0 sc0 lse58 ws0">11<span class="_ _2"></span><span class="ls0">.2<span class="_ _6e"> </span><span class="ff19">In <span class="_ _42"> </span>the <span class="_ _42"> </span>example <span class="_ _42"> </span>code <span class="_ _42"> </span>shown <span class="_ _42"> </span>in <span class="_ _42"> </span>Figur<span class="lse5b">e1<span class="_ _c"></span><span class="ls0">1.14, <span class="_ _42"> </span>what <span class="_ _23"> </span>additional <span class="_ _42"> </span>synchronization <span class="_ _42"> </span>(if <span class="_ _42"> </span>any) <span class="_ _42"> </span>is</span></span></span></span></div><div class="t m0 xe1 h7c y3526 ff19 fs28 fc0 sc0 ls0 ws0">necessary <span class="_ _23"></span>to <span class="_ _9"></span>allow <span class="_ _23"> </span>the <span class="_ _23"> </span>master <span class="_ _9"></span>thread <span class="_ _23"> </span>to <span class="_ _9"></span>change <span class="_ _23"> </span>the <span class="_ _23"> </span>thread <span class="_ _9"></span>ID <span class="_ _23"> </span>associated <span class="_ _23"></span>with <span class="_ _9"></span>a <span class="_ _23"> </span>pending</div><div class="t m0 xe1 h4e y3527 ff19 fs28 fc0 sc0 ls0 ws0">job? <span class="_"> </span>How<span class="_"> </span>would this affect the<span class="_"> </span><span class="ff1a">job_remove<span class="_ _e"> </span></span>function?</div><div class="t m0 x32 h7c y3528 ff18 fs28 fc0 sc0 lse58 ws0">11<span class="_ _2"></span><span class="ls0">.3<span class="_ _6e"> </span><span class="ff19">Apply <span class="_ _23"> </span>the <span class="_ _23"> </span>techniques <span class="_ _23"> </span>shown <span class="_ _23"> </span>in <span class="_ _23"> </span>Figur<span class="lse5c">e1<span class="_ _43"></span><span class="ls0">1.15 <span class="_ _23"> </span>to <span class="_ _23"> </span>the <span class="_ _23"> </span>worker <span class="_ _23"> </span>thread <span class="_ _23"></span>example <span class="_ _23"></span>(Figur<span class="_ _0"></span>es <span class="_ _23"> </span>1<span class="_ _1"></span>1.1</span></span></span></span></div><div class="t m0 xe1 h7c y3529 ff19 fs28 fc0 sc0 ls0 ws0">and <span class="_ _35"> </span>1<span class="_ _1"></span>1.14) <span class="_ _44"> </span>to <span class="_ _35"> </span>implement <span class="_ _35"> </span>the <span class="_ _35"> </span>worker <span class="_ _44"> </span>thread <span class="_ _35"> </span>function.<span class="_ _5f"> </span>Don’t <span class="_ _35"> </span>forget <span class="_ _35"> </span>to <span class="_ _44"> </span>update <span class="_ _35"> </span>the</div><div class="t m0 xe1 h4e y352a ff1a fs28 fc0 sc0 ls0 ws0">queue_init<span class="_ _e"> </span><span class="ff19">function to initialize the condition variable and change the<span class="_"> </span></span>job_insert<span class="_ _80"> </span><span class="ff19">and</span></div><div class="t m0 xe1 h4e y352b ff1a fs28 fc0 sc0 ls0 ws0">job_append<span class="_ _e"> </span><span class="ff19">functions to signal the worker threads. <span class="_"> </span>What<span class="_"> </span>difﬁculties arise?</span></div><div class="t m0 x32 h7c y352c ff18 fs28 fc0 sc0 lse58 ws0">11<span class="_ _2"></span><span class="ls0">.4<span class="_ _6e"> </span><span class="ff19">Which sequence of steps is correct?</span></span></div><div class="t m0 x1c h4e y352d ff19 fs28 fc0 sc0 ls0 ws0">1. Lock a mutex (<span class="ff1a">pthread_mutex_lock</span>).</div><div class="t m0 x1c h7c y352e ff19 fs28 fc0 sc0 ls0 ws0">2. Change the condition protected by the mutex.</div><div class="t m0 x1c h4e y352f ff19 fs28 fc0 sc0 ls0 ws0">3. Signal threads waiting on the condition (<span class="ff1a">pthread_cond_broadcast</span>).</div><div class="t m0 x1c h4e y3530 ff19 fs28 fc0 sc0 ls0 ws0">4. Unlock the mutex (<span class="ff1a">pthread_mutex_unlock</span>).</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:772.610992px;width:90.804695px;height:19.679016px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
