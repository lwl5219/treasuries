<div id="pf10c" class="pf w4 h1f" data-page-no="10c"><div class="pc pc10c w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg10c.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">234<span class="_ _1b"> </span><span class="ff19">Process <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _222"> </span>Chapter<span class="_ _4b"> </span>8</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">Some <span class="_ _9"></span>operating <span class="_ _23"></span>systems <span class="_ _23"></span>combine <span class="_ _9"></span>the <span class="_ _23"></span>operations <span class="_ _9"></span>from <span class="_ _9"></span>step <span class="_ _23"> </span>2<span class="_ _9"></span><span class="ls9d">—a<span class="_ _66"> </span></span><span class="ff1a">fork<span class="_ _35"> </span></span>followed <span class="_ _9"></span>by <span class="_ _23"></span>an</div><div class="t m0 x32 h26 y130 ff1a fsf fc0 sc0 ls0 ws0">exec<span class="_ _9"></span><span class="ff19 ls9d">—i<span class="_ _6"></span><span class="ls0">nto <span class="_ _9"></span>a <span class="_ _3"></span>single <span class="_ _9"></span>operation <span class="_ _9"></span>called <span class="_ _3"></span>a<span class="_ _45"> </span><span class="ff1b">spawn</span><span class="ls952">.T<span class="_ _62"></span><span class="ls0">he <span class="_ _9"></span>UNIX <span class="_ _3"></span>System <span class="_ _9"></span>separates <span class="_ _9"></span>the <span class="_ _3"></span>two, <span class="_ _9"></span>as</span></span></span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">ther<span class="ls953">ea<span class="_ _55"></span><span class="ls45">re <span class="_"> </span>n<span class="ls0">umerous <span class="_ _53"> </span>cases <span class="_ _53"> </span>where<span class="_ _4b"> </span>it<span class="_ _44"> </span>is<span class="_ _4b"> </span>useful <span class="_ _e"> </span>to<span class="_ _4b"> </span><span class="ff1a">fork<span class="_ _44"> </span></span>without <span class="_ _e"> </span>doing <span class="_ _53"> </span>an<span class="_ _4b"> </span><span class="ff1a">exec</span><span class="ls954">.A<span class="_ _52"></span><span class="ls0">lso,</span></span></span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">separating <span class="_"> </span>the <span class="_ _e"> </span>two <span class="_"> </span>operations <span class="_"> </span>allows <span class="_"> </span>the <span class="_ _e"> </span>child <span class="_"> </span>to <span class="_"> </span>change <span class="_ _e"> </span>the <span class="_"> </span>per-pr<span class="_ _0"></span>ocess <span class="_"> </span>attributes</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">between <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">fork<span class="_ _35"> </span></span>and <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">exec</span><span class="ls955">,s<span class="_ _43"></span><span class="ls0">uch <span class="_ _42"> </span>as <span class="_ _23"></span>I/O <span class="_ _23"></span>redir<span class="_ _0"></span>ection, <span class="_ _23"> </span>user <span class="_ _23"> </span>ID, <span class="_ _23"> </span>signal <span class="_ _42"> </span>disposition,</span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">and so on.<span class="_ _59"> </span><span class="ls5f">We<span class="_ _23"></span></span>’ll see numerous examples of this in Chapter 15.</div><div class="t m0 x76 h52 y736 ff19 fs2a fc0 sc0 ls0 ws0">The Single <span class="_ _2"></span>UNIX <span class="_ _2"></span>Speciﬁcation <span class="_ _2"></span>does <span class="_ _2"></span>include<span class="_ _e"> </span><span class="ff1a">spawn<span class="_ _80"> </span></span>interfaces <span class="_ _2"></span>in <span class="_ _2"></span>the <span class="_ _2"></span>advanced real-time <span class="_ _2"></span>option</div><div class="t m0 x76 h52 ybc5 ff19 fs2a fc0 sc0 ls0 ws0">group. <span class="_ _47"> </span>These<span class="_ _45"> </span>interfaces <span class="_ _23"> </span>ar<span class="ls956">en<span class="_ _b"></span><span class="ls0">ot <span class="_ _23"> </span>intended <span class="_ _42"> </span>to <span class="_ _23"> </span>be <span class="_ _23"> </span>replacements <span class="_ _23"> </span>for<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">exec</span><span class="ls957">,h<span class="_ _b"></span><span class="ls0">owever<span class="_ _1"></span>.</span></span></span></span></div><div class="t m0 x76 h52 ybc6 ff19 fs2a fc0 sc0 ls0 ws0">They <span class="_"> </span>ar<span class="ls958">ei<span class="_ _c"></span><span class="ls0">ntended <span class="_"> </span>to <span class="_"> </span>support <span class="_"> </span>systems <span class="_"> </span>that <span class="_ _e"> </span>have <span class="_"> </span>difﬁculty <span class="_"> </span>implementing<span class="_ _44"> </span><span class="ff1a">fork<span class="_ _35"> </span></span>efﬁciently<span class="_ _6"></span>,</span></span></div><div class="t m0 x76 h51 y1f1c ff19 fs2a fc0 sc0 ls0 ws0">especially systems without hardwar<span class="_ _0"></span><span class="lse9">es<span class="_ _84"></span><span class="ls0">upport for memory management.</span></span></div><div class="t m0 x35 h75 y1f1d ff16 fs2b fc0 sc0 ls0 ws0">8.4<span class="_ _72"> </span><span class="ff1f">vfork<span class="_ _54"> </span></span>Function</div><div class="t m0 x32 h26 y1c44 ff19 fsf fc0 sc0 ls0 ws0">The function<span class="_ _66"> </span><span class="ff1a">vfork<span class="_ _47"> </span></span>has the <span class="_ _2"></span>same <span class="_ _2"></span>calling sequence <span class="_ _2"></span>and <span class="_ _2"></span>same <span class="_ _2"></span>return values as<span class="_ _47"> </span><span class="ff1a">fork</span><span class="ls959">,b<span class="_ _4f"></span><span class="ls0">ut</span></span></div><div class="t m0 x32 h2a y1f1e ff19 fsf fc0 sc0 ls0 ws0">the semantics of the two functions differ<span class="_ _6"></span>.</div><div class="t m0 x76 h52 y1f1f ff19 fs2a fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">vfork<span class="_ _80"> </span></span>function originated <span class="_ _2"></span>with <span class="_ _2"></span>2.9BSD.<span class="_ _44"> </span>Some <span class="_ _2"></span>consider <span class="_ _2"></span>the function <span class="_ _2"></span>a <span class="_ _2"></span>blemish, <span class="_ _2"></span>but all <span class="_ _2"></span>the</div><div class="t m0 x76 h51 y1f20 ff19 fs2a fc0 sc0 ls0 ws0">platforms <span class="_ _23"> </span>covered <span class="_ _9"></span>in <span class="_ _23"> </span>this <span class="_ _23"> </span>book <span class="_ _9"> </span>support <span class="_ _23"> </span>it.<span class="_ _46"> </span>In <span class="_ _23"> </span>fact, <span class="_ _23"> </span>the <span class="_ _23"> </span>BSD <span class="_ _23"> </span>developers <span class="_ _23"> </span>removed <span class="_ _9"></span>it <span class="_ _23"> </span>from <span class="_ _9"></span>the</div><div class="t m0 x76 h51 y1f21 ff19 fs2a fc0 sc0 ls0 ws0">4.4BSD <span class="_"> </span>r<span class="_ _0"></span>elease, <span class="_"> </span>but <span class="_"> </span>all <span class="_ _42"> </span>the <span class="_"> </span>open <span class="_"> </span>sour<span class="_ _0"></span>ce <span class="_"> </span>BSD <span class="_ _42"> </span>distributions <span class="_"> </span>that <span class="_"> </span>derive <span class="_"> </span>fr<span class="_ _0"></span>om <span class="_"> </span>4.4BSD <span class="_ _42"> </span>added</div><div class="t m0 x76 h52 y1f22 ff19 fs2a fc0 sc0 ls0 ws0">support for <span class="_ _2"></span>it <span class="_ _2"></span>back <span class="_ _2"></span>into <span class="_ _2"></span>their <span class="_ _2"></span>own releases. <span class="_ _e"> </span>The<span class="_ _80"> </span><span class="ff1a">vfork<span class="_ _80"> </span></span>function was <span class="_ _2"></span>marked <span class="_ _2"></span>as <span class="_ _2"></span>an <span class="_ _2"></span>obsolescent</div><div class="t m0 x76 h51 y1f23 ff19 fs2a fc0 sc0 ls0 ws0">interface <span class="_ _2"></span>in <span class="_ _3"></span>V<span class="_ _6"></span>ersion <span class="_ _2"></span>3 <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _3"></span>Single <span class="_ _2"></span>UNIX <span class="_ _3"></span>Speciﬁcation <span class="_ _3"></span>and <span class="_ _2"></span>was <span class="_ _3"></span>removed <span class="_ _2"></span>entirely <span class="_ _2"></span>in <span class="_ _2"></span>V<span class="_ _6"></span>ersion <span class="_ _3"></span>4.</div><div class="t m0 x76 h51 y1f24 ff19 fs2a fc0 sc0 lsed ws0">We <span class="_"> </span>i<span class="_ _9"></span><span class="ls0">nclude it her<span class="lse9">ef<span class="_ _5"></span><span class="ls0">or historical reasons only<span class="_ _6"></span><span class="ls10f">.P<span class="_ _43"></span><span class="ls0">ortable applications should not use it.</span></span></span></span></span></div><div class="t m0 x3f h26 y1f25 ff19 fsf fc0 sc0 ls0 ws0">The<span class="_ _46"> </span><span class="ff1a">vfork<span class="_ _61"> </span></span>function <span class="_"> </span>was <span class="_ _47"> </span>intended <span class="_"> </span>to <span class="_ _66"> </span>create <span class="_"> </span>a <span class="_ _66"> </span>new <span class="_ _66"> </span>process <span class="_"> </span>for <span class="_ _47"> </span>the <span class="_"> </span>purpose <span class="_ _66"> </span>of</div><div class="t m0 x32 h2a y1f26 ff19 fsf fc0 sc0 ls0 ws0">executing <span class="_ _53"> </span>a <span class="_ _e"> </span>new <span class="_ _e"> </span>program <span class="_ _53"> </span>(step <span class="_ _e"> </span>2 <span class="_ _e"> </span>at <span class="_ _e"> </span>the <span class="_ _53"> </span>end <span class="_ _e"> </span>of <span class="_ _e"> </span>the <span class="_ _e"> </span>previous <span class="_ _53"> </span>section), <span class="_ _e"> </span>similar <span class="_ _e"> </span>to <span class="_ _53"> </span>the</div><div class="t m0 x32 h26 y1f27 ff19 fsf fc0 sc0 ls0 ws0">method <span class="_ _9"></span>used <span class="_ _23"></span>by <span class="_ _9"></span>the <span class="_ _9"></span>bare-bones <span class="_ _9"></span>shell <span class="_ _23"></span>from <span class="_ _3"></span>Figur<span class="ls95a">e1<span class="_ _b"></span><span class="ls0">.7. <span class="_ _45"> </span>The<span class="_ _45"> </span><span class="ff1a">vfork<span class="_ _45"> </span></span>function <span class="_ _23"></span>creates <span class="_ _3"></span>the</span></span></div><div class="t m0 x32 h26 y1f28 ff19 fsf fc0 sc0 ls0 ws0">new <span class="_ _23"></span>process, <span class="_ _9"></span>just <span class="_ _23"></span>like<span class="_ _35"> </span><span class="ff1a">fork</span><span class="ls95b">,w<span class="_ _43"></span><span class="ls0">ithout <span class="_ _23"></span>copying <span class="_ _23"></span>the <span class="_ _23"></span>address <span class="_ _9"></span>space <span class="_ _23"></span>of <span class="_ _23"></span>the <span class="_ _23"></span>par<span class="_ _0"></span>ent <span class="_ _23"></span>into <span class="_ _9"></span>the</span></span></div><div class="t m0 x32 h26 y1f29 ff19 fsf fc0 sc0 ls0 ws0">child, <span class="_ _23"></span>as <span class="_ _23"> </span>the <span class="_ _23"> </span>child <span class="_ _23"> </span>won’t <span class="_ _42"> </span>refer<span class="_ _0"></span>ence <span class="_ _23"></span>that <span class="_ _23"></span>address <span class="_ _23"></span>space; <span class="_ _23"></span>the <span class="_ _23"> </span>child <span class="_ _23"> </span>simply <span class="_ _23"> </span>calls<span class="_ _35"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>(or</div><div class="t m0 x32 h26 y1f2a ff1a fsf fc0 sc0 ls0 ws0">exit<span class="ff19 ls95c">)r<span class="_ _b"></span><span class="ls0">ight <span class="_ _9"></span>after <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">vfork</span><span class="ls95d">.I<span class="_ _62"></span><span class="ls0">nstead, <span class="_ _9"></span>the <span class="_ _3"></span>child <span class="_ _9"></span>runs <span class="_ _3"></span>in <span class="_ _9"></span>the <span class="_ _9"></span>address <span class="_ _2"></span>space <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>parent</span></span></span></span></div><div class="t m0 x32 h26 y1f2b ff19 fsf fc0 sc0 ls0 ws0">until <span class="_ _45"> </span>it <span class="_ _35"> </span>calls <span class="_ _35"> </span>either<span class="_ _5a"> </span><span class="ff1a">exec<span class="_ _51"> </span></span>or<span class="_ _51"> </span><span class="ff1a">exit</span><span class="ls95e">.T<span class="_ _4d"></span><span class="ls0">his <span class="_ _35"> </span>optimization <span class="_ _45"> </span>is <span class="_ _35"> </span>mor<span class="ls95f">ee<span class="_ _7"></span><span class="ls45">fﬁ<span class="ls0">cient <span class="_ _35"> </span>on <span class="_ _35"> </span>some</span></span></span></span></span></div><div class="t m0 x32 h2a y1f2c ff19 fsf fc0 sc0 ls0 ws0">implementations <span class="_ _47"> </span>of <span class="_ _45"> </span>the <span class="_ _47"> </span>UNIX <span class="_ _45"> </span>System, <span class="_ _47"> </span>but <span class="_ _45"> </span>leads <span class="_ _47"> </span>to <span class="_ _45"> </span>undeﬁned <span class="_ _47"> </span>results <span class="_ _47"> </span>if <span class="_ _45"> </span>the <span class="_ _47"> </span>child</div><div class="t m0 x32 h26 y1f2d ff19 fsf fc0 sc0 ls0 ws0">modiﬁes <span class="_ _e"> </span>any <span class="_"> </span>data <span class="_ _e"> </span>(except <span class="_ _e"> </span>the <span class="_"> </span>variable <span class="_ _e"> </span>used <span class="_ _e"> </span>to <span class="_"> </span>hold <span class="_ _e"> </span>the <span class="_"> </span>r<span class="_ _1"></span>eturn <span class="_"> </span>value <span class="_ _e"> </span>from<span class="_ _4b"> </span><span class="ff1a">vfork</span>),</div><div class="t m0 x32 h26 y1f2e ff19 fsf fc0 sc0 ls0 ws0">makes function calls, or returns without calling<span class="_"> </span><span class="ff1a">exec<span class="_ _80"> </span></span>or<span class="_"> </span><span class="ff1a">exit</span><span class="ls960">.(<span class="_ _4a"></span><span class="ls0">As we mentioned in the</span></span></div><div class="t m0 x32 h2a y1f2f ff19 fsf fc0 sc0 ls0 ws0">previous <span class="_"> </span>section, <span class="_ _e"> </span>implementations <span class="_"> </span>use <span class="_"> </span>copy-on-write <span class="_"> </span>to <span class="_"> </span>impr<span class="_ _0"></span>ove <span class="_"> </span>the <span class="_"> </span>ef<span class="_ _0"></span>ﬁciency <span class="_"> </span>of <span class="_"> </span>a</div><div class="t m0 x32 h26 y1f30 ff1a fsf fc0 sc0 ls0 ws0">fork<span class="_ _80"> </span><span class="ff19">followed by an<span class="_"> </span></span>exec<span class="ff19 ls44">,b<span class="_ _5"></span><span class="ls0">ut no copying is still faster than some copying.)</span></span></div><div class="t m0 x3f h26 y1f31 ff19 fsf fc0 sc0 ls0 ws0">Another <span class="_ _53"> </span>differ<span class="_ _0"></span>ence <span class="_ _42"> </span>between <span class="_ _53"> </span>the <span class="_ _e"> </span>two <span class="_ _53"> </span>functions <span class="_ _53"> </span>is <span class="_ _53"> </span>that<span class="_ _44"> </span><span class="ff1a">vfork<span class="_ _4b"> </span></span>guarantees <span class="_ _53"> </span>that <span class="_ _53"> </span>the</div><div class="t m0 x32 h26 y1f32 ff19 fsf fc0 sc0 ls0 ws0">child <span class="_ _3"></span>runs <span class="_ _3"></span>ﬁrst, <span class="_ _3"></span>until <span class="_ _3"></span>the <span class="_ _9"></span>child <span class="_ _3"></span>calls<span class="_ _47"> </span><span class="ff1a">exec<span class="_ _45"> </span></span>or<span class="_ _47"> </span><span class="ff1a">exit</span><span class="ls961">.W<span class="_ _1d"></span><span class="ls0">hen <span class="_ _3"></span>the <span class="_ _3"></span>child <span class="_ _3"></span>calls <span class="_ _9"></span>either <span class="_ _3"></span>of <span class="_ _3"></span>these</span></span></div><div class="t m0 x32 h2a y1f33 ff19 fsf fc0 sc0 ls0 ws0">functions, <span class="_"> </span>the <span class="_"> </span>parent <span class="_"> </span>r<span class="_ _1"></span>esumes. <span class="_ _46"> </span>(This<span class="_ _46"> </span>can <span class="_"> </span>lead <span class="_"> </span>to <span class="_"> </span>deadlock <span class="_"> </span>if <span class="_"> </span>the <span class="_"> </span>child <span class="_"> </span>depends <span class="_"> </span>on</div><div class="t m0 x32 h2a y1f34 ff19 fsf fc0 sc0 ls0 ws0">further actions of the parent befor<span class="_ _0"></span><span class="ls44">ec<span class="_ _d"></span><span class="ls0">alling either of these two functions.)</span></span></div><div class="t m0 x35 h27 y1f35 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y1f36 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _2"></span>program <span class="_ _2"></span>in <span class="_ _3"></span>Figur<span class="ls962">e8<span class="_ _8"></span><span class="ls0">.3 <span class="_ _2"></span>is <span class="_ _3"></span>a <span class="_ _3"></span>modiﬁed <span class="_ _2"></span>version <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _3"></span>program <span class="_ _2"></span>from <span class="_ _2"></span>Figur<span class="ls963">e8<span class="_ _8"></span><span class="ls0">.1. <span class="_ _47"> </span>W<span class="_ _6"></span>e’ve</span></span></span></span></div><div class="t m0 x32 h26 y1f37 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">placed <span class="_ _e"> </span>the <span class="_ _e"> </span>call <span class="_ _e"> </span>to<span class="_ _59"> </span><span class="ff1a">fork<span class="_ _4b"> </span></span>with<span class="_ _4b"> </span><span class="ff1a">vfork<span class="_ _4b"> </span></span>and <span class="_"> </span>r<span class="_ _1"></span>emoved <span class="_"> </span>the<span class="_ _44"> </span><span class="ff1a">write<span class="_ _59"> </span></span>to <span class="_ _53"> </span>standar<span class="ls964">do<span class="_ _55"></span><span class="ls0">utput.</span></span></span></div><div class="t m0 x32 h26 y1f38 ff19 fsf fc0 sc0 ls0 ws0">Also, <span class="_ _2"></span>we <span class="_ _3"></span>don’t <span class="_ _3"></span>need <span class="_ _2"></span>to <span class="_ _3"></span>have <span class="_ _3"></span>the <span class="_ _2"></span>parent <span class="_ _3"></span>call<span class="_ _66"> </span><span class="ff1a">sleep</span>,<span class="_ _47"> </span>as<span class="_ _47"> </span>we’r<span class="ls77">eg<span class="_ _8"></span><span class="ls0">uaranteed <span class="_ _3"></span>that <span class="_ _3"></span>it <span class="_ _2"></span>is <span class="_ _3"></span>put <span class="_ _3"></span>to</span></span></div><div class="t m0 x32 h26 y1f39 ff19 fsf fc0 sc0 ls0 ws0">sleep by the kernel until the child calls either<span class="_"> </span><span class="ff1a">exec<span class="_ _80"> </span></span>or<span class="_"> </span><span class="ff1a">exit</span>.</div><a class="l" href="#pff" data-dest-detail='[15,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892201px;bottom:932.208941px;width:129.335907px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
