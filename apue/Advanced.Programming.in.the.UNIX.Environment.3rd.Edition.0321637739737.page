<div id="pf2e1" class="pf w4 h1f" data-page-no="2e1"><div class="pc pc2e1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2e1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>18.1<span class="_ _1"></span><span class="ls150d">1N<span class="_ _111"></span><span class="ls0">oncanonical <span class="_"> </span>Mode<span class="_ _1b"> </span><span class="ff18">703</span></span></span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">Whenever <span class="_ _23"></span>a <span class="_ _9"></span>program <span class="_ _23"></span>that <span class="_ _9"></span>calls<span class="_ _35"> </span><span class="ff1a">getpass<span class="_ _45"> </span></span>is <span class="_ _23"> </span>done <span class="_ _23"></span>with <span class="_ _23"></span>the <span class="_ _9"></span>cleartext <span class="_ _23"> </span>password, <span class="_ _9"></span>the</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">program should zero<span class="_"> </span>it<span class="_"> </span>out in memory<span class="_ _4"></span><span class="ls150e">,j<span class="_ _d"></span><span class="ls0">ust <span class="_ _2"></span>to be safe.<span class="_ _46"> </span>If the <span class="_ _2"></span>program wer<span class="_ _0"></span>e<span class="_"> </span>to<span class="_"> </span>generate a</span></span></div><div class="t m0 x32 h26 y131 ff1a fsf fc0 sc0 ls0 ws0">core<span class="_ _66"> </span><span class="ff19">ﬁle <span class="_ _3"></span>that <span class="_ _2"></span>others <span class="_ _3"></span>might <span class="_ _2"></span>be <span class="_ _2"></span>able <span class="_ _3"></span>to <span class="_ _2"></span>read <span class="_ _2"></span>or <span class="_ _3"></span>if <span class="_ _2"></span>some <span class="_ _2"></span>other <span class="_ _3"></span>process <span class="_ _2"></span>wer<span class="ls70b">es<span class="_ _8"></span><span class="ls0">omehow <span class="_ _2"></span>able</span></span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">to <span class="_ _2"></span>read our <span class="_ _3"></span>memory<span class="_ _4"></span><span class="ls150f">,t<span class="_ _4f"></span><span class="ls0">hey <span class="_ _3"></span>might <span class="_ _2"></span>be <span class="_ _2"></span>able <span class="_ _2"></span>to <span class="_ _3"></span>read the <span class="_ _2"></span>cleartext <span class="_ _3"></span>password. <span class="_"> </span>(By<span class="_ _47"> </span><span class="ls124">‘‘<span class="_ _2"></span></span>cleartext,’<span class="_ _0"></span>’</span></span></div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">we <span class="_ _9"></span>mean <span class="_ _9"></span>the <span class="_ _23"></span>passwor<span class="ls781">dt<span class="_ _b"></span><span class="ls0">hat <span class="_ _3"></span>we <span class="_ _23"></span>type <span class="_ _9"></span>at <span class="_ _9"></span>the <span class="_ _23"></span>prompt <span class="_ _9"></span>that <span class="_ _9"></span>is <span class="_ _9"></span>printed <span class="_ _23"></span>by<span class="_ _45"> </span><span class="ff1a">getpass</span><span class="ls123e">.M<span class="_ _26"></span><span class="ls0">ost</span></span></span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">UNIX <span class="_ _35"> </span>system <span class="_ _44"> </span>programs <span class="_ _35"> </span>then <span class="_ _35"> </span>modify <span class="_ _35"> </span>this <span class="_ _44"> </span>cleartext <span class="_ _35"> </span>password, <span class="_ _35"> </span>turning <span class="_ _44"> </span>it <span class="_ _35"> </span>into <span class="_ _35"> </span>an</div><div class="t m0 x32 h26 y135 ff19 fsf fc0 sc0 ls124 ws0">‘‘<span class="_ _2"></span><span class="ls0">encrypted’<span class="_ _0"></span><span class="ls679">’p<span class="_ _55"></span><span class="ls0">assword. <span class="_ _4b"> </span>The<span class="_ _4b"> </span><span class="ff1a">pw_passwd<span class="_ _4b"> </span></span>ﬁeld <span class="_"> </span>in <span class="_ _53"> </span>the <span class="_ _e"> </span>passwor<span class="ls679">dﬁ<span class="_ _55"></span><span class="ls0">le <span class="_ _53"> </span>(Section <span class="_"> </span>6.2), <span class="_ _53"> </span>for</span></span></span></span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">example, contains the encrypted password, not the cleartext passwor<span class="_ _0"></span>d.)</div><div class="t m0 x35 h4b y518d ff16 fs27 fc0 sc0 ls0 ws0">18.11 <span class="_ _66"> </span>Noncanonical<span class="_ _54"> </span>Mode</div><div class="t m0 x32 h4d y518e ff19 fs26 fc0 sc0 ls0 ws0">Noncanonical <span class="_ _2"></span>mode <span class="_ _3"></span>is <span class="_ _2"></span>speciﬁed <span class="_ _3"></span>by <span class="_ _2"></span>turning <span class="_ _3"></span>of<span class="lsa58">ft<span class="_ _8"></span><span class="ls0">he<span class="_ _47"> </span><span class="ff1a">ICANON<span class="_ _47"> </span></span>ﬂag <span class="_ _2"></span>in <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">c_lflag<span class="_ _66"> </span></span>ﬁeld <span class="_ _3"></span>of</span></span></div><div class="t m0 x32 h4d y518f ff19 fs26 fc0 sc0 ls0 ws0">the<span class="_ _44"> </span><span class="ff1a">termios<span class="_ _44"> </span></span>structure. <span class="_ _44"> </span>In<span class="_ _44"> </span>noncanonical <span class="_ _42"> </span>mode, <span class="_ _53"> </span>the <span class="_ _53"> </span>input <span class="_ _53"> </span>data <span class="_ _42"> </span>is <span class="_ _53"> </span>not <span class="_ _53"> </span>assembled <span class="_ _42"> </span>into</div><div class="t m0 x32 h49 y5190 ff19 fs26 fc0 sc0 ls0 ws0">lines. <span class="_ _45"> </span>The<span class="_ _35"> </span>following <span class="_ _9"></span>special <span class="_ _23"> </span>characters <span class="_ _23"></span>(Section <span class="_ _9"></span>18.3) <span class="_ _23"> </span>ar<span class="ls1510">en<span class="_ _43"></span><span class="ls0">ot <span class="_ _23"> </span>processed: <span class="_ _9"></span>ERASE, <span class="_ _23"></span>KILL,</span></span></div><div class="t m0 x32 h49 y5191 ff19 fs26 fc0 sc0 ls0 ws0">EOF<span class="_ _6"></span><span class="lsd3">,N<span class="_ _d"></span><span class="ls0">L, EOL, EOL2, CR, REPRINT<span class="_ _1"></span><span class="lsd3">,S<span class="_ _d"></span><span class="ls2d0">TAT<span class="_ _9"></span><span class="ls0">US, and WERASE.</span></span></span></span></span></div><div class="t m0 x3f h49 y5192 ff19 fs26 fc0 sc0 ls0 ws0">As <span class="_ _23"> </span>we <span class="_ _42"> </span>said, <span class="_ _42"> </span>understanding <span class="_ _23"> </span>canonical <span class="_ _42"> </span>mode <span class="_ _42"> </span>is <span class="_ _23"> </span>easy: <span class="_ _42"> </span>the <span class="_ _42"> </span>system <span class="_ _23"> </span>returns <span class="_ _23"> </span>up <span class="_ _42"> </span>to <span class="_ _42"> </span>one</div><div class="t m0 x32 h49 y5193 ff19 fs26 fc0 sc0 ls0 ws0">line <span class="_ _2"></span>at <span class="_ _2"></span>a <span class="_ _2"></span>time.<span class="_ _61"> </span>But <span class="_ _2"></span>with <span class="_ _2"></span>noncanonical <span class="_ _2"></span>mode, <span class="_ _2"></span>how <span class="_ _2"></span>does <span class="_ _2"></span>the <span class="_ _2"></span>system <span class="_ _3"></span>know <span class="_ _2"></span>when <span class="_ _2"></span>to <span class="_ _2"></span>return</div><div class="t m0 x32 h49 y5194 ff19 fs26 fc0 sc0 ls0 ws0">data <span class="_ _53"> </span>to <span class="_ _53"> </span>us?<span class="_ _65"> </span>If <span class="_ _e"> </span>it <span class="_ _53"> </span>returned <span class="_ _53"> </span>one <span class="_ _53"> </span>byte <span class="_ _53"> </span>at <span class="_ _e"> </span>a <span class="_ _53"> </span>time, <span class="_ _53"> </span>overhead <span class="_ _53"> </span>would <span class="_ _53"> </span>be <span class="_ _e"> </span>excessive.<span class="_ _65"> </span>(Recall</div><div class="t m0 x32 h49 y5195 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="ls1511">e3<span class="_ _43"></span><span class="ls0">.6, <span class="_ _23"></span>which <span class="_ _23"> </span>showed <span class="_ _42"> </span>the <span class="_ _42"> </span>overhead <span class="_ _23"></span>in <span class="_ _42"> </span>reading <span class="_ _23"></span>one <span class="_ _23"> </span>byte <span class="_ _42"> </span>at <span class="_ _42"> </span>a <span class="_ _23"> </span>time.<span class="_ _54"> </span>Each <span class="_ _23"> </span>time <span class="_ _42"> </span>we</span></span></div><div class="t m0 x32 h49 y5196 ff19 fs26 fc0 sc0 ls0 ws0">doubled the <span class="_ _2"></span>amount of <span class="_ _2"></span>data <span class="_ _2"></span>returned, we halved <span class="_ _2"></span>the <span class="_ _2"></span>system call <span class="_ _2"></span>overhead.) <span class="_"> </span>The<span class="_ _66"> </span>system</div><div class="t m0 x32 h49 y5197 ff19 fs26 fc0 sc0 ls0 ws0">can’t always <span class="_ _2"></span>return multiple bytes <span class="_ _2"></span>at <span class="_ _2"></span>a time, <span class="_ _2"></span>since <span class="_ _2"></span>sometimes we <span class="_ _2"></span>don’t <span class="_ _2"></span>know how <span class="_ _2"></span>much</div><div class="t m0 x32 h49 y5198 ff19 fs26 fc0 sc0 ls0 ws0">data to read until we start r<span class="_ _0"></span>eading it.</div><div class="t m0 x3f h49 y5199 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _9"></span>solution <span class="_ _9"></span>is <span class="_ _9"></span>to <span class="_ _23"></span>tell <span class="_ _9"></span>the <span class="_ _9"></span>system <span class="_ _9"></span>to <span class="_ _9"></span>return <span class="_ _9"></span>when <span class="_ _9"></span>either <span class="_ _9"></span>a <span class="_ _23"></span>speciﬁed <span class="_ _9"></span>amount <span class="_ _9"></span>of <span class="_ _9"></span>data</div><div class="t m0 x32 h49 y519a ff19 fs26 fc0 sc0 ls0 ws0">has <span class="_ _42"> </span>been <span class="_ _53"> </span>read <span class="_ _42"> </span>or <span class="_ _42"> </span>after <span class="_ _42"> </span>a <span class="_ _53"> </span>given <span class="_ _42"> </span>amount <span class="_ _53"> </span>of <span class="_ _42"> </span>time <span class="_ _53"> </span>has <span class="_ _42"> </span>passed.<span class="_ _65"> </span>This <span class="_ _42"> </span>technique <span class="_ _53"> </span>uses <span class="_ _42"> </span>two</div><div class="t m0 x32 h4d y519b ff19 fs26 fc0 sc0 ls0 ws0">variables <span class="_"> </span>in <span class="_ _e"> </span>the<span class="_ _59"> </span><span class="ff1a">c_cc<span class="_ _59"> </span></span>array <span class="_"> </span>in <span class="_ _e"> </span>the<span class="_ _59"> </span><span class="ff1a">termios<span class="_ _59"> </span></span>structure: <span class="_ _e"> </span>MIN <span class="_"> </span>and <span class="_ _e"> </span>TIME.<span class="_ _48"> </span>These <span class="_"> </span>two</div><div class="t m0 x32 h4d y519c ff19 fs26 fc0 sc0 ls0 ws0">elements of the array ar<span class="lsd3">ei<span class="_ _4f"></span><span class="ls0">ndexed by the names<span class="_"> </span><span class="ff1a">VMIN<span class="_ _66"> </span></span>and<span class="_"> </span><span class="ff1a">VTIME</span>.</span></span></div><div class="t m0 x3f h4d y519d ff19 fs26 fc0 sc0 ls0 ws0">MIN speciﬁes <span class="_ _2"></span>the <span class="_ _2"></span>minimum number <span class="_ _2"></span>of <span class="_ _2"></span>bytes befor<span class="ls409">ea</span><span class="ff1a">read<span class="_ _66"> </span></span><span class="lscc">re</span>turns. <span class="_ _47"> </span>TIME<span class="_"> </span>speciﬁes</div><div class="t m0 x32 h49 y519e ff19 fs26 fc0 sc0 ls0 ws0">the number of tenths of a second to wait for data to arrive.<span class="_ _59"> </span>Ther<span class="lsd3">ea<span class="_ _d"></span><span class="lscc">re <span class="_ _2"></span>f<span class="_ _2"></span><span class="ls0">our cases.</span></span></span></div><div class="t m0 x3f h49 y519f ff19 fs26 fc0 sc0 ls0 ws0">Case A:<span class="_ _59"> </span>MIN &gt; 0, TIME &gt; 0</div><div class="t m0 x52 h49 y51a0 ff19 fs26 fc0 sc0 ls0 ws0">TIME <span class="_ _e"> </span>speciﬁes <span class="_ _e"> </span>an <span class="_ _e"> </span>interbyte <span class="_ _e"> </span>timer <span class="_"> </span>that <span class="_ _53"> </span>is <span class="_ _e"> </span>started <span class="_ _e"> </span>only <span class="_"> </span>when <span class="_ _53"> </span>the <span class="_ _e"> </span>ﬁrst <span class="_ _e"> </span>byte <span class="_ _e"> </span>is</div><div class="t m0 x52 h4d y51a1 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">ceived. <span class="_ _47"> </span>If<span class="_"> </span>MIN <span class="_ _2"></span>bytes <span class="_ _2"></span>ar<span class="lsec3">er<span class="_ _8"></span><span class="ls0">eceived <span class="_ _3"></span>befor<span class="ls40a">et<span class="_ _8"></span><span class="ls0">he <span class="_ _2"></span>timer <span class="_ _2"></span>expires,<span class="_ _66"> </span><span class="ff1a">read<span class="_ _66"> </span></span><span class="lscc">re<span class="_ _2"></span></span>turns <span class="_ _2"></span>MIN</span></span></span></span></span></div><div class="t m0 x52 h4d y51a2 ff19 fs26 fc0 sc0 ls0 ws0">bytes. <span class="_ _4b"> </span>If<span class="_ _4b"> </span>the <span class="_ _e"> </span>timer <span class="_ _e"> </span>expires <span class="_ _53"> </span>befor<span class="ls6a3">eM<span class="_ _55"></span><span class="ls0">IN <span class="_ _e"> </span>bytes <span class="_ _e"> </span>ar<span class="ls6a3">er<span class="_ _4a"></span><span class="ls0">eceived,<span class="_ _4b"> </span><span class="ff1a">read<span class="_ _4b"> </span></span><span class="lscc">re<span class="_ _2"></span></span>turns <span class="_ _e"> </span>the</span></span></span></span></div><div class="t m0 x52 h49 y51a3 ff19 fs26 fc0 sc0 ls0 ws0">bytes <span class="_ _9"></span>received. <span class="_ _45"> </span>(At<span class="_ _35"> </span>least <span class="_ _9"></span>one <span class="_ _23"></span>byte <span class="_ _9"></span>is <span class="_ _23"> </span>returned <span class="_ _9"></span>if <span class="_ _23"></span>the <span class="_ _9"></span>timer <span class="_ _23"></span>expires, <span class="_ _9"></span>because <span class="_ _23"></span>the</div><div class="t m0 x52 h49 y51a4 ff19 fs26 fc0 sc0 ls0 ws0">timer <span class="_ _2"></span>is <span class="_ _2"></span>not <span class="_ _2"></span>started until <span class="_ _2"></span>the <span class="_ _2"></span>ﬁrst <span class="_ _2"></span>byte <span class="_ _2"></span>is <span class="_ _2"></span>received.) <span class="_ _66"> </span>In<span class="_ _47"> </span>this case, <span class="_ _2"></span>the <span class="_ _2"></span>caller <span class="_ _2"></span>blocks</div><div class="t m0 x52 h4d y51a5 ff19 fs26 fc0 sc0 ls0 ws0">until <span class="_ _3"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _3"></span>byte <span class="_ _3"></span>is <span class="_ _3"></span>received. <span class="_ _66"> </span>If<span class="_ _45"> </span>data <span class="_ _2"></span>is <span class="_ _3"></span>already <span class="_ _3"></span>available <span class="_ _3"></span>when<span class="_ _47"> </span><span class="ff1a">read<span class="_ _47"> </span></span>is <span class="_ _3"></span>called,</div><div class="t m0 x52 h4d y51a6 ff19 fs26 fc0 sc0 ls0 ws0">it is as if the data had been received immediately after the<span class="_"> </span><span class="ff1a">read</span>.</div><div class="t m0 x3f h49 y51a7 ff19 fs26 fc0 sc0 ls0 ws0">Case B:<span class="_ _59"> </span>MIN &gt; 0, TIME == 0</div><div class="t m0 x52 h4d y51a8 ff19 fs26 fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">read<span class="_ _66"> </span></span>does not <span class="_ _2"></span>return until MIN <span class="_ _2"></span>bytes have been <span class="_ _2"></span>received. <span class="_"> </span>This<span class="_"> </span>can <span class="_ _2"></span>cause a</div><div class="t m0 x52 h4d y51a9 ff1a fs26 fc0 sc0 ls0 ws0">read<span class="_ _80"> </span><span class="ff19">to block indeﬁnitely<span class="_ _6"></span>.</span></div><a class="l" href="#pf13" data-dest-detail='[19,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:946.490965px;width:152.687690px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
