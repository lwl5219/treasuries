<div id="pf3bb" class="pf w4 h1f" data-page-no="3bb"><div class="pc pc3bb w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3bb.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Appendix <span class="_"> </span>C<span class="_ _322"> </span>Chapter <span class="_"> </span>8<span class="_ _54"> </span>Solutions<span class="_ _1b"> </span><span class="ff18">921</span></div><div class="t m0 x215 h26 y12f ff19 fsf fc0 sc0 ls0 ws0">This <span class="_ _2"></span>assumes <span class="_ _3"></span>that <span class="_ _3"></span>the <span class="_ _2"></span>standar<span class="ls8d9">dI<span class="_ _8"></span><span class="ls0">/O <span class="_ _3"></span>stream<span class="_ _47"> </span><span class="ff1a">stdout<span class="_ _66"> </span></span>is <span class="_ _3"></span>closed <span class="_ _3"></span>when <span class="_ _3"></span>the <span class="_ _2"></span>child <span class="_ _3"></span>calls</span></span></div><div class="t m0 x215 h26 y130 ff1a fsf fc0 sc0 ls0 ws0">exit<span class="ff19 ls182b">,n<span class="_ _55"></span><span class="ls0">ot <span class="_ _e"> </span>the <span class="_ _53"> </span>ﬁle <span class="_ _53"> </span>descriptor<span class="_ _4b"> </span><span class="ff1a">STDOUT_FILENO</span><span class="ls213">.S<span class="_ _52"></span><span class="ls0">ome <span class="_ _53"> </span>versions <span class="_ _53"> </span>of <span class="_ _53"> </span>the <span class="_ _e"> </span>standard</span></span></span></span></div><div class="t m0 x215 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">I/O library close <span class="_ _2"></span>the ﬁle descriptor <span class="_ _2"></span>associated with standar<span class="lsc99">do<span class="_ _d"></span><span class="ls0">utput, which would</span></span></div><div class="t m0 x215 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">cause the<span class="_ _47"> </span><span class="ff1a">write<span class="_ _66"> </span></span>to <span class="_ _2"></span>standar<span class="ls182c">do<span class="_ _4f"></span><span class="ls0">utput to <span class="_ _2"></span>also <span class="_ _2"></span>fail.<span class="_ _61"> </span>In <span class="_ _2"></span>this <span class="_ _2"></span>case,<span class="_ _66"> </span><span class="ff1a">dup<span class="_ _66"> </span></span>standar<span class="lsec">do<span class="_ _4f"></span><span class="ls0">utput</span></span></span></span></div><div class="t m0 x215 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">to another descriptor<span class="_ _6"></span><span class="ls44">,a<span class="_ _5"></span><span class="ls0">nd use this new descriptor for the<span class="_"> </span><span class="ff1a">write</span>.</span></span></div><div class="t m0 x32 h2a y2914 ff18 fsf fc0 sc0 ls0 ws0">8.2<span class="_ _9b"> </span><span class="ff19">Consider Figur<span class="_ _1"></span><span class="ls44">eC<span class="_ _5"></span><span class="ls0">.8.</span></span></span></div><div class="t m0 x215 h4e y6109 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x215 h4e y610a ff1a fs28 fc0 sc0 ls0 ws0">static void f1(void), f2(void);</div><div class="t m0 x215 h4e y610b ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x215 h4e y610c ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x215 h4e y610d ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h4e y610e ff1a fs28 fc0 sc0 ls0 ws0">f1();</div><div class="t m0 xc4 h4e y610f ff1a fs28 fc0 sc0 ls0 ws0">f2();</div><div class="t m0 xc4 h4e y6110 ff1a fs28 fc0 sc0 ls0 ws0">_exit(0);</div><div class="t m0 x215 h4e y6111 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h4e y6112 ff1a fs28 fc0 sc0 ls0 ws0">static void</div><div class="t m0 x215 h4e y6113 ff1a fs28 fc0 sc0 ls0 ws0">f1(void)</div><div class="t m0 x215 h4e y6114 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h4e y6115 ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 xc4 h4e y6116 ff1a fs28 fc0 sc0 ls0 ws0">if ((pid = vfork()) &lt; 0)</div><div class="t m0 x206 h4e y6117 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;vfork error&quot;);</div><div class="t m0 xc4 h4e y6118 ff1a fs28 fc0 sc0 ls0 ws0">/* child and parent both return */</div><div class="t m0 x215 h4e y6119 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h4e y611a ff1a fs28 fc0 sc0 ls0 ws0">static void</div><div class="t m0 x215 h4e y611b ff1a fs28 fc0 sc0 ls0 ws0">f2(void)</div><div class="t m0 x215 h4e y611c ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h4e y611d ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>buf[1000];<span class="_ _88"> </span>/* automatic variables */</div><div class="t m0 xc4 h4e y611e ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>i;</div><div class="t m0 xc4 h4e y611f ff1a fs28 fc0 sc0 ls0 ws0">for (i = 0; i &lt; sizeof(buf); i++)</div><div class="t m0 x206 h4e y6120 ff1a fs28 fc0 sc0 ls0 ws0">buf[i] = 0;</div><div class="t m0 x215 h4e y6121 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x21f h4f y6122 ff18 fs11 fc0 sc0 ls0 ws0">Figure C.8<span class="_ _5a"> </span><span class="ff19">Incorrect use of<span class="_"> </span><span class="ff1a">vfork</span></span></div><div class="t m0 x215 h54 y6123 ff19 fs2c fc0 sc0 ls0 ws0">When<span class="_ _47"> </span><span class="ff1a">vfork<span class="_ _47"> </span></span>is <span class="_ _3"></span>called, <span class="_ _3"></span>the <span class="_ _2"></span>parent’s <span class="_ _3"></span>stack <span class="_ _3"></span>pointer <span class="_ _3"></span>points <span class="_ _3"></span>to <span class="_ _2"></span>the <span class="_ _3"></span>stack <span class="_ _3"></span>frame <span class="_ _3"></span>for <span class="_ _3"></span>the</div><div class="t m0 x215 h54 y6124 ff1a fs2c fc0 sc0 ls0 ws0">f1<span class="_ _45"> </span><span class="ff19">function <span class="_ _23"> </span>that <span class="_ _23"></span>calls<span class="_ _35"> </span></span>vfork<span class="ff19 ls182d">.F<span class="_ _7"></span><span class="ls0">igur<span class="ls182e">eC<span class="_ _b"></span><span class="ls0">.9 <span class="_ _9"></span>shows <span class="_ _23"></span>this.<span class="_ _5a"> </span><span class="ff1a">vfork<span class="_ _35"> </span></span>causes <span class="_ _23"></span>the <span class="_ _9"></span>child <span class="_ _23"> </span>to</span></span></span></span></div><div class="t m0 x215 h54 y6125 ff19 fs2c fc0 sc0 ls0 ws0">execute <span class="_ _2"></span>ﬁrst, <span class="_ _3"></span>and <span class="_ _3"></span>the <span class="_ _3"></span>child <span class="_ _3"></span>returns <span class="_ _2"></span>from<span class="_ _47"> </span><span class="ff1a">f1</span><span class="ls182f">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _3"></span>child <span class="_ _3"></span>then <span class="_ _3"></span>calls<span class="_ _47"> </span><span class="ff1a">f2</span><span class="ls1830">,a<span class="_ _8"></span><span class="ls0">nd <span class="_ _3"></span>its <span class="_ _3"></span>stack</span></span></span></span></div><div class="t m0 x215 h54 y6126 ff19 fs2c fc0 sc0 ls0 ws0">frame <span class="_ _23"> </span>overwrites <span class="_ _23"> </span>the <span class="_ _42"> </span>previous <span class="_ _9"></span>stack <span class="_ _42"> </span>frame <span class="_ _23"> </span>for<span class="_ _35"> </span><span class="ff1a">f1</span><span class="ls1831">.T<span class="_ _7"></span><span class="ls0">he <span class="_ _42"> </span>child <span class="_ _23"> </span>then <span class="_ _23"> </span>zeros <span class="_ _23"> </span>out <span class="_ _23"> </span>the</span></span></div><div class="t m0 x215 h54 y6127 ff19 fs2c fc0 sc0 ls0 ws0">automatic <span class="_ _53"> </span>variable<span class="_ _59"> </span><span class="ff1a">buf</span><span class="ls1832">,s<span class="_ _55"></span><span class="ls0">etting <span class="_ _e"> </span>1,000 <span class="_ _e"> </span>bytes <span class="_ _e"> </span>of <span class="_ _e"> </span>the <span class="_ _e"> </span>stack <span class="_ _e"> </span>frame <span class="_ _e"> </span>to <span class="_ _e"> </span>0.<span class="_ _65"> </span>The <span class="_"> </span>child</span></span></div><div class="t m0 x215 h54 y6128 ff19 fs2c fc0 sc0 ls150 ws0">re<span class="ls0">turns <span class="_ _23"> </span>from<span class="_ _45"> </span><span class="ff1a">f2<span class="_ _35"> </span></span>and <span class="_ _9"></span>then <span class="_ _23"></span>calls<span class="_ _45"> </span><span class="ff1a">_exit</span><span class="ls1833">,b<span class="_ _b"></span><span class="ls0">ut <span class="_ _23"></span>the <span class="_ _9"></span>contents <span class="_ _23"> </span>of <span class="_ _23"></span>the <span class="_ _9"></span>stack <span class="_ _23"> </span>beneath <span class="_ _23"></span>the</span></span></span></div><div class="t m0 x215 h54 y6129 ff19 fs2c fc0 sc0 ls0 ws0">stack <span class="_ _9"></span>frame <span class="_ _3"></span>for<span class="_ _45"> </span><span class="ff1a">main<span class="_ _45"> </span></span>have <span class="_ _9"></span>been <span class="_ _9"></span>changed.<span class="_ _16"> </span>The <span class="_ _9"></span>parent <span class="_ _3"></span>then <span class="_ _9"></span>resumes <span class="_ _9"></span>after <span class="_ _9"></span>the <span class="_ _3"></span>call</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
