<div id="pfce" class="pf w4 h1f" data-page-no="ce"><div class="pc pcce w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bgce.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">172<span class="_ _1b"> </span><span class="ff19">Standar<span class="ls30a">dI<span class="_ _55"></span><span class="ls0">/O <span class="_"> </span>Library<span class="_ _1c9"> </span>Chapter <span class="_"> </span>5</span></span></span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">append, <span class="_ _9"></span>the <span class="_ _23"> </span>current <span class="_ _9"></span>ﬁle <span class="_ _23"></span>position <span class="_ _23"></span>is <span class="_ _9"></span>set <span class="_ _23"></span>to <span class="_ _9"></span>the <span class="_ _23"> </span>ﬁrst <span class="_ _23"></span>null <span class="_ _9"></span>byte <span class="_ _23"> </span>in <span class="_ _23"></span>the <span class="_ _9"></span>buffer<span class="_ _6"></span><span class="ls73d">.I<span class="_ _26"></span><span class="ls73e">ft<span class="_ _b"></span><span class="ls0">he <span class="_ _23"></span>buffer</span></span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">contains <span class="_ _23"></span>no <span class="_ _9"></span>null <span class="_ _23"> </span>bytes, <span class="_ _23"></span>then <span class="_ _23"></span>the <span class="_ _9"></span>current <span class="_ _23"></span>position <span class="_ _9"></span>is <span class="_ _23"> </span>set <span class="_ _23"></span>to <span class="_ _23"></span>one <span class="_ _9"></span>byte <span class="_ _23"> </span>past <span class="_ _23"></span>the <span class="_ _23"></span>end <span class="_ _9"></span>of <span class="_ _23"> </span>the</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">buffer<span class="_ _6"></span><span class="ls73f">.W<span class="_ _64"></span><span class="ls0">hen <span class="_ _e"> </span>a <span class="_ _e"> </span>stream <span class="_ _e"> </span>is <span class="_ _e"> </span>not <span class="_"> </span>opened <span class="_ _53"> </span>for <span class="_"> </span>append, <span class="_ _53"> </span>the <span class="_"> </span>curr<span class="_ _0"></span>ent <span class="_ _e"> </span>position <span class="_ _e"> </span>is <span class="_"> </span>set <span class="_ _53"> </span>to <span class="_"> </span>the</span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">beginning <span class="_ _9"></span>of <span class="_ _23"> </span>the <span class="_ _23"></span>buffer<span class="_ _6"></span><span class="ls740">.B<span class="_ _26"></span><span class="ls0">ecause <span class="_ _23"></span>the <span class="_ _9"></span>append <span class="_ _23"></span>mode <span class="_ _23"></span>determines <span class="_ _9"></span>the <span class="_ _23"></span>end <span class="_ _23"></span>of <span class="_ _9"></span>the <span class="_ _23"> </span>data <span class="_ _23"></span>by</span></span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _42"> </span>ﬁrst <span class="_ _42"> </span>null <span class="_ _42"> </span>byte, <span class="_ _42"> </span>memory <span class="_ _53"> </span>streams <span class="_ _42"> </span>aren’t <span class="_ _23"> </span>well <span class="_ _42"> </span>suited <span class="_ _53"> </span>for <span class="_ _42"> </span>storing <span class="_ _42"> </span>binary <span class="_ _42"> </span>data <span class="_ _53"> </span>(which</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">might contain null bytes befor<span class="ls44">et<span class="_ _4f"></span><span class="ls0">he end of the data).</span></span></div><div class="t m0 x3f h2b y135 ff19 fsf fc0 sc0 ls0 ws0">Second, <span class="_ _9"></span>if <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1b">buf<span class="_ _45"> </span></span>ar<span class="_ _0"></span>gument <span class="_ _9"></span>is <span class="_ _9"></span>a <span class="_ _9"></span>null <span class="_ _9"></span>pointer<span class="_ _6"></span>,<span class="_ _45"> </span>it<span class="_ _45"> </span>makes <span class="_ _9"></span>no <span class="_ _9"></span>sense <span class="_ _9"></span>to <span class="_ _9"></span>open <span class="_ _9"></span>the <span class="_ _9"></span>stream</div><div class="t m0 x32 h26 y136 ff19 fsf fc0 sc0 ls0 ws0">for <span class="_ _9"></span>only <span class="_ _23"></span>reading <span class="_ _9"></span>or <span class="_ _23"></span>only <span class="_ _9"></span>writing.<span class="_ _51"> </span>Because <span class="_ _9"></span>the <span class="_ _23"></span>buf<span class="_ _0"></span>fer <span class="_ _9"></span>is <span class="_ _23"></span>allocated <span class="_ _23"></span>by<span class="_ _45"> </span><span class="ff1a">fmemopen<span class="_ _45"> </span></span>in <span class="_ _23"></span>this</div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">case, <span class="_ _2"></span>there<span class="_"> </span>is<span class="_ _47"> </span>no<span class="_ _66"> </span>way <span class="_ _2"></span>to <span class="_ _3"></span>ﬁnd <span class="_ _2"></span>the <span class="_ _2"></span>buffer <span class="_ _84"></span>’s<span class="_ _47"> </span>address, so <span class="_ _2"></span>to <span class="_ _3"></span>open <span class="_ _2"></span>the <span class="_ _2"></span>stream <span class="_ _2"></span>only <span class="_ _2"></span>for <span class="_ _2"></span>writing</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">means <span class="_ _3"></span>we <span class="_ _3"></span>could <span class="_ _9"></span>never <span class="_ _3"></span>read <span class="_ _3"></span>what <span class="_ _3"></span>we’ve <span class="_ _3"></span>written.<span class="_ _5a"> </span>Similarly<span class="_ _4"></span>,<span class="_ _45"> </span>to<span class="_ _47"> </span>open <span class="_ _3"></span>the <span class="_ _3"></span>stream <span class="_ _3"></span>only <span class="_ _3"></span>for</div><div class="t m0 x32 h2a y139 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">ading <span class="_ _2"></span>means <span class="_ _2"></span>we <span class="_ _2"></span>can <span class="_ _2"></span>only <span class="_ _2"></span>read the <span class="_ _2"></span>contents <span class="_ _2"></span>of <span class="_ _2"></span>a <span class="_ _2"></span>buffer <span class="_ _2"></span>into <span class="_ _2"></span>which <span class="_ _2"></span>we <span class="_ _2"></span>can <span class="_ _2"></span>never <span class="_ _2"></span>write.</span></div><div class="t m0 x3f h2a y13a ff19 fsf fc0 sc0 ls0 ws0">Third, <span class="_ _53"> </span>a <span class="_ _e"> </span>null <span class="_ _e"> </span>byte <span class="_ _e"> </span>is <span class="_ _53"> </span>written <span class="_"> </span>at <span class="_ _53"> </span>the <span class="_ _e"> </span>current <span class="_ _53"> </span>position <span class="_ _e"> </span>in <span class="_ _e"> </span>the <span class="_ _e"> </span>stream <span class="_ _53"> </span>whenever <span class="_ _e"> </span>we</div><div class="t m0 x32 h26 y254 ff19 fsf fc0 sc0 ls0 ws0">increase <span class="_ _23"></span>the <span class="_ _23"> </span>amount <span class="_ _23"> </span>of <span class="_ _42"> </span>data <span class="_ _23"> </span>in <span class="_ _42"> </span>the <span class="_ _23"></span>stream’s <span class="_ _23"></span>buffer <span class="_ _23"></span>and <span class="_ _23"> </span>call<span class="_ _35"> </span><span class="ff1a">fclose</span>,<span class="_ _35"> </span><span class="ff1a">fflush</span>,<span class="_ _35"> </span><span class="ff1a">fseek</span>,</div><div class="t m0 x32 h26 y255 ff1a fsf fc0 sc0 ls0 ws0">fseeko<span class="ff19 ls44">,o<span class="_ _d"></span><span class="ls0">r<span class="_"> </span><span class="ff1a">fsetpos</span>.</span></span></div><div class="t m0 x35 h27 y38c ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y5d8 ff19 fsf fc0 sc0 ls0 ws0">It’s <span class="_"> </span>instructive <span class="_"> </span>to <span class="_"> </span>look <span class="_"> </span>at <span class="_"> </span>how <span class="_"> </span>writes <span class="_"> </span>to <span class="_"> </span>a <span class="_"> </span>memory <span class="_"> </span>stream <span class="_"> </span>operate <span class="_"> </span>on <span class="_"> </span>a <span class="_"> </span>buf<span class="_ _0"></span>fer <span class="_"> </span>we</div><div class="t m0 x32 h2a y5d9 ff19 fsf fc0 sc0 ls0 ws0">provide. <span class="_ _4b"> </span>Figur<span class="ls741">e5<span class="_ _4a"></span><span class="ls0">.15 <span class="_"> </span>shows <span class="_ _e"> </span>a <span class="_"> </span>sample <span class="_ _e"> </span>program <span class="_"> </span>that <span class="_ _e"> </span>seeds <span class="_"> </span>the <span class="_ _e"> </span>buffer <span class="_ _e"> </span>with <span class="_"> </span>a <span class="_ _e"> </span>known</span></span></div><div class="t m0 x32 h2a y5da ff19 fsf fc0 sc0 ls0 ws0">pattern to see how writes to the stream behave.</div><div class="t m0 x32 h4e y17c2 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y17c3 ff1a fs28 fc0 sc0 ls0 ws0">#define BSZ 48</div><div class="t m0 x32 h4e y17c4 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y17c5 ff1a fs28 fc0 sc0 ls0 ws0">main()</div><div class="t m0 x32 h4e y17c6 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y17c7 ff1a fs28 fc0 sc0 ls0 ws0">FILE *fp;</div><div class="t m0 x8a h4e y17c8 ff1a fs28 fc0 sc0 ls0 ws0">char buf[BSZ];</div><div class="t m0 x8a h4e y17c9 ff1a fs28 fc0 sc0 ls0 ws0">memset(buf, ’a’, BSZ-2);</div><div class="t m0 x8a h4e y17ca ff1a fs28 fc0 sc0 ls0 ws0">buf[BSZ-2] = ’\0’;</div><div class="t m0 x8a h4e y17cb ff1a fs28 fc0 sc0 ls0 ws0">buf[BSZ-1] = ’X’;</div><div class="t m0 x8a h4e y17cc ff1a fs28 fc0 sc0 ls0 ws0">if ((fp = fmemopen(buf, BSZ, &quot;w+&quot;)) == NULL)</div><div class="t m0 x9d h4e y17cd ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fmemopen failed&quot;);</div><div class="t m0 x8a h4e y17ce ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;initial buffer contents: %s\n&quot;, buf);</div><div class="t m0 x8a h4e y17cf ff1a fs28 fc0 sc0 ls0 ws0">fprintf(fp, &quot;hello, world&quot;);</div><div class="t m0 x8a h4e y17d0 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;before flush: %s\n&quot;, buf);</div><div class="t m0 x8a h4e y17d1 ff1a fs28 fc0 sc0 ls0 ws0">fflush(fp);</div><div class="t m0 x8a h4e y17d2 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;after fflush: %s\n&quot;, buf);</div><div class="t m0 x8a h4e y17d3 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;len of string in buf = %ld\n&quot;, (long)strlen(buf));</div><div class="t m0 x8a h4e y17d4 ff1a fs28 fc0 sc0 ls0 ws0">memset(buf, ’b’, BSZ-2);</div><div class="t m0 x8a h4e y17d5 ff1a fs28 fc0 sc0 ls0 ws0">buf[BSZ-2] = ’\0’;</div><div class="t m0 x8a h4e y17d6 ff1a fs28 fc0 sc0 ls0 ws0">buf[BSZ-1] = ’X’;</div><div class="t m0 x8a h4e y17d7 ff1a fs28 fc0 sc0 ls0 ws0">fprintf(fp, &quot;hello, world&quot;);</div><div class="t m0 x8a h4e y17d8 ff1a fs28 fc0 sc0 ls0 ws0">fseek(fp, 0, SEEK_SET);</div><div class="t m0 x8a h4e y17d9 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;after <span class="_"> </span>fseek:<span class="_"> </span>%s\n&quot;, buf);</div><div class="t m0 x8a h4e y17da ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;len of string in buf = %ld\n&quot;, (long)strlen(buf));</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
