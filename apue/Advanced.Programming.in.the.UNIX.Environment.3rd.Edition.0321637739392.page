<div id="pf188" class="pf w4 h1f" data-page-no="188"><div class="pc pc188 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg188.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">358<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x197 h52 y2ddc ff1f fs2a fc0 sc0 ls0 ws0">main</div><div class="t m0 x8f h52 y2ddd ff1a fs2a fc0 sc0 ls0 ws0">signal()</div><div class="t m0 x8f h52 y2dde ff1a fs2a fc0 sc0 ls0 ws0">signal()</div><div class="t m0 x1a7 h52 y2ddf ff1a fs2a fc0 sc0 ls0 ws0">pr_mask()</div><div class="t m0 xc2 h52 y2de0 ff1a fs2a fc0 sc0 ls0 ws0">sigsetjmp()</div><div class="t m0 x175 h52 y2de1 ff1a fs2a fc0 sc0 ls0 ws0">pause()</div><div class="t m0 xb9 h5e y2de2 ff1a fs10 fc0 sc0 ls0 ws0">SIGUSR1<span class="_ _53"> </span><span class="ff19">delivered</span></div><div class="t m0 xc6 h4f y2de3 ff1f fs11 fc0 sc0 ls0 ws0">sig_usr1</div><div class="t m0 x1ab h4f y2de4 ff1a fs11 fc0 sc0 ls0 ws0">pr_mask()</div><div class="t m0 x84 h4f y2de5 ff1a fs11 fc0 sc0 ls0 ws0">alarm()</div><div class="t m0 xf5 h4f y2de6 ff1a fs11 fc0 sc0 ls0 ws0">time()</div><div class="t m0 xf5 h4f y2de7 ff1a fs11 fc0 sc0 ls0 ws0">time()</div><div class="t m0 xf5 h4f y2de8 ff1a fs11 fc0 sc0 ls0 ws0">time()</div><div class="t m0 x74 h6f y2de9 ff1a fs14 fc0 sc0 ls0 ws0">SIGALRM<span class="_ _53"> </span><span class="ff19">delivered</span></div><div class="t m0 x1b1 h66 y2dea ff1f fs15 fc0 sc0 ls0 ws0">sig_alrm</div><div class="t m0 xfe h66 y2deb ff1a fs15 fc0 sc0 ls0 ws0">pr_mask()</div><div class="t m0 x1b1 h66 y2dec ff1a fs15 fc0 sc0 ls0 ws0">return()</div><div class="t m0 x1cd h33 y2ded ff19 fs16 fc0 sc0 lscd8 ws0">re<span class="ls0">turn from signal handler</span></div><div class="t m0 x1ab hcc y2dee ff1a fs17 fc0 sc0 ls0 ws0">pr_mask()</div><div class="t m0 x85 hcc y2def ff1a fs17 fc0 sc0 ls0 ws0">siglongjmp()</div><div class="t m0 xc2 hd4 y215c ff1a fs18 fc0 sc0 ls0 ws0">sigsetjmp()</div><div class="t m0 x1a7 hd4 y2df0 ff1a fs18 fc0 sc0 ls0 ws0">pr_mask()</div><div class="t m0 x1aa hd4 y2df1 ff1a fs18 fc0 sc0 ls0 ws0">exit()</div><div class="t m0 x1e5 h35 y2df2 ff18 fs18 fc0 sc0 ls0 ws0">Figure 10.21<span class="_ _5a"> </span><span class="ff19 lscd9">Ti<span class="_ _3"></span><span class="ls0">meline for example program handling two signals</span></span></div><div class="t m0 x3f h69 y2df3 ff19 fs34 fc0 sc0 ls0 ws0">Let’s examine the output when the program in Figur<span class="_ _0"></span><span class="ls66a">e1<span class="_ _d"></span><span class="ls0">0.20 is executed:</span></span></div><div class="t m0 x3f h110 y2df4 ff1a fs92 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out &amp;<span class="_ _194"> </span><span class="ff1b">start process in backgr<span class="_ _1"></span>ound</span></span></div><div class="t m0 x3f h110 y2df5 ff1a fs92 fc0 sc0 ls0 ws0">starting main:</div><div class="t m0 x3f h110 y2df6 ff1a fs92 fc0 sc0 ls0 ws0">[1] <span class="_ _d9"> </span>531<span class="_ _279"> </span><span class="ff1b">the job-control shell prints its pr<span class="_ _0"></span>ocess ID</span></div><div class="t m0 x3f h110 y2df7 ff1a fs92 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">kill -USR1 531<span class="_ _1db"> </span><span class="ff1b">send the process<span class="_"> </span></span></span>SIGUSR1</div><div class="t m0 x3f h110 y2df8 ff1a fs92 fc0 sc0 ls0 ws0">starting sig_usr1: SIGUSR1</div><div class="t m0 x3f h110 y2df9 ff1a fs92 fc0 sc0 ls0 ws0">$<span class="_"> </span>in<span class="_"> </span>sig_alrm: SIGUSR1 SIGALRM</div><div class="t m0 x3f h110 y2dfa ff1a fs92 fc0 sc0 ls0 ws0">finishing sig_usr1: SIGUSR1</div><div class="t m0 x3f h110 y2dfb ff1a fs92 fc0 sc0 ls0 ws0">ending main:</div><div class="t m0 x216 h137 y2dfc ff1b fs92 fc0 sc0 ls0 ws0">just press RETURN</div><div class="t m0 x3f h110 y2dfd ff1a fs92 fc0 sc0 ls0 ws0">[1] +<span class="_ _d9"> </span>Done <span class="_ _186"> </span>./a.out<span class="_"> </span>&amp;</div><div class="t m0 x32 h69 y2dfe ff19 fs34 fc0 sc0 ls0 ws0">The output is what we expect: when a signal <span class="_ _2"></span>handler is invoked, the signal being caught</div><div class="t m0 x32 h69 y2dff ff19 fs34 fc0 sc0 ls0 ws0">is <span class="_ _3"></span>added <span class="_ _3"></span>to <span class="_ _3"></span>the <span class="_ _3"></span>current <span class="_ _3"></span>signal <span class="_ _3"></span>mask <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>process. <span class="_ _47"> </span>The<span class="_ _47"> </span>original <span class="_ _3"></span>mask <span class="_ _3"></span>is <span class="_ _9"></span>restor<span class="_ _0"></span>ed <span class="_ _3"></span>when</div><div class="t m0 x32 h6a y2e00 ff19 fs34 fc0 sc0 ls0 ws0">the <span class="_ _3"></span>signal <span class="_ _3"></span>handler <span class="_ _3"></span>returns. <span class="_ _47"> </span>Also,<span class="_ _47"> </span><span class="ff1a">siglongjmp<span class="_ _47"> </span></span><span class="ls1df">re</span>stores <span class="_ _3"></span>the <span class="_ _3"></span>signal <span class="_ _3"></span>mask <span class="_ _3"></span>that <span class="_ _3"></span>was <span class="_ _3"></span>saved</div><div class="t m0 x32 h6a y2e01 ff19 fs34 fc0 sc0 ls0 ws0">by<span class="_"> </span><span class="ff1a">sigsetjmp</span>.</div><div class="t m0 x3f h6a y2e02 ff19 fs34 fc0 sc0 ls0 ws0">If <span class="_"> </span>we <span class="_"> </span>change <span class="_ _e"> </span>the <span class="_"> </span>program <span class="_ _e"> </span>in <span class="_"> </span>Figur<span class="lscda">e1<span class="_ _5b"></span><span class="ls0">0.20 <span class="_"> </span>so <span class="_"> </span>that <span class="_"> </span>the <span class="_"> </span>calls <span class="_ _e"> </span>to<span class="_ _59"> </span><span class="ff1a">sigsetjmp<span class="_ _46"> </span></span>and</span></span></div><div class="t m0 x32 h6a y2e03 ff1a fs34 fc0 sc0 ls0 ws0">siglongjmp<span class="_ _45"> </span><span class="ff19">ar<span class="lscdb">er<span class="_ _43"></span><span class="ls0">eplaced <span class="_ _23"></span>with <span class="_ _23"></span>calls <span class="_ _9"></span>to<span class="_ _35"> </span><span class="ff1a">setjmp<span class="_ _45"> </span></span>and<span class="_ _35"> </span><span class="ff1a">longjmp<span class="_ _45"> </span></span>on <span class="_ _23"></span>Linux <span class="_ _23"></span>(or<span class="_ _45"> </span><span class="ff1a">_setjmp</span></span></span></span></div><div class="t m0 x32 h6a y2e04 ff19 fs34 fc0 sc0 ls0 ws0">and<span class="_"> </span><span class="ff1a">_longjmp<span class="_ _80"> </span></span>on FreeBSD), the ﬁnal line of output becomes</div><div class="t m0 x3f h110 y2e05 ff1a fs92 fc0 sc0 ls0 ws0">ending main: SIGUSR1</div><div class="t m0 x32 h6a y2e06 ff19 fs34 fc0 sc0 ls0 ws0">This <span class="_ _3"></span>means <span class="_ _3"></span>that <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">main<span class="_ _47"> </span></span>function <span class="_ _9"></span>is <span class="_ _2"></span>executing <span class="_ _9"></span>with <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">SIGUSR1<span class="_ _47"> </span></span>signal <span class="_ _3"></span>blocked, <span class="_ _3"></span>after</div><div class="t m0 x32 h6a y2e07 ff19 fs34 fc0 sc0 ls0 ws0">the call to<span class="_"> </span><span class="ff1a">setjmp</span><span class="lscdc">.T<span class="_ _4a"></span><span class="ls0">his probably isn’t what we want.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
