<div id="pf29f" class="pf w4 h1f" data-page-no="29f"><div class="pc pc29f w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg29f.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>17.3<span class="_ _282"> </span>Unique <span class="_"> </span>Connections<span class="_ _1b"> </span><span class="ff18">637</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls0 ws0">The<span class="_ _45"> </span><span class="ff1a">serv_listen<span class="_ _35"> </span></span>function <span class="_ _23"></span>(Figur<span class="ls13b4">e1<span class="_ _43"></span><span class="ls0">7.8) <span class="_ _23"></span>can <span class="_ _9"></span>be <span class="_ _23"> </span>used <span class="_ _23"></span>by <span class="_ _23"></span>a <span class="_ _9"></span>server <span class="_ _23"> </span>to <span class="_ _23"> </span>announce <span class="_ _23"></span>its</span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">willingness <span class="_ _2"></span>to <span class="_ _2"></span>listen <span class="_ _2"></span>for <span class="_ _3"></span>client <span class="_ _2"></span>connect <span class="_ _2"></span>requests <span class="_ _2"></span>on <span class="_ _2"></span>a <span class="_ _2"></span>well-known <span class="_ _3"></span>name <span class="_ _2"></span>(some <span class="_ _2"></span>pathname</div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">in <span class="_ _3"></span>the <span class="_ _3"></span>ﬁle <span class="_ _3"></span>system).<span class="_ _16"> </span>Clients <span class="_ _9"></span>will <span class="_ _3"></span>use <span class="_ _3"></span>this <span class="_ _3"></span>name <span class="_ _3"></span>when <span class="_ _9"></span>they <span class="_ _3"></span>want <span class="_ _3"></span>to <span class="_ _3"></span>connect <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _3"></span>server<span class="_ _1"></span>.</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _9"></span>return <span class="_ _3"></span>value <span class="_ _9"></span>is <span class="_ _9"></span>the <span class="_ _9"></span>server<span class="_ _9"></span>’s <span class="_ _9"></span>UNIX <span class="_ _9"></span>domain <span class="_ _9"></span>socket <span class="_ _9"></span>used <span class="_ _23"></span>to <span class="_ _3"></span>receive <span class="_ _9"></span>client <span class="_ _9"></span>connection</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">quests.</span></div><div class="t m0 x3f h26 y134 ff19 fsf fc0 sc0 ls0 ws0">The<span class="_ _45"> </span><span class="ff1a">serv_accept<span class="_ _35"> </span></span>function <span class="_ _23"></span>(Figur<span class="lsbb">e1<span class="_ _43"></span><span class="ls0">7.9) <span class="_ _23"></span>is <span class="_ _9"></span>used <span class="_ _23"> </span>by <span class="_ _23"></span>a <span class="_ _23"></span>server <span class="_ _9"></span>to <span class="_ _23"> </span>wait <span class="_ _23"></span>for <span class="_ _23"></span>a <span class="_ _23"></span>client’s</span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">connect <span class="_ _42"> </span>request <span class="_ _23"> </span>to <span class="_ _42"> </span>arrive.<span class="_ _54"> </span>When <span class="_ _42"> </span>one <span class="_ _42"> </span>arrives, <span class="_ _42"> </span>the <span class="_ _42"> </span>system <span class="_ _42"> </span>automatically <span class="_ _42"> </span>creates <span class="_ _23"> </span>a <span class="_ _42"> </span>new</div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">UNIX domain socket, <span class="_ _2"></span>connects it <span class="_ _2"></span>to the client’s <span class="_ _2"></span>socket, and <span class="_ _2"></span>returns the new socket <span class="_ _2"></span>to the</div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">server<span class="_ _6"></span><span class="ls13b5">.A<span class="_ _5b"></span><span class="ls0">dditionally<span class="_ _6"></span><span class="lsd03">,t<span class="_ _4f"></span><span class="ls0">he <span class="_ _2"></span>effective user <span class="_ _2"></span>ID <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>client <span class="_ _2"></span>is <span class="_ _3"></span>stored in <span class="_ _2"></span>the <span class="_ _2"></span>memory <span class="_ _2"></span>to <span class="_ _2"></span>which</span></span></span></span></div><div class="t m0 x32 h2b y138 ff1b fsf fc0 sc0 ls0 ws0">uidptr<span class="_"> </span><span class="ff19">points.</span></div><div class="t m0 x3f h26 y139 ff19 fsf fc0 sc0 ls13b6 ws0">Ac<span class="_ _b"></span><span class="ls0">lient <span class="_ _9"></span>calls<span class="_ _45"> </span><span class="ff1a">cli_conn<span class="_ _45"> </span></span>(Figur<span class="ls13b6">e1<span class="_ _b"></span><span class="ls0">7.10) <span class="_ _9"></span>to <span class="_ _23"></span>connect <span class="_ _9"></span>to <span class="_ _9"></span>a <span class="_ _23"></span>server<span class="_ _6"></span><span class="ls13b7">.T<span class="_ _62"></span><span class="ls0">he<span class="_ _45"> </span><span class="ff1b">name<span class="_ _45"> </span></span>argument</span></span></span></span></span></div><div class="t m0 x32 h2a y13a ff19 fsf fc0 sc0 ls0 ws0">speciﬁed by the <span class="_ _2"></span>client must <span class="_ _2"></span>be the <span class="_ _2"></span>same name <span class="_ _2"></span>that was <span class="_ _2"></span>advertised by the <span class="_ _2"></span>server<span class="_ _9"></span>’s call to</div><div class="t m0 x32 h26 y254 ff1a fsf fc0 sc0 ls0 ws0">serv_listen<span class="ff19 ls86">.O<span class="_ _4a"></span><span class="ls44">nr<span class="_ _4f"></span><span class="ls0">eturn, the client gets a ﬁle descriptor connected to the server<span class="_ _1"></span>.</span></span></span></div><div class="t m0 x3f h26 y255 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">7.8 shows the<span class="_"> </span><span class="ff1a">serv_listen<span class="_ _66"> </span></span>function.</span></span></div><div class="t m0 x32 h4e y4891 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4892 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;</div><div class="t m0 x32 h4e y4ba3 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/un.h&gt;</div><div class="t m0 x32 h4e y4ba4 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;errno.h&gt;</div><div class="t m0 x32 h4e y4ba5 ff1a fs28 fc0 sc0 ls0 ws0">#define QLEN<span class="_ _15"> </span>10</div><div class="t m0 x32 h4e y4896 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h4e y4897 ff1a fs28 fc0 sc0 ls1b6 ws0">*C<span class="_ _1d"></span><span class="ls0">reate a server endpoint of a connection.</span></div><div class="t m0 x140 h4e y4ba6 ff1a fs28 fc0 sc0 ls1b6 ws0">*R<span class="_ _1d"></span><span class="ls0">eturns fd if all OK, &lt;0 on error.</span></div><div class="t m0 x140 h4e y4ba7 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h4e y4ba8 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4ba9 ff1a fs28 fc0 sc0 ls0 ws0">serv_listen(const char *name)</div><div class="t m0 x32 h4e y4baa ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4bab ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>fd,<span class="_"> </span>len, err, rval;</div><div class="t m0 x8a h4e y4bac ff1a fs28 fc0 sc0 ls0 ws0">struct sockaddr_un<span class="_ _d9"> </span>un;</div><div class="t m0 x8a h4e y489f ff1a fs28 fc0 sc0 ls0 ws0">if (strlen(name) &gt;= sizeof(un.sun_path)) {</div><div class="t m0 x9d h4e y48a0 ff1a fs28 fc0 sc0 ls0 ws0">errno = ENAMETOOLONG;</div><div class="t m0 x9d h4e y48a1 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h4e y4bad ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y48a3 ff1a fs28 fc0 sc0 ls0 ws0">/* create a UNIX domain stream socket */</div><div class="t m0 x8a h4e y48a4 ff1a fs28 fc0 sc0 ls0 ws0">if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) &lt; 0)</div><div class="t m0 x9d h4e y48a5 ff1a fs28 fc0 sc0 ls0 ws0">return(-2);</div><div class="t m0 x8a h4e y4bae ff1a fs28 fc0 sc0 ls0 ws0">unlink(name); <span class="_ _d9"> </span>/*<span class="_"> </span>in case it already exists */</div><div class="t m0 x8a h4e y4baf ff1a fs28 fc0 sc0 ls0 ws0">/* fill in socket address structure */</div><div class="t m0 x8a h4e y4bb0 ff1a fs28 fc0 sc0 ls0 ws0">memset(&amp;un, 0, sizeof(un));</div><div class="t m0 x8a h4e y4bb1 ff1a fs28 fc0 sc0 ls0 ws0">un.sun_family = AF_UNIX;</div><div class="t m0 x8a h4e y4bb2 ff1a fs28 fc0 sc0 ls0 ws0">strcpy(un.sun_path, name);</div><div class="t m0 x8a h4e y4bb3 ff1a fs28 fc0 sc0 ls0 ws0">len = offsetof(struct sockaddr_un, sun_path) + strlen(name);</div><div class="t m0 x8a h4e y4bb4 ff1a fs28 fc0 sc0 ls0 ws0">/* bind the name to the descriptor */</div><div class="t m0 x8a h4e y4bb5 ff1a fs28 fc0 sc0 ls0 ws0">if (bind(fd, (struct sockaddr *)&amp;un, len) &lt; 0) {</div><div class="t m0 x9d h4e y4bb6 ff1a fs28 fc0 sc0 ls0 ws0">rval = -3;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
