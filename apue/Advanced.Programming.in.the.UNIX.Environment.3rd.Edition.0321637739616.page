<div id="pf268" class="pf w4 h1f" data-page-no="268"><div class="pc pc268 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg268.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">582<span class="_ _1b"> </span><span class="ff19">Interprocess <span class="_"> </span>Communication<span class="_ _2c"> </span>Chapter <span class="_"> </span>15</span></div><div class="t m0 x3f h57 y1295 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;semaphore.h&gt;</div><div class="t m0 x3f h57 y19f8 ff1a fs2d fc0 sc0 ls0 ws0">int sem_post(sem_t *<span class="ff1b">sem</span>);</div><div class="t m0 x153 h5f y19f9 ff19 fs2d fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x3f h4d y3ee1 ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _23"></span>a <span class="_ _23"> </span>process <span class="_ _23"></span>is <span class="_ _23"></span>blocked <span class="_ _23"> </span>in <span class="_ _23"> </span>a <span class="_ _23"> </span>call <span class="_ _23"> </span>to<span class="_ _35"> </span><span class="ff1a">sem_wait<span class="_ _35"> </span></span>(or<span class="_ _35"> </span><span class="ff1a">sem_timedwait</span><span class="ls12b0">)w<span class="_ _43"></span><span class="ls0">hen <span class="_ _42"> </span>we <span class="_ _23"></span>call</span></span></div><div class="t m0 x32 h4d y3ee2 ff1a fs26 fc0 sc0 ls0 ws0">sem_post<span class="ff19 ls12b1">,t<span class="_ _49"></span><span class="ls0">he <span class="_ _46"> </span>process <span class="_ _46"> </span>is <span class="_ _61"> </span>awakened <span class="_ _46"> </span>and <span class="_ _61"> </span>the <span class="_ _61"> </span>semaphor<span class="ls12b1">ec<span class="_ _49"></span><span class="ls0">ount <span class="_ _46"> </span>that <span class="_ _46"> </span>was <span class="_ _61"> </span>just</span></span></span></span></div><div class="t m0 x32 h4d y3ee3 ff19 fs26 fc0 sc0 ls0 ws0">incremented by<span class="_"> </span><span class="ff1a">sem_post<span class="_ _80"> </span></span>is decremented by<span class="_"> </span><span class="ff1a">sem_wait<span class="_ _e"> </span></span>(or<span class="_"> </span><span class="ff1a">sem_timedwait</span>).</div><div class="t m0 x3f h49 y3ee4 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _3"></span>we <span class="_ _3"></span>want <span class="_ _3"></span>to <span class="_ _3"></span>use <span class="_ _3"></span>POSIX <span class="_ _3"></span>semaphores <span class="_ _2"></span>within <span class="_ _3"></span>a <span class="_ _3"></span>single <span class="_ _3"></span>process, <span class="_ _3"></span>it <span class="_ _3"></span>is <span class="_ _3"></span>easier <span class="_ _3"></span>to <span class="_ _3"></span>use</div><div class="t m0 x32 h49 y3ee5 ff19 fs26 fc0 sc0 ls0 ws0">unnamed <span class="_ _4b"> </span>semaphores. <span class="_ _48"> </span>This<span class="_ _48"> </span>only <span class="_ _59"> </span>changes <span class="_ _59"> </span>the <span class="_ _59"> </span>way <span class="_ _4b"> </span>we <span class="_ _59"> </span>create <span class="_ _4b"> </span>and <span class="_ _59"> </span>destroy <span class="_ _4b"> </span>the</div><div class="t m0 x32 h4d y3ee6 ff19 fs26 fc0 sc0 ls0 ws0">semaphore. <span class="_"> </span>T<span class="_ _4"></span><span class="lsd3">oc<span class="_ _5"></span><span class="lscc">re<span class="ls0">ate an unnamed semaphore, we call the<span class="_"> </span><span class="ff1a">sem_init<span class="_ _80"> </span></span>function.</span></span></span></div><div class="t m0 x3f h4e y461f ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;semaphore.h&gt;</div><div class="t m0 x3f h4e y4620 ff1a fs28 fc0 sc0 ls0 ws0">int sem_init(sem_t *<span class="ff1b">sem</span><span class="ls1b6">,i<span class="_ _1d"></span><span class="ls0">nt<span class="_"> </span><span class="ff1b">pshared</span><span class="ls1b6">,u<span class="_ _1d"></span><span class="ls0">nsigned int<span class="_"> </span><span class="ff1b">value</span>);</span></span></span></span></div><div class="t m0 x153 h7c y4621 ff19 fs28 fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h60 y4622 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _51"> </span><span class="ff1b">pshared<span class="_ _51"> </span></span>argument <span class="_ _35"> </span>indicates <span class="_ _35"> </span>if <span class="_ _35"> </span>we <span class="_ _35"> </span>plan <span class="_ _35"> </span>to <span class="_ _35"> </span>use <span class="_ _44"> </span>the <span class="_ _35"> </span>semaphor<span class="ls12b2">ew<span class="_ _52"></span><span class="ls0">ith <span class="_ _35"> </span>multiple</span></span></div><div class="t m0 x32 h60 y4623 ff19 fs2c fc0 sc0 ls0 ws0">processes. <span class="_ _45"> </span>If<span class="_ _35"> </span>so, <span class="_ _9"></span>we <span class="_ _23"> </span>set <span class="_ _23"> </span>it <span class="_ _23"> </span>to <span class="_ _23"></span>a <span class="_ _23"></span>nonzer<span class="ls12b3">ov<span class="_ _43"></span><span class="ls0">alue. <span class="_ _35"> </span>The<span class="_ _45"> </span><span class="ff1b">value<span class="_ _35"> </span></span>argument <span class="_ _9"></span>speciﬁes <span class="_ _23"> </span>the <span class="_ _23"></span>initial</span></span></div><div class="t m0 x32 h55 y4624 ff19 fs2c fc0 sc0 ls0 ws0">value of the semaphore.</div><div class="t m0 x3f h54 y4625 ff19 fs2c fc0 sc0 ls0 ws0">Instead <span class="_ _23"> </span>of <span class="_ _23"> </span>returning <span class="_ _23"> </span>a <span class="_ _42"> </span>pointer <span class="_ _23"></span>to <span class="_ _23"> </span>the <span class="_ _42"> </span>semaphor<span class="lscee">el<span class="_ _43"></span><span class="ls0">ike<span class="_ _35"> </span><span class="ff1a">sem_open<span class="_ _35"> </span></span>does, <span class="_ _23"></span>we <span class="_ _23"> </span>need <span class="_ _23"> </span>to</span></span></div><div class="t m0 x32 h54 y4626 ff19 fs2c fc0 sc0 ls0 ws0">declar<span class="ls12b4">eav<span class="_ _8"></span><span class="ls0">ariable <span class="_ _2"></span>of <span class="_ _3"></span>type<span class="_ _47"> </span><span class="ff1a">sem_t<span class="_ _66"> </span></span>and <span class="_ _3"></span>pass <span class="_ _3"></span>its <span class="_ _2"></span>address <span class="_ _2"></span>to<span class="_ _47"> </span><span class="ff1a">sem_init<span class="_ _47"> </span></span>for <span class="_ _2"></span>initialization.<span class="_ _61"> </span>If</span></span></div><div class="t m0 x32 h60 y4627 ff19 fs2c fc0 sc0 ls0 ws0">we <span class="_ _9"></span>plan <span class="_ _23"></span>to <span class="_ _9"></span>use <span class="_ _23"></span>the <span class="_ _9"></span>semaphor<span class="ls12b5">eb<span class="_ _b"></span><span class="ls0">etween <span class="_ _3"></span>two <span class="_ _23"></span>processes, <span class="_ _9"></span>we <span class="_ _9"></span>need <span class="_ _23"></span>to <span class="_ _9"></span>ensur<span class="ls12b5">et<span class="_ _b"></span><span class="ls0">hat <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1b">sem</span></span></span></span></span></div><div class="t m0 x32 h55 y4628 ff19 fs2c fc0 sc0 ls0 ws0">argument points into the memory extent that is shar<span class="_ _0"></span>ed between the pr<span class="_ _0"></span>ocesses.</div><div class="t m0 x3f h55 y4629 ff19 fs2c fc0 sc0 ls0 ws0">When <span class="_ _3"></span>we <span class="_ _3"></span>ar<span class="ls12b6">ed<span class="_ _b"></span><span class="ls0">one <span class="_ _9"></span>using <span class="_ _3"></span>the <span class="_ _3"></span>unnamed <span class="_ _3"></span>semaphore, <span class="_ _2"></span>we <span class="_ _9"></span>can <span class="_ _3"></span>discard<span class="_ _66"> </span>it<span class="_ _45"> </span>b<span class="ls12b7">yc<span class="_ _b"></span><span class="ls0">alling <span class="_ _9"></span>the</span></span></span></span></div><div class="t m0 x32 h54 y462a ff1a fs2c fc0 sc0 ls0 ws0">sem_destroy<span class="_ _80"> </span><span class="ff19">function.</span></div><div class="t m0 x3f h5d y462b ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;semaphore.h&gt;</div><div class="t m0 x3f h5d y462c ff1a fs2f fc0 sc0 ls0 ws0">int sem_destroy(sem_t *<span class="ff1b">sem</span>);</div><div class="t m0 x153 hc2 y462d ff19 fs2f fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h5c y462e ff19 fs29 fc0 sc0 ls0 ws0">After <span class="_ _53"> </span>calling<span class="_ _59"> </span><span class="ff1a">sem_destroy</span>,<span class="_ _4b"> </span>we<span class="_ _4b"> </span>can’t <span class="_ _e"> </span>use <span class="_ _e"> </span>any <span class="_ _e"> </span>of <span class="_ _e"> </span>the <span class="_ _53"> </span>semaphor<span class="ls12b8">ef<span class="_ _55"></span><span class="ls0">unctions <span class="_ _e"> </span>with<span class="_ _4b"> </span><span class="ff1b">sem</span></span></span></div><div class="t m0 x32 h5c y462f ff19 fs29 fc0 sc0 ls0 ws0">unless we reinitialize it by calling<span class="_"> </span><span class="ff1a">sem_init<span class="_ _80"> </span></span>again.</div><div class="t m0 x3f h50 y4630 ff19 fs29 fc0 sc0 ls0 ws0">One other <span class="_ _2"></span>function <span class="_ _2"></span>is <span class="_ _2"></span>available to <span class="_ _2"></span>allow <span class="_ _2"></span>us <span class="_ _2"></span>to retrieve the <span class="_ _2"></span>value <span class="_ _2"></span>of <span class="_ _2"></span>a semaphore. <span class="_"> </span>W<span class="_ _6"></span>e</div><div class="t m0 x32 h5c y4631 ff19 fs29 fc0 sc0 ls0 ws0">call the<span class="_"> </span><span class="ff1a">sem_getvalue<span class="_ _80"> </span></span>function for this purpose.</div><div class="t m0 x3f h62 y4632 ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;semaphore.h&gt;</div><div class="t m0 x3f h62 y4633 ff1a fs30 fc0 sc0 ls0 ws0">int sem_getvalue(sem_t *restrict<span class="_"> </span><span class="ff1b">sem</span><span class="ls1185">,i<span class="_ _1d"></span><span class="ls0">nt *restrict<span class="_"> </span><span class="ff1b">valp</span>);</span></span></div><div class="t m0 x153 hff y4634 ff19 fs30 fc0 sc0 ls0 ws0">Returns: 0 if OK,<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>error</div><div class="t m0 x32 h79 y4635 ff19 fs31 fc0 sc0 ls0 ws0">On <span class="_ _23"> </span>success, <span class="_ _42"> </span>the <span class="_ _23"></span>integer <span class="_ _23"> </span>pointed <span class="_ _42"> </span>to <span class="_ _23"> </span>by <span class="_ _23"> </span>the<span class="_ _44"> </span><span class="ff1b">valp<span class="_ _35"> </span></span>argument <span class="_ _23"></span>will <span class="_ _23"></span>contain <span class="_ _23"> </span>the <span class="_ _42"> </span>value <span class="_ _23"> </span>of <span class="_ _23"> </span>the</div><div class="t m0 x32 h6e y4636 ff19 fs31 fc0 sc0 ls0 ws0">semaphore. <span class="_"> </span>Be<span class="_"> </span>aware, however<span class="_ _1"></span><span class="ls12b9">,t<span class="_ _4f"></span><span class="ls0">hat <span class="_ _2"></span>the value <span class="_ _2"></span>of the <span class="_ _2"></span>semaphor<span class="ls12b9">ec<span class="_ _4f"></span><span class="ls0">an <span class="_ _2"></span>change by <span class="_ _2"></span>the time</span></span></span></span></div><div class="t m0 x32 h6e y4637 ff19 fs31 fc0 sc0 ls0 ws0">that <span class="_ _42"> </span>we <span class="_ _42"> </span>try <span class="_ _42"> </span>to <span class="_ _42"> </span>use <span class="_ _23"> </span>the <span class="_ _42"> </span>value <span class="_ _42"> </span>we <span class="_ _42"> </span>just <span class="_ _42"> </span>read. <span class="_ _35"> </span>Unless<span class="_ _44"> </span>we <span class="_ _42"> </span>use <span class="_ _42"> </span>additional <span class="_ _42"> </span>synchronization</div><div class="t m0 x32 h64 y4638 ff19 fs31 fc0 sc0 ls0 ws0">mechanisms <span class="_ _44"> </span>to <span class="_ _44"> </span>avoid <span class="_ _4b"> </span>this <span class="_ _44"> </span>race, <span class="_ _44"> </span>the<span class="_ _65"> </span><span class="ff1a">sem_getvalue<span class="_ _54"> </span></span>function <span class="_ _4b"> </span>is <span class="_ _44"> </span>useful <span class="_ _44"> </span>only <span class="_ _4b"> </span>for</div><div class="t m0 x32 h6e y4639 ff19 fs31 fc0 sc0 ls0 ws0">debugging.</div><div class="t m0 x76 h63 y463a ff19 fs13 fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">sem_getvalue<span class="_ _53"> </span></span>function is not supported by Mac OS X 10.6.8.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
