<div id="pf2a6" class="pf w4 h1f" data-page-no="2a6"><div class="pc pc2a6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2a6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">644<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">socket until <span class="_ _2"></span>it <span class="_ _2"></span>encounters a <span class="_ _2"></span>null <span class="_ _2"></span>byte.<span class="_ _46"> </span>Any <span class="_ _2"></span>characters <span class="_ _2"></span>read up to <span class="_ _2"></span>this <span class="_ _2"></span>point ar<span class="ls80b">ep<span class="_ _4f"></span><span class="ls0">assed <span class="_ _2"></span>to</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _23"> </span>caller<span class="_ _9"></span>’s<span class="_ _35"> </span><span class="ff1b">userfunc</span><span class="lsa3d">.T<span class="_ _7"></span><span class="ls0">he <span class="_ _42"> </span>next <span class="_ _42"> </span>byte <span class="_ _23"> </span>read <span class="_ _23"> </span>by<span class="_ _44"> </span><span class="ff1a">recv_fd<span class="_ _35"> </span></span>is <span class="_ _42"> </span>the <span class="_ _23"> </span>status <span class="_ _42"> </span>byte.<span class="_ _51"> </span>If <span class="_ _42"> </span>the <span class="_ _42"> </span>status</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">byte is 0, a descriptor was passed; otherwise, there<span class="_"> </span>is<span class="_"> </span>no<span class="_"> </span>descriptor to r<span class="_ _0"></span>eceive.</div><div class="t m0 x3f h26 y132 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _2"></span>function<span class="_ _47"> </span><span class="ff1a">send_err<span class="_ _66"> </span></span>calls <span class="_ _3"></span>the<span class="_ _66"> </span><span class="ff1a">send_fd<span class="_ _47"> </span></span>function <span class="_ _2"></span>after <span class="_ _3"></span>writing <span class="_ _2"></span>the <span class="_ _2"></span>error <span class="_ _2"></span>message</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">to the socket.<span class="_ _59"> </span>This is shown in Figur<span class="ls44">e1<span class="_ _d"></span><span class="ls0">7.12.</span></span></div><div class="t m0 x32 h4e y2259 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4c35 ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h4e y225b ff1a fs28 fc0 sc0 ls1b6 ws0">*U<span class="_ _1d"></span><span class="ls0">sed when we had planned to send an fd using send_fd(),</span></div><div class="t m0 x140 h4e y225c ff1a fs28 fc0 sc0 ls1b6 ws0">*b<span class="_ _1d"></span><span class="ls0">ut encountered an error instead.<span class="_ _3a"> </span>We send the error back</span></div><div class="t m0 x140 h4e y225d ff1a fs28 fc0 sc0 ls1b6 ws0">*u<span class="_ _1d"></span><span class="ls0">sing the send_fd()/recv_fd() protocol.</span></div><div class="t m0 x140 h4e y225e ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h4e y4c36 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4c37 ff1a fs28 fc0 sc0 ls0 ws0">send_err(int fd, int errcode, const char *msg)</div><div class="t m0 x32 h4e y4c38 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4c39 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>n;</div><div class="t m0 x8a h4e y2263 ff1a fs28 fc0 sc0 ls0 ws0">if ((n = strlen(msg)) &gt; 0)</div><div class="t m0 x9d h4e y2264 ff1a fs28 fc0 sc0 ls0 ws0">if (writen(fd, msg, n) != n)<span class="_ _15"> </span>/* send the error message */</div><div class="t m0 x1f h4e y2265 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h4e y4c3a ff1a fs28 fc0 sc0 ls0 ws0">if (errcode &gt;= 0)</div><div class="t m0 x9d h4e y4c3b ff1a fs28 fc0 sc0 ls0 ws0">errcode = -1;<span class="_ _68"> </span>/* must be negative */</div><div class="t m0 x8a h4e y4c3c ff1a fs28 fc0 sc0 ls0 ws0">if (send_fd(fd, errcode) &lt; 0)</div><div class="t m0 x9d h4e y4c3d ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x8a h4e y4c3e ff1a fs28 fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 x32 h4e y4c3f ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x145 h4f y4c40 ff18 fs11 fc0 sc0 ls0 ws0">Figure 17.12<span class="_ _5a"> </span><span class="ff19">The<span class="_"> </span><span class="ff1a">send_err<span class="_ _e"> </span></span>function</span></div><div class="t m0 x3f h54 y4c41 ff19 fs2c fc0 sc0 ls155 ws0">To <span class="_ _47"> </span>e<span class="_ _9"></span><span class="ls0">xchange <span class="_ _42"> </span>ﬁle <span class="_ _23"></span>descriptors <span class="_ _23"> </span>using <span class="_ _23"> </span>UNIX <span class="_ _42"> </span>domain <span class="_ _23"></span>sockets, <span class="_ _23"> </span>we <span class="_ _23"> </span>call <span class="_ _42"> </span>the<span class="_ _35"> </span><span class="ff1a">sendmsg</span></span></div><div class="t m0 x40 h55 y4c42 ff19 fs2c fc0 sc0 ls0 ws0">(</div><div class="t m0 x1b2 h55 y4c41 ff19 fs2c fc0 sc0 ls0 ws0">2</div><div class="t m0 x17e h55 y4c42 ff19 fs2c fc0 sc0 ls0 ws0">)</div><div class="t m0 x32 h54 y4c43 ff19 fs2c fc0 sc0 ls0 ws0">and<span class="_ _44"> </span><span class="ff1a">recvmsg</span></div><div class="t m0 x1d h55 y4c44 ff19 fs2c fc0 sc0 ls0 ws0">(</div><div class="t m0 x53 h55 y4c43 ff19 fs2c fc0 sc0 ls0 ws0">2</div><div class="t m0 x6 h55 y4c44 ff19 fs2c fc0 sc0 ls0 ws0">)</div><div class="t m0 x50 h54 y4c43 ff19 fs2c fc0 sc0 ls0 ws0">functions <span class="_ _42"> </span>(Section <span class="_ _42"> </span>16.5).<span class="_ _54"> </span>Both <span class="_ _53"> </span>functions <span class="_ _42"> </span>take <span class="_ _42"> </span>a <span class="_ _53"> </span>pointer <span class="_ _42"> </span>to <span class="_ _42"> </span>a<span class="_ _44"> </span><span class="ff1a">msghdr</span></div><div class="t m0 x32 h55 y4c45 ff19 fs2c fc0 sc0 ls0 ws0">structur<span class="_ _0"></span><span class="ls13d6">et<span class="_ _8"></span><span class="ls0">hat <span class="_ _3"></span>contains <span class="_ _3"></span>all <span class="_ _3"></span>the <span class="_ _3"></span>information <span class="_ _3"></span>on <span class="_ _3"></span>what <span class="_ _2"></span>to <span class="_ _3"></span>send <span class="_ _3"></span>or <span class="_ _3"></span>receive. <span class="_ _47"> </span>The<span class="_ _47"> </span>structur<span class="_ _0"></span><span class="ls13d7">eo<span class="_ _8"></span><span class="ls0">n</span></span></span></span></div><div class="t m0 x32 h55 y4c46 ff19 fs2c fc0 sc0 ls0 ws0">your system might look similar to the following:</div><div class="t m0 x3f h5d y4c47 ff1a fs2f fc0 sc0 ls0 ws0">struct msghdr {</div><div class="t m0 xc2 h5d y4c48 ff1a fs2f fc0 sc0 ls0 ws0">void <span class="_ _186"> </span>*msg_name;<span class="_ _186"> </span>/* optional address */</div><div class="t m0 xc2 h5d y4c49 ff1a fs2f fc0 sc0 ls0 ws0">socklen_t <span class="_ _15"> </span>msg_namelen; <span class="_ _15"> </span>/*<span class="_"> </span>address size in bytes */</div><div class="t m0 xc2 h5d y4c4a ff1a fs2f fc0 sc0 ls0 ws0">struct iovec *msg_iov;<span class="_ _176"> </span>/* array of I/O buffers */</div><div class="t m0 xc2 h5d y4c4b ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _74"> </span>msg_iovlen;<span class="_ _189"> </span>/* number of elements in array */</div><div class="t m0 xc2 h5d y4c4c ff1a fs2f fc0 sc0 ls0 ws0">void <span class="_ _186"> </span>*msg_control;<span class="_ _8a"> </span>/* ancillary data */</div><div class="t m0 xc2 h5d y4c4d ff1a fs2f fc0 sc0 ls0 ws0">socklen_t <span class="_ _15"> </span>msg_controllen;<span class="_ _d9"> </span>/* number of ancillary bytes */</div><div class="t m0 xc2 h5d y4c4e ff1a fs2f fc0 sc0 ls0 ws0">int <span class="_ _74"> </span>msg_flags;<span class="_ _90"> </span>/* flags for received message */</div><div class="t m0 x3f h5d y4c4f ff1a fs2f fc0 sc0 ls0 ws0">};</div><div class="t m0 x3f h55 y4c50 ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_"> </span>ﬁrst <span class="_ _e"> </span>two <span class="_"> </span>elements <span class="_ _e"> </span>ar<span class="ls13d8">en<span class="_ _4a"></span><span class="ls0">ormally <span class="_"> </span>used <span class="_ _e"> </span>for <span class="_"> </span>sending <span class="_"> </span>datagrams <span class="_ _e"> </span>on <span class="_"> </span>a <span class="_ _e"> </span>network</span></span></div><div class="t m0 x32 h55 y4c51 ff19 fs2c fc0 sc0 ls0 ws0">connection, <span class="_ _42"> </span>wher<span class="ls13d9">et<span class="_ _c"></span><span class="ls0">he <span class="_ _42"> </span>destination <span class="_ _42"> </span>address <span class="_ _42"> </span>can <span class="_ _42"> </span>be <span class="_ _42"> </span>speciﬁed <span class="_ _42"> </span>with <span class="_ _23"> </span>each <span class="_ _42"> </span>datagram.<span class="_ _54"> </span>The</span></span></div><div class="t m0 x32 h55 y4c52 ff19 fs2c fc0 sc0 ls0 ws0">next <span class="_ _3"></span>two <span class="_ _3"></span>elements <span class="_ _3"></span>allow <span class="_ _9"></span>us <span class="_ _3"></span>to <span class="_ _3"></span>specify <span class="_ _9"></span>an <span class="_ _3"></span>array <span class="_ _3"></span>of <span class="_ _3"></span>buffers <span class="_ _3"></span>(scatter <span class="_ _3"></span>read <span class="_ _3"></span>or <span class="_ _3"></span>gather <span class="_ _9"></span>write),</div><div class="t m0 x32 h54 y4c53 ff19 fs2c fc0 sc0 ls0 ws0">as <span class="_ _9"></span>we <span class="_ _23"></span>described <span class="_ _9"></span>for <span class="_ _23"></span>the<span class="_ _45"> </span><span class="ff1a">readv<span class="_ _45"> </span></span>and<span class="_ _35"> </span><span class="ff1a">writev<span class="_ _45"> </span></span>functions <span class="_ _9"></span>(Section <span class="_ _23"></span>14.6).<span class="_ _5a"> </span>The<span class="_ _45"> </span><span class="ff1a">msg_flags</span></div><div class="t m0 x32 h55 y4c54 ff19 fs2c fc0 sc0 ls0 ws0">ﬁeld contains ﬂags describing the message received, as summarized in Figur<span class="_ _0"></span><span class="ls142">e1<span class="_ _d"></span><span class="ls0">6.15.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
