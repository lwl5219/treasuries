<div id="pf1b1" class="pf w4 h1f" data-page-no="1b1"><div class="pc pc1b1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1b1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>1<span class="_ _1"></span>1.6 <span class="_ _284"> </span>Thread <span class="_"> </span>Synchr<span class="_ _0"></span>onization<span class="_ _1b"> </span><span class="ff18">399</span></div><div class="t m0 x1ca h51 y1ed4 ff19 fs2a fc0 sc0 ls0 ws0">Thread A</div><div class="t m0 x137 h5e y32d5 ff19 fs10 fc0 sc0 ls0 ws0">fetch<span class="_"> </span><span class="ff1a">i<span class="_ _53"> </span></span>into register</div><div class="t m0 x184 h2d y32d6 ff19 fs10 fc0 sc0 ls0 ws0">(register = 5)</div><div class="t m0 x50 h2e y32d7 ff19 fs11 fc0 sc0 ls0 ws0">increment the</div><div class="t m0 xe7 h2e y32d8 ff19 fs11 fc0 sc0 ls0 ws0">contents of</div><div class="t m0 xda h2e y32d9 ff19 fs11 fc0 sc0 ls0 ws0">the register</div><div class="t m0 x184 h2e y32da ff19 fs11 fc0 sc0 ls0 ws0">(register = 6)</div><div class="t m0 xf6 h2f y32db ff19 fs12 fc0 sc0 ls0 ws0">stor<span class="ls38a">et<span class="_ _5"></span><span class="ls0">he contents</span></span></div><div class="t m0 x50 h2f y32dc ff19 fs12 fc0 sc0 ls0 ws0">of the register</div><div class="t m0 x161 h6d y32dd ff19 fs12 fc0 sc0 ls0 ws0">into<span class="_"> </span><span class="ff1a">i</span></div><div class="t m0 x184 h2f y32de ff19 fs12 fc0 sc0 ls0 ws0">(register = 6)</div><div class="t m0 x1d8 h30 y32df ff19 fs13 fc0 sc0 ls0 ws0">Thread B</div><div class="t m0 x1ab h6f y32e0 ff19 fs14 fc0 sc0 ls0 ws0">fetch<span class="_"> </span><span class="ff1a">i<span class="_ _53"> </span></span>into register</div><div class="t m0 xcc h31 y32e1 ff19 fs14 fc0 sc0 ls0 ws0">(register = 5)</div><div class="t m0 x1f5 h32 y32e2 ff19 fs15 fc0 sc0 ls0 ws0">increment the</div><div class="t m0 x9c h32 y32e3 ff19 fs15 fc0 sc0 ls0 ws0">contents of</div><div class="t m0 x6c h32 y32e4 ff19 fs15 fc0 sc0 ls0 ws0">the register</div><div class="t m0 xcc h32 y32e5 ff19 fs15 fc0 sc0 ls0 ws0">(register = 6)</div><div class="t m0 x205 h33 y32e6 ff19 fs16 fc0 sc0 ls0 ws0">stor<span class="ls84a">et<span class="_ _5"></span><span class="ls0">he contents</span></span></div><div class="t m0 x9b h33 y32e7 ff19 fs16 fc0 sc0 ls0 ws0">of the register</div><div class="t m0 x1a4 h70 y32e8 ff19 fs16 fc0 sc0 ls0 ws0">into<span class="_"> </span><span class="ff1a">i</span></div><div class="t m0 xcc h33 y32e9 ff19 fs16 fc0 sc0 ls0 ws0">(register = 6)</div><div class="t m0 x1 h71 y32ea ff19 fs36 fc0 sc0 ls0 ws0">Contents of<span class="_"> </span><span class="ff1a">i</span></div><div class="t m0 x13b h83 y32eb ff19 fs36 fc0 sc0 ls0 ws0">5</div><div class="t m0 x13b h83 y32ec ff19 fs36 fc0 sc0 ls0 ws0">5</div><div class="t m0 x13b h83 y32ed ff19 fs36 fc0 sc0 ls0 ws0">6</div><div class="t m0 x13b h83 y32ee ff19 fs36 fc0 sc0 ls0 ws0">6</div><div class="t m0 x15 h34 y32ef ff19 fs17 fc0 sc0 ls0 ws0">time</div><div class="t m0 x159 h34 y32f0 ff18 fs17 fc0 sc0 ls0 ws0">Figure 1<span class="_ _0"></span>1.9<span class="_ _d9"> </span><span class="ff19 lsdd2">Tw<span class="_ _9"></span><span class="lsad3">ou<span class="_ _84"></span><span class="ls0">nsynchronized threads incr<span class="_ _0"></span>ementing the same variable</span></span></span></div><div class="t m0 x3f hcd y32f1 ff19 fs6e fc0 sc0 ls0 ws0">In <span class="_ _3"></span>a <span class="_ _9"></span>sequentially <span class="_ _3"></span>consistent <span class="_ _9"></span>environment, <span class="_ _3"></span>we <span class="_ _9"></span>can <span class="_ _3"></span>explain <span class="_ _9"></span>modiﬁcations <span class="_ _3"></span>to <span class="_ _9"></span>our <span class="_ _9"></span>data</div><div class="t m0 x32 hcd y32f2 ff19 fs6e fc0 sc0 ls0 ws0">as a <span class="_ _2"></span>sequential <span class="_ _2"></span>step <span class="_ _2"></span>of <span class="_ _2"></span>operations <span class="_ _2"></span>taken <span class="_ _2"></span>by <span class="_ _2"></span>the <span class="_ _2"></span>running threads. <span class="_ _66"> </span>W<span class="_ _6"></span><span class="lsdd3">ec<span class="_ _d"></span><span class="ls0">an say <span class="_ _2"></span>such <span class="_ _2"></span>things</span></span></div><div class="t m0 x32 hcd y32f3 ff19 fs6e fc0 sc0 ls0 ws0">as <span class="_ _23"></span>‘<span class="_ _1"></span>‘Thread <span class="_ _9"></span>A <span class="_ _23"> </span>incremented <span class="_ _9"></span>the <span class="_ _23"> </span>variable, <span class="_ _23"></span>then <span class="_ _9"></span>thread <span class="_ _23"></span>B <span class="_ _9"></span>incremented <span class="_ _23"></span>the <span class="_ _9"></span>variable, <span class="_ _23"></span>so <span class="_ _23"></span>its</div><div class="t m0 x32 hcd y32f4 ff19 fs6e fc0 sc0 ls0 ws0">value <span class="_ _2"></span>is <span class="_ _3"></span>two <span class="_ _3"></span>greater <span class="_ _2"></span>than <span class="_ _3"></span>before’<span class="_ _1"></span>’<span class="_ _47"> </span>or<span class="_ _47"> </span>‘<span class="_ _0"></span>‘Thread <span class="_ _2"></span>B <span class="_ _2"></span>incremented <span class="_ _2"></span>the <span class="_ _3"></span>variable, <span class="_ _3"></span>then <span class="_ _3"></span>thread <span class="_ _2"></span>A</div><div class="t m0 x32 hcd y32f5 ff19 fs6e fc0 sc0 ls0 ws0">incremented the <span class="_ _2"></span>variable, <span class="_ _3"></span>so <span class="_ _2"></span>its <span class="_ _2"></span>value <span class="_ _2"></span>is <span class="_ _3"></span>two <span class="_ _2"></span>greater than <span class="_ _3"></span>before.’<span class="_ _1"></span><span class="lsdd4">’N<span class="_ _5b"></span><span class="lsdd5">op<span class="_ _4f"></span><span class="ls0">ossible <span class="_ _2"></span>ordering</span></span></span></div><div class="t m0 x32 hcd y32f6 ff19 fs6e fc0 sc0 ls0 ws0">of the two threads can r<span class="_ _0"></span>esult in any other value of the variable.</div><div class="t m0 x3f hcd y32f7 ff19 fs6e fc0 sc0 ls0 ws0">Besides <span class="_"> </span>the <span class="_"> </span>computer <span class="_ _e"> </span>architecture, <span class="_ _e"> </span>races <span class="_"> </span>can <span class="_"> </span>arise <span class="_"> </span>fr<span class="_ _0"></span>om <span class="_"> </span>the <span class="_"> </span>ways <span class="_ _e"> </span>in <span class="_"> </span>which <span class="_"> </span>our</div><div class="t m0 x32 hcd y32f8 ff19 fs6e fc0 sc0 ls0 ws0">programs use <span class="_ _2"></span>variables, <span class="_ _2"></span>creating places <span class="_ _2"></span>where<span class="_ _66"> </span>it<span class="_ _47"> </span>is<span class="_"> </span>possible <span class="_ _2"></span>to <span class="_ _3"></span>view <span class="_ _2"></span>inconsistencies.<span class="_ _46"> </span>For</div><div class="t m0 x32 hcd y32f9 ff19 fs6e fc0 sc0 ls0 ws0">example, <span class="_ _9"></span>we <span class="_ _23"></span>might <span class="_ _9"></span>increment <span class="_ _9"></span>a <span class="_ _9"></span>variable <span class="_ _23"></span>and <span class="_ _9"></span>then <span class="_ _9"></span>make <span class="_ _23"></span>a <span class="_ _9"></span>decision <span class="_ _9"></span>based <span class="_ _23"></span>on <span class="_ _9"></span>its <span class="_ _9"></span>value.</div><div class="t m0 x32 hcd y32fa ff19 fs6e fc0 sc0 ls0 ws0">The combination of the <span class="_ _2"></span>increment step and the decision-making step <span class="_ _2"></span>isn’t atomic, which</div><div class="t m0 x32 hcd y32fb ff19 fs6e fc0 sc0 ls0 ws0">opens a window wher<span class="lsdd6">ei<span class="_ _4f"></span><span class="ls0">nconsistencies can arise.</span></span></div><div class="t m0 x32 h143 y32fc ff16 fsb0 fc0 sc0 ls0 ws0">11.6.1 <span class="_ _54"> </span>Mute<span class="lsdd7">xe</span>s</div><div class="t m0 x32 hcd y32fd ff19 fs6e fc0 sc0 lsdd8 ws0">We <span class="_ _47"> </span>c<span class="_ _9"></span><span class="ls0">an <span class="_ _23"> </span>protect <span class="_ _23"></span>our <span class="_ _23"></span>data <span class="_ _23"></span>and <span class="_ _23"> </span>ensur<span class="lsdd9">ea<span class="_ _43"></span><span class="ls0">ccess <span class="_ _23"> </span>by <span class="_ _23"> </span>only <span class="_ _23"> </span>one <span class="_ _23"> </span>thread <span class="_ _23"></span>at <span class="_ _23"></span>a <span class="_ _23"></span>time <span class="_ _23"> </span>by <span class="_ _23"> </span>using <span class="_ _23"> </span>the</span></span></span></div><div class="t m0 x32 hce y32fe ff19 fs6e fc0 sc0 ls0 ws0">pthreads <span class="_ _e"> </span>mutual-exclusion <span class="_"> </span>interfaces. <span class="_"> </span>A<span class="_ _59"> </span><span class="ff1b">mutex<span class="_ _59"> </span></span>is <span class="_"> </span>basically <span class="_"> </span>a <span class="_"> </span>lock <span class="_ _e"> </span>that <span class="_"> </span>we <span class="_"> </span>set <span class="_"> </span>(lock)</div><div class="t m0 x32 hcd y32ff ff19 fs6e fc0 sc0 ls0 ws0">befor<span class="lsdda">ea<span class="_ _43"></span><span class="ls0">ccessing <span class="_ _23"></span>a <span class="_ _23"> </span>shared <span class="_ _23"></span>r<span class="_ _0"></span>esource <span class="_ _23"></span>and <span class="_ _23"></span>release <span class="_ _9"></span>(unlock) <span class="_ _23"> </span>when <span class="_ _23"> </span>we’r<span class="lsddb">ed<span class="_ _43"></span><span class="ls0">one. <span class="_ _35"> </span>While<span class="_ _35"> </span>it <span class="_ _23"> </span>is</span></span></span></span></div><div class="t m0 x32 hcd y3300 ff19 fs6e fc0 sc0 ls0 ws0">set, <span class="_ _9"></span>any <span class="_ _9"></span>other <span class="_ _9"></span>thread <span class="_ _9"></span>that <span class="_ _9"></span>tries <span class="_ _9"></span>to <span class="_ _23"></span>set <span class="_ _9"></span>it <span class="_ _9"></span>will <span class="_ _9"></span>block <span class="_ _9"></span>until <span class="_ _9"></span>we <span class="_ _23"></span>r<span class="_ _0"></span>elease <span class="_ _9"></span>it.<span class="_ _5a"> </span>If <span class="_ _9"></span>mor<span class="lsddc">et<span class="_ _b"></span><span class="ls0">han <span class="_ _9"></span>one</span></span></div><div class="t m0 x32 hcd y3301 ff19 fs6e fc0 sc0 ls0 ws0">thread <span class="_ _2"></span>is <span class="_ _9"></span>blocked <span class="_ _9"></span>when <span class="_ _3"></span>we <span class="_ _9"></span>unlock <span class="_ _3"></span>the <span class="_ _9"></span>mutex, <span class="_ _3"></span>then <span class="_ _9"></span>all <span class="_ _3"></span>threads <span class="_ _3"></span>blocked <span class="_ _9"></span>on <span class="_ _3"></span>the <span class="_ _9"></span>lock <span class="_ _3"></span>will</div><div class="t m0 x32 hcd y3302 ff19 fs6e fc0 sc0 ls0 ws0">be <span class="_ _3"></span>made <span class="_ _9"></span>runnable, <span class="_ _9"></span>and <span class="_ _3"></span>the <span class="_ _9"></span>ﬁrst <span class="_ _9"></span>one <span class="_ _9"></span>to <span class="_ _3"></span>run <span class="_ _9"></span>will <span class="_ _9"></span>be <span class="_ _3"></span>able <span class="_ _9"></span>to <span class="_ _9"></span>set <span class="_ _9"></span>the <span class="_ _3"></span>lock.<span class="_ _5a"> </span>The <span class="_ _9"></span>others <span class="_ _9"></span>will</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:156.496207px;bottom:295.493113px;width:91.082001px;height:19.681000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
