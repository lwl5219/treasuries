<div id="pf3b6" class="pf w4 h1f" data-page-no="3b6"><div class="pc pc3b6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg3b6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">916<span class="_ _1b"> </span><span class="ff19">Solutions <span class="_"> </span>to <span class="_"> </span>Selected <span class="_"> </span>Exercises <span class="_ _2eb"> </span>Appendix<span class="_ _4b"> </span>C</span></div><div class="t m0 xc4 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">return(flags);</div><div class="t m0 x215 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h57 y1307 ff1a fs2d fc0 sc0 ls0 ws0">static off_t</div><div class="t m0 x215 h57 y1308 ff1a fs2d fc0 sc0 ls0 ws0">find_end(char *buf, size_t len)</div><div class="t m0 x215 h57 y3508 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h57 y3509 ff1a fs2d fc0 sc0 ls0 ws0">off_t off = 0;</div><div class="t m0 xc4 h57 y130b ff1a fs2d fc0 sc0 ls0 ws0">while (off &lt; len) {</div><div class="t m0 x206 h57 y130c ff1a fs2d fc0 sc0 ls0 ws0">if (buf[off] == 0)</div><div class="t m0 xe9 h57 y130d ff1a fs2d fc0 sc0 ls0 ws0">break;</div><div class="t m0 x206 h57 y130e ff1a fs2d fc0 sc0 ls0 ws0">off++;</div><div class="t m0 xc4 h57 y130f ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xc4 h57 y1310 ff1a fs2d fc0 sc0 ls0 ws0">return(off);</div><div class="t m0 x215 h57 y1311 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h57 y1337 ff1a fs2d fc0 sc0 ls0 ws0">static int</div><div class="t m0 x215 h57 y1338 ff1a fs2d fc0 sc0 ls0 ws0">mstream_read(void *cookie, char *buf, int len)</div><div class="t m0 x215 h57 y1339 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h57 y3929 ff1a fs2d fc0 sc0 ls0 ws0">int nr;</div><div class="t m0 xc4 h57 y1316 ff1a fs2d fc0 sc0 ls0 ws0">struct memstream *ms = cookie;</div><div class="t m0 xc4 h57 y133c ff1a fs2d fc0 sc0 ls0 ws0">if (!(ms-&gt;flags &amp; MS_READ)) {</div><div class="t m0 x206 h57 y133d ff1a fs2d fc0 sc0 ls0 ws0">errno = EBADF;</div><div class="t m0 x206 h57 y133e ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 xc4 h57 y133f ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xc4 h57 y1340 ff1a fs2d fc0 sc0 ls0 ws0">if (ms-&gt;curpos &gt;= ms-&gt;vsize)</div><div class="t m0 x206 h57 y1341 ff1a fs2d fc0 sc0 ls0 ws0">return(0);</div><div class="t m0 xc4 h57 y23d7 ff1a fs2d fc0 sc0 ls0 ws0">/* can only read from curpos to vsize */</div><div class="t m0 xc4 h57 y23ea ff1a fs2d fc0 sc0 ls0 ws0">nr = MIN(len, ms-&gt;vsize - ms-&gt;curpos);</div><div class="t m0 xc4 h57 y23eb ff1a fs2d fc0 sc0 ls0 ws0">memcpy(buf, ms-&gt;buf + ms-&gt;curpos, nr);</div><div class="t m0 xc4 h57 y23ec ff1a fs2d fc0 sc0 ls0 ws0">ms-&gt;curpos += nr;</div><div class="t m0 xc4 h57 y23ed ff1a fs2d fc0 sc0 ls0 ws0">return(nr);</div><div class="t m0 x215 h57 y23ee ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x215 h57 y392a ff1a fs2d fc0 sc0 ls0 ws0">static int</div><div class="t m0 x215 h57 y350e ff1a fs2d fc0 sc0 ls0 ws0">mstream_write(void *cookie, const char *buf, int len)</div><div class="t m0 x215 h57 y350f ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 xc4 h57 y3510 ff1a fs2d fc0 sc0 ls0 ws0">int nw, off;</div><div class="t m0 xc4 h57 y3511 ff1a fs2d fc0 sc0 ls0 ws0">struct memstream *ms = cookie;</div><div class="t m0 xc4 h57 y392b ff1a fs2d fc0 sc0 ls0 ws0">if (!(ms-&gt;flags &amp; (MS_APPEND|MS_WRITE))) {</div><div class="t m0 x206 h57 y60ac ff1a fs2d fc0 sc0 ls0 ws0">errno = EBADF;</div><div class="t m0 x206 h57 y60ad ff1a fs2d fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 xc4 h57 y60ae ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xc4 h57 y3515 ff1a fs2d fc0 sc0 ls0 ws0">if (ms-&gt;flags &amp; MS_APPEND)</div><div class="t m0 x206 h57 y3516 ff1a fs2d fc0 sc0 ls0 ws0">off = ms-&gt;vsize;</div><div class="t m0 xc4 h57 y3517 ff1a fs2d fc0 sc0 ls0 ws0">else</div><div class="t m0 x206 h57 y3518 ff1a fs2d fc0 sc0 ls0 ws0">off = ms-&gt;curpos;</div><div class="t m0 xc4 h57 y3519 ff1a fs2d fc0 sc0 ls0 ws0">nw = MIN(len, ms-&gt;rsize - off);</div><div class="t m0 xc4 h57 y351a ff1a fs2d fc0 sc0 ls0 ws0">memcpy(ms-&gt;buf + off, buf, nw);</div><div class="t m0 xc4 h57 y351b ff1a fs2d fc0 sc0 ls0 ws0">ms-&gt;curpos = off + nw;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
