<div id="pf1eb" class="pf w4 h1f" data-page-no="1eb"><div class="pc pc1eb w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg1eb.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>12.9<span class="_ _20d"> </span>Threads <span class="_"> </span>and<span class="_ _4b"> </span><span class="ff1a">fork<span class="_ _1b"> </span><span class="ff18">457</span></span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">in <span class="_ _23"></span>the <span class="_ _9"></span>main <span class="_ _23"></span>thread <span class="_ _9"></span>of <span class="_ _23"></span>control <span class="_ _9"></span>to <span class="_ _23"></span>check <span class="_ _9"></span>the <span class="_ _23"> </span>value <span class="_ _23"></span>of <span class="_ _23"></span>the <span class="_ _9"></span>ﬂag <span class="_ _23"></span>and <span class="_ _23"></span>atomically <span class="_ _9"></span>release <span class="_ _23"></span>the</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">mutex when we wait for the condition.</div><div class="t m0 x3f h26 y131 ff19 fsf fc0 sc0 ls0 ws0">Note <span class="_ _53"> </span>that <span class="_ _53"> </span>we <span class="_ _e"> </span>block<span class="_ _44"> </span><span class="ff1a">SIGINT<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">SIGQUIT<span class="_ _4b"> </span></span>in <span class="_ _53"> </span>the <span class="_ _53"> </span>beginning <span class="_ _e"> </span>of <span class="_ _53"> </span>the <span class="_ _53"> </span>main <span class="_ _e"> </span>thread.</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">When <span class="_ _e"> </span>we <span class="_"> </span>cr<span class="_ _1"></span>eate <span class="_"> </span>the <span class="_ _e"> </span>thread <span class="_ _53"> </span>to <span class="_"> </span>handle <span class="_ _53"> </span>signals, <span class="_"> </span>the <span class="_ _e"> </span>thread <span class="_ _53"> </span>inherits <span class="_"> </span>the <span class="_ _53"> </span>current <span class="_ _e"> </span>signal</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">mask. <span class="_ _45"> </span>Since<span class="_ _45"> </span><span class="ff1a">sigwait<span class="_ _45"> </span></span>will <span class="_ _23"></span>unblock <span class="_ _9"></span>the <span class="_ _9"></span>signals, <span class="_ _23"></span>only <span class="_ _9"></span>one <span class="_ _9"></span>thread <span class="_ _9"></span>is <span class="_ _23"></span>available <span class="_ _9"></span>to <span class="_ _9"></span>receive</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">signals. <span class="_ _61"> </span>This<span class="_ _61"> </span>enables <span class="_ _47"> </span>us <span class="_ _47"> </span>to <span class="_ _66"> </span>code <span class="_ _47"> </span>the <span class="_ _47"> </span>main <span class="_ _66"> </span>thread <span class="_ _47"> </span>without <span class="_ _66"> </span>having <span class="_ _47"> </span>to <span class="_ _47"> </span>worry <span class="_ _66"> </span>about</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">interrupts fr<span class="_ _0"></span>om these signals.</div><div class="t m0 x3f h2a y136 ff19 fsf fc0 sc0 ls0 ws0">If we run this pr<span class="_ _0"></span>ogram, we get output similar to that from Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _d"></span><span class="ls0">0.23:</span></span></div><div class="t m0 x3f h57 y797 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 y38d0 ff1f fs2d fc0 sc0 ls0 ws0">ˆ?<span class="_ _cb"> </span><span class="ff1b">type the interrupt character</span></div><div class="t m0 x3f h57 y38d1 ff1a fs2d fc0 sc0 ls0 ws0">interrupt</div><div class="t m0 x3f h57 y38d2 ff1f fs2d fc0 sc0 ls0 ws0">ˆ?<span class="_ _cb"> </span><span class="ff1b">type the interrupt character again</span></div><div class="t m0 x3f h57 y38d3 ff1a fs2d fc0 sc0 ls0 ws0">interrupt</div><div class="t m0 x3f h57 y38d4 ff1f fs2d fc0 sc0 ls0 ws0">ˆ?<span class="_ _cb"> </span><span class="ff1b">and again</span></div><div class="t m0 x3f h57 y38d5 ff1a fs2d fc0 sc0 ls0 ws0">interrupt</div><div class="t m0 x3f h57 y38d6 ff1f fs2d fc0 sc0 ls0 ws0">ˆ\<span class="_"> </span><span class="ff1a">$<span class="_ _1e7"> </span><span class="ff1b">now terminate with quit character</span></span></div><div class="t m0 x35 h7b y38d7 ff16 fs27 fc0 sc0 ls0 ws0">12.9 <span class="_ _93"> </span>Threads<span class="_ _54"> </span>and<span class="_ _54"> </span><span class="ff1f">fork</span></div><div class="t m0 x32 h4d y38d8 ff19 fs26 fc0 sc0 ls0 ws0">When <span class="_ _23"></span>a <span class="_ _23"></span>thread <span class="_ _9"></span>calls<span class="_ _35"> </span><span class="ff1a">fork</span><span class="lsf2e">,ac<span class="_ _b"></span><span class="ls0">opy <span class="_ _9"></span>of <span class="_ _23"> </span>the <span class="_ _23"> </span>entir<span class="lsf2e">ep<span class="_ _43"></span><span class="lscc">ro<span class="_ _2"></span><span class="ls0">cess <span class="_ _23"> </span>address <span class="_ _23"></span>space <span class="_ _23"></span>is <span class="_ _23"></span>made <span class="_ _23"></span>for <span class="_ _23"></span>the</span></span></span></span></span></div><div class="t m0 x32 h49 y38d9 ff19 fs26 fc0 sc0 ls0 ws0">child. <span class="_ _44"> </span>Recall<span class="_ _44"> </span>the <span class="_ _53"> </span>discussion <span class="_ _53"> </span>of <span class="_ _53"> </span>copy-on-write <span class="_ _53"> </span>in <span class="_ _53"> </span>Section <span class="_ _53"> </span>8.3.<span class="_ _54"> </span>The <span class="_ _53"> </span>child <span class="_ _53"> </span>is <span class="_ _53"> </span>an <span class="_ _53"> </span>entirely</div><div class="t m0 x32 h49 y38da ff19 fs26 fc0 sc0 ls0 ws0">differ<span class="_ _0"></span>ent <span class="_ _e"> </span>process <span class="_"> </span>fr<span class="_ _1"></span>om <span class="_"> </span>the <span class="_"> </span>par<span class="_ _1"></span>ent, <span class="_"> </span>and <span class="_"> </span>as <span class="_ _53"> </span>long <span class="_"> </span>as <span class="_"> </span>neither <span class="_ _e"> </span>one <span class="_"> </span>makes <span class="_ _e"> </span>changes <span class="_"> </span>to <span class="_ _e"> </span>its</div><div class="t m0 x32 h49 y38db ff19 fs26 fc0 sc0 ls0 ws0">memory <span class="_ _2"></span>contents, <span class="_ _2"></span>copies <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>memory <span class="_ _3"></span>pages <span class="_ _2"></span>can <span class="_ _2"></span>be <span class="_ _2"></span>shared <span class="_ _2"></span>between <span class="_ _2"></span>parent and <span class="_ _2"></span>child.</div><div class="t m0 x3f h49 y38dc ff19 fs26 fc0 sc0 ls0 ws0">By <span class="_ _9"></span>inheriting <span class="_ _9"></span>a <span class="_ _9"></span>copy <span class="_ _9"></span>of <span class="_ _23"></span>the <span class="_ _9"></span>address <span class="_ _3"></span>space, <span class="_ _9"></span>the <span class="_ _23"></span>child <span class="_ _9"></span>also <span class="_ _9"></span>inherits <span class="_ _9"></span>the <span class="_ _9"></span>state <span class="_ _9"></span>of <span class="_ _9"></span>every</div><div class="t m0 x32 h49 y2247 ff19 fs26 fc0 sc0 ls0 ws0">mutex, reader–writer lock, <span class="_ _2"></span>and condition <span class="_ _2"></span>variable <span class="_ _2"></span>from the parent process. <span class="_"> </span>If<span class="_ _66"> </span>the <span class="_ _2"></span>parent</div><div class="t m0 x32 h49 y2248 ff19 fs26 fc0 sc0 ls0 ws0">consists <span class="_ _2"></span>of <span class="_ _3"></span>mor<span class="ls392">et<span class="_ _8"></span><span class="ls0">han <span class="_ _3"></span>one <span class="_ _3"></span>thread, <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _3"></span>will <span class="_ _3"></span>need <span class="_ _3"></span>to <span class="_ _3"></span>clean <span class="_ _2"></span>up <span class="_ _3"></span>the <span class="_ _3"></span>lock <span class="_ _3"></span>state <span class="_ _3"></span>if <span class="_ _3"></span>it <span class="_ _3"></span>isn’t</span></span></div><div class="t m0 x32 h4d y38dd ff19 fs26 fc0 sc0 ls0 ws0">going to call<span class="_"> </span><span class="ff1a">exec<span class="_ _80"> </span></span>immediately after<span class="_"> </span><span class="ff1a">fork<span class="_ _66"> </span></span><span class="lscc">re</span>turns.</div><div class="t m0 x3f h49 y38de ff19 fs26 fc0 sc0 ls0 ws0">Inside the child process, only one <span class="_ _2"></span>thread exists.<span class="_ _59"> </span>It <span class="_ _2"></span>is made from a copy <span class="_ _2"></span>of the thread</div><div class="t m0 x32 h4d y38df ff19 fs26 fc0 sc0 ls0 ws0">that <span class="_ _9"></span>called<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _47"> </span></span>in <span class="_ _9"></span>the <span class="_ _9"></span>parent. <span class="_ _47"> </span>If<span class="_ _45"> </span>the <span class="_ _9"></span>threads <span class="_ _3"></span>in <span class="_ _9"></span>the <span class="_ _9"></span>parent <span class="_ _3"></span>process <span class="_ _9"></span>hold <span class="_ _9"></span>any <span class="_ _3"></span>locks, <span class="_ _9"></span>the</div><div class="t m0 x32 h49 y272 ff19 fs26 fc0 sc0 ls0 ws0">same <span class="_ _3"></span>locks <span class="_ _3"></span>will <span class="_ _3"></span>also <span class="_ _9"></span>be <span class="_ _3"></span>held <span class="_ _3"></span>in <span class="_ _3"></span>the <span class="_ _9"></span>child <span class="_ _3"></span>process. <span class="_ _47"> </span>The<span class="_ _47"> </span>problem <span class="_ _2"></span>is <span class="_ _9"></span>that <span class="_ _3"></span>the <span class="_ _3"></span>child <span class="_ _3"></span>process</div><div class="t m0 x32 h49 y38e0 ff19 fs26 fc0 sc0 ls0 ws0">doesn’t <span class="_ _3"></span>contain <span class="_ _3"></span>copies <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>threads <span class="_ _2"></span>holding <span class="_ _3"></span>the <span class="_ _9"></span>locks, <span class="_ _3"></span>so <span class="_ _3"></span>there<span class="_ _47"> </span>is<span class="_ _47"> </span>no<span class="_ _47"> </span>way <span class="_ _9"></span>for <span class="_ _3"></span>the <span class="_ _3"></span>child</div><div class="t m0 x32 h49 y38e1 ff19 fs26 fc0 sc0 ls0 ws0">to know which locks ar<span class="lsd3">eh<span class="_ _4f"></span><span class="ls0">eld and need to be unlocked.</span></span></div><div class="t m0 x3f h4d y38e2 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _23"> </span>problem <span class="_ _23"> </span>can <span class="_ _42"> </span>be <span class="_ _23"> </span>avoided <span class="_ _42"> </span>if <span class="_ _42"> </span>the <span class="_ _23"> </span>child <span class="_ _42"> </span>calls <span class="_ _23"> </span>one <span class="_ _42"> </span>of <span class="_ _23"> </span>the<span class="_ _44"> </span><span class="ff1a">exec<span class="_ _35"> </span></span>functions <span class="_ _23"> </span>directly</div><div class="t m0 x32 h4d y38e3 ff19 fs26 fc0 sc0 ls0 ws0">after <span class="_ _3"></span>returning <span class="_ _9"></span>from<span class="_ _47"> </span><span class="ff1a">fork</span><span class="lsf2f">.I<span class="_ _62"></span><span class="lsf30">nt<span class="_ _8"></span><span class="ls0">his <span class="_ _3"></span>case, <span class="_ _9"></span>the <span class="_ _9"></span>old <span class="_ _9"></span>address <span class="_ _3"></span>space <span class="_ _3"></span>is <span class="_ _9"></span>discarded, <span class="_ _3"></span>so <span class="_ _9"></span>the <span class="_ _9"></span>lock</span></span></span></div><div class="t m0 x32 h49 y38e4 ff19 fs26 fc0 sc0 ls0 ws0">state <span class="_ _e"> </span>doesn’t <span class="_"> </span>matter<span class="_ _6"></span><span class="lsf31">.T<span class="_ _64"></span><span class="ls0">his <span class="_ _e"> </span>is <span class="_"> </span>not <span class="_ _e"> </span>always <span class="_"> </span>possible, <span class="_ _53"> </span>however<span class="_ _1"></span>,<span class="_ _59"> </span>so<span class="_ _59"> </span>if<span class="_ _4b"> </span>the <span class="_"> </span>child <span class="_ _e"> </span>needs <span class="_"> </span>to</span></span></div><div class="t m0 x32 h49 y38e5 ff19 fs26 fc0 sc0 ls0 ws0">continue processing, we need to use a dif<span class="_ _0"></span>fer<span class="_ _0"></span>ent strategy<span class="_ _4"></span>.</div><div class="t m0 x3f h49 y38e6 ff19 fs26 fc0 sc0 ls164 ws0">To <span class="_ _4b"> </span>a<span class="_ _9"></span><span class="ls0">void <span class="_"> </span>problems <span class="_"> </span>with <span class="_ _66"> </span>inconsistent <span class="_ _66"> </span>state <span class="_ _66"> </span>in <span class="_"> </span>a <span class="_ _66"> </span>multithreaded <span class="_"> </span>process, <span class="_"> </span>POSIX.1</span></div><div class="t m0 x32 h49 y38e7 ff19 fs26 fc0 sc0 ls0 ws0">states <span class="_ _2"></span>that <span class="_ _3"></span>only <span class="_ _3"></span>async-signal <span class="_ _3"></span>safe <span class="_ _3"></span>functions <span class="_ _3"></span>should <span class="_ _3"></span>be <span class="_ _3"></span>called <span class="_ _3"></span>by <span class="_ _2"></span>a <span class="_ _3"></span>child <span class="_ _3"></span>process <span class="_ _3"></span>between</div><div class="t m0 x32 h4d y38e8 ff19 fs26 fc0 sc0 ls0 ws0">the <span class="_ _9"></span>time <span class="_ _9"></span>that<span class="_ _45"> </span><span class="ff1a">fork<span class="_ _47"> </span></span><span class="lscc">re<span class="_ _2"></span></span>turns <span class="_ _9"></span>and <span class="_ _9"></span>the <span class="_ _9"></span>time <span class="_ _9"></span>that <span class="_ _9"></span>the <span class="_ _9"></span>child <span class="_ _9"></span>calls <span class="_ _9"></span>one <span class="_ _9"></span>of <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">exec<span class="_ _47"> </span></span>functions.</div><div class="t m0 x32 h4d y38e9 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _3"></span>limits <span class="_ _3"></span>what <span class="_ _9"></span>the <span class="_ _3"></span>child <span class="_ _9"></span>can <span class="_ _3"></span>do <span class="_ _3"></span>befor<span class="lsf32">ec<span class="_ _8"></span><span class="ls0">alling<span class="_ _47"> </span><span class="ff1a">exec</span><span class="lsf32">,b<span class="_ _8"></span><span class="ls0">ut <span class="_ _9"></span>doesn’t <span class="_ _3"></span>address <span class="_ _3"></span>the <span class="_ _3"></span>problem</span></span></span></span></div><div class="t m0 x32 h49 y38ea ff19 fs26 fc0 sc0 ls0 ws0">of lock state in the child process.</div><div class="t m0 x3f h4a y38eb ff19 fs26 fc0 sc0 ls164 ws0">To <span class="_ _35"> </span>c<span class="_ _9"></span><span class="ls0">lean <span class="_ _53"> </span>up <span class="_ _e"> </span>the <span class="_ _e"> </span>lock <span class="_ _53"> </span>state, <span class="_ _e"> </span>we <span class="_ _53"> </span>can <span class="_ _e"> </span>establish<span class="_ _4b"> </span><span class="ff1b">fork <span class="_ _e"> </span>handlers<span class="_ _4b"> </span></span>by <span class="_ _53"> </span>calling <span class="_ _e"> </span>the <span class="_ _53"> </span>function</span></div><div class="t m0 x32 h4d y38ec ff1a fs26 fc0 sc0 ls0 ws0">pthread_atfork<span class="ff19">.</span></div><a class="l" href="#pf11" data-dest-detail='[17,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:754.128903px;width:146.159691px;height:19.679992px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
