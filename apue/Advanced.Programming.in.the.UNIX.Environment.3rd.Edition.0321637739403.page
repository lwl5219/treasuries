<div id="pf193" class="pf w4 h1f" data-page-no="193"><div class="pc pc193 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg193.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.18<span class="_ _27b"> </span><span class="ff1a">system<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">369</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">Recall <span class="_ _2"></span>from <span class="_ _3"></span>Section <span class="_ _2"></span>9.6 <span class="_ _3"></span>that <span class="_ _3"></span>typing <span class="_ _3"></span>the <span class="_ _3"></span>interrupt <span class="_ _2"></span>character <span class="_ _3"></span>causes <span class="_ _3"></span>the <span class="_ _3"></span>interrupt <span class="_ _3"></span>signal <span class="_ _2"></span>to</div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">be <span class="_ _42"> </span>sent <span class="_ _23"> </span>to <span class="_ _42"> </span>all <span class="_ _42"> </span>the <span class="_ _42"> </span>processes <span class="_ _23"> </span>in <span class="_ _42"> </span>the <span class="_ _42"> </span>foregr<span class="_ _1"></span>ound <span class="_ _42"> </span>process <span class="_ _42"> </span>gr<span class="_ _0"></span>oup. <span class="_ _35"> </span>Figur<span class="lsd12">e1<span class="_ _43"></span><span class="ls0">0.27 <span class="_ _23"> </span>shows <span class="_ _42"> </span>the</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">arrangement of the processes when the editor is r<span class="_ _0"></span>unning.</div><div class="t m0 x7c h2d y2f46 ff19 fs10 fc0 sc0 ls0 ws0">login shell</div><div class="t m0 x26 h4f y2f47 ff1a fs11 fc0 sc0 ls0 ws0">fork</div><div class="t m0 x26 h4f y2f48 ff1a fs11 fc0 sc0 ls0 ws0">exec</div><div class="t m0 x1e0 h6d y2f49 ff1a fs12 fc0 sc0 ls0 ws0">a.out</div><div class="t m0 x129 h63 y2f4a ff1a fs13 fc0 sc0 ls0 ws0">fork</div><div class="t m0 x129 h63 y2f4b ff1a fs13 fc0 sc0 ls0 ws0">exec</div><div class="t m0 x177 h6f y2f4c ff1a fs14 fc0 sc0 ls0 ws0">/bin/sh</div><div class="t m0 x14c h66 y2f4d ff1a fs15 fc0 sc0 ls0 ws0">fork</div><div class="t m0 x14c h66 y2f4e ff1a fs15 fc0 sc0 ls0 ws0">exec</div><div class="t m0 x160 h70 y2f4f ff1a fs16 fc0 sc0 ls0 ws0">/bin/ed</div><div class="t m0 x3f h83 y2f50 ff19 fs36 fc0 sc0 ls0 ws0">background pr<span class="_ _0"></span>ocess group</div><div class="t m0 xeb h34 y2f51 ff19 fs17 fc0 sc0 ls0 ws0">foregr<span class="_ _0"></span>ound process gr<span class="_ _0"></span>oup</div><div class="t m0 x1d h34 y2f52 ff18 fs17 fc0 sc0 ls0 ws0">Figure 10.27<span class="_ _5a"> </span><span class="ff19">Foreground and backgr<span class="_ _0"></span>ound process gr<span class="_ _0"></span>oups for Figur<span class="lsad3">e1<span class="_ _5"></span><span class="ls0">0.26</span></span></span></div><div class="t m0 x3f h138 y2f53 ff19 fs6e fc0 sc0 ls0 ws0">In this example,<span class="_"> </span><span class="ff1a">SIGINT<span class="_ _66"> </span></span>is sent to all three foregr<span class="_ _0"></span>ound processes. <span class="_"> </span>(The<span class="_"> </span>shell ignor<span class="_ _0"></span>es</div><div class="t m0 x32 h138 y2f54 ff19 fs6e fc0 sc0 ls0 ws0">it.) <span class="_ _35"> </span>As<span class="_ _35"> </span>we <span class="_ _42"> </span>can <span class="_ _42"> </span>see <span class="_ _23"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>output, <span class="_ _23"> </span>both <span class="_ _42"> </span>the<span class="_ _35"> </span><span class="ff1a">a.out<span class="_ _44"> </span></span>process <span class="_ _23"></span>and <span class="_ _23"> </span>the <span class="_ _42"> </span>editor <span class="_ _23"> </span>catch <span class="_ _42"> </span>the</div><div class="t m0 x32 h138 y2f55 ff19 fs6e fc0 sc0 ls0 ws0">signal. <span class="_ _16"> </span>But<span class="_ _16"> </span>when <span class="_ _45"> </span>we’r<span class="lsd13">er<span class="_ _26"></span><span class="ls0">unning <span class="_ _45"> </span>another <span class="_ _47"> </span>program <span class="_ _47"> </span>with <span class="_ _45"> </span>the<span class="_ _16"> </span><span class="ff1a">system<span class="_ _16"> </span></span>function, <span class="_ _45"> </span>we</span></span></div><div class="t m0 x32 hcd y2f56 ff19 fs6e fc0 sc0 ls0 ws0">shouldn’t <span class="_"> </span>have <span class="_ _47"> </span>both <span class="_"> </span>the <span class="_ _47"> </span>parent <span class="_"> </span>and <span class="_ _66"> </span>the <span class="_ _66"> </span>child <span class="_ _47"> </span>catching <span class="_"> </span>the <span class="_ _47"> </span>two <span class="_"> </span>terminal-generated</div><div class="t m0 x32 hcd y2f57 ff19 fs6e fc0 sc0 ls0 ws0">signals: <span class="_ _42"> </span>interrupt <span class="_ _23"> </span>and <span class="_ _42"> </span>quit.<span class="_ _51"> </span>Instead, <span class="_ _42"> </span>these <span class="_ _42"> </span>two <span class="_ _23"> </span>signals <span class="_ _42"> </span>should <span class="_ _42"> </span>be <span class="_ _23"> </span>sent <span class="_ _42"> </span>to <span class="_ _42"> </span>the <span class="_ _42"> </span>program</div><div class="t m0 x32 h138 y2f58 ff19 fs6e fc0 sc0 ls0 ws0">that <span class="_ _23"> </span>is <span class="_ _23"> </span>running: <span class="_ _42"> </span>the <span class="_ _23"></span>child.<span class="_ _51"> </span>Since <span class="_ _23"> </span>the <span class="_ _42"> </span>command <span class="_ _23"> </span>that <span class="_ _23"> </span>is <span class="_ _42"> </span>executed <span class="_ _23"></span>by<span class="_ _35"> </span><span class="ff1a">system<span class="_ _35"> </span></span>can <span class="_ _23"> </span>be <span class="_ _42"> </span>an</div><div class="t m0 x32 h138 y2f59 ff19 fs6e fc0 sc0 ls0 ws0">interactive <span class="_ _53"> </span>command <span class="_ _e"> </span>(as <span class="_ _e"> </span>is <span class="_ _e"> </span>the<span class="_ _4b"> </span><span class="ff1a">ed<span class="_ _4b"> </span></span>program <span class="_ _53"> </span>in <span class="_ _e"> </span>this <span class="_ _53"> </span>example) <span class="_ _e"> </span>and <span class="_ _e"> </span>since <span class="_ _e"> </span>the <span class="_ _e"> </span>caller <span class="_ _53"> </span>of</div><div class="t m0 x32 h138 y2f5a ff1a fs6e fc0 sc0 ls0 ws0">system<span class="_ _47"> </span><span class="ff19">gives <span class="_ _3"></span>up <span class="_ _9"></span>control <span class="_ _2"></span>while <span class="_ _9"></span>the <span class="_ _3"></span>program <span class="_ _3"></span>executes, <span class="_ _3"></span>waiting <span class="_ _3"></span>for <span class="_ _9"></span>it <span class="_ _3"></span>to <span class="_ _3"></span>ﬁnish, <span class="_ _9"></span>the <span class="_ _3"></span>caller</span></div><div class="t m0 x32 h138 y2f5b ff19 fs6e fc0 sc0 ls0 ws0">of<span class="_ _46"> </span><span class="ff1a">system<span class="_ _61"> </span></span>should <span class="_ _66"> </span>not <span class="_ _66"> </span>be <span class="_ _47"> </span>receiving <span class="_"> </span>these <span class="_"> </span>two <span class="_ _47"> </span>terminal-generated <span class="_"> </span>signals.<span class="_ _50"> </span>For <span class="_ _66"> </span>this</div><div class="t m0 x32 h138 y2f5c ff19 fs6e fc0 sc0 lsd14 ws0">re<span class="ls0">ason, <span class="_"> </span>POSIX.1 <span class="_ _53"> </span>speciﬁes <span class="_ _e"> </span>that <span class="_ _e"> </span>the<span class="_ _4b"> </span><span class="ff1a">system<span class="_ _59"> </span></span>function <span class="_ _e"> </span>should <span class="_ _e"> </span>ignor<span class="lsd15">et<span class="_ _55"></span><span class="ls0">hese <span class="_ _e"> </span>two <span class="_ _e"> </span>signals</span></span></span></div><div class="t m0 x32 hcd y2f5d ff19 fs6e fc0 sc0 ls0 ws0">while waiting for the command to complete.</div><div class="t m0 x35 h139 y2f5e ff16 fs34 fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h6a y2f5f ff19 fs34 fc0 sc0 ls0 ws0">Figur<span class="lsd16">e1<span class="_ _8"></span><span class="ls0">0.28 <span class="_ _2"></span>shows <span class="_ _3"></span>an <span class="_ _2"></span>implementation <span class="_ _3"></span>of <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">system<span class="_ _47"> </span></span>function <span class="_ _2"></span>with <span class="_ _3"></span>the <span class="_ _2"></span>required <span class="_ _2"></span>signal</span></span></div><div class="t m0 x32 h69 y2f60 ff19 fs34 fc0 sc0 ls0 ws0">handling.</div><div class="t m0 x32 h13a y2f61 ff1a fsab fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&lt;sys/wait.h&gt;</div><div class="t m0 x32 h13a y2f62 ff1a fsab fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&lt;errno.h&gt;</div><div class="t m0 x32 h13a y2f63 ff1a fsab fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&lt;signal.h&gt;</div><div class="t m0 x32 h13a y2f64 ff1a fsab fc0 sc0 ls0 ws0">#include <span class="_ _68"> </span>&lt;unistd.h&gt;</div><div class="t m0 x32 h13a y2f65 ff1a fsab fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h13a y2f66 ff1a fsab fc0 sc0 ls0 ws0">system(const char *cmdstring)<span class="_ _68"> </span>/* with appropriate signal handling */</div><div class="t m0 x32 h13a y2f67 ff1a fsab fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h13a y2f68 ff1a fsab fc0 sc0 ls0 ws0">pid_t <span class="_ _12d"> </span>pid;</div><div class="t m0 x8a h13a y2f69 ff1a fsab fc0 sc0 ls0 ws0">int <span class="_ _122"> </span>status;</div><div class="t m0 x8a h13a y2f6a ff1a fsab fc0 sc0 ls0 ws0">struct sigaction<span class="_ _15"> </span>ignore, saveintr, savequit;</div><div class="t m0 x8a h13a y2f6b ff1a fsab fc0 sc0 ls0 ws0">sigset_t <span class="_ _bd"> </span>chldmask,<span class="_"> </span>savemask;</div><div class="t m0 x8a h13a y2f6c ff1a fsab fc0 sc0 ls0 ws0">if (cmdstring == NULL)</div><div class="t m0 x9d h13a y2f6d ff1a fsab fc0 sc0 ls0 ws0">return(1); <span class="_ _8a"> </span>/*<span class="_"> </span>always a command processor with UNIX */</div><div class="t m0 x8a h13a y2f6e ff1a fsab fc0 sc0 ls0 ws0">ignore.sa_handler = SIG_IGN;<span class="_ _15"> </span>/* ignore SIGINT and SIGQUIT */</div><div class="t m0 x8a h13a y2f6f ff1a fsab fc0 sc0 ls0 ws0">sigemptyset(&amp;ignore.sa_mask);</div><div class="t m0 x8a h13a y2f70 ff1a fsab fc0 sc0 ls0 ws0">ignore.sa_flags = 0;</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
