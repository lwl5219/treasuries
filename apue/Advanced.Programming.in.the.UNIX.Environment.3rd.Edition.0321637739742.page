<div id="pf2e6" class="pf w4 h1f" data-page-no="2e6"><div class="pc pc2e6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2e6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">708<span class="_ _1b"> </span><span class="ff19 ls719">Te<span class="_ _9"></span><span class="ls0">rminal <span class="_"> </span>I/O<span class="_ _eb"> </span>Chapter <span class="_"> </span>18</span></span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">tty_atexit(void) <span class="_ _b7"> </span>/*<span class="_"> </span>can be set up by atexit(tty_atexit) */</div><div class="t m0 x32 h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">if (ttysavefd &gt;= 0)</div><div class="t m0 x9d h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">tty_reset(ttysavefd);</div><div class="t m0 x32 h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y124d ff1a fs2d fc0 sc0 ls0 ws0">struct termios *</div><div class="t m0 x32 h57 y124e ff1a fs2d fc0 sc0 ls0 ws0">tty_termios(void) <span class="_ _189"> </span>/*<span class="_"> </span>let caller see original tty state */</div><div class="t m0 x32 h57 y124f ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y1250 ff1a fs2d fc0 sc0 ls0 ws0">return(&amp;save_termios);</div><div class="t m0 x32 h57 y8d8 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x36 h2d y51f1 ff18 fs10 fc0 sc0 ls0 ws0">Figure 18.20<span class="_ _5a"> </span><span class="ff19">Set terminal mode to cbreak or raw</span></div><div class="t m0 x32 h49 y51f2 ff19 fs26 fc0 sc0 ls0 ws0">Our deﬁnition of cbreak mode is the following:</div><div class="t m0 x3f h49 y51f3 ff19 fs26 fc0 sc0 ls15d ws0">•N<span class="_ _4d"></span><span class="ls0">oncanonical <span class="_ _e"> </span>mode.<span class="_ _48"> </span>As <span class="_ _e"> </span>we <span class="_"> </span>mentioned <span class="_ _53"> </span>at <span class="_"> </span>the <span class="_ _53"> </span>beginning <span class="_"> </span>of <span class="_ _53"> </span>this <span class="_ _e"> </span>section, <span class="_"> </span>this</span></div><div class="t m0 x15 h49 y51f4 ff19 fs26 fc0 sc0 ls0 ws0">mode <span class="_"> </span>turns <span class="_ _53"> </span>of<span class="ls1524">fs<span class="_ _4a"></span><span class="ls0">ome <span class="_"> </span>input <span class="_"> </span>character <span class="_ _53"> </span>processing. <span class="_ _59"> </span>It<span class="_ _59"> </span>does <span class="_"> </span>not <span class="_ _e"> </span>turn <span class="_"> </span>of<span class="_ _1"></span><span class="ls1525">fs<span class="_ _55"></span><span class="ls0">ignal</span></span></span></span></div><div class="t m0 x15 h49 y51f5 ff19 fs26 fc0 sc0 ls0 ws0">handling, <span class="_"> </span>so <span class="_"> </span>the <span class="_"> </span>user <span class="_ _66"> </span>can <span class="_"> </span>always <span class="_ _66"> </span>type <span class="_"> </span>one <span class="_ _66"> </span>of <span class="_"> </span>the <span class="_"> </span>characters <span class="_ _66"> </span>that <span class="_"> </span>triggers <span class="_ _66"> </span>a</div><div class="t m0 x15 h49 y51f6 ff19 fs26 fc0 sc0 ls0 ws0">terminal-generated <span class="_ _23"> </span>signal.<span class="_ _51"> </span>Be <span class="_ _42"> </span>awar<span class="ls1526">et<span class="_ _43"></span><span class="ls0">hat <span class="_ _23"></span>the <span class="_ _23"> </span>caller <span class="_ _23"> </span>should <span class="_ _42"> </span>catch <span class="_ _23"> </span>these <span class="_ _23"> </span>signals;</span></span></div><div class="t m0 x15 h49 y51f7 ff19 fs26 fc0 sc0 ls0 ws0">otherwise, <span class="_ _23"></span>ther<span class="_ _0"></span>e’s <span class="_ _23"></span>a <span class="_ _9"></span>chance <span class="_ _23"> </span>that <span class="_ _23"></span>the <span class="_ _9"></span>signal <span class="_ _23"> </span>will <span class="_ _23"></span>terminate <span class="_ _23"></span>the <span class="_ _9"></span>program, <span class="_ _23"></span>and <span class="_ _9"></span>the</div><div class="t m0 x15 h49 y51f8 ff19 fs26 fc0 sc0 ls0 ws0">terminal will be left in cbreak mode.</div><div class="t m0 x15 h49 y51f9 ff19 fs26 fc0 sc0 ls0 ws0">As <span class="_"> </span>a <span class="_"> </span>general <span class="_ _e"> </span>rule, <span class="_"> </span>whenever <span class="_"> </span>we <span class="_"> </span>write <span class="_ _e"> </span>a <span class="_"> </span>program <span class="_"> </span>that <span class="_ _e"> </span>changes <span class="_"> </span>the <span class="_"> </span>terminal</div><div class="t m0 x15 h49 y51fa ff19 fs26 fc0 sc0 ls0 ws0">mode, <span class="_ _3"></span>we <span class="_ _3"></span>should <span class="_ _9"></span>catch <span class="_ _3"></span>most <span class="_ _9"></span>signals.<span class="_ _16"> </span>This <span class="_ _3"></span>allows <span class="_ _9"></span>us <span class="_ _3"></span>to <span class="_ _9"></span>reset <span class="_ _2"></span>the <span class="_ _9"></span>terminal <span class="_ _3"></span>mode</div><div class="t m0 x15 h49 y51fb ff19 fs26 fc0 sc0 ls0 ws0">befor<span class="lsd3">et<span class="_ _4f"></span><span class="ls0">erminating.</span></span></div><div class="t m0 x3f h49 y51fc ff19 fs26 fc0 sc0 ls15d ws0">•E<span class="_ _4d"></span><span class="ls0">cho off.</span></div><div class="t m0 x3f h49 y51fd ff19 fs26 fc0 sc0 ls15d ws0">•O<span class="_ _4d"></span><span class="ls0">ne byte at a time input.<span class="_ _46"> </span><span class="ls164">To <span class="_ _53"> </span>d<span class="_ _23"></span><span class="ls1527">ot<span class="_ _d"></span><span class="ls0">his, we set MIN to 1 <span class="_ _2"></span>and TIME to 0.<span class="_ _46"> </span>This is case</span></span></span></span></div><div class="t m0 x15 h4d y51fe ff19 fs26 fc0 sc0 lsd3 ws0">Bf<span class="_ _d"></span><span class="lscc">ro<span class="_ _2"></span><span class="lsd3">mF<span class="_ _d"></span><span class="ls0">igur<span class="lsd3">e1<span class="_ _d"></span><span class="ls0">8.19. <span class="_"> </span>A<span class="_"> </span><span class="ff1a">read<span class="_ _80"> </span></span>won’t return until at least one byte is available.</span></span></span></span></span></div><div class="t m0 x32 h49 y51ff ff19 fs26 fc0 sc0 ls164 ws0">We <span class="_ _53"> </span>d<span class="_ _9"></span><span class="ls0">eﬁne raw mode as follows:</span></div><div class="t m0 x3f h49 y5200 ff19 fs26 fc0 sc0 ls15d ws0">•N<span class="_ _4d"></span><span class="ls0">oncanonical <span class="_ _35"> </span>mode.<span class="_ _5c"> </span><span class="ls164">We <span class="_ _61"> </span>a<span class="_ _23"></span></span>lso <span class="_ _35"> </span>turn <span class="_ _45"> </span>of<span class="ls1528">fp<span class="_ _7"></span><span class="lscc">ro<span class="_ _2"></span><span class="ls0">cessing <span class="_ _35"> </span>of <span class="_ _35"> </span>the <span class="_ _45"> </span>signal-generating</span></span></span></span></div><div class="t m0 x15 h4d y5201 ff19 fs26 fc0 sc0 ls0 ws0">characters <span class="_ _44"> </span>(<span class="ff1a">ISIG</span><span class="ls1529">)a<span class="_ _52"></span><span class="ls0">nd <span class="_ _44"> </span>the <span class="_ _44"> </span>extended <span class="_ _35"> </span>input <span class="_ _44"> </span>character <span class="_ _44"> </span>processing <span class="_ _35"> </span>(<span class="ff1a">IEXTEN</span>).</span></span></div><div class="t m0 x15 h49 y5202 ff19 fs26 fc0 sc0 ls0 ws0">Additionally<span class="_ _4"></span>,<span class="_"> </span>we<span class="_"> </span>disable a BREAK character from generating a signal, by turning</div><div class="t m0 x15 h4d y5203 ff19 fs26 fc0 sc0 ls0 ws0">off<span class="_"> </span><span class="ff1a">BRKINT</span>.</div><div class="t m0 x3f h49 y5204 ff19 fs26 fc0 sc0 ls15d ws0">•E<span class="_ _4d"></span><span class="ls0">cho off.</span></div><div class="t m0 x3f h4d y5205 ff19 fs26 fc0 sc0 ls15d ws0">•W<span class="_ _4e"></span><span class="ls152a">ed<span class="_ _55"></span><span class="ls0">isable <span class="_"> </span>the <span class="_ _e"> </span>CR-to-NL <span class="_"> </span>mapping <span class="_ _e"> </span>on <span class="_"> </span>input <span class="_"> </span>(<span class="ff1a">ICRNL</span>), <span class="_ _e"> </span>input <span class="_"> </span>parity <span class="_ _e"> </span>detection</span></span></div><div class="t m0 x15 h4d y5206 ff19 fs26 fc0 sc0 ls0 ws0">(<span class="ff1a">INPCK</span>), <span class="_ _53"> </span>the <span class="_ _e"> </span>stripping <span class="_ _53"> </span>of <span class="_ _e"> </span>the <span class="_ _e"> </span>eighth <span class="_ _53"> </span>bit <span class="_ _e"> </span>on <span class="_ _53"> </span>input <span class="_ _e"> </span>(<span class="ff1a">ISTRIP</span>), <span class="_ _e"> </span>and <span class="_ _53"> </span>output <span class="_ _e"> </span>ﬂow</div><div class="t m0 x15 h4d y5207 ff19 fs26 fc0 sc0 ls0 ws0">control (<span class="ff1a">IXON</span>).</div><div class="t m0 x3f h4d y5208 ff19 fs26 fc0 sc0 ls15d ws0">•E<span class="_ _4d"></span><span class="ls0">ight-bit characters (<span class="ff1a">CS8</span>), and parity checking is disabled (<span class="ff1a">PARENB</span>).</span></div><div class="t m0 x3f h4d y5209 ff19 fs26 fc0 sc0 ls15d ws0">•A<span class="_ _4d"></span><span class="ls0">ll output processing is disabled (<span class="ff1a">OPOST</span>).</span></div><div class="t m0 x3f h49 y520a ff19 fs26 fc0 sc0 ls15d ws0">•O<span class="_ _4d"></span><span class="ls0">ne byte at a time input (MIN = 1, TIME = 0).</span></div><div class="t m0 x32 h49 y520b ff19 fs26 fc0 sc0 ls0 ws0">The program in Figur<span class="_ _0"></span><span class="lsd3">e1<span class="_ _d"></span><span class="ls0">8.21 tests raw and cbreak modes.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
