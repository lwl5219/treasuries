<div id="pf3d1" class="pf w4 h1f" data-page-no="3d1"><div class="pc pc3d1 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg3d1.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Appendix <span class="_"> </span>C<span class="_ _89"> </span>Chapter <span class="_"> </span>18<span class="_ _54"> </span>Solutions<span class="_ _1b"> </span><span class="ff18">943</span></div><div class="t m0 xd8 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">if ((cmptr = calloc(1, CMSG_LEN(2*sizeof(int)))) == NULL)</div><div class="t m0 x1e4 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;calloc error&quot;);</div><div class="t m0 xd8 h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control = cmptr;</div><div class="t m0 xd8 h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = CMSG_LEN(2*sizeof(int));</div><div class="t m0 xd8 h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">/* continue initializing msghdr... */</div><div class="t m0 xd8 h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_len = CMSG_LEN(2*sizeof(int));</div><div class="t m0 xd8 h57 y804 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_level = SOL_SOCKET;</div><div class="t m0 xd8 h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_type = SCM_RIGHTS;</div><div class="t m0 xd8 h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">ip = (int *)CMSG_DATA(cmptr);</div><div class="t m0 xd8 h57 y807 ff1a fs2d fc0 sc0 ls0 ws0">*ip++ = fd1;</div><div class="t m0 xd8 h57 y808 ff1a fs2d fc0 sc0 ls0 ws0">*ip = fd2;</div><div class="t m0 xe2 h2a y631b ff19 fsf fc0 sc0 ls0 ws0">This <span class="_ _53"> </span>approach <span class="_ _53"> </span>works <span class="_ _53"> </span>on <span class="_ _53"> </span>all <span class="_ _e"> </span>four <span class="_ _53"> </span>platforms <span class="_ _53"> </span>covered <span class="_ _53"> </span>in <span class="_ _53"> </span>this <span class="_ _e"> </span>book.<span class="_ _65"> </span>The <span class="_ _53"> </span>second</div><div class="t m0 xe2 h26 y631c ff19 fsf fc0 sc0 ls0 ws0">option is to pack two separate<span class="_"> </span><span class="ff1a">cmsghdr<span class="_ _80"> </span></span>structures into a single message:</div><div class="t m0 xd8 h57 y631d ff1a fs2d fc0 sc0 ls0 ws0">struct msghdr msg;</div><div class="t m0 xd8 h57 y631e ff1a fs2d fc0 sc0 ls0 ws0">struct cmsghdr *cmptr;</div><div class="t m0 xd8 h57 y631f ff1a fs2d fc0 sc0 ls0 ws0">if ((cmptr = calloc(1, 2*CMSG_LEN(sizeof(int)))) == NULL)</div><div class="t m0 x1e4 h57 y6320 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;calloc error&quot;);</div><div class="t m0 xd8 h57 y6321 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_control = cmptr;</div><div class="t m0 xd8 h57 y6322 ff1a fs2d fc0 sc0 ls0 ws0">msg.msg_controllen = 2*CMSG_LEN(sizeof(int));</div><div class="t m0 xd8 h57 y6323 ff1a fs2d fc0 sc0 ls0 ws0">/* continue initializing msghdr... */</div><div class="t m0 xd8 h57 y6324 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_len = CMSG_LEN(sizeof(int));</div><div class="t m0 xd8 h57 y6325 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_level = SOL_SOCKET;</div><div class="t m0 xd8 h57 y6326 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_type = SCM_RIGHTS;</div><div class="t m0 xd8 h57 y6327 ff1a fs2d fc0 sc0 ls0 ws0">*(int *)CMSG_DATA(cmptr) = fd1;</div><div class="t m0 xd8 h57 y6328 ff1a fs2d fc0 sc0 ls0 ws0">cmptr = CMPTR_NXTHDR(&amp;msg, cmptr);</div><div class="t m0 xd8 h57 y6329 ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_len = CMSG_LEN(sizeof(int));</div><div class="t m0 xd8 h57 y632a ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_level = SOL_SOCKET;</div><div class="t m0 xd8 h57 y632b ff1a fs2d fc0 sc0 ls0 ws0">cmptr-&gt;cmsg_type = SCM_RIGHTS;</div><div class="t m0 xd8 h57 y632c ff1a fs2d fc0 sc0 ls0 ws0">*(int *)CMSG_DATA(cmptr) = fd2;</div><div class="t m0 xe2 h2a y632d ff19 fsf fc0 sc0 ls0 ws0">Unlike the ﬁrst approach, this method works only on Fr<span class="_ _0"></span>eeBSD 8.0.</div><div class="t m0 x35 h27 y632e ff16 fsf fc0 sc0 ls0 ws0">Chapter <span class="_"> </span>18</div><div class="t m0 x32 h26 y632f ff18 fsf fc0 sc0 ls0 ws0">18.1<span class="_ _210"> </span><span class="ff19">Note <span class="_ _3"></span>that <span class="_ _3"></span>you <span class="_ _3"></span>have <span class="_ _3"></span>to <span class="_ _3"></span>terminate <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">reset<span class="_ _47"> </span></span>command <span class="_ _3"></span>with <span class="_ _3"></span>a <span class="_ _3"></span>line <span class="_ _2"></span>feed <span class="_ _3"></span>character<span class="_ _1"></span>,</span></div><div class="t m0 xe2 h2a y6330 ff19 fsf fc0 sc0 ls0 ws0">not a return, since the terminal is in noncanonical mode.</div><div class="t m0 x32 h2a y6331 ff18 fsf fc0 sc0 ls0 ws0">18.2<span class="_ _210"> </span><span class="ff19">It <span class="_ _42"> </span>builds <span class="_ _42"> </span>a <span class="_ _42"> </span>table <span class="_ _42"> </span>for <span class="_ _23"> </span>each <span class="_ _42"> </span>of <span class="_ _42"> </span>the <span class="_ _42"> </span>128 <span class="_ _23"> </span>characters <span class="_ _42"> </span>and <span class="_ _42"> </span>sets <span class="_ _42"> </span>the <span class="_ _23"> </span>high-order <span class="_ _42"> </span>bit <span class="_ _23"> </span>(the</span></div><div class="t m0 xe2 h2a y6332 ff19 fsf fc0 sc0 ls0 ws0">parity <span class="_ _3"></span>bit) <span class="_ _9"></span>according <span class="_ _3"></span>to <span class="_ _9"></span>the <span class="_ _9"></span>user<span class="_ _3"></span>’s <span class="_ _9"></span>speciﬁcation.<span class="_ _5a"> </span>It <span class="_ _3"></span>then <span class="_ _9"></span>uses <span class="_ _9"></span>8</div><div class="t m0 x151 h2a y6333 ff19 fsf fc0 sc0 ls0 ws0">-</div><div class="t m0 x1a5 h2a y6332 ff19 fsf fc0 sc0 ls0 ws0">bit <span class="_ _3"></span>I/O, <span class="_ _9"></span>handling</div><div class="t m0 xe2 h2a y6334 ff19 fsf fc0 sc0 ls0 ws0">the parity generation itself.</div><div class="t m0 x32 h2a y6335 ff18 fsf fc0 sc0 ls0 ws0">18.3<span class="_ _210"> </span><span class="ff19">If <span class="_ _42"> </span>you <span class="_ _23"></span>happen <span class="_ _23"></span>to <span class="_ _23"></span>be <span class="_ _23"></span>on <span class="_ _23"> </span>a <span class="_ _23"> </span>windowing <span class="_ _23"> </span>terminal, <span class="_ _23"> </span>you <span class="_ _23"> </span>don’t <span class="_ _23"> </span>need <span class="_ _42"> </span>to <span class="_ _23"></span>log <span class="_ _23"></span>in <span class="_ _23"></span>twice.</span></div><div class="t m0 xe2 h2a y6336 ff19 fsf fc0 sc0 ls5f ws0">Yo<span class="_ _9"></span><span class="ls1883">uc<span class="_ _4a"></span><span class="ls0">an <span class="_"> </span>do <span class="_"> </span>this <span class="_"> </span>experiment <span class="_"> </span>between <span class="_"> </span>two <span class="_"> </span>separate <span class="_ _66"> </span>windows.<span class="_ _60"> </span>Under <span class="_"> </span>Solaris,</span></span></div><div class="t m0 xe2 h26 y6337 ff19 fsf fc0 sc0 ls0 ws0">execute<span class="_ _61"> </span><span class="ff1a">stty <span class="_ _d"></span>-a<span class="_ _61"> </span><span class="ff19">with <span class="_ _47"> </span>standar<span class="ls1884">di<span class="_ _1d"></span><span class="ls0">nput <span class="_ _47"> </span>r<span class="_ _0"></span>edirected <span class="_ _66"> </span>from <span class="_ _66"> </span>the <span class="_ _47"> </span>terminal <span class="_ _47"> </span>window</span></span></span></span></div><div class="t m0 xe2 h26 y6338 ff19 fsf fc0 sc0 ls4e ws0">ru<span class="ls0">nning<span class="_"> </span><span class="ff1a">vi</span><span class="lsb5c">.T<span class="_ _4a"></span><span class="ls0">his shows that<span class="_"> </span><span class="ff1a">vi<span class="_ _80"> </span></span>sets MIN to 1 and TIME to 1.<span class="_ _46"> </span><span class="ls92d">Ac<span class="_ _5"></span><span class="ls0">all to<span class="_"> </span><span class="ff1a">read<span class="_ _80"> </span></span>will</span></span></span></span></span></div><div class="t m0 xe2 h2a y6339 ff19 fsf fc0 sc0 ls0 ws0">wait <span class="_ _42"> </span>for <span class="_ _53"> </span>at <span class="_ _42"> </span>least <span class="_ _53"> </span>one <span class="_ _42"> </span>character <span class="_ _53"> </span>to <span class="_ _42"> </span>be <span class="_ _53"> </span>typed, <span class="_ _42"> </span>but <span class="_ _53"> </span>after <span class="_ _42"> </span>that <span class="_ _53"> </span>character <span class="_ _42"> </span>is <span class="_ _53"> </span>entered,</div><div class="t m0 xe2 h26 y633a ff1a fsf fc0 sc0 ls0 ws0">read<span class="_ _66"> </span><span class="ff19">waits only <span class="_ _2"></span>one-tenth <span class="_ _2"></span>of <span class="_ _2"></span>a second <span class="_ _2"></span>for <span class="_ _2"></span>additional characters <span class="_ _2"></span>befor<span class="ls1885">er<span class="_ _4f"></span><span class="ls0">eturning.</span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
