<div id="pf198" class="pf w4 h1f" data-page-no="198"><div class="pc pc198 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg198.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">374<span class="_ _1b"> </span><span class="ff19">Signals <span class="_ _24b"> </span>Chapter<span class="_ _21"> </span>10</span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">sleep(unsigned int seconds)</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">struct sigaction<span class="_ _15"> </span>newact, oldact;</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">sigset_t <span class="_ _bd"> </span>newmask,<span class="_"> </span>oldmask, suspmask;</div><div class="t m0 x8a h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">unsigned int<span class="_ _186"> </span>unslept;</div><div class="t m0 x8a h57 y23c9 ff1a fs2d fc0 sc0 ls0 ws0">/* set our handler, save previous information */</div><div class="t m0 x8a h57 y23ca ff1a fs2d fc0 sc0 ls0 ws0">newact.sa_handler = sig_alrm;</div><div class="t m0 x8a h57 y23cb ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;newact.sa_mask);</div><div class="t m0 x8a h57 y86e ff1a fs2d fc0 sc0 ls0 ws0">newact.sa_flags = 0;</div><div class="t m0 x8a h57 y86f ff1a fs2d fc0 sc0 ls0 ws0">sigaction(SIGALRM, &amp;newact, &amp;oldact);</div><div class="t m0 x8a h57 y23cc ff1a fs2d fc0 sc0 ls0 ws0">/* block SIGALRM and save current signal mask */</div><div class="t m0 x8a h57 y23cd ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;newmask);</div><div class="t m0 x8a h57 y872 ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;newmask, SIGALRM);</div><div class="t m0 x8a h57 y873 ff1a fs2d fc0 sc0 ls0 ws0">sigprocmask(SIG_BLOCK, &amp;newmask, &amp;oldmask);</div><div class="t m0 x8a h57 y2fe7 ff1a fs2d fc0 sc0 ls0 ws0">alarm(seconds);</div><div class="t m0 x8a h57 y2fe8 ff1a fs2d fc0 sc0 ls0 ws0">suspmask = oldmask;</div><div class="t m0 x8a h57 y2e77 ff1a fs2d fc0 sc0 ls0 ws0">/* make sure SIGALRM isn’t blocked */</div><div class="t m0 x8a h57 y2e78 ff1a fs2d fc0 sc0 ls0 ws0">sigdelset(&amp;suspmask, SIGALRM);</div><div class="t m0 x8a h57 y2fe9 ff1a fs2d fc0 sc0 ls0 ws0">/* wait for any signal to be caught */</div><div class="t m0 x8a h57 y2fea ff1a fs2d fc0 sc0 ls0 ws0">sigsuspend(&amp;suspmask);</div><div class="t m0 x8a h57 y2feb ff1a fs2d fc0 sc0 ls0 ws0">/* some signal has been caught, SIGALRM is now blocked */</div><div class="t m0 x8a h57 y2fec ff1a fs2d fc0 sc0 ls0 ws0">unslept = alarm(0);</div><div class="t m0 x8a h57 y2fed ff1a fs2d fc0 sc0 ls0 ws0">/* reset previous action */</div><div class="t m0 x8a h57 y2fee ff1a fs2d fc0 sc0 ls0 ws0">sigaction(SIGALRM, &amp;oldact, NULL);</div><div class="t m0 x8a h57 y2fef ff1a fs2d fc0 sc0 ls0 ws0">/* reset signal mask, which unblocks SIGALRM */</div><div class="t m0 x8a h57 y2ff0 ff1a fs2d fc0 sc0 ls0 ws0">sigprocmask(SIG_SETMASK, &amp;oldmask, NULL);</div><div class="t m0 x8a h57 y2ff1 ff1a fs2d fc0 sc0 ls0 ws0">return(unslept);</div><div class="t m0 x32 h57 y2ff2 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x18 h5e y2ff3 ff18 fs10 fc0 sc0 ls0 ws0">Figure 10.29<span class="_ _5a"> </span><span class="ff19">Reliable implementation of<span class="_"> </span><span class="ff1a">sleep</span></span></div><div class="t m0 x32 h49 y2ff4 ff19 fs26 fc0 sc0 ls0 ws0">It <span class="_ _45"> </span>takes <span class="_ _45"> </span>mor<span class="lsd31">ec<span class="_ _26"></span><span class="ls0">ode <span class="_ _45"> </span>to <span class="_ _45"> </span>write <span class="_ _35"> </span>this <span class="_ _45"> </span>reliable <span class="_ _45"> </span>implementation <span class="_ _45"> </span>than <span class="_ _45"> </span>what <span class="_ _45"> </span>is <span class="_ _45"> </span>shown <span class="_ _45"> </span>in</span></span></div><div class="t m0 x32 h49 y2ff5 ff19 fs26 fc0 sc0 ls0 ws0">Figur<span class="lsd32">e1<span class="_ _b"></span><span class="ls0">0.7. <span class="_ _47"> </span>W<span class="_ _6"></span><span class="lsd32">ed<span class="_ _8"></span><span class="ls0">on’t <span class="_ _9"></span>use <span class="_ _9"></span>any <span class="_ _3"></span>form <span class="_ _9"></span>of <span class="_ _9"></span>nonlocal <span class="_ _9"></span>branching <span class="_ _9"></span>(as <span class="_ _9"></span>we <span class="_ _9"></span>did <span class="_ _3"></span>in <span class="_ _9"></span>Figur<span class="lsd33">e1<span class="_ _b"></span><span class="ls0">0.8 <span class="_ _9"></span>to</span></span></span></span></span></span></div><div class="t m0 x32 h4d y2ff6 ff19 fs26 fc0 sc0 ls0 ws0">avoid <span class="_ _53"> </span>the <span class="_ _53"> </span>race <span class="_ _e"> </span>condition <span class="_ _53"> </span>between<span class="_ _4b"> </span><span class="ff1a">alarm<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">pause</span>), <span class="_ _53"> </span>so <span class="_ _53"> </span>there<span class="_ _44"> </span>is<span class="_ _4b"> </span>no<span class="_ _4b"> </span>e<span class="lscc">ff<span class="_ _2"></span></span>ect <span class="_ _53"> </span>on <span class="_ _53"> </span>other</div><div class="t m0 x32 h4d y2ff7 ff19 fs26 fc0 sc0 ls0 ws0">signal handlers that may be executing when the<span class="_"> </span><span class="ff1a">SIGALRM<span class="_ _80"> </span></span>is handled.</div><div class="t m0 x3f h54 y2ff8 ff19 fs2c fc0 sc0 ls0 ws0">The<span class="_ _5f"> </span><span class="ff1a">nanosleep<span class="_ _50"> </span></span>function <span class="_ _16"> </span>is <span class="_ _16"> </span>similar <span class="_ _16"> </span>to <span class="_ _16"> </span>the<span class="_ _5f"> </span><span class="ff1a">sleep<span class="_ _5f"> </span></span>function, <span class="_ _61"> </span>but <span class="_ _16"> </span>provides</div><div class="t m0 x32 h55 y2ff9 ff19 fs2c fc0 sc0 ls0 ws0">nanosecond</div><div class="t m0 x7d h55 y2ffa ff19 fs2c fc0 sc0 ls0 ws0">-</div><div class="t m0 x198 h55 y2ff9 ff19 fs2c fc0 sc0 ls0 ws0">level granularity<span class="_ _4"></span>.</div><div class="t m0 x3f h5d y2ffb ff1a fs2f fc0 sc0 ls0 ws0">#include &lt;time.h&gt;</div><div class="t m0 x3f h5d y2ffc ff1a fs2f fc0 sc0 ls0 ws0">int nanosleep(const struct timespec *<span class="ff1b ls8b2">re<span class="ls0">qtp</span></span><span class="ls395">,s<span class="_ _5b"></span><span class="ls0">truct timespec *<span class="ff1b ls8b2">re<span class="ls0">mtp</span></span>);</span></span></div><div class="t m0 x1bb hc2 y2ffd ff19 fs2f fc0 sc0 ls0 ws0">Returns: 0 if slept for requested time or<span class="_"> </span><span class="ff20">−</span>1<span class="_"> </span>on<span class="_"> </span>err<span class="_ _0"></span>or</div><div class="t m0 x32 h50 y2ffe ff19 fs29 fc0 sc0 ls0 ws0">This function <span class="_ _2"></span>suspends the <span class="_ _2"></span>calling process until either <span class="_ _2"></span>the requested time <span class="_ _2"></span>has elapsed <span class="_ _2"></span>or</div><div class="t m0 x32 h5b y2fff ff19 fs29 fc0 sc0 ls0 ws0">the function is <span class="_ _2"></span>interrupted by a <span class="_ _2"></span>signal.<span class="_ _46"> </span>The<span class="_"> </span><span class="ff1b lsdf">re<span class="_ _2"></span><span class="ls0">qtp<span class="_"> </span></span></span>parameter speciﬁes <span class="_ _2"></span>the amount <span class="_ _2"></span>of time</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
