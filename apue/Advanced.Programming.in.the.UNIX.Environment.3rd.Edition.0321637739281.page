<div id="pf119" class="pf w4 h1f" data-page-no="119"><div class="pc pc119 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg119.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.9<span class="_ _22e"> </span>Race <span class="_"> </span>Conditions<span class="_ _1b"> </span><span class="ff18">247</span></div><div class="t m0 x32 h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _66"> </span>a<span class="_ _23"></span><span class="ls0">ssume <span class="_ _9"></span>that <span class="_ _23"></span>the <span class="_ _9"></span>header<span class="_ _35"> </span><span class="ff1a">apue.h<span class="_ _45"> </span></span>deﬁnes <span class="_ _9"></span>whatever <span class="_ _23"></span>variables <span class="_ _9"></span>ar<span class="ls9d5">er<span class="_ _b"></span><span class="ls0">equir<span class="_ _1"></span>ed. <span class="_ _35"> </span>The<span class="_ _45"> </span>ﬁve</span></span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls45 ws0">ro<span class="ls0">utines<span class="_ _45"> </span><span class="ff1a">TELL_WAIT</span>,<span class="_ _35"> </span><span class="ff1a">TELL_PARENT</span>,<span class="_ _45"> </span><span class="ff1a">TELL_CHILD</span>,<span class="_ _45"> </span><span class="ff1a">WAIT_PARENT</span><span class="ls781">,a<span class="_ _b"></span><span class="ls0">nd<span class="_ _45"> </span><span class="ff1a">WAIT_CHILD</span></span></span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">can be either macros or functions.</div><div class="t m0 x3f h26 y132 ff19 fsf fc0 sc0 ls5f ws0">We<span class="_ _9"></span><span class="ls0">’ll <span class="_"> </span>show <span class="_"> </span>various <span class="_"> </span>ways <span class="_"> </span>to <span class="_"> </span>implement <span class="_"> </span>these<span class="_ _59"> </span><span class="ff1a">TELL<span class="_ _46"> </span></span>and<span class="_ _59"> </span><span class="ff1a">WAIT<span class="_ _46"> </span></span><span class="ls45">ro<span class="_ _2"></span></span>utines <span class="_"> </span>in <span class="_"> </span>later</span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">chapters: <span class="_ _23"> </span>Section <span class="_ _42"> </span>10.16 <span class="_ _42"> </span>shows <span class="_ _23"> </span>an <span class="_ _42"> </span>implementation <span class="_ _42"> </span>using <span class="_ _42"> </span>signals; <span class="_ _23"> </span>Figur<span class="ls9d6">e1<span class="_ _43"></span><span class="ls0">5.7 <span class="_ _23"> </span>shows <span class="_ _42"> </span>an</span></span></div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">implementation using pipes.<span class="_ _59"> </span>Let’s look at an example that uses these ﬁve routines.</div><div class="t m0 x35 h27 y2090 ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y2091 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _23"></span>pr<span class="_ _0"></span>ogram <span class="_ _23"></span>in <span class="_ _9"></span>Figur<span class="ls6d6">e8<span class="_ _b"></span><span class="ls0">.12 <span class="_ _9"></span>outputs <span class="_ _23"></span>two <span class="_ _23"></span>strings: <span class="_ _9"></span>one <span class="_ _23"> </span>from <span class="_ _9"></span>the <span class="_ _23"> </span>child <span class="_ _23"></span>and <span class="_ _23"></span>one <span class="_ _9"></span>from <span class="_ _23"></span>the</span></span></div><div class="t m0 x32 h2a y17b ff19 fsf fc0 sc0 ls0 ws0">parent. <span class="_"> </span>The<span class="_"> </span>pr<span class="_ _0"></span>ogram contains a race condition because the output depends <span class="_ _2"></span>on the order</div><div class="t m0 x32 h2a y17c ff19 fsf fc0 sc0 ls0 ws0">in <span class="_ _42"> </span>which <span class="_ _53"> </span>the <span class="_ _53"> </span>processes <span class="_ _42"> </span>ar<span class="ls9d7">er<span class="_ _c"></span><span class="ls0">un <span class="_ _53"> </span>by <span class="_ _42"> </span>the <span class="_ _53"> </span>kernel <span class="_ _53"> </span>and <span class="_ _53"> </span>the <span class="_ _53"> </span>length <span class="_ _53"> </span>of <span class="_ _53"> </span>time <span class="_ _53"> </span>for <span class="_ _42"> </span>which <span class="_ _53"> </span>each</span></span></div><div class="t m0 x32 h2a y17d ff19 fsf fc0 sc0 ls0 ws0">process r<span class="_ _0"></span>uns.</div><div class="t m0 x32 h4e y2092 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y2093 ff1a fs28 fc0 sc0 ls0 ws0">static void charatatime(char *);</div><div class="t m0 x32 h4e y2094 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y2095 ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y2096 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y2097 ff1a fs28 fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h4e y2098 ff1a fs28 fc0 sc0 ls0 ws0">if ((pid = fork()) &lt; 0) {</div><div class="t m0 x9d h4e y2099 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;fork error&quot;);</div><div class="t m0 x8a h4e y209a ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {</span></div><div class="t m0 x9d h4e y209b ff1a fs28 fc0 sc0 ls0 ws0">charatatime(&quot;output from child\n&quot;);</div><div class="t m0 x8a h4e y209c ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x9d h4e y209d ff1a fs28 fc0 sc0 ls0 ws0">charatatime(&quot;output from parent\n&quot;);</div><div class="t m0 x8a h4e y209e ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y209f ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y20a0 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h4e y20a1 ff1a fs28 fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h4e y20a2 ff1a fs28 fc0 sc0 ls0 ws0">charatatime(char *str)</div><div class="t m0 x32 h4e y20a3 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y20a4 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _68"> </span>*ptr;</div><div class="t m0 x8a h4e y20a5 ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>c;</div><div class="t m0 x8a h4e y20a6 ff1a fs28 fc0 sc0 ls0 ws0">setbuf(stdout, NULL);<span class="_ _bd"> </span>/* set unbuffered */</div><div class="t m0 x8a h4e y20a7 ff1a fs28 fc0 sc0 ls0 ws0">for (ptr = str; (c = *ptr++) != 0; )</div><div class="t m0 x9d h4e y20a8 ff1a fs28 fc0 sc0 ls0 ws0">putc(c, stdout);</div><div class="t m0 x32 h4e y20a9 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x1f7 h2e y20aa ff18 fs11 fc0 sc0 ls0 ws0">Figure 8.12<span class="_ _5a"> </span><span class="ff19">Program with a race condition</span></div><div class="t m0 x32 h54 y20ab ff19 fs2c fc0 sc0 ls155 ws0">We <span class="_ _47"> </span>s<span class="_ _9"></span><span class="ls0">et <span class="_ _23"></span>the <span class="_ _23"></span>standar<span class="ls9d8">do<span class="_ _43"></span><span class="ls0">utput <span class="_ _23"></span>unbuffer<span class="_ _0"></span>ed, <span class="_ _23"></span>so <span class="_ _23"></span>every <span class="_ _9"></span>character <span class="_ _23"> </span>output <span class="_ _23"> </span>generates <span class="_ _23"> </span>a<span class="_ _35"> </span><span class="ff1a">write</span>.</span></span></span></div><div class="t m0 x32 h55 y20ac ff19 fs2c fc0 sc0 ls0 ws0">The <span class="_ _9"></span>goal <span class="_ _3"></span>in <span class="_ _9"></span>this <span class="_ _9"></span>example <span class="_ _9"></span>is <span class="_ _9"></span>to <span class="_ _3"></span>allow <span class="_ _9"></span>the <span class="_ _9"></span>kernel <span class="_ _9"></span>to <span class="_ _9"></span>switch <span class="_ _3"></span>between <span class="_ _9"></span>the <span class="_ _9"></span>two <span class="_ _9"></span>processes <span class="_ _3"></span>as</div><div class="t m0 x32 h55 y20ad ff19 fs2c fc0 sc0 ls0 ws0">often <span class="_ _42"> </span>as <span class="_ _53"> </span>possible <span class="_ _42"> </span>to <span class="_ _53"> </span>demonstrate <span class="_ _42"> </span>the <span class="_ _53"> </span>race <span class="_ _42"> </span>condition.<span class="_ _65"> </span>(If <span class="_ _42"> </span>we <span class="_ _53"> </span>didn’t <span class="_ _42"> </span>do <span class="_ _53"> </span>this, <span class="_ _42"> </span>we <span class="_ _53"> </span>might</div><div class="t m0 x32 h55 y20ae ff19 fs2c fc0 sc0 ls0 ws0">never <span class="_ _53"> </span>see <span class="_ _e"> </span>the <span class="_ _53"> </span>type <span class="_ _e"> </span>of <span class="_ _e"> </span>output <span class="_ _53"> </span>that <span class="_ _e"> </span>follows.<span class="_ _65"> </span>Not <span class="_ _e"> </span>seeing <span class="_ _53"> </span>the <span class="_ _e"> </span>erroneous <span class="_ _53"> </span>output <span class="_ _e"> </span>doesn’t</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
