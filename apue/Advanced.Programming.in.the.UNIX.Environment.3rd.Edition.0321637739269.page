<div id="pf10d" class="pf w4 h1f" data-page-no="10d"><div class="pc pc10d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg10d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>8.4<span class="_ _177"> </span><span class="ff1a">vfork<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">235</span></div><div class="t m0 x32 h57 y362 ff1a fs2d fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h57 y158c ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>globvar<span class="_"> </span><span class="ls15c">=6<span class="_ _1d"></span><span class="ls965">;/<span class="_ _223"></span><span class="ls15c">*e<span class="_ _1d"></span><span class="ls0">xternal variable in initialized data */</span></span></span></span></div><div class="t m0 x32 h57 y1f3a ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y1f3b ff1a fs2d fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h57 y1d34 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y158d ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _15"> </span>var;<span class="_ _186"> </span>/* automatic variable on the stack */</div><div class="t m0 x8a h57 y158e ff1a fs2d fc0 sc0 ls0 ws0">pid_t <span class="_ _d9"> </span>pid;</div><div class="t m0 x8a h57 y1d36 ff1a fs2d fc0 sc0 ls0 ws0">var = 88;</div><div class="t m0 x8a h57 y1590 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;before vfork\n&quot;);<span class="_ _68"> </span>/* we don’t flush stdio */</div><div class="t m0 x8a h57 y1591 ff1a fs2d fc0 sc0 ls0 ws0">if ((pid = vfork()) &lt; 0) {</div><div class="t m0 x9d h57 y1d37 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;vfork error&quot;);</div><div class="t m0 x8a h57 y1d38 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (pid == 0) {<span class="_ _88"> </span>/* child */</span></div><div class="t m0 x9d h57 y3cb ff1a fs2d fc0 sc0 ls0 ws0">globvar++; <span class="_ _166"> </span>/*<span class="_"> </span>modify parent’s variables */</div><div class="t m0 x9d h57 y3cc ff1a fs2d fc0 sc0 ls0 ws0">var++;</div><div class="t m0 x9d h57 y3cd ff1a fs2d fc0 sc0 ls0 ws0">_exit(0); <span class="_ _12d"> </span>/*<span class="_"> </span>child terminates */</div><div class="t m0 x8a h57 y3ce ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h57 y1f3c ff1a fs2d fc0 sc0 ls0 ws0">/* parent continues here */</div><div class="t m0 x8a h57 y1f3d ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;pid = %ld, glob = %d, var = %d\n&quot;, (long)getpid(), globvar,</div><div class="t m0 x194 h57 y1f3e ff1a fs2d fc0 sc0 ls0 ws0">var);</div><div class="t m0 x8a h57 y3d2 ff1a fs2d fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h57 y3d3 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 xc0 h5e y1f3f ff18 fs10 fc0 sc0 ls0 ws0">Figure 8.3<span class="_ _5a"> </span><span class="ff19">Example of<span class="_"> </span><span class="ff1a">vfork<span class="_ _e"> </span></span>function</span></div><div class="t m0 x32 h49 y1f40 ff19 fs26 fc0 sc0 ls0 ws0">Running this program gives us</div><div class="t m0 x3f h4e y1f41 ff1a fs28 fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h4e y1f42 ff1a fs28 fc0 sc0 ls0 ws0">before vfork</div><div class="t m0 x3f h4e y1f43 ff1a fs28 fc0 sc0 ls0 ws0">pid = 29039, glob = 7, var = 89</div><div class="t m0 x3f h49 y1f44 ff19 fs26 fc0 sc0 ls0 ws0">Here, <span class="_ _2"></span>the <span class="_ _3"></span>incrementing <span class="_ _2"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>variables <span class="_ _3"></span>done <span class="_ _9"></span>by <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _3"></span>changes <span class="_ _9"></span>the <span class="_ _2"></span>values <span class="_ _3"></span>in <span class="_ _3"></span>the</div><div class="t m0 x32 h49 y1f45 ff19 fs26 fc0 sc0 ls0 ws0">parent. <span class="_ _47"> </span>Because<span class="_ _45"> </span>the <span class="_ _3"></span>child <span class="_ _3"></span>runs <span class="_ _9"></span>in <span class="_ _3"></span>the <span class="_ _9"></span>address <span class="_ _3"></span>space <span class="_ _9"></span>of <span class="_ _3"></span>the <span class="_ _9"></span>parent, <span class="_ _3"></span>this <span class="_ _3"></span>doesn’t <span class="_ _9"></span>surprise</div><div class="t m0 x32 h4d y1f46 ff19 fs26 fc0 sc0 ls0 ws0">us. <span class="_"> </span>This<span class="_"> </span>behavior<span class="_ _6"></span><span class="lsd3">,h<span class="_ _5"></span><span class="ls0">owever<span class="_ _6"></span><span class="lsd3">,d<span class="_ _d"></span><span class="ls0">iffers from the behavior of<span class="_"> </span><span class="ff1a">fork</span>.</span></span></span></span></div><div class="t m0 x3f h4d y1f47 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _47"> </span>in <span class="_ _47"> </span>Figur<span class="ls966">e8<span class="_ _62"></span><span class="ls0">.3 <span class="_ _45"> </span>that <span class="_ _47"> </span>we <span class="_ _47"> </span>call<span class="_ _16"> </span><span class="ff1a">_exit<span class="_ _16"> </span></span>instead <span class="_ _47"> </span>of<span class="_ _16"> </span><span class="ff1a">exit</span><span class="ls967">.A<span class="_ _49"></span><span class="ls0">s<span class="_ _61"> </span>we<span class="_ _16"> </span>described <span class="_ _47"> </span>in</span></span></span></span></div><div class="t m0 x32 h4d y1f48 ff19 fs26 fc0 sc0 ls0 ws0">Section <span class="_ _23"></span>7.3,<span class="_ _35"> </span><span class="ff1a">_exit<span class="_ _35"> </span></span>does <span class="_ _23"></span>not <span class="_ _23"></span>perform <span class="_ _23"></span>any <span class="_ _23"></span>ﬂushing <span class="_ _23"></span>of <span class="_ _23"> </span>standar<span class="ls968">dI<span class="_ _43"></span><span class="ls0">/O <span class="_ _23"> </span>buffers. <span class="_ _35"> </span>If<span class="_ _45"> </span>we <span class="_ _42"> </span>call</span></span></div><div class="t m0 x32 h4d y1f49 ff1a fs26 fc0 sc0 ls0 ws0">exit<span class="_ _45"> </span><span class="ff19">instead, <span class="_ _23"> </span>the <span class="_ _23"></span>results <span class="_ _9"></span>ar<span class="ls969">ei<span class="_ _43"></span><span class="ls0">ndeterminate. <span class="_ _35"> </span>Depending<span class="_ _45"> </span>on <span class="_ _23"></span>the <span class="_ _23"></span>implementation <span class="_ _9"></span>of <span class="_ _23"> </span>the</span></span></span></div><div class="t m0 x32 h49 y1f4a ff19 fs26 fc0 sc0 ls0 ws0">standar<span class="ls96a">dI<span class="_ _4f"></span><span class="ls0">/O library<span class="_ _6"></span>,<span class="_"> </span>we<span class="_"> </span>might see no difference in the output, or we might ﬁnd that the</span></span></div><div class="t m0 x32 h4d y1f4b ff19 fs26 fc0 sc0 ls0 ws0">output from the ﬁrst<span class="_"> </span><span class="ff1a">printf<span class="_ _80"> </span></span>in the parent has disappear<span class="_ _1"></span>ed.</div><div class="t m0 x3f h4d y1f4c ff19 fs26 fc0 sc0 ls0 ws0">If the <span class="_ _2"></span>child <span class="_ _2"></span>calls<span class="_ _66"> </span><span class="ff1a">exit</span><span class="ls96b">,t<span class="_ _d"></span><span class="ls0">he implementation <span class="_ _2"></span>ﬂushes <span class="_ _2"></span>the <span class="_ _2"></span>standar<span class="ls96c">dI<span class="_ _4f"></span><span class="ls0">/O streams. <span class="_"> </span>If<span class="_ _47"> </span>this</span></span></span></span></div><div class="t m0 x32 h49 y1f4d ff19 fs26 fc0 sc0 ls0 ws0">is <span class="_ _23"></span>the <span class="_ _9"></span>only <span class="_ _23"> </span>action <span class="_ _23"></span>taken <span class="_ _9"></span>by <span class="_ _23"> </span>the <span class="_ _23"></span>library<span class="_ _4"></span><span class="ls96d">,t<span class="_ _b"></span><span class="ls0">hen <span class="_ _23"></span>we <span class="_ _9"></span>will <span class="_ _23"></span>see <span class="_ _23"></span>no <span class="_ _9"></span>difference <span class="_ _9"></span>from <span class="_ _9"></span>the <span class="_ _23"> </span>output</span></span></div><div class="t m0 x32 h4d y1f4e ff19 fs26 fc0 sc0 ls0 ws0">generated <span class="_ _2"></span>if <span class="_ _2"></span>the <span class="_ _3"></span>child <span class="_ _2"></span>called<span class="_ _47"> </span><span class="ff1a">_exit</span><span class="ls96e">.I<span class="_ _1d"></span><span class="ls96f">ft<span class="_ _4f"></span><span class="ls0">he <span class="_ _3"></span>implementation <span class="_ _2"></span>also <span class="_ _2"></span>closes <span class="_ _3"></span>the <span class="_ _2"></span>standar<span class="ls96f">dI<span class="_ _8"></span><span class="ls0">/O</span></span></span></span></span></div><div class="t m0 x32 h4d y1f4f ff19 fs26 fc0 sc0 ls0 ws0">streams, <span class="_ _42"> </span>however<span class="_ _6"></span><span class="ls742">,t<span class="_ _43"></span><span class="ls0">he <span class="_ _42"> </span>memory <span class="_ _42"> </span>representing <span class="_ _42"> </span>the<span class="_ _44"> </span><span class="ff1a">FILE<span class="_ _44"> </span></span>object <span class="_ _53"> </span>for <span class="_ _42"> </span>the <span class="_ _53"> </span>standar<span class="ls970">do<span class="_ _c"></span><span class="ls0">utput</span></span></span></span></div><div class="t m0 x32 h49 y1f50 ff19 fs26 fc0 sc0 ls0 ws0">will be cleared out.<span class="_ _46"> </span>Because the <span class="_ _2"></span>child is borrowing the parent’s address space, when the</div><div class="t m0 x32 h4d y1f51 ff19 fs26 fc0 sc0 ls0 ws0">parent <span class="_ _23"></span>resumes <span class="_ _23"></span>and <span class="_ _23"> </span>calls<span class="_ _35"> </span><span class="ff1a">printf</span>,<span class="_ _35"> </span>no<span class="_ _35"> </span>output <span class="_ _42"> </span>will <span class="_ _23"> </span>appear <span class="_ _42"> </span>and<span class="_ _35"> </span><span class="ff1a">printf<span class="_ _35"> </span></span>will <span class="_ _23"> </span>return<span class="_ _35"> </span><span class="ff20">−</span>1.</div><div class="t m0 x32 h4d y1f52 ff19 fs26 fc0 sc0 ls0 ws0">Note <span class="_ _42"> </span>that <span class="_ _53"> </span>the <span class="_ _42"> </span>parent’s<span class="_ _44"> </span><span class="ff1a">STDOUT_FILENO<span class="_ _44"> </span></span>is <span class="_ _42"> </span>still <span class="_ _42"> </span>valid, <span class="_ _53"> </span>as <span class="_ _42"> </span>the <span class="_ _53"> </span>child <span class="_ _42"> </span>gets <span class="_ _53"> </span>a <span class="_ _42"> </span>copy <span class="_ _53"> </span>of <span class="_ _42"> </span>the</div><div class="t m0 x32 h49 y1f53 ff19 fs26 fc0 sc0 ls0 ws0">parent’s ﬁle descriptor array (r<span class="_ _0"></span>efer back to Figur<span class="_ _0"></span><span class="lsd3">e8<span class="_ _d"></span><span class="ls0">.2).</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
