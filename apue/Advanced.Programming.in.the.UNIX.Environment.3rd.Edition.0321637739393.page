<div id="pf189" class="pf w4 h1f" data-page-no="189"><div class="pc pc189 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg189.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.16<span class="_ _274"> </span><span class="ff1a">sigsuspend<span class="_ _4b"> </span></span>Function<span class="_ _1b"> </span><span class="ff18">359</span></div><div class="t m0 x35 h75 y12f ff16 fs2b fc0 sc0 ls0 ws0">10.16<span class="_ _5a"> </span><span class="ff1f">sigsuspend<span class="_ _54"> </span></span>Function</div><div class="t m0 x32 h2a y4de ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _66"> </span>h<span class="_ _23"></span><span class="ls0">ave <span class="_ _9"></span>seen <span class="_ _9"></span>how <span class="_ _23"></span>we <span class="_ _9"></span>can <span class="_ _23"></span>change <span class="_ _9"></span>the <span class="_ _23"></span>signal <span class="_ _9"></span>mask <span class="_ _9"></span>for <span class="_ _23"></span>a <span class="_ _9"></span>process <span class="_ _9"></span>to <span class="_ _23"></span>block <span class="_ _9"></span>and <span class="_ _9"></span>unblock</span></div><div class="t m0 x32 h2a y6d0 ff19 fsf fc0 sc0 ls0 ws0">selected <span class="_ _23"> </span>signals.<span class="_ _51"> </span><span class="ls5f">We <span class="_ _47"> </span>c<span class="_ _23"></span></span>an <span class="_ _23"></span>use <span class="_ _23"> </span>this <span class="_ _23"> </span>technique <span class="_ _42"> </span>to <span class="_ _23"></span>protect <span class="_ _23"></span>critical <span class="_ _23"></span>regions <span class="_ _23"></span>of <span class="_ _23"></span>code <span class="_ _23"> </span>that <span class="_ _23"> </span>we</div><div class="t m0 x32 h2a y6d1 ff19 fsf fc0 sc0 ls0 ws0">don’t <span class="_ _9"></span>want <span class="_ _9"></span>interrupted <span class="_ _9"></span>by <span class="_ _9"></span>a <span class="_ _9"></span>signal.<span class="_ _5a"> </span>But <span class="_ _9"></span>what <span class="_ _9"></span>if <span class="_ _9"></span>we <span class="_ _9"></span>want <span class="_ _9"></span>to <span class="_ _9"></span>unblock <span class="_ _9"></span>a <span class="_ _9"></span>signal <span class="_ _9"></span>and <span class="_ _9"></span>then</div><div class="t m0 x32 h26 y6d2 ff1a fsf fc0 sc0 ls0 ws0">pause<span class="ff19 lscdd">,w<span class="_ _8"></span><span class="ls0">aiting <span class="_ _3"></span>for <span class="_ _3"></span>the <span class="_ _2"></span>previously <span class="_ _2"></span>blocked <span class="_ _3"></span>signal <span class="_ _3"></span>to <span class="_ _2"></span>occur?<span class="_ _16"> </span>Assuming <span class="_ _3"></span>that <span class="_ _2"></span>the <span class="_ _3"></span>signal <span class="_ _3"></span>is</span></span></div><div class="t m0 x32 h26 y6d3 ff1a fsf fc0 sc0 ls0 ws0">SIGINT<span class="ff19 ls44">,t<span class="_ _d"></span><span class="ls0">he incorrect way to do this is</span></span></div><div class="t m0 xf4 h57 y2e08 ff1a fs2d fc0 sc0 ls0 ws0">sigset_t <span class="_ _68"> </span>newmask,<span class="_"> </span>oldmask;</div><div class="t m0 xf4 h57 y2e09 ff1a fs2d fc0 sc0 ls0 ws0">sigemptyset(&amp;newmask);</div><div class="t m0 xf4 h57 y2e0a ff1a fs2d fc0 sc0 ls0 ws0">sigaddset(&amp;newmask, SIGINT);</div><div class="t m0 xf4 h57 y2e0b ff1a fs2d fc0 sc0 ls0 ws0">/* block SIGINT and save current signal mask */</div><div class="t m0 xf4 h57 y2e0c ff1a fs2d fc0 sc0 ls0 ws0">if (sigprocmask(SIG_BLOCK, &amp;newmask, &amp;oldmask) &lt; 0)</div><div class="t m0 x122 h57 y2e0d ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;SIG_BLOCK error&quot;);</div><div class="t m0 xf4 h57 y2e0e ff1a fs2d fc0 sc0 ls0 ws0">/* critical region of code */</div><div class="t m0 xf4 h57 y2e0f ff1a fs2d fc0 sc0 ls0 ws0">/* restore signal mask, which unblocks SIGINT */</div><div class="t m0 xf4 h57 y2e10 ff1a fs2d fc0 sc0 ls0 ws0">if (sigprocmask(SIG_SETMASK, &amp;oldmask, NULL) &lt; 0)</div><div class="t m0 x122 h57 y2e11 ff1a fs2d fc0 sc0 ls0 ws0">err_sys(&quot;SIG_SETMASK error&quot;);</div><div class="t m0 xf4 h57 y2e12 ff1a fs2d fc0 sc0 ls0 ws0">/* window is open */</div><div class="t m0 xf4 h57 y2e13 ff1a fs2d fc0 sc0 ls0 ws0">pause(); <span class="_"> </span>/*<span class="_"> </span>wait for signal to occur */</div><div class="t m0 xf4 h57 y2e14 ff1a fs2d fc0 sc0 ls0 ws0">/* continue processing */</div><div class="t m0 x32 h2a y2e15 ff19 fsf fc0 sc0 ls0 ws0">If the <span class="_ _2"></span>signal is <span class="_ _2"></span>sent to <span class="_ _2"></span>the process while it <span class="_ _2"></span>is blocked, <span class="_ _2"></span>the signal <span class="_ _2"></span>delivery will <span class="_ _2"></span>be deferred</div><div class="t m0 x32 h2a y2e16 ff19 fsf fc0 sc0 ls0 ws0">until <span class="_ _23"> </span>the <span class="_ _42"> </span>signal <span class="_ _23"> </span>is <span class="_ _42"> </span>unblocked.<span class="_ _51"> </span><span class="ls5f">To <span class="_ _45"> </span>t<span class="_ _9"></span></span>he <span class="_ _23"> </span>application, <span class="_ _42"> </span>this <span class="_ _23"> </span>can <span class="_ _42"> </span>look <span class="_ _23"> </span>as <span class="_ _42"> </span>if <span class="_ _23"> </span>the <span class="_ _23"> </span>signal <span class="_ _42"> </span>occurs</div><div class="t m0 x32 h26 y2e17 ff19 fsf fc0 sc0 ls0 ws0">between <span class="_ _e"> </span>the <span class="_"> </span>unblocking <span class="_ _53"> </span>and <span class="_"> </span>the<span class="_ _4b"> </span><span class="ff1a">pause<span class="_ _59"> </span></span>(depending <span class="_"> </span>on <span class="_ _53"> </span>how <span class="_"> </span>the <span class="_ _e"> </span>kernel <span class="_"> </span>implements</div><div class="t m0 x32 h2a y2e18 ff19 fsf fc0 sc0 ls0 ws0">signals). <span class="_ _35"> </span>If<span class="_ _35"> </span>this <span class="_ _42"> </span>happens, <span class="_ _42"> </span>or <span class="_ _42"> </span>if <span class="_ _23"> </span>the <span class="_ _42"> </span>signal <span class="_ _42"> </span>does <span class="_ _23"> </span>occur <span class="_ _42"> </span>between <span class="_ _42"> </span>the <span class="_ _23"> </span>unblocking <span class="_ _42"> </span>and <span class="_ _42"> </span>the</div><div class="t m0 x32 h26 y2e19 ff1a fsf fc0 sc0 ls0 ws0">pause<span class="ff19">,<span class="_"> </span>we<span class="_ _47"> </span>have a <span class="_ _2"></span>problem. <span class="_"> </span>Any<span class="_ _47"> </span>occurr<span class="_ _0"></span>ence <span class="_ _2"></span>of the <span class="_ _2"></span>signal <span class="_ _2"></span>in <span class="_ _2"></span>this <span class="_ _2"></span>window <span class="_ _2"></span>of time <span class="_ _2"></span>is <span class="_ _2"></span>lost,</span></div><div class="t m0 x32 h26 y2e1a ff19 fsf fc0 sc0 ls0 ws0">in <span class="_ _3"></span>the <span class="_ _3"></span>sense <span class="_ _3"></span>that <span class="_ _3"></span>we <span class="_ _3"></span>might <span class="_ _3"></span>not <span class="_ _3"></span>see <span class="_ _3"></span>the <span class="_ _3"></span>signal <span class="_ _3"></span>again, <span class="_ _3"></span>in <span class="_ _9"></span>which <span class="_ _2"></span>case <span class="_ _9"></span>the<span class="_ _47"> </span><span class="ff1a">pause<span class="_ _47"> </span></span>will <span class="_ _3"></span>block</div><div class="t m0 x32 h2a y2e1b ff19 fsf fc0 sc0 ls0 ws0">indeﬁnitely<span class="_ _4"></span><span class="ls86">.T<span class="_ _4a"></span><span class="ls0">his is another problem with the earlier unreliable signals.</span></span></div><div class="t m0 x3f h2a y2e1c ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _80"> </span>c<span class="_ _9"></span><span class="ls0">orrect <span class="_ _2"></span>this <span class="_ _3"></span>problem, <span class="_ _2"></span>we <span class="_ _3"></span>need <span class="_ _2"></span>a <span class="_ _3"></span>way <span class="_ _3"></span>to <span class="_ _3"></span>both <span class="_ _3"></span>restor<span class="_ _0"></span><span class="lscde">et<span class="_ _8"></span><span class="ls0">he <span class="_ _3"></span>signal <span class="_ _3"></span>mask <span class="_ _3"></span>and <span class="_ _2"></span>put <span class="_ _3"></span>the</span></span></span></div><div class="t m0 x32 h2a y2e1d ff19 fsf fc0 sc0 ls0 ws0">process <span class="_ _35"> </span>to <span class="_ _44"> </span>sleep <span class="_ _35"> </span>in <span class="_ _44"> </span>a <span class="_ _44"> </span>single <span class="_ _35"> </span>atomic <span class="_ _44"> </span>operation.<span class="_ _98"> </span>This <span class="_ _44"> </span>feature<span class="_ _51"> </span>is<span class="_ _54"> </span>p<span class="ls45">ro<span class="_ _2"></span></span>vided <span class="_ _35"> </span>by <span class="_ _44"> </span>the</div><div class="t m0 x32 h26 y2e1e ff1a fsf fc0 sc0 ls0 ws0">sigsuspend<span class="_ _80"> </span><span class="ff19">function.</span></div><div class="t m0 x3f h57 y2e1f ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;signal.h&gt;</div><div class="t m0 x3f h57 y2e20 ff1a fs2d fc0 sc0 ls0 ws0">int sigsuspend(const sigset_t *<span class="ff1b">sigmask</span>);</div><div class="t m0 x19c h57 y2e21 ff19 fs2d fc0 sc0 ls0 ws0">Returns:<span class="_"> </span><span class="ff20">−</span><span class="ls110">1w<span class="_ _5"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _e"> </span></span>set to<span class="_"> </span><span class="ff1a">EINTR</span></span></span></div><div class="t m0 x32 h4a y2e22 ff19 fs26 fc0 sc0 ls0 ws0">The <span class="_ _e"> </span>signal <span class="_ _e"> </span>mask <span class="_ _e"> </span>of <span class="_ _e"> </span>the <span class="_ _e"> </span>process <span class="_ _53"> </span>is <span class="_"> </span>set <span class="_ _53"> </span>to <span class="_ _e"> </span>the <span class="_ _e"> </span>value <span class="_ _e"> </span>pointed <span class="_ _e"> </span>to <span class="_"> </span>by<span class="_ _44"> </span><span class="ff1b">sigmask</span><span class="lscdf">.T<span class="_ _52"></span><span class="ls0">hen <span class="_ _53"> </span>the</span></span></div><div class="t m0 x32 h49 y2e23 ff19 fs26 fc0 sc0 ls0 ws0">process is <span class="_ _3"></span>suspended <span class="_ _3"></span>until <span class="_ _2"></span>a <span class="_ _3"></span>signal <span class="_ _2"></span>is <span class="_ _3"></span>caught <span class="_ _2"></span>or <span class="_ _3"></span>until <span class="_ _2"></span>a <span class="_ _3"></span>signal <span class="_ _3"></span>occurs <span class="_ _2"></span>that <span class="_ _3"></span>terminates <span class="_ _2"></span>the</div><div class="t m0 x32 h4d y2e24 ff19 fs26 fc0 sc0 ls0 ws0">process. <span class="_ _59"> </span>If<span class="_ _59"> </span><span class="lsce0">as<span class="_ _4a"></span><span class="ls0">ignal <span class="_"> </span>is <span class="_"> </span>caught <span class="_"> </span>and <span class="_"> </span>if <span class="_"> </span>the <span class="_"> </span>signal <span class="_"> </span>handler <span class="_"> </span>returns, <span class="_"> </span>then<span class="_ _59"> </span><span class="ff1a">sigsuspend</span></span></span></div><div class="t m0 x32 h49 y2e25 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turns, <span class="_ _45"> </span>and <span class="_ _47"> </span>the <span class="_ _45"> </span>signal <span class="_ _47"> </span>mask <span class="_ _45"> </span>of <span class="_ _47"> </span>the <span class="_ _47"> </span>process <span class="_ _47"> </span>is <span class="_ _45"> </span>set <span class="_ _47"> </span>to <span class="_ _45"> </span>its <span class="_ _47"> </span>value <span class="_ _45"> </span>befor<span class="_ _0"></span><span class="lsce1">et<span class="_ _62"></span><span class="ls0">he <span class="_ _45"> </span>call <span class="_ _47"> </span>to</span></span></span></div><div class="t m0 x32 h4d y2e26 ff1a fs26 fc0 sc0 ls0 ws0">sigsuspend<span class="ff19">.</span></div><div class="t m0 x3f h49 y2e27 ff19 fs26 fc0 sc0 ls0 ws0">Note that there<span class="_"> </span>is<span class="_"> </span>no<span class="_"> </span>successful return from this function.<span class="_ _59"> </span>If it returns to the caller<span class="_ _1"></span><span class="lsce2">,i<span class="_ _d"></span><span class="ls0">t</span></span></div><div class="t m0 x32 h4d y2e28 ff19 fs26 fc0 sc0 ls0 ws0">always returns<span class="_"> </span><span class="ff20">−</span><span class="lsd3">1w<span class="_ _4f"></span><span class="ls0">ith<span class="_"> </span><span class="ff1a">errno<span class="_ _66"> </span></span>set to<span class="_"> </span><span class="ff1a">EINTR<span class="_ _80"> </span></span>(indicating an interrupted system call).</span></span></div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892409px;bottom:1236.288916px;width:165.335808px;height:19.679993px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
