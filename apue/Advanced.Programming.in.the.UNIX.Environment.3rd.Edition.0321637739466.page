<div id="pf1d2" class="pf w4 h1f" data-page-no="1d2"><div class="pc pc1d2 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1d2.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">432<span class="_ _1b"> </span><span class="ff19">Thread <span class="_"> </span>Contr<span class="_ _0"></span>ol <span class="_ _177"> </span>Chapter<span class="_ _44"> </span>12</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls45 ws0">re<span class="ls0">strict <span class="_ _53"> </span>the <span class="_ _42"> </span>mor<span class="lse85">ee<span class="_ _c"></span><span class="ls0">xpensive <span class="_ _53"> </span>implementation <span class="_ _53"> </span>to <span class="_ _42"> </span>the <span class="_ _53"> </span>case <span class="_ _42"> </span>in <span class="_ _53"> </span>which <span class="_ _53"> </span>mutexes <span class="_ _42"> </span>ar<span class="lse86">es<span class="_ _c"></span><span class="ls0">hared</span></span></span></span></span></div><div class="t m0 x32 h2a y130 ff19 fsf fc0 sc0 ls0 ws0">among processes.</div><div class="t m0 x3f h2b y131 ff19 fsf fc0 sc0 ls0 ws0">The<span class="_ _44"> </span><span class="ff1b ls45">ro<span class="_ _2"></span><span class="ls0">bust<span class="_ _44"> </span></span></span>mutex <span class="_ _53"> </span>attribute <span class="_ _53"> </span>is <span class="_ _42"> </span>related <span class="_ _53"> </span>to <span class="_ _42"> </span>mutexes <span class="_ _53"> </span>that <span class="_ _53"> </span>ar<span class="lse87">es<span class="_ _c"></span><span class="ls0">hared <span class="_ _42"> </span>among <span class="_ _53"> </span>multiple</span></span></div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">processes. <span class="_ _45"> </span>It<span class="_ _45"> </span>is <span class="_ _9"></span>meant <span class="_ _23"></span>to <span class="_ _9"></span>address <span class="_ _9"></span>the <span class="_ _9"></span>problem <span class="_ _9"></span>of <span class="_ _23"></span>mutex <span class="_ _9"></span>state <span class="_ _23"></span>r<span class="_ _0"></span>ecovery <span class="_ _9"></span>when <span class="_ _23"></span>a <span class="_ _9"></span>process</div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">terminates <span class="_ _42"> </span>while <span class="_ _42"> </span>holding <span class="_ _42"> </span>a <span class="_ _42"> </span>mutex.<span class="_ _51"> </span>When <span class="_ _42"> </span>this <span class="_ _42"> </span>happens, <span class="_ _42"> </span>the <span class="_ _42"> </span>mutex <span class="_ _42"> </span>is <span class="_ _42"> </span>left <span class="_ _42"> </span>in <span class="_ _42"> </span>a <span class="_ _42"> </span>locked</div><div class="t m0 x32 h2a y134 ff19 fsf fc0 sc0 ls0 ws0">state and <span class="_ _2"></span>recovery is <span class="_ _2"></span>difﬁcult. <span class="_"> </span>Threads blocked <span class="_ _2"></span>on <span class="_ _2"></span>the <span class="_ _2"></span>lock in <span class="_ _2"></span>other <span class="_ _2"></span>processes will <span class="_ _2"></span>block</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">indeﬁnitely<span class="_ _4"></span>.</div><div class="t m0 x3f h26 y136 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _e"> </span>c<span class="_ _9"></span><span class="ls0">an <span class="_ _3"></span>use <span class="_ _2"></span>the<span class="_ _47"> </span><span class="ff1a">pthread_mutexattr_getrobust<span class="_ _47"> </span></span>function <span class="_ _2"></span>to <span class="_ _2"></span>get <span class="_ _3"></span>the <span class="_ _2"></span>value <span class="_ _3"></span>of <span class="_ _2"></span>the</span></div><div class="t m0 x32 h2b y137 ff1b fsf fc0 sc0 ls45 ws0">ro<span class="ls0">bust<span class="_ _35"> </span><span class="ff19">mutex <span class="_ _42"> </span>attribute.<span class="_ _51"> </span><span class="ls5f">To <span class="_ _45"> </span>s<span class="_ _9"></span></span>et <span class="_ _23"> </span>the <span class="_ _42"> </span>value <span class="_ _23"> </span>of <span class="_ _42"> </span>the<span class="_ _35"> </span></span></span>ro<span class="ls0">bust<span class="_ _44"> </span><span class="ff19">mutex <span class="_ _23"> </span>attribute, <span class="_ _42"> </span>we <span class="_ _23"> </span>can <span class="_ _23"> </span>call <span class="_ _42"> </span>the</span></span></div><div class="t m0 x32 h26 y138 ff1a fsf fc0 sc0 ls0 ws0">pthread_mutexattr_setrobust<span class="_ _80"> </span><span class="ff19">function.</span></div><div class="t m0 x3f h57 y35f1 ff1a fs2d fc0 sc0 ls0 ws0">#include &lt;pthread.h&gt;</div><div class="t m0 x3f h57 y35f2 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_mutexattr_getrobust(const pthread_mutexattr_t *</div><div class="t m0 x129 h57 y35f3 ff1a fs2d fc0 sc0 ls0 ws0">restrict<span class="_"> </span><span class="ff1b">attr</span>,</div><div class="t m0 x129 h57 y35f4 ff1a fs2d fc0 sc0 ls0 ws0">int *restrict<span class="_"> </span><span class="ff1b ls1e7">ro<span class="ls0">bust</span></span>);</div><div class="t m0 x3f h57 y35f5 ff1a fs2d fc0 sc0 ls0 ws0">int pthread_mutexattr_setrobust(pthread_mutexattr_t *<span class="ff1b">attr</span>,</div><div class="t m0 x129 h57 y35f6 ff1a fs2d fc0 sc0 ls0 ws0">int<span class="_"> </span><span class="ff1b ls1e7">ro<span class="ls0">bust</span></span>);</div><div class="t m0 xca h5f y35f7 ff19 fs2d fc0 sc0 ls0 ws0">Both return: 0 if OK, err<span class="_ _0"></span>or number on failure</div><div class="t m0 x3f h4a y35f8 ff19 fs26 fc0 sc0 ls0 ws0">Ther<span class="lse88">ea<span class="_ _184"></span><span class="lscc">re <span class="_ _65"> </span>t<span class="_ _2"></span><span class="ls0">wo <span class="_ _54"> </span>possible <span class="_ _54"> </span>values <span class="_ _54"> </span>for <span class="_ _65"> </span>the<span class="_ _98"> </span></span><span class="ff1b">ro<span class="_ _2"></span><span class="ls0">bust<span class="_ _93"> </span><span class="ff19">attribute. <span class="_ _98"> </span>The<span class="_ _93"> </span>default <span class="_ _54"> </span>is</span></span></span></span></span></div><div class="t m0 x32 h4d y35f9 ff1a fs26 fc0 sc0 ls0 ws0">PTHREAD_MUTEX_STALLED<span class="ff19 lse89">,w<span class="_ _62"></span><span class="ls0">hich <span class="_ _45"> </span>means <span class="_ _45"> </span>that <span class="_ _47"> </span>no <span class="_ _45"> </span>special <span class="_ _45"> </span>action <span class="_ _45"> </span>is <span class="_ _45"> </span>taken <span class="_ _47"> </span>when <span class="_ _45"> </span>a</span></span></div><div class="t m0 x32 h49 y35fa ff19 fs26 fc0 sc0 ls0 ws0">process <span class="_ _3"></span>terminates <span class="_ _23"></span>while <span class="_ _9"></span>holding <span class="_ _9"></span>a <span class="_ _23"></span>mutex.<span class="_ _5a"> </span>In <span class="_ _9"></span>this <span class="_ _9"></span>case, <span class="_ _23"></span>use <span class="_ _9"></span>of <span class="_ _9"></span>the <span class="_ _9"></span>mutex <span class="_ _23"></span>can <span class="_ _9"></span>result <span class="_ _9"></span>in</div><div class="t m0 x32 h49 y35fb ff19 fs26 fc0 sc0 ls0 ws0">undeﬁned <span class="_ _47"> </span>behavior<span class="_ _6"></span><span class="lse8a">,a<span class="_ _5b"></span><span class="ls0">nd <span class="_ _47"> </span>applications <span class="_ _47"> </span>waiting <span class="_ _47"> </span>for <span class="_ _47"> </span>it <span class="_ _47"> </span>to <span class="_ _47"> </span>be <span class="_ _47"> </span>unlocked <span class="_ _47"> </span>ar<span class="lse8b">ee<span class="_ _1d"></span><span class="lscc">ff<span class="_ _2"></span><span class="ls0">ectively</span></span></span></span></span></div><div class="t m0 x32 h4d y35fc ff19 fs26 fc0 sc0 ls937 ws0">‘‘<span class="_ _2"></span><span class="ls0">stalled.’<span class="_ _0"></span><span class="lse8c">’T<span class="_ _5b"></span><span class="ls0">he <span class="_ _2"></span>other <span class="_ _2"></span>value is<span class="_ _47"> </span><span class="ff1a">PTHREAD_MUTEX_ROBUST</span><span class="lse8c">.T<span class="_ _5b"></span><span class="ls0">his <span class="_ _2"></span>value <span class="_ _2"></span>will cause <span class="_ _2"></span>a <span class="_ _2"></span>thread</span></span></span></span></span></div><div class="t m0 x32 h4d y35fd ff19 fs26 fc0 sc0 ls0 ws0">blocked <span class="_ _23"></span>in <span class="_ _23"></span>a <span class="_ _23"></span>call <span class="_ _23"></span>to<span class="_ _45"> </span><span class="ff1a">pthread_mutex_lock<span class="_ _35"> </span></span>to <span class="_ _23"> </span>acquir<span class="lse8d">et<span class="_ _43"></span><span class="ls0">he <span class="_ _23"> </span>lock <span class="_ _23"> </span>when <span class="_ _23"></span>another <span class="_ _23"></span>process</span></span></div><div class="t m0 x32 h49 y35fe ff19 fs26 fc0 sc0 ls0 ws0">holding <span class="_ _47"> </span>the <span class="_ _45"> </span>lock <span class="_ _47"> </span>terminates <span class="_ _45"> </span>without <span class="_ _45"> </span>ﬁrst <span class="_ _47"> </span>unlocking <span class="_ _45"> </span>it, <span class="_ _47"> </span>but <span class="_ _45"> </span>the <span class="_ _47"> </span>return <span class="_ _47"> </span>value <span class="_ _45"> </span>from</div><div class="t m0 x32 h4d y35ff ff1a fs26 fc0 sc0 ls0 ws0">pthread_mutex_lock<span class="_ _47"> </span><span class="ff19">is<span class="_ _47"> </span></span>EOWNERDEAD<span class="_ _47"> </span><span class="ff19">instead <span class="_ _3"></span>of <span class="_ _3"></span>0.<span class="_ _16"> </span>Applications <span class="_ _3"></span>can <span class="_ _3"></span>use <span class="_ _3"></span>this <span class="_ _3"></span>special</span></div><div class="t m0 x32 h49 y3600 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">turn <span class="_ _23"> </span>value <span class="_ _23"> </span>as <span class="_ _23"> </span>an <span class="_ _23"> </span>indication <span class="_ _23"> </span>that <span class="_ _23"> </span>they <span class="_ _23"> </span>need <span class="_ _23"> </span>to <span class="_ _23"> </span>recover <span class="_ _23"></span>whatever <span class="_ _23"></span>state <span class="_ _23"></span>the <span class="_ _23"></span>mutex <span class="_ _23"></span>was</span></div><div class="t m0 x32 h49 y3601 ff19 fs26 fc0 sc0 ls0 ws0">protecting, <span class="_ _23"> </span>if <span class="_ _42"> </span>possible <span class="_ _42"> </span>(the <span class="_ _42"> </span>details <span class="_ _23"> </span>of <span class="_ _42"> </span>what <span class="_ _42"> </span>state <span class="_ _42"> </span>is <span class="_ _42"> </span>being <span class="_ _42"> </span>pr<span class="_ _0"></span>otected <span class="_ _42"> </span>and <span class="_ _23"> </span>how <span class="_ _42"> </span>it <span class="_ _42"> </span>can <span class="_ _42"> </span>be</div><div class="t m0 x32 h4d y3602 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">covered <span class="_ _3"></span>will <span class="_ _3"></span>vary <span class="_ _9"></span>among <span class="_ _3"></span>applications).<span class="_ _5a"> </span>Note <span class="_ _3"></span>that <span class="_ _3"></span>the<span class="_ _45"> </span><span class="ff1a">EOWNERDEAD<span class="_ _47"> </span></span>error <span class="_ _3"></span>return <span class="_ _3"></span>isn’t</span></div><div class="t m0 x32 h49 y3603 ff19 fs26 fc0 sc0 lscc ws0">re<span class="ls0">ally an error in this case, because the caller will own the lock.</span></div><div class="t m0 x3f h4d y3604 ff19 fs26 fc0 sc0 ls0 ws0">Using robust mutexes changes the way we use<span class="_"> </span><span class="ff1a">pthread_mutex_lock</span><span class="lse8e">,b<span class="_ _d"></span><span class="ls0">ecause we</span></span></div><div class="t m0 x32 h49 y3605 ff19 fs26 fc0 sc0 ls0 ws0">now <span class="_ _53"> </span>have <span class="_ _53"> </span>to <span class="_ _53"> </span>check <span class="_ _53"> </span>for <span class="_ _e"> </span>three <span class="_ _42"> </span>return <span class="_ _53"> </span>values <span class="_ _53"> </span>instead <span class="_ _53"> </span>of <span class="_ _53"> </span>two: <span class="_ _e"> </span>success <span class="_ _53"> </span>with <span class="_ _53"> </span>no <span class="_ _53"> </span>recovery</div><div class="t m0 x32 h49 y3606 ff19 fs26 fc0 sc0 ls0 ws0">needed, <span class="_ _53"> </span>success <span class="_"> </span>but <span class="_ _53"> </span>recovery <span class="_ _53"> </span>needed, <span class="_ _e"> </span>and <span class="_ _e"> </span>failure. <span class="_ _4b"> </span>However<span class="_ _6"></span>,<span class="_ _59"> </span>if<span class="_ _4b"> </span>we<span class="_ _4b"> </span>don’t <span class="_ _e"> </span>use <span class="_ _e"> </span>robust</div><div class="t m0 x32 h49 y3607 ff19 fs26 fc0 sc0 ls0 ws0">mutexes, then we can continue to check only for success and failure.</div><div class="t m0 x76 h2d y3608 ff19 fs10 fc0 sc0 ls0 ws0">Of <span class="_ _3"></span>the <span class="_ _3"></span>four <span class="_ _3"></span>platforms <span class="_ _9"></span>covered <span class="_ _2"></span>in <span class="_ _9"></span>this <span class="_ _3"></span>text, <span class="_ _3"></span>only <span class="_ _3"></span>Linux <span class="_ _9"></span>3.2.0 <span class="_ _3"></span>currently <span class="_ _3"></span>supports <span class="_ _3"></span>robust <span class="_ _3"></span>pthread</div><div class="t m0 x76 h2d y3609 ff19 fs10 fc0 sc0 ls0 ws0">mutexes. <span class="_ _44"> </span>Solaris<span class="_ _4b"> </span>10 <span class="_ _80"> </span>supports <span class="_ _80"> </span>robust <span class="_ _80"> </span>mutexes <span class="_ _80"> </span>only <span class="_ _80"> </span>in <span class="_ _80"> </span>its <span class="_ _80"> </span>Solaris <span class="_ _80"> </span>threads <span class="_ _80"> </span>library <span class="_ _80"> </span>(see <span class="_ _80"> </span>the</div><div class="t m0 x76 h5e y360a ff1a fs10 fc0 sc0 ls0 ws0">mutex_init</div><div class="t m0 x171 h2d y360b ff19 fs10 fc0 sc0 ls0 ws0">(</div><div class="t m0 x1dd h2d y360a ff19 fs10 fc0 sc0 ls0 ws0">3C</div><div class="t m0 xbf h2d y360b ff19 fs10 fc0 sc0 ls0 ws0">)</div><div class="t m0 xf3 h2d y360a ff19 fs10 fc0 sc0 ls0 ws0">Solaris <span class="_ _3"></span>manual <span class="_ _9"> </span>page <span class="_ _9"></span>for <span class="_ _9"></span>mor<span class="lse8f">ei<span class="_ _4f"></span><span class="ls0">nformation). <span class="_ _66"> </span>However<span class="_ _1"></span>,<span class="_ _47"> </span>in<span class="_ _66"> </span>Solaris <span class="_ _9"></span>1<span class="_ _1"></span>1, <span class="_ _9"></span>robust</span></span></div><div class="t m0 x76 h2d y360c ff19 fs10 fc0 sc0 ls0 ws0">pthread mutexes ar<span class="_ _0"></span><span class="ls136">es<span class="_ _84"></span><span class="ls0">upported.</span></span></div><div class="t m0 x3f h49 y360d ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_"> </span>the <span class="_"> </span>application <span class="_ _e"> </span>state <span class="_"> </span>can’t <span class="_"> </span>be <span class="_"> </span>r<span class="_ _0"></span>ecovered, <span class="_ _e"> </span>the <span class="_"> </span>mutex <span class="_"> </span>will <span class="_"> </span>be <span class="_ _e"> </span>in <span class="_"> </span>a <span class="_"> </span>permanently</div><div class="t m0 x32 h49 y360e ff19 fs26 fc0 sc0 ls0 ws0">unusable <span class="_ _3"></span>state <span class="_ _9"></span>after <span class="_ _3"></span>the <span class="_ _9"></span>thread <span class="_ _2"></span>unlocks <span class="_ _9"></span>the <span class="_ _3"></span>mutex.<span class="_ _5a"> </span><span class="ls164">To <span class="_ _80"> </span>p<span class="_ _23"></span><span class="lscc">re</span></span>vent <span class="_ _3"></span>this <span class="_ _9"></span>problem, <span class="_ _3"></span>the <span class="_ _3"></span>thread</div><div class="t m0 x32 h4d y360f ff19 fs26 fc0 sc0 ls0 ws0">can <span class="_ _46"> </span>call <span class="_ _46"> </span>the<span class="_ _50"> </span><span class="ff1a">pthread_mutex_consistent<span class="_ _60"> </span></span>function <span class="_ _61"> </span>to <span class="_ _46"> </span>indicate <span class="_ _46"> </span>that <span class="_ _61"> </span>the <span class="_ _46"> </span>state</div><div class="t m0 x32 h49 y3610 ff19 fs26 fc0 sc0 ls0 ws0">associated with the mutex is consistent befor<span class="lsd3">eu<span class="_ _4f"></span><span class="ls0">nlocking the mutex.</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
