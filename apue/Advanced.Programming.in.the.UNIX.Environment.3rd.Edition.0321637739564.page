<div id="pf234" class="pf w4 h1f" data-page-no="234"><div class="pc pc234 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg234.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">530<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>I/O<span class="_ _16b"> </span>Chapter <span class="_"> </span>14</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _80"> </span>ﬁ<span class="_ _9"></span><span class="ls0">rst <span class="_ _3"></span>open <span class="_ _3"></span>both <span class="_ _3"></span>ﬁles <span class="_ _3"></span>and <span class="_ _3"></span>then <span class="_ _9"></span>call<span class="_ _47"> </span><span class="ff1a">fstat<span class="_ _47"> </span></span>to <span class="_ _3"></span>obtain <span class="_ _3"></span>the <span class="_ _3"></span>size <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>input <span class="_ _3"></span>ﬁle.<span class="_ _16"> </span></span>We</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">need <span class="_ _3"></span>this <span class="_ _9"></span>size <span class="_ _3"></span>for <span class="_ _9"></span>the <span class="_ _3"></span>call <span class="_ _9"></span>to<span class="_ _45"> </span><span class="ff1a">mmap<span class="_ _47"> </span></span>for <span class="_ _9"></span>the <span class="_ _3"></span>input <span class="_ _9"></span>ﬁle, <span class="_ _3"></span>and <span class="_ _9"></span>we <span class="_ _3"></span>also <span class="_ _9"></span>need <span class="_ _9"></span>to <span class="_ _3"></span>set <span class="_ _9"></span>the <span class="_ _3"></span>size <span class="_ _9"></span>of</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _2"></span>output <span class="_ _2"></span>ﬁle.<span class="_ _61"> </span><span class="ls5f">We <span class="_ _80"> </span>c<span class="_ _9"></span></span>all<span class="_ _47"> </span><span class="ff1a">ftruncate<span class="_ _47"> </span></span>to <span class="_ _2"></span>set <span class="_ _2"></span>the <span class="_ _2"></span>size <span class="_ _3"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>output <span class="_ _3"></span>ﬁle.<span class="_ _61"> </span>If <span class="_ _2"></span>we <span class="_ _3"></span>don’t <span class="_ _2"></span>set <span class="_ _2"></span>the</div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">output <span class="_ _2"></span>ﬁle’s <span class="_ _3"></span>size, <span class="_ _2"></span>the <span class="_ _3"></span>call <span class="_ _3"></span>to<span class="_ _66"> </span><span class="ff1a">mmap<span class="_ _47"> </span></span>for <span class="_ _3"></span>the <span class="_ _2"></span>output <span class="_ _3"></span>ﬁle <span class="_ _3"></span>is <span class="_ _2"></span>successful, <span class="_ _3"></span>but <span class="_ _2"></span>the <span class="_ _3"></span>ﬁrst <span class="_ _3"></span>refer<span class="_ _1"></span>ence</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">to the associated memory region generates a<span class="_"> </span><span class="ff1a">SIGBUS<span class="_ _80"> </span></span>signal.</div><div class="t m0 x3f h26 y134 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>t<span class="_ _9"></span><span class="ls0">hen <span class="_ _2"></span>call<span class="_"> </span><span class="ff1a">mmap<span class="_ _66"> </span></span>for each ﬁle, <span class="_ _2"></span>to map the ﬁle <span class="_ _2"></span>into memory<span class="_ _6"></span><span class="lsdb9">,a<span class="_ _4f"></span><span class="ls0">nd <span class="_ _2"></span>ﬁnally call<span class="_"> </span><span class="ff1a">memcpy</span></span></span></span></div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">to copy <span class="_ _2"></span>data from the <span class="_ _2"></span>input buffer to the <span class="_ _2"></span>output buffer<span class="_ _6"></span><span class="ls1114">.W<span class="_ _62"></span><span class="lsd9b">ec<span class="_ _4f"></span><span class="ls0">opy <span class="_ _2"></span>at most <span class="_ _2"></span>1 <span class="_ _2"></span>GB of <span class="_ _2"></span>data at</span></span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls1115 ws0">at<span class="_ _4f"></span><span class="ls0">ime <span class="_ _2"></span>to <span class="_ _2"></span>limit the <span class="_ _2"></span>amount <span class="_ _2"></span>of <span class="_ _2"></span>memory we <span class="_ _2"></span>use <span class="_ _2"></span>(it might <span class="_ _2"></span>not <span class="_ _2"></span>be <span class="_ _2"></span>possible to <span class="_ _2"></span>map <span class="_ _2"></span>the entire</span></div><div class="t m0 x32 h2a y137 ff19 fsf fc0 sc0 ls0 ws0">contents <span class="_ _47"> </span>of <span class="_ _47"> </span>a <span class="_ _47"> </span>very <span class="_ _47"> </span>lar<span class="_ _0"></span>ge <span class="_ _47"> </span>ﬁle <span class="_ _47"> </span>if <span class="_ _47"> </span>the <span class="_ _47"> </span>system <span class="_ _47"> </span>doesn’t <span class="_ _66"> </span>have <span class="_ _47"> </span>enough <span class="_ _47"> </span>memory).<span class="_ _5f"> </span>Before</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">mapping the next sections of the ﬁles, we unmap the previous sections.</div><div class="t m0 x3f h26 y139 ff19 fsf fc0 sc0 ls0 ws0">As <span class="_"> </span>the <span class="_"> </span>bytes <span class="_ _66"> </span>of <span class="_"> </span>data <span class="_ _66"> </span>ar<span class="ls1116">ef<span class="_ _5b"></span><span class="ls0">etched <span class="_ _66"> </span>from <span class="_"> </span>the <span class="_"> </span>input <span class="_ _66"> </span>buffer <span class="_"> </span>(<span class="ff1a">src</span>), <span class="_"> </span>the <span class="_"> </span>input <span class="_ _66"> </span>ﬁle <span class="_ _66"> </span>is</span></span></div><div class="t m0 x32 h26 y13a ff19 fsf fc0 sc0 ls0 ws0">automatically <span class="_ _23"> </span>read <span class="_ _23"></span>by <span class="_ _23"> </span>the <span class="_ _23"> </span>kernel; <span class="_ _23"> </span>as <span class="_ _42"> </span>the <span class="_ _23"></span>data <span class="_ _23"> </span>is <span class="_ _23"> </span>stored <span class="_ _23"> </span>in <span class="_ _23"> </span>the <span class="_ _42"> </span>output <span class="_ _23"></span>buffer <span class="_ _23"></span>(<span class="ff1a">dst</span>), <span class="_ _23"> </span>the</div><div class="t m0 x32 h2a y254 ff19 fsf fc0 sc0 ls0 ws0">data is automatically written to the output ﬁle.</div><div class="t m0 x76 h51 ya07 ff19 fs2a fc0 sc0 ls0 ws0">Exactly <span class="_"> </span>when <span class="_ _80"> </span>the <span class="_ _e"> </span>data <span class="_ _80"> </span>is <span class="_ _e"> </span>written <span class="_ _80"> </span>to <span class="_ _e"> </span>the <span class="_ _80"> </span>ﬁle <span class="_ _e"> </span>depends <span class="_ _80"> </span>on <span class="_ _80"> </span>the <span class="_"> </span>system’s <span class="_ _80"> </span>page <span class="_"> </span>management</div><div class="t m0 x76 h51 ya08 ff19 fs2a fc0 sc0 ls0 ws0">algorithms. <span class="_ _66"> </span>Some<span class="_ _47"> </span>systems <span class="_ _9"></span>have <span class="_ _9"></span>daemons <span class="_ _9"></span>that <span class="_ _9"></span>write <span class="_ _9"></span>dirty <span class="_ _9"></span>pages <span class="_ _9"></span>to <span class="_ _9"></span>disk <span class="_ _9"></span>slowly <span class="_ _9"></span>over <span class="_ _9"></span>time.<span class="_ _59"> </span>If</div><div class="t m0 x76 h52 ya09 ff19 fs2a fc0 sc0 ls0 ws0">we <span class="_ _9"></span>want <span class="_ _9"></span>to <span class="_ _9"> </span>ensur<span class="ls1117">et<span class="_ _4f"></span><span class="ls0">hat <span class="_ _9"></span>the <span class="_ _9"></span>data <span class="_ _9"></span>is <span class="_ _9"> </span>safely <span class="_ _23"> </span>written <span class="_ _9"></span>to <span class="_ _9"></span>the <span class="_ _9"></span>ﬁle, <span class="_ _9"></span>we <span class="_ _9"> </span>need <span class="_ _23"> </span>to <span class="_ _9"></span>call<span class="_ _66"> </span><span class="ff1a">msync<span class="_ _47"> </span></span>with <span class="_ _9"></span>the</span></span></div><div class="t m0 x76 h52 y2626 ff1a fs2a fc0 sc0 ls0 ws0">MS_SYNC<span class="_ _53"> </span><span class="ff19">ﬂag befor<span class="lse9">ee<span class="_ _84"></span><span class="ls0">xiting.</span></span></span></div><div class="t m0 x3f h26 y2a6f ff19 fsf fc0 sc0 ls0 ws0">Let’s compar<span class="ls24b">et<span class="_ _4f"></span><span class="ls0">his <span class="_ _2"></span>memory-mapped ﬁle <span class="_ _2"></span>copy <span class="_ _2"></span>to a <span class="_ _2"></span>copy that <span class="_ _2"></span>is done <span class="_ _2"></span>by <span class="_ _2"></span>calling<span class="_"> </span><span class="ff1a">read</span></span></span></div><div class="t m0 x32 h26 y2a70 ff19 fsf fc0 sc0 ls0 ws0">and<span class="_ _45"> </span><span class="ff1a">write<span class="_ _47"> </span></span>(with <span class="_ _9"></span>a <span class="_ _9"></span>buffer <span class="_ _3"></span>size <span class="_ _9"></span>of <span class="_ _9"></span>8,192).<span class="_ _5a"> </span>Figur<span class="ls1118">e1<span class="_ _b"></span><span class="ls0">4.28 <span class="_ _3"></span>shows <span class="_ _9"></span>the <span class="_ _9"></span>results. <span class="_ _47"> </span>The<span class="_ _45"> </span>times <span class="_ _9"></span>are</span></span></div><div class="t m0 x32 h2a y2a71 ff19 fsf fc0 sc0 ls0 ws0">given <span class="_ _3"></span>in <span class="_ _3"></span>seconds <span class="_ _3"></span>and <span class="_ _9"></span>the <span class="_ _3"></span>size <span class="_ _3"></span>of <span class="_ _9"></span>the <span class="_ _3"></span>ﬁle <span class="_ _3"></span>copied <span class="_ _3"></span>was <span class="_ _9"></span>300 <span class="_ _3"></span>MB.<span class="_ _16"> </span>Note <span class="_ _3"></span>that <span class="_ _9"></span>we <span class="_ _3"></span>don’t <span class="_ _3"></span>synch</div><div class="t m0 x32 h2a y2a72 ff19 fsf fc0 sc0 ls0 ws0">the data to disk befor<span class="ls44">ee<span class="_ _4f"></span><span class="ls0">xiting.</span></span></div><div class="t m0 x66 h2d y40ad ff19 fs10 fc0 sc0 ls0 ws0">Linux 3.2.0</div><div class="t m0 x86 h2d y40ae ff19 fs10 fc0 sc0 ls0 ws0">(</div><div class="t m0 x6c h2d y40ad ff19 fs10 fc0 sc0 ls0 ws0">Intel x86</div><div class="t m0 xaf h2d y40ae ff19 fs10 fc0 sc0 ls0 ws0">)</div><div class="t m0 x100 h2d y40ad ff19 fs10 fc0 sc0 ls0 ws0">Solaris 10</div><div class="t m0 xbb h2d y40ae ff19 fs10 fc0 sc0 ls0 ws0">(</div><div class="t m0 x5e h2d y40ad ff19 fs10 fc0 sc0 ls0 ws0">SP<span class="_ _6"></span>ARC</div><div class="t m0 x11d h2d y40ae ff19 fs10 fc0 sc0 ls0 ws0">)</div><div class="t m0 xc0 h2e y40af ff19 fs11 fc0 sc0 ls0 ws0">User <span class="_ _d8"> </span>System<span class="_ _2b"> </span>Clock <span class="_ _75"> </span>User<span class="_ _87"> </span>System <span class="_ _6d"> </span>Clock</div><div class="t m0 x7b h2e y40b0 ff19 fs11 fc0 sc0 ls0 ws0">Operation</div><div class="t m0 x197 h6d y40b1 ff1a fs12 fc0 sc0 ls0 ws0">read/write<span class="_ _129"> </span><span class="ff19">0.01 <span class="_ _15"> </span>0.54<span class="_ _7a"> </span>5.67 <span class="_ _170"> </span>0.29 <span class="_ _72"> </span>10.60<span class="_ _170"> </span>43.67</span></div><div class="t m0 x197 h6d y40b2 ff1a fs12 fc0 sc0 ls0 ws0">mmap/memcpy<span class="_ _1fb"> </span><span class="ff19">0.08 <span class="_ _15"> </span>0.65<span class="_ _2a8"> </span>22.54 <span class="_ _170"> </span>1.89<span class="_ _7a"> </span>8.56 <span class="_ _9c"> </span>38.42</span></div><div class="t m0 xaa h63 y40b3 ff18 fs13 fc0 sc0 ls0 ws0">Figure 14.28<span class="_ _5a"> </span><span class="ff19 ls10d4">Ti<span class="_ _3"></span><span class="ls0">ming results comparing<span class="_"> </span><span class="ff1a">read/write<span class="_ _53"> </span></span>versus<span class="_"> </span><span class="ff1a">mmap/memcpy</span></span></span></div><div class="t m0 x3f h6e y40b4 ff19 fs31 fc0 sc0 ls0 ws0">For <span class="_ _2"></span>both <span class="_ _3"></span>Linux <span class="_ _3"></span>3.2.0 <span class="_ _2"></span>and <span class="_ _3"></span>Solaris <span class="_ _3"></span>10, <span class="_ _2"></span>the <span class="_ _3"></span>total <span class="_ _3"></span>CPU <span class="_ _2"></span>time <span class="_ _3"></span>(user<span class="_ _42"> </span><span class="ff1c">+<span class="_ _53"> </span></span>system) <span class="_ _3"></span>is <span class="_ _2"></span>almost <span class="_ _3"></span>the</div><div class="t m0 x32 h64 y40b5 ff19 fs31 fc0 sc0 ls0 ws0">same <span class="_ _42"> </span>for <span class="_ _42"> </span>both <span class="_ _53"> </span>approaches. <span class="_ _44"> </span>On<span class="_ _44"> </span>Solaris, <span class="_ _42"> </span>copying <span class="_ _42"> </span>using<span class="_ _44"> </span><span class="ff1a">mmap<span class="_ _44"> </span></span>and<span class="_ _44"> </span><span class="ff1a">memcpy<span class="_ _44"> </span></span>takes <span class="_ _53"> </span>more</div><div class="t m0 x32 h64 y40b6 ff19 fs31 fc0 sc0 ls0 ws0">user <span class="_ _42"> </span>time <span class="_ _42"> </span>but <span class="_ _42"> </span>less <span class="_ _42"> </span>system <span class="_ _53"> </span>time <span class="_ _42"> </span>than <span class="_ _42"> </span>copying <span class="_ _42"> </span>using<span class="_ _44"> </span><span class="ff1a">read<span class="_ _44"> </span></span>and<span class="_ _44"> </span><span class="ff1a">write</span><span class="ls1119">.O<span class="_ _52"></span><span class="ls111a">nL<span class="_ _43"></span><span class="ls0">inux, <span class="_ _23"> </span>the</span></span></span></div><div class="t m0 x32 h64 y40b7 ff19 fs31 fc0 sc0 ls225 ws0">re<span class="ls0">sults <span class="_ _9"></span>ar<span class="ls111b">es<span class="_ _b"></span><span class="ls0">imilar <span class="_ _9"></span>for <span class="_ _9"></span>the <span class="_ _9"></span>user <span class="_ _9"></span>time, <span class="_ _9"></span>but <span class="_ _9"></span>the <span class="_ _9"></span>system <span class="_ _23"></span>time <span class="_ _3"></span>for <span class="_ _9"></span>using<span class="_ _45"> </span><span class="ff1a">read<span class="_ _45"> </span></span>and<span class="_ _45"> </span><span class="ff1a">write<span class="_ _45"> </span></span>is</span></span></span></div><div class="t m0 x32 h64 y40b8 ff19 fs31 fc0 sc0 ls0 ws0">slightly <span class="_ _3"></span>better <span class="_ _9"></span>than <span class="_ _9"></span>using<span class="_ _47"> </span><span class="ff1a">mmap<span class="_ _45"> </span></span>and<span class="_ _47"> </span><span class="ff1a">memcpy</span><span class="ls111c">.T<span class="_ _1d"></span><span class="ls0">he <span class="_ _9"></span>two <span class="_ _3"></span>versions <span class="_ _9"></span>do <span class="_ _3"></span>the <span class="_ _9"></span>same <span class="_ _9"></span>work, <span class="_ _3"></span>but</span></span></div><div class="t m0 x32 h6e y40b9 ff19 fs31 fc0 sc0 ls0 ws0">they go about it differ<span class="_ _0"></span>ently<span class="_ _4"></span>.</div><div class="t m0 x3f h64 y40ba ff19 fs31 fc0 sc0 ls0 ws0">The <span class="_ _23"></span>major <span class="_ _9"></span>difference <span class="_ _9"></span>is <span class="_ _23"></span>that <span class="_ _23"></span>with<span class="_ _45"> </span><span class="ff1a">read<span class="_ _35"> </span></span>and<span class="_ _35"> </span><span class="ff1a">write</span>,<span class="_ _45"> </span>we<span class="_ _35"> </span>execute <span class="_ _9"></span>a <span class="_ _23"> </span>lot <span class="_ _23"></span>mor<span class="ls111d">es<span class="_ _43"></span><span class="ls0">ystem</span></span></div><div class="t m0 x32 h64 y40bb ff19 fs31 fc0 sc0 ls0 ws0">calls <span class="_ _23"> </span>and <span class="_ _23"> </span>do <span class="_ _42"> </span>mor<span class="ls111e">ec<span class="_ _43"></span><span class="ls0">opying <span class="_ _23"></span>than <span class="_ _23"> </span>with<span class="_ _35"> </span><span class="ff1a">mmap<span class="_ _35"> </span></span>and<span class="_ _35"> </span><span class="ff1a">memcpy</span><span class="ls111f">.W<span class="_ _52"></span><span class="ls0">ith<span class="_ _35"> </span><span class="ff1a">read<span class="_ _35"> </span></span>and<span class="_ _35"> </span><span class="ff1a">write</span><span class="ls1120">,w<span class="_ _43"></span><span class="ls0">e</span></span></span></span></span></span></div><div class="t m0 x32 h64 y40bc ff19 fs31 fc0 sc0 ls0 ws0">copy <span class="_ _2"></span>the <span class="_ _3"></span>data <span class="_ _2"></span>from <span class="_ _2"></span>the <span class="_ _3"></span>kernel’s <span class="_ _3"></span>buffer <span class="_ _2"></span>to <span class="_ _2"></span>the <span class="_ _3"></span>application’s <span class="_ _3"></span>buffer (<span class="ff1a">read</span>), <span class="_ _3"></span>and <span class="_ _3"></span>then <span class="_ _2"></span>copy</div><div class="t m0 x32 h64 y40bd ff19 fs31 fc0 sc0 ls0 ws0">the <span class="_ _23"> </span>data <span class="_ _23"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>application’s <span class="_ _23"> </span>buffer <span class="_ _23"></span>to <span class="_ _23"> </span>the <span class="_ _42"> </span>kernel’s <span class="_ _23"></span>buffer <span class="_ _23"></span>(<span class="ff1a">write</span>). <span class="_ _35"> </span>W<span class="_ _1"></span>ith<span class="_ _35"> </span><span class="ff1a">mmap<span class="_ _35"> </span></span>and</div><div class="t m0 x32 h64 y40be ff1a fs31 fc0 sc0 ls0 ws0">memcpy<span class="ff19">,<span class="_ _44"> </span>we<span class="_ _44"> </span>copy <span class="_ _42"> </span>the <span class="_ _42"> </span>data <span class="_ _53"> </span>directly <span class="_ _42"> </span>from <span class="_ _23"> </span>one <span class="_ _53"> </span>kernel <span class="_ _42"> </span>buffer <span class="_ _42"> </span>mapped <span class="_ _42"> </span>into <span class="_ _53"> </span>our <span class="_ _42"> </span>address</span></div><div class="t m0 x32 h6e y40bf ff19 fs31 fc0 sc0 ls0 ws0">space into another kernel buffer mapped into our <span class="_ _2"></span>address space.<span class="_ _59"> </span>This <span class="_ _2"></span>copying occurs as</div><div class="t m0 x32 h6e y40c0 ff19 fs31 fc0 sc0 ls1121 ws0">ar<span class="_ _43"></span><span class="ls0">esult <span class="_ _23"></span>of <span class="_ _23"> </span>page <span class="_ _42"> </span>fault <span class="_ _23"></span>handling <span class="_ _23"> </span>when <span class="_ _42"> </span>we <span class="_ _23"> </span>refer<span class="_ _0"></span>ence <span class="_ _23"> </span>memory <span class="_ _23"> </span>pages <span class="_ _42"> </span>that <span class="_ _23"> </span>don’t <span class="_ _23"> </span>yet <span class="_ _42"> </span>exist</span></div><div class="t m0 x32 h6e y40c1 ff19 fs31 fc0 sc0 ls0 ws0">(there<span class="_"> </span>is<span class="_"> </span>one <span class="_ _2"></span>fault <span class="_ _2"></span>per <span class="_ _2"></span>page read and <span class="_ _2"></span>one <span class="_ _2"></span>fault <span class="_ _2"></span>per page <span class="_ _2"></span>written).<span class="_ _61"> </span>If the <span class="_ _2"></span>overhead for <span class="_ _2"></span>the</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
