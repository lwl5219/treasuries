<div id="pf1a6" class="pf w4 h1f" data-page-no="1a6"><div class="pc pc1a6 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg1a6.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">388<span class="_ _1b"> </span><span class="ff19">Threads <span class="_ _24b"> </span>Chapter<span class="_ _78"> </span><span class="ls7ed">11</span></span></div><div class="t m0 x32 h2b y12f ff19 fsf fc0 sc0 ls0 ws0">thread <span class="_ _47"> </span>ID <span class="_ _47"> </span>of <span class="_ _45"> </span>the <span class="_ _47"> </span>newly <span class="_ _45"> </span>created <span class="_ _47"> </span>thread <span class="_ _47"> </span>through <span class="_ _47"> </span>the <span class="_ _45"> </span>ﬁrst <span class="_ _47"> </span>parameter <span class="_ _45"> </span>(<span class="ff1b">tidp</span>). <span class="_ _16"> </span>In<span class="_ _16"> </span>our</div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">example, <span class="_ _3"></span>the <span class="_ _3"></span>main <span class="_ _3"></span>thread <span class="_ _3"></span>stores <span class="_ _2"></span>this <span class="_ _3"></span>ID <span class="_ _9"></span>in<span class="_ _47"> </span><span class="ff1a">ntid</span><span class="ls8a">,b<span class="_ _8"></span><span class="ls0">ut <span class="_ _3"></span>the <span class="_ _3"></span>new <span class="_ _3"></span>thread <span class="_ _3"></span>can’t <span class="_ _3"></span>safely <span class="_ _3"></span>use <span class="_ _9"></span>it.</span></span></div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">If <span class="_ _9"></span>the <span class="_ _3"></span>new <span class="_ _9"></span>thread <span class="_ _9"></span>runs <span class="_ _3"></span>befor<span class="lsd99">et<span class="_ _b"></span><span class="ls0">he <span class="_ _9"></span>main <span class="_ _9"></span>thread <span class="_ _3"></span>returns <span class="_ _3"></span>from <span class="_ _9"></span>calling<span class="_ _45"> </span><span class="ff1a">pthread_create</span>,</span></span></div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">then the <span class="_ _2"></span>new <span class="_ _2"></span>thread will <span class="_ _2"></span>see the <span class="_ _2"></span>uninitialized <span class="_ _2"></span>contents <span class="_ _2"></span>of<span class="_ _66"> </span><span class="ff1a">ntid<span class="_ _66"> </span></span>instead <span class="_ _2"></span>of <span class="_ _2"></span>the <span class="_ _2"></span>thread ID.</div><div class="t m0 x3f h2a y133 ff19 fsf fc0 sc0 ls0 ws0">Running the program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _8"></span><span class="ls0">1.2 on Solaris gives us</span></span></div><div class="t m0 x3f h57 y2799 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 y3171 ff1a fs2d fc0 sc0 ls0 ws0">main thread: pid 20075 tid 1 (0x1)</div><div class="t m0 x3f h57 y3172 ff1a fs2d fc0 sc0 ls0 ws0">new thread:<span class="_ _d9"> </span>pid 20075 tid 2 (0x2)</div><div class="t m0 x32 h2a y3173 ff19 fsf fc0 sc0 ls0 ws0">As we expect, both threads have the same <span class="_ _2"></span>process ID, but differ<span class="_ _0"></span>ent thread IDs.<span class="_ _59"> </span>Running</div><div class="t m0 x32 h2a y3174 ff19 fsf fc0 sc0 ls0 ws0">the program in Figur<span class="_ _0"></span><span class="ls44">e1<span class="_ _8"></span><span class="ls0">1.2 on FreeBSD gives us</span></span></div><div class="t m0 x3f h57 y3175 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 y3176 ff1a fs2d fc0 sc0 ls0 ws0">main thread: pid 37396 tid 673190208 (0x28201140)</div><div class="t m0 x3f h57 y3177 ff1a fs2d fc0 sc0 ls0 ws0">new thread:<span class="_ _d9"> </span>pid 37396 tid 673280320 (0x28217140)</div><div class="t m0 x32 h2a y3178 ff19 fsf fc0 sc0 ls0 ws0">As <span class="_ _9"></span>we <span class="_ _23"></span>expect, <span class="_ _9"></span>both <span class="_ _9"></span>threads <span class="_ _9"></span>have <span class="_ _23"></span>the <span class="_ _9"></span>same <span class="_ _9"></span>process <span class="_ _9"></span>ID.<span class="_ _51"> </span>If <span class="_ _9"></span>we <span class="_ _9"></span>look <span class="_ _23"></span>at <span class="_ _9"></span>the <span class="_ _9"></span>thread <span class="_ _9"></span>IDs <span class="_ _23"></span>as</div><div class="t m0 x32 h2a y3179 ff19 fsf fc0 sc0 ls0 ws0">decimal <span class="_ _2"></span>integers, <span class="_ _2"></span>the <span class="_ _2"></span>values <span class="_ _2"></span>look <span class="_ _2"></span>strange, <span class="_ _2"></span>but <span class="_ _2"></span>if <span class="_ _2"></span>we <span class="_ _2"></span>look <span class="_ _2"></span>at <span class="_ _2"></span>them <span class="_ _2"></span>in <span class="_ _2"></span>hexadecimal <span class="_ _2"></span>format,</div><div class="t m0 x32 h2a y317a ff19 fsf fc0 sc0 ls0 ws0">they <span class="_ _3"></span>make <span class="_ _9"></span>mor<span class="lsd9a">es<span class="_ _b"></span><span class="ls0">ense. <span class="_ _45"> </span>As<span class="_ _47"> </span>we <span class="_ _9"></span>noted <span class="_ _9"></span>earlier<span class="_ _6"></span><span class="ls1a8">,F<span class="_ _8"></span><span class="ls45">re<span class="_ _2"></span><span class="ls0">eBSD <span class="_ _3"></span>uses <span class="_ _9"></span>a <span class="_ _9"></span>pointer <span class="_ _9"></span>to <span class="_ _3"></span>the <span class="_ _9"></span>thread <span class="_ _3"></span>data</span></span></span></span></span></div><div class="t m0 x32 h2a y317b ff19 fsf fc0 sc0 ls0 ws0">structur<span class="_ _0"></span><span class="ls44">ef<span class="_ _d"></span><span class="ls0">or its thread ID.</span></span></div><div class="t m0 x3f h2a y317c ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _53"> </span>w<span class="_ _23"></span><span class="ls0">ould expect Mac <span class="_ _2"></span>OS X <span class="_ _2"></span>to be <span class="_ _2"></span>similar to <span class="_ _2"></span>FreeBSD; however<span class="_ _6"></span><span class="lsd9b">,t<span class="_ _d"></span><span class="ls0">he <span class="_ _2"></span>thread ID for <span class="_ _2"></span>the</span></span></span></div><div class="t m0 x32 h2a y317d ff19 fsf fc0 sc0 ls0 ws0">main <span class="_ _23"></span>thread <span class="_ _9"></span>is <span class="_ _23"> </span>from <span class="_ _23"> </span>a <span class="_ _23"> </span>different <span class="_ _9"></span>address <span class="_ _23"></span>range <span class="_ _23"></span>than <span class="_ _23"></span>the <span class="_ _23"></span>thread <span class="_ _9"></span>IDs <span class="_ _42"> </span>for <span class="_ _23"></span>threads <span class="_ _9"></span>created</div><div class="t m0 x32 h26 y317e ff19 fsf fc0 sc0 ls0 ws0">with<span class="_"> </span><span class="ff1a">pthread_create</span>:</div><div class="t m0 x3f h57 y317f ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 y3180 ff1a fs2d fc0 sc0 ls0 ws0">main thread: pid 31807 tid 140735073889440 (0x7fff70162ca0)</div><div class="t m0 x3f h57 y3181 ff1a fs2d fc0 sc0 ls0 ws0">new thread:<span class="_ _d9"> </span>pid 31807 tid 4295716864 (0x1000b7000)</div><div class="t m0 x32 h2a y3182 ff19 fsf fc0 sc0 ls0 ws0">Running the same program on Linux gives us</div><div class="t m0 x3f h57 y3183 ff1a fs2d fc0 sc0 ls0 ws0">$<span class="_"> </span><span class="ff1f">./a.out</span></div><div class="t m0 x3f h57 y3184 ff1a fs2d fc0 sc0 ls0 ws0">main thread: pid 17874 tid 140693894424320 (0x7ff5d9996700)</div><div class="t m0 x3f h57 y3185 ff1a fs2d fc0 sc0 ls0 ws0">new thread:<span class="_ _d9"> </span>pid 17874 tid 140693886129920 (0x7ff5d91ad700)</div><div class="t m0 x32 h2a y3186 ff19 fsf fc0 sc0 ls0 ws0">The <span class="_ _3"></span>Linux <span class="_ _3"></span>thread <span class="_ _2"></span>IDs <span class="_ _9"></span>look <span class="_ _3"></span>like <span class="_ _3"></span>pointers, <span class="_ _3"></span>even <span class="_ _3"></span>though <span class="_ _3"></span>they <span class="_ _3"></span>ar<span class="lsa95">er<span class="_ _b"></span><span class="ls0">epresented <span class="_ _3"></span>as <span class="_ _3"></span>unsigned</span></span></div><div class="t m0 x32 h2a y3187 ff19 fsf fc0 sc0 ls0 ws0">long integers.</div><div class="t m0 x76 h51 y3188 ff19 fs2a fc0 sc0 ls0 ws0">The <span class="_ _47"> </span>threads <span class="_ _47"> </span>implementation <span class="_ _47"> </span>changed <span class="_ _47"> </span>between <span class="_ _47"> </span>Linux <span class="_ _47"> </span>2.4 <span class="_ _47"> </span>and <span class="_ _45"> </span>Linux <span class="_ _66"> </span>2.6.<span class="_ _48"> </span>In <span class="_ _47"> </span>Linux <span class="_ _47"> </span>2.4,</div><div class="t m0 x76 h51 y3189 ff19 fs2a fc0 sc0 ls0 ws0">LinuxThreads <span class="_ _42"> </span>implemented <span class="_"> </span>each <span class="_ _42"> </span>thread <span class="_ _42"> </span>with <span class="_"> </span>a <span class="_ _42"> </span>separate <span class="_"> </span>pr<span class="_ _0"></span>ocess. <span class="_ _35"> </span>This<span class="_ _35"> </span>made <span class="_ _42"> </span>it <span class="_"> </span>dif<span class="_ _0"></span>ﬁcult <span class="_"> </span>to</div><div class="t m0 x76 h51 y318a ff19 fs2a fc0 sc0 ls0 ws0">match <span class="_ _2"></span>the <span class="_ _2"></span>behavior <span class="_ _3"></span>of <span class="_ _2"></span>POSIX <span class="_ _2"></span>threads. <span class="_ _80"> </span>In<span class="_ _80"> </span>Linux <span class="_ _2"></span>2.6, <span class="_ _3"></span>the <span class="_ _2"></span>Linux <span class="_ _3"></span>kernel <span class="_ _2"></span>and <span class="_ _2"></span>threads <span class="_ _2"></span>library <span class="_ _3"></span>were</div><div class="t m0 x76 h51 y318b ff19 fs2a fc0 sc0 ls0 ws0">overhauled <span class="_ _42"> </span>to <span class="_ _42"> </span>use <span class="_ _42"> </span>a <span class="_"> </span>new <span class="_ _23"> </span>threads <span class="_ _42"> </span>implementation <span class="_"> </span>called <span class="_ _42"> </span>the <span class="_ _42"> </span>Native <span class="_ _42"> </span>POSIX <span class="_"> </span>Thr<span class="_ _0"></span>ead <span class="_ _42"> </span>Library</div><div class="t m0 x76 h51 y318c ff19 fs2a fc0 sc0 ls0 ws0">(</div><div class="t m0 x198 h51 y318d ff19 fs2a fc0 sc0 ls0 ws0">NPTL</div><div class="t m0 x1e5 h51 y318c ff19 fs2a fc0 sc0 ls0 ws0">)</div><div class="t m0 x132 h51 y318d ff19 fs2a fc0 sc0 ls10f ws0">.T<span class="_ _43"></span><span class="ls0">his supported a model of multiple threads within a single pr<span class="_ _1"></span>ocess and made it easier</span></div><div class="t m0 x76 h51 y318e ff19 fs2a fc0 sc0 ls0 ws0">to support POSIX threads semantics.</div><div class="t m0 x35 h4b y318f ff16 fs27 fc0 sc0 ls0 ws0">11.5 <span class="_ _93"> </span>Thread<span class="_ _54"> </span><span class="lsd9c">Te<span class="_ _3"></span></span>rmination</div><div class="t m0 x32 h4d y3190 ff19 fs26 fc0 sc0 ls0 ws0">If <span class="_ _42"> </span>any <span class="_ _53"> </span>thread <span class="_ _42"> </span>within <span class="_ _42"> </span>a <span class="_ _53"> </span>process <span class="_ _42"> </span>calls<span class="_ _44"> </span><span class="ff1a">exit</span>,<span class="_ _44"> </span><span class="ff1a">_Exit</span><span class="lsd9d">,o<span class="_ _43"></span><span class="ls0">r<span class="_ _44"> </span><span class="ff1a">_exit</span><span class="lsd9d">,t<span class="_ _c"></span><span class="ls0">hen <span class="_ _53"> </span>the <span class="_ _42"> </span>entir<span class="lsd9e">ep<span class="_ _c"></span><span class="lscc">ro<span class="_ _2"></span><span class="ls0">cess</span></span></span></span></span></span></span></div><div class="t m0 x32 h49 y3191 ff19 fs26 fc0 sc0 ls0 ws0">terminates. <span class="_ _45"> </span>Similarly<span class="_ _4"></span><span class="lsd9f">,w<span class="_ _b"></span><span class="ls0">hen <span class="_ _9"></span>the <span class="_ _9"></span>default <span class="_ _3"></span>action <span class="_ _9"></span>is <span class="_ _9"></span>to <span class="_ _9"></span>terminate <span class="_ _3"></span>the <span class="_ _9"></span>process, <span class="_ _3"></span>a <span class="_ _9"></span>signal <span class="_ _3"></span>sent</span></span></div><div class="t m0 x32 h49 y3192 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _e"> </span>a <span class="_ _e"> </span>thread <span class="_ _e"> </span>will <span class="_ _e"> </span>terminate <span class="_ _e"> </span>the <span class="_"> </span>entir<span class="_ _1"></span><span class="lsda0">ep<span class="_ _55"></span><span class="lscc">ro<span class="_ _2"></span><span class="ls0">cess <span class="_"> </span>(we’ll <span class="_ _53"> </span>talk <span class="_ _e"> </span>mor<span class="lsda1">ea<span class="_ _55"></span><span class="ls0">bout <span class="_ _e"> </span>the <span class="_ _e"> </span>interactions</span></span></span></span></span></div><div class="t m0 x32 h49 y3193 ff19 fs26 fc0 sc0 ls0 ws0">between signals and threads in Section 12.8).</div><a class="l" href="#pf10" data-dest-detail='[16,"XYZ",50,757,1]'><div class="d m1" style="border-style:none;position:absolute;left:80.892634px;bottom:240.384903px;width:150.635688px;height:19.680008px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
