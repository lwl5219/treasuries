<div id="pf274" class="pf w4 h1f" data-page-no="274"><div class="pc pc274 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg274.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">594<span class="_ _1b"> </span><span class="ff19">Network <span class="_"> </span>IPC: <span class="_"> </span>Sockets<span class="_ _2c6"> </span>Chapter <span class="_"> </span>16</span></div><div class="t m0 x32 h2a y12f ff19 fsf fc0 sc0 ls0 ws0">byte <span class="_ _66"> </span>would <span class="_ _47"> </span>contain <span class="_ _66"> </span>1, <span class="_ _47"> </span>regar<span class="_ _1"></span>dless <span class="_ _47"> </span>of <span class="_ _66"> </span>the <span class="_ _47"> </span>byte <span class="_ _66"> </span>ordering. <span class="_ _46"> </span>If<span class="_ _61"> </span>we <span class="_ _47"> </span>wer<span class="ls1a7">et<span class="_ _1d"></span><span class="ls0">hen <span class="_ _47"> </span>to <span class="_"> </span>cast <span class="_ _47"> </span>a</span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">character <span class="_ _3"></span>pointer <span class="_ _3"></span>(<span class="ff1a">cp</span>)<span class="_ _47"> </span>to<span class="_ _45"> </span>the <span class="_ _2"></span>address <span class="_ _3"></span>of <span class="_ _3"></span>the <span class="_ _3"></span>integer<span class="_ _1"></span>,<span class="_ _47"> </span>we<span class="_ _47"> </span>would <span class="_ _9"></span>see <span class="_ _3"></span>a <span class="_ _3"></span>differ<span class="_ _0"></span>ence <span class="_ _3"></span>from <span class="_ _2"></span>the</div><div class="t m0 x32 h26 y131 ff19 fsf fc0 sc0 ls0 ws0">byte <span class="_ _9"></span>ordering. <span class="_ _45"> </span>On<span class="_ _35"> </span><span class="lsb7d">al<span class="_ _b"></span><span class="ls0">ittle-endian <span class="_ _9"></span>processor<span class="_ _6"></span>,<span class="_ _45"> </span><span class="ff1a">cp[0]<span class="_ _35"> </span></span>would <span class="_ _9"></span>refer <span class="_ _9"></span>to <span class="_ _23"></span>the <span class="_ _9"></span>least <span class="_ _23"></span>signiﬁcant</span></span></div><div class="t m0 x32 h26 y132 ff19 fsf fc0 sc0 ls0 ws0">byte <span class="_"> </span>and <span class="_ _e"> </span>contain <span class="_"> </span>1;<span class="_ _59"> </span><span class="ff1a">cp[3]<span class="_ _59"> </span></span>would <span class="_"> </span>r<span class="_ _0"></span>efer <span class="_"> </span>to <span class="_ _e"> </span>the <span class="_"> </span>most <span class="_ _e"> </span>signiﬁcant <span class="_"> </span>byte <span class="_"> </span>and <span class="_ _e"> </span>contain <span class="_"> </span>4.</div><div class="t m0 x32 h26 y133 ff19 fsf fc0 sc0 ls0 ws0">Compar<span class="ls1310">et<span class="_ _8"></span><span class="ls0">hat <span class="_ _2"></span>to <span class="_ _3"></span>a <span class="_ _3"></span>big-endian <span class="_ _2"></span>processor<span class="_ _6"></span><span class="ls1310">,w<span class="_ _4f"></span><span class="ls0">here<span class="_ _66"> </span><span class="ff1a">cp[0]<span class="_ _47"> </span></span>would <span class="_ _3"></span>contain <span class="_ _2"></span>4, <span class="_ _3"></span>referring <span class="_ _2"></span>to <span class="_ _2"></span>the</span></span></span></span></div><div class="t m0 x32 h26 y134 ff19 fsf fc0 sc0 ls0 ws0">most signiﬁcant <span class="_ _2"></span>byte, <span class="_ _2"></span>and<span class="_ _66"> </span><span class="ff1a">cp[3]<span class="_ _66"> </span></span>would <span class="_ _2"></span>contain <span class="_ _2"></span>1, <span class="_ _2"></span>referring to <span class="_ _2"></span>the <span class="_ _2"></span>least signiﬁcant <span class="_ _2"></span>byte.</div><div class="t m0 x32 h2a y135 ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">6.6 summarizes the byte ordering for the four platforms discussed in this text.</span></span></div><div class="t m0 x4 h2d y473e ff19 fs10 fc0 sc0 ls0 ws0">Operating system<span class="_ _6e"> </span>Processor ar<span class="_ _0"></span>chitectur<span class="ls1311">eB<span class="_ _261"></span><span class="ls0">yte or<span class="_ _0"></span>der</span></span></div><div class="t m0 x4 h2e y473f ff19 fs11 fc0 sc0 ls0 ws0">FreeBSD 8.0<span class="_ _189"> </span>Intel Pentium<span class="_ _290"> </span>little-endian</div><div class="t m0 x4 h2e y4740 ff19 fs11 fc0 sc0 ls0 ws0">Linux 3.2.0<span class="_ _9f"> </span>Intel Cor<span class="lsdb">ei<span class="_ _5"></span><span class="ls1312">5l<span class="_ _2c8"></span><span class="ls0">ittle-endian</span></span></span></div><div class="t m0 x4 h2e y4741 ff19 fs11 fc0 sc0 ls0 ws0">Mac OS X 10.6.8<span class="_ _1b"> </span>Intel Cor<span class="lsdb">e2D<span class="_ _5"></span><span class="ls0">uo <span class="_ _1ad"> </span>little-endian</span></span></div><div class="t m0 x4 h2e y4742 ff19 fs11 fc0 sc0 ls0 ws0">Solaris 10<span class="_ _6f"> </span>Sun SP<span class="_ _1"></span>ARC <span class="_ _137"> </span>big-endian</div><div class="t m0 x209 h2f y4743 ff18 fs12 fc0 sc0 ls0 ws0">Figure 16.6<span class="_ _5a"> </span><span class="ff19">Byte order for test platforms</span></div><div class="t m0 x76 h2f y4744 ff19 fs12 fc0 sc0 ls389 ws0">To <span class="_ _35"> </span>c<span class="_ _3"></span><span class="ls0">onfuse <span class="_ _80"> </span>matters <span class="_ _80"> </span>further<span class="_ _1"></span><span class="ls1313">,s<span class="_ _c"></span><span class="ls0">ome <span class="_ _80"> </span>processors <span class="_"> </span>can <span class="_ _80"> </span>be <span class="_ _e"> </span>conﬁgured <span class="_ _80"> </span>for <span class="_ _e"> </span>either <span class="_ _80"> </span>little-endian <span class="_ _80"> </span>or</span></span></span></div><div class="t m0 x76 h2f y4745 ff19 fs12 fc0 sc0 ls0 ws0">big-endian operation.</div><div class="t m0 x3f h50 y4746 ff19 fs29 fc0 sc0 ls0 ws0">Network <span class="_ _2"></span>protocols specify <span class="_ _2"></span>a <span class="_ _2"></span>byte <span class="_ _3"></span>ordering so <span class="_ _2"></span>that <span class="_ _2"></span>heterogeneous <span class="_ _2"></span>computer <span class="_ _2"></span>systems</div><div class="t m0 x32 h50 y4747 ff19 fs29 fc0 sc0 ls0 ws0">can <span class="_ _23"></span>exchange <span class="_ _23"></span>protocol <span class="_ _23"></span>information <span class="_ _23"></span>without <span class="_ _23"></span>confusing <span class="_ _23"></span>the <span class="_ _23"></span>byte <span class="_ _23"> </span>ordering. <span class="_ _45"> </span>The<span class="_ _35"> </span>TCP/IP</div><div class="t m0 x32 h50 y4748 ff19 fs29 fc0 sc0 ls0 ws0">protocol <span class="_ _45"> </span>suite <span class="_ _35"> </span>uses <span class="_ _45"> </span>big-endian <span class="_ _35"> </span>byte <span class="_ _45"> </span>order<span class="_ _6"></span><span class="ls1314">.T<span class="_ _95"></span><span class="ls0">he <span class="_ _45"> </span>byte <span class="_ _35"> </span>ordering <span class="_ _45"> </span>becomes <span class="_ _35"> </span>visible <span class="_ _45"> </span>to</span></span></div><div class="t m0 x32 h50 y4749 ff19 fs29 fc0 sc0 ls0 ws0">applications <span class="_ _46"> </span>when <span class="_ _59"> </span>they <span class="_ _46"> </span>exchange <span class="_ _46"> </span>formatted <span class="_ _46"> </span>data.<span class="_ _5e"> </span><span class="ls12f8">Wi<span class="_ _3"></span></span>th <span class="_ _46"> </span>TCP/IP<span class="_ _4"></span><span class="ls1315">,a<span class="_ _5d"></span><span class="ls0">ddresses <span class="_ _59"> </span>are</span></span></div><div class="t m0 x32 h50 y474a ff19 fs29 fc0 sc0 ls0 ws0">presented <span class="_ _e"> </span>in <span class="_"> </span>network <span class="_"> </span>byte <span class="_ _e"> </span>order<span class="_ _6"></span>,<span class="_ _59"> </span>so<span class="_ _59"> </span>applications <span class="_"> </span>sometimes <span class="_"> </span>need <span class="_"> </span>to <span class="_ _e"> </span>translate <span class="_"> </span>them</div><div class="t m0 x32 h50 y474b ff19 fs29 fc0 sc0 ls0 ws0">between <span class="_ _3"></span>the <span class="_ _3"></span>processor <span class="_ _84"></span>’s<span class="_ _45"> </span>byte <span class="_ _2"></span>order <span class="_ _3"></span>and <span class="_ _3"></span>the <span class="_ _3"></span>network <span class="_ _9"></span>byte <span class="_ _3"></span>order<span class="_ _6"></span><span class="ls1316">.T<span class="_ _1d"></span><span class="ls0">his <span class="_ _3"></span>is <span class="_ _3"></span>common <span class="_ _3"></span>when</span></span></div><div class="t m0 x32 h50 y474c ff19 fs29 fc0 sc0 ls0 ws0">printing an address in a human-r<span class="_ _0"></span>eadable form, for example.</div><div class="t m0 x3f h50 y474d ff19 fs29 fc0 sc0 ls0 ws0">Four <span class="_ _23"> </span>functions <span class="_ _23"> </span>ar<span class="ls1317">ep<span class="_ _43"></span><span class="lsdf">ro<span class="_ _2"></span><span class="ls0">vided <span class="_ _23"> </span>to <span class="_ _42"> </span>convert <span class="_ _23"></span>between <span class="_ _23"> </span>the <span class="_ _23"> </span>processor <span class="_ _23"> </span>byte <span class="_ _23"> </span>order <span class="_ _23"> </span>and <span class="_ _42"> </span>the</span></span></span></div><div class="t m0 x32 h50 y474e ff19 fs29 fc0 sc0 ls0 ws0">network byte order for TCP/IP applications.</div><div class="t m0 x3f h62 y474f ff1a fs30 fc0 sc0 ls0 ws0">#include &lt;arpa/inet.h&gt;</div><div class="t m0 x3f h62 y4750 ff1a fs30 fc0 sc0 ls0 ws0">uint32_t htonl(uint32_t<span class="_"> </span><span class="ff1b">hostint32</span>);</div><div class="t m0 x113 hff y4751 ff19 fs30 fc0 sc0 ls0 ws0">Returns: 32-bit integer in network byte order</div><div class="t m0 x3f h62 y4752 ff1a fs30 fc0 sc0 ls0 ws0">uint16_t htons(uint16_t<span class="_"> </span><span class="ff1b">hostint16</span>);</div><div class="t m0 x113 hff y4753 ff19 fs30 fc0 sc0 ls0 ws0">Returns: 16-bit integer in network byte order</div><div class="t m0 x3f h62 y4754 ff1a fs30 fc0 sc0 ls0 ws0">uint32_t ntohl(uint32_t<span class="_"> </span><span class="ff1b">netint32</span>);</div><div class="t m0 x15c hff y4755 ff19 fs30 fc0 sc0 ls0 ws0">Returns: 32-bit integer in host byte order</div><div class="t m0 x3f h62 y4756 ff1a fs30 fc0 sc0 ls0 ws0">uint16_t ntohs(uint16_t<span class="_"> </span><span class="ff1b">netint16</span>);</div><div class="t m0 x15c hff y4757 ff19 fs30 fc0 sc0 ls0 ws0">Returns: 16-bit integer in host byte order</div><div class="t m0 x32 h64 y4758 ff19 fs31 fc0 sc0 ls0 ws0">The<span class="_"> </span><span class="ff1a">h<span class="_ _66"> </span></span>is for ‘<span class="_ _0"></span>‘host’<span class="_ _0"></span><span class="ls1318">’b<span class="_ _d"></span><span class="ls0">yte order<span class="_ _6"></span><span class="ls1319">,a<span class="_ _d"></span><span class="ls0">nd the<span class="_"> </span><span class="ff1a">n<span class="_ _66"> </span></span>is for <span class="_ _2"></span>‘<span class="_ _0"></span>‘network’<span class="_ _1"></span><span class="ls1319">’b<span class="_ _d"></span><span class="ls0">yte <span class="_ _2"></span>order<span class="_ _6"></span><span class="ls131a">.T<span class="_ _4a"></span><span class="ls0">he<span class="_"> </span><span class="ff1a">l<span class="_ _80"> </span></span>is for <span class="_ _2"></span>‘<span class="_ _0"></span>‘long’<span class="_ _1"></span>’</span></span></span></span></span></span></span></span></div><div class="t m0 x32 h6e y4759 ff19 fs31 fc0 sc0 ls0 ws0">(i.e., <span class="_ _3"></span>4</div><div class="t m0 x9 h6e y475a ff19 fs31 fc0 sc0 ls0 ws0">-</div><div class="t m0 x182 h64 y4759 ff19 fs31 fc0 sc0 ls0 ws0">byte) <span class="_ _3"></span>integer<span class="_ _1"></span><span class="ls131b">,a<span class="_ _b"></span><span class="ls0">nd <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">s<span class="_ _47"> </span></span>is <span class="_ _3"></span>for <span class="_ _9"></span>‘<span class="_ _0"></span>‘short’<span class="_ _1"></span><span class="ls131b">’(<span class="_ _8"></span><span class="ls0">i.e., <span class="_ _9"></span>2</span></span></span></span></div><div class="t m0 x22b h6e y475a ff19 fs31 fc0 sc0 ls0 ws0">-</div><div class="t m0 x202 h6e y4759 ff19 fs31 fc0 sc0 ls0 ws0">byte) <span class="_ _3"></span>integer<span class="_ _1"></span><span class="ls131c">.A<span class="_ _62"></span><span class="ls0">lthough <span class="_ _9"></span>we <span class="_ _3"></span>include</span></span></div><div class="t m0 x32 h64 y475b ff1a fs31 fc0 sc0 ls0 ws0">&lt;arpa/inet.h&gt;<span class="_ _44"> </span><span class="ff19">to <span class="_ _53"> </span>use <span class="_ _53"> </span>these <span class="_ _42"> </span>functions, <span class="_ _53"> </span>system <span class="_ _53"> </span>implementations <span class="_ _53"> </span>often <span class="_ _53"> </span>declar<span class="ls131d">et<span class="_ _c"></span><span class="ls0">hese</span></span></span></div><div class="t m0 x32 h64 y475c ff19 fs31 fc0 sc0 ls0 ws0">functions in <span class="_ _2"></span>other <span class="_ _2"></span>headers that <span class="_ _2"></span>ar<span class="ls131e">ei<span class="_ _4f"></span><span class="ls0">ncluded <span class="_ _2"></span>by<span class="_"> </span><span class="ff1a">&lt;arpa/inet.h&gt;</span><span class="ls131f">.I<span class="_ _4a"></span><span class="ls0">t<span class="_"> </span>is<span class="_ _66"> </span>also <span class="_ _2"></span>common <span class="_ _2"></span>for</span></span></span></span></div><div class="t m0 x32 h6e y475d ff19 fs31 fc0 sc0 ls0 ws0">systems to implement these functions as macros.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
