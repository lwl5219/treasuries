<div id="pf2c0" class="pf w4 h1f" data-page-no="2c0"><div class="pc pc2c0 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg2c0.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">670<span class="_ _1b"> </span><span class="ff19">Advanced <span class="_"> </span>IPC<span class="_ _e8"> </span>Chapter <span class="_"> </span>17</span></div><div class="t m0 x32 h53 y12f ff16 fs2b fc0 sc0 ls0 ws0">Exer<span class="_ _0"></span>cises</div><div class="t m0 x32 h5f y1e2d ff18 fs2d fc0 sc0 ls0 ws0">17.1<span class="_ _288"> </span><span class="ff19 ls32e">We <span class="_ _44"> </span>c<span class="_ _9"></span><span class="ls0">hose <span class="_ _66"> </span>to <span class="_"> </span>use <span class="_ _66"> </span>UNIX <span class="_"> </span>domain <span class="_ _66"> </span>datagram <span class="_ _80"> </span>sockets <span class="_ _66"> </span>in <span class="_"> </span>Figur<span class="ls1422">e1<span class="_ _55"></span><span class="ls0">7.3, <span class="_"> </span>because <span class="_ _66"> </span>they <span class="_"> </span>retain</span></span></span></span></div><div class="t m0 xe1 h5f y1e2e ff19 fs2d fc0 sc0 ls0 ws0">message <span class="_ _9"></span>boundaries.<span class="_ _16"> </span>Describe <span class="_ _23"></span>the <span class="_ _9"></span>changes <span class="_ _9"></span>that <span class="_ _23"> </span>would <span class="_ _9"></span>be <span class="_ _23"> </span>necessary <span class="_ _9"></span>to <span class="_ _23"> </span>use <span class="_ _9"></span>regular <span class="_ _9"></span>pipes</div><div class="t m0 xe1 h5f y1e2f ff19 fs2d fc0 sc0 ls0 ws0">instead. <span class="_"> </span>How<span class="_"> </span>can we avoid copying the messages two extra times?</div><div class="t m0 x32 h5f y1e30 ff18 fs2d fc0 sc0 ls0 ws0">17.2<span class="_ _288"> </span><span class="ff19 ls467">Wr<span class="_ _9"></span><span class="ls0">ite <span class="_ _9"></span>the <span class="_ _3"></span>following <span class="_ _9"></span>program <span class="_ _3"></span>using <span class="_ _9"></span>the <span class="_ _9"></span>ﬁle <span class="_ _3"></span>descriptor <span class="_ _9"></span>passing <span class="_ _9"></span>functions <span class="_ _9"></span>from <span class="_ _3"></span>this <span class="_ _9"></span>chapter</span></span></div><div class="t m0 xe1 h57 y40da ff19 fs2d fc0 sc0 ls0 ws0">and <span class="_ _3"></span>the <span class="_ _9"></span>parent–child <span class="_ _3"></span>synchronization <span class="_ _3"></span>routines <span class="_ _3"></span>from <span class="_ _3"></span>Section <span class="_ _9"></span>8.9.<span class="_ _61"> </span>The <span class="_ _3"></span>program <span class="_ _3"></span>calls<span class="_ _47"> </span><span class="ff1a">fork</span>,</div><div class="t m0 xe1 h57 y4e8b ff19 fs2d fc0 sc0 ls0 ws0">and the child<span class="_"> </span><span class="ff1a">open</span>s<span class="_"> </span>an<span class="_"> </span>existing ﬁle and passes <span class="_ _2"></span>the open descriptor to the parent. <span class="_"> </span>The<span class="_"> </span>child</div><div class="t m0 xe1 h57 y4e8c ff19 fs2d fc0 sc0 ls0 ws0">then <span class="_ _42"> </span>positions <span class="_ _42"> </span>the <span class="_ _42"> </span>ﬁle <span class="_ _42"> </span>using<span class="_ _35"> </span><span class="ff1a">lseek<span class="_ _35"> </span></span>and <span class="_ _53"> </span>notiﬁes <span class="_ _42"> </span>the <span class="_ _42"> </span>parent. <span class="_ _35"> </span>The<span class="_ _35"> </span>parent <span class="_ _23"> </span>reads <span class="_ _42"> </span>the <span class="_ _42"> </span>ﬁle’s</div><div class="t m0 xe1 h5f y4e8d ff19 fs2d fc0 sc0 ls0 ws0">current <span class="_ _23"> </span>offset <span class="_ _42"> </span>and <span class="_ _42"> </span>prints <span class="_ _23"> </span>it <span class="_ _42"> </span>for <span class="_ _42"> </span>veriﬁcation.<span class="_ _51"> </span>If <span class="_ _23"> </span>the <span class="_ _42"> </span>ﬁle <span class="_ _42"> </span>was <span class="_ _42"> </span>passed <span class="_ _42"> </span>from <span class="_ _23"> </span>the <span class="_ _42"> </span>child <span class="_ _42"> </span>to <span class="_ _42"> </span>the</div><div class="t m0 xe1 h5f y4e8e ff19 fs2d fc0 sc0 ls0 ws0">parent <span class="_ _3"></span>as <span class="_ _3"></span>we <span class="_ _9"></span>described, <span class="_ _3"></span>they <span class="_ _9"></span>should <span class="_ _9"></span>be <span class="_ _3"></span>sharing <span class="_ _9"></span>the <span class="_ _3"></span>same <span class="_ _9"></span>ﬁle <span class="_ _3"></span>table <span class="_ _9"></span>entry<span class="_ _6"></span>,<span class="_ _47"> </span>so<span class="_ _47"> </span>each <span class="_ _3"></span>time <span class="_ _9"></span>the</div><div class="t m0 xe1 h5f y4e8f ff19 fs2d fc0 sc0 ls0 ws0">child changes the <span class="_ _2"></span>ﬁle’s current offset, that change <span class="_ _2"></span>should also affect the <span class="_ _2"></span>parent’s descriptor<span class="_ _6"></span>.</div><div class="t m0 xe1 h5f y4e90 ff19 fs2d fc0 sc0 ls0 ws0">Have the child position the ﬁle to a differ<span class="_ _0"></span>ent offset and notify the par<span class="_ _0"></span>ent again.</div><div class="t m0 x32 h5f y4e91 ff18 fs2d fc0 sc0 ls0 ws0">17.3<span class="_ _288"> </span><span class="ff19">In <span class="_ _42"> </span>Figures <span class="_ _23"> </span>17.20 <span class="_ _42"> </span>and <span class="_ _42"> </span>17.21, <span class="_ _23"> </span>we <span class="_ _42"> </span>differ<span class="_ _0"></span>entiated <span class="_ _42"> </span>between <span class="_ _23"> </span>declaring <span class="_ _42"> </span>and <span class="_ _42"> </span>deﬁning <span class="_ _23"> </span>the <span class="_ _42"> </span>global</span></div><div class="t m0 xe1 h5f y4e92 ff19 fs2d fc0 sc0 ls0 ws0">variables. <span class="_"> </span>What<span class="_"> </span>is the differ<span class="_ _0"></span>ence?</div><div class="t m0 x32 h57 y4e93 ff18 fs2d fc0 sc0 ls0 ws0">17.4<span class="_ _288"> </span><span class="ff19">Recode <span class="_ _2"></span>the<span class="_ _66"> </span><span class="ff1a">buf_args<span class="_ _80"> </span></span>function <span class="_ _2"></span>(Figur<span class="ls1423">e1<span class="_ _d"></span><span class="ls0">7.23), <span class="_ _2"></span>removing the <span class="_ _2"></span>compile-time <span class="_ _2"></span>limit <span class="_ _2"></span>on <span class="_ _2"></span>the size</span></span></span></div><div class="t m0 xe1 h57 y4e94 ff19 fs2d fc0 sc0 ls0 ws0">of the<span class="_"> </span><span class="ff1a">argv<span class="_ _e"> </span></span>array<span class="_ _6"></span><span class="ls614">.U<span class="_ _c"></span><span class="ls0">se dynamic memory allocation.</span></span></div><div class="t m0 x32 h57 y4e95 ff18 fs2d fc0 sc0 ls0 ws0">17.5<span class="_ _288"> </span><span class="ff19">Describe <span class="_ _2"></span>ways <span class="_ _3"></span>to <span class="_ _2"></span>optimize <span class="_ _2"></span>the <span class="_ _2"></span>function<span class="_ _66"> </span><span class="ff1a">loop<span class="_ _80"> </span></span>in <span class="_ _2"></span>Figur<span class="ls1424">e1<span class="_ _d"></span><span class="ls0">7.29 <span class="_ _2"></span>and <span class="_ _2"></span>Figur<span class="ls1424">e1<span class="_ _d"></span><span class="ls0">7.30. <span class="_ _66"> </span>Implement</span></span></span></span></span></div><div class="t m0 xe1 h5f y4e96 ff19 fs2d fc0 sc0 ls0 ws0">your optimizations.</div><div class="t m0 x32 h57 y4e97 ff18 fs2d fc0 sc0 ls0 ws0">17.6<span class="_ _288"> </span><span class="ff19">In <span class="_ _23"> </span>the<span class="_ _45"> </span><span class="ff1a">serv_listen<span class="_ _45"> </span></span>function <span class="_ _23"> </span>(Figur<span class="ls1425">e1<span class="_ _b"></span><span class="ls0">7.8), <span class="_ _9"></span>we <span class="_ _23"> </span>unlink <span class="_ _23"> </span>the <span class="_ _23"> </span>name <span class="_ _23"> </span>of <span class="_ _9"></span>the <span class="_ _23"> </span>ﬁle <span class="_ _23"> </span>representing</span></span></span></div><div class="t m0 xe1 h5f y4e98 ff19 fs2d fc0 sc0 ls0 ws0">the UNIX <span class="_ _2"></span>domain <span class="_ _2"></span>socket <span class="_ _2"></span>if <span class="_ _2"></span>the <span class="_ _2"></span>ﬁle <span class="_ _2"></span>already exists.<span class="_ _59"> </span><span class="ls32e">To <span class="_ _53"> </span>a<span class="_ _9"></span></span>void <span class="_ _2"></span>unintentionally <span class="_ _2"></span>removing a <span class="_ _2"></span>ﬁle</div><div class="t m0 xe1 h57 y4e99 ff19 fs2d fc0 sc0 ls0 ws0">that isn’t a socket, we could call<span class="_"> </span><span class="ff1a">stat<span class="_ _80"> </span></span>ﬁrst to verify the ﬁle type.<span class="_ _4b"> </span>Explain the two problems</div><div class="t m0 xe1 h5f y4e9a ff19 fs2d fc0 sc0 ls0 ws0">with this approach.</div><div class="t m0 x32 h5f y4e9b ff18 fs2d fc0 sc0 ls0 ws0">17.7<span class="_ _288"> </span><span class="ff19">Describe <span class="_ _53"> </span>two <span class="_ _53"> </span>possible <span class="_ _53"> </span>ways <span class="_ _42"> </span>to <span class="_ _53"> </span>pass <span class="_ _53"> </span>mor<span class="ls1426">et<span class="_ _43"></span><span class="ls0">han <span class="_ _42"> </span>one <span class="_ _53"> </span>ﬁle <span class="_ _42"> </span>descriptor <span class="_ _53"> </span>with <span class="_ _53"> </span>a <span class="_ _53"> </span>single <span class="_ _42"> </span>call <span class="_ _53"> </span>to</span></span></span></div><div class="t m0 xe1 h57 y4e9c ff1a fs2d fc0 sc0 ls0 ws0">sendmsg<span class="ff19 ls614">.T<span class="_ _5b"></span><span class="ls0">ry them out to see if they ar<span class="ls110">es<span class="_ _d"></span><span class="ls0">upported by your operating system.</span></span></span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
