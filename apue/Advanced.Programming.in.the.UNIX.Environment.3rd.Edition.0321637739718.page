<div id="pf2ce" class="pf w4 h1f" data-page-no="2ce"><div class="pc pc2ce w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2ce.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff18 fs0 fc0 sc0 ls0 ws0">684<span class="_ _1b"> </span><span class="ff19 ls719">Te<span class="_ _9"></span><span class="ls0">rminal <span class="_"> </span>I/O<span class="_ _eb"> </span>Chapter <span class="_"> </span>18</span></span></div><div class="t m0 x3f h2a y12f ff19 fsf fc0 sc0 ls0 ws0">All <span class="_ _3"></span>the <span class="_ _9"></span>ﬂags <span class="_ _3"></span>listed <span class="_ _9"></span>specify <span class="_ _3"></span>one <span class="_ _9"></span>or <span class="_ _9"></span>mor<span class="lsd95">eb<span class="_ _b"></span><span class="ls0">its <span class="_ _3"></span>that <span class="_ _9"></span>we <span class="_ _3"></span>turn <span class="_ _9"></span>on <span class="_ _3"></span>or <span class="_ _9"></span>clear<span class="_ _1"></span><span class="lsd95">,u<span class="_ _b"></span><span class="ls0">nless <span class="_ _9"></span>we <span class="_ _3"></span>call</span></span></span></span></div><div class="t m0 x32 h2b y130 ff19 fsf fc0 sc0 ls0 ws0">the <span class="_ _42"> </span>ﬂag <span class="_ _53"> </span>a<span class="_ _44"> </span><span class="ff1b">mask</span><span class="ls149b">.A<span class="_ _d"></span><span class="ls0">mask <span class="_ _53"> </span>deﬁnes <span class="_ _42"> </span>multiple <span class="_ _53"> </span>bits <span class="_ _42"> </span>grouped <span class="_ _42"> </span>together <span class="_ _53"> </span>from <span class="_ _42"> </span>which <span class="_ _42"> </span>a <span class="_ _53"> </span>set <span class="_ _42"> </span>of</span></span></div><div class="t m0 x32 h2a y131 ff19 fsf fc0 sc0 ls0 ws0">values is deﬁned.<span class="_ _46"> </span><span class="ls5f">We <span class="_ _53"> </span>h<span class="_ _23"></span></span>ave a deﬁned name for <span class="_ _2"></span>the mask and a name <span class="_ _2"></span>for each value.<span class="_ _46"> </span>For</div><div class="t m0 x32 h2a y132 ff19 fsf fc0 sc0 ls0 ws0">example, <span class="_ _23"> </span>to <span class="_ _23"> </span>set <span class="_ _23"> </span>the <span class="_ _42"> </span>character <span class="_ _23"></span>size, <span class="_ _23"> </span>we <span class="_ _23"> </span>ﬁrst <span class="_ _23"> </span>zer<span class="lsd8">ot<span class="_ _43"></span><span class="ls0">he <span class="_ _42"> </span>bits <span class="_ _23"></span>using <span class="_ _23"></span>the <span class="_ _23"> </span>character-size <span class="_ _23"></span>mask</span></span></div><div class="t m0 x32 h26 y133 ff1a fsf fc0 sc0 ls0 ws0">CSIZE<span class="ff19 ls44">,a<span class="_ _d"></span><span class="ls0">nd then set one of the values<span class="_"> </span><span class="ff1a">CS5</span>,<span class="_"> </span><span class="ff1a">CS6</span>,<span class="_"> </span><span class="ff1a">CS7</span><span class="ls44">,o<span class="_ _d"></span><span class="ls0">r<span class="_"> </span><span class="ff1a">CS8</span>.</span></span></span></span></div><div class="t m0 x3f h26 y134 ff19 fsf fc0 sc0 ls0 ws0">The six delay <span class="_ _2"></span>values supported by <span class="_ _2"></span>Linux and <span class="_ _2"></span>Solaris ar<span class="lsf5">ea<span class="_ _4f"></span><span class="ls0">lso <span class="_ _2"></span>masks:<span class="_"> </span><span class="ff1a">BSDLY</span>,<span class="_"> </span><span class="ff1a">CRDLY</span>,</span></span></div><div class="t m0 x32 h26 y135 ff1a fsf fc0 sc0 ls0 ws0">FFDLY<span class="ff19">,<span class="_ _45"> </span></span>NLDLY<span class="ff19">,<span class="_ _45"> </span></span>TABDLY<span class="ff19 lsa1d">,a<span class="_ _b"></span><span class="ls0">nd<span class="_ _45"> </span><span class="ff1a">VTDLY</span><span class="ls4d4">.R<span class="_ _62"></span><span class="ls0">efer <span class="_ _9"></span>to <span class="_ _9"></span>the<span class="_ _35"> </span><span class="ff1a">termio</span>(7I) <span class="_ _9"></span>manual <span class="_ _9"></span>page <span class="_ _9"></span>on <span class="_ _23"></span>Solaris</span></span></span></span></div><div class="t m0 x32 h2a y136 ff19 fsf fc0 sc0 ls0 ws0">for <span class="_ _3"></span>the <span class="_ _9"></span>length <span class="_ _3"></span>of <span class="_ _9"></span>each <span class="_ _3"></span>delay <span class="_ _9"></span>value.<span class="_ _16"> </span>In <span class="_ _9"></span>all <span class="_ _3"></span>cases, <span class="_ _9"></span>a <span class="_ _3"></span>delay <span class="_ _9"></span>mask <span class="_ _9"></span>of <span class="_ _3"></span>0 <span class="_ _9"></span>means <span class="_ _3"></span>no <span class="_ _9"></span>delay<span class="_ _4"></span><span class="ls149c">.I<span class="_ _1d"></span><span class="ls1435">fa</span></span></div><div class="t m0 x32 h26 y137 ff19 fsf fc0 sc0 ls0 ws0">delay <span class="_ _23"> </span>is <span class="_ _42"> </span>speciﬁed, <span class="_ _23"> </span>the<span class="_ _35"> </span><span class="ff1a">OFILL<span class="_ _44"> </span></span>and<span class="_ _35"> </span><span class="ff1a">OFDEL<span class="_ _35"> </span></span>ﬂags <span class="_ _42"> </span>determine <span class="_ _23"> </span>whether <span class="_ _42"> </span>the <span class="_ _23"> </span>driver <span class="_ _42"> </span>does <span class="_ _23"> </span>an</div><div class="t m0 x32 h2a y138 ff19 fsf fc0 sc0 ls0 ws0">actual delay or whether ﬁll characters ar<span class="ls44">et<span class="_ _4f"></span><span class="ls0">ransmitted instead.</span></span></div><div class="t m0 x35 h27 y13a ff16 fsf fc0 sc0 ls0 ws0">Example</div><div class="t m0 x32 h2a y38a ff19 fsf fc0 sc0 ls0 ws0">Figur<span class="ls44">e1<span class="_ _4f"></span><span class="ls0">8.1<span class="_ _0"></span><span class="ls44">1d<span class="_ _d"></span><span class="ls0">emonstrates the use of these masks to extract a value and to set a value.</span></span></span></span></div><div class="t m0 x32 h4e y4fe6 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y4fe7 ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;termios.h&gt;</div><div class="t m0 x32 h4e y4fe8 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4fe9 ff1a fs28 fc0 sc0 ls0 ws0">main(void)</div><div class="t m0 x32 h4e y4fea ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4feb ff1a fs28 fc0 sc0 ls0 ws0">struct termios<span class="_ _d9"> </span>term;</div><div class="t m0 x8a h4e y4fec ff1a fs28 fc0 sc0 ls0 ws0">if (tcgetattr(STDIN_FILENO, &amp;term) &lt; 0)</div><div class="t m0 x9d h4e y4fed ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;tcgetattr error&quot;);</div><div class="t m0 x8a h4e y4fee ff1a fs28 fc0 sc0 ls0 ws0">switch (term.c_cflag &amp; CSIZE) {</div><div class="t m0 x8a h4e y4fef ff1a fs28 fc0 sc0 ls0 ws0">case CS5:</div><div class="t m0 x9d h4e y4ff0 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;5 bits/byte\n&quot;);</div><div class="t m0 x9d h4e y4ff1 ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e y4ff2 ff1a fs28 fc0 sc0 ls0 ws0">case CS6:</div><div class="t m0 x9d h4e y4ff3 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;6 bits/byte\n&quot;);</div><div class="t m0 x9d h4e y4ff4 ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e y4ff5 ff1a fs28 fc0 sc0 ls0 ws0">case CS7:</div><div class="t m0 x9d h4e y4ff6 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;7 bits/byte\n&quot;);</div><div class="t m0 x9d h4e y4ff7 ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e y4ff8 ff1a fs28 fc0 sc0 ls0 ws0">case CS8:</div><div class="t m0 x9d h4e y4ff9 ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;8 bits/byte\n&quot;);</div><div class="t m0 x9d h4e y4ffa ff1a fs28 fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h4e y4ffb ff1a fs28 fc0 sc0 ls0 ws0">default:</div><div class="t m0 x9d h4e y4ffc ff1a fs28 fc0 sc0 ls0 ws0">printf(&quot;unknown bits/byte\n&quot;);</div><div class="t m0 x8a h4e y4ffd ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x8a h4e y4ffe ff1a fs28 fc0 sc0 ls0 ws0">term.c_cflag &amp;= ˜CSIZE;<span class="_ _8a"> </span>/* zero out the bits */</div><div class="t m0 x8a h4e y4fff ff1a fs28 fc0 sc0 ls0 ws0">term.c_cflag |= CS8;<span class="_ _186"> </span>/* set 8 bits/byte */</div><div class="t m0 x8a h4e y5000 ff1a fs28 fc0 sc0 ls0 ws0">if (tcsetattr(STDIN_FILENO, TCSANOW, &amp;term) &lt; 0)</div><div class="t m0 x9d h4e y5001 ff1a fs28 fc0 sc0 ls0 ws0">err_sys(&quot;tcsetattr error&quot;);</div><div class="t m0 x8a h4e y5002 ff1a fs28 fc0 sc0 ls0 ws0">exit(0);</div><div class="t m0 x32 h4e y5003 ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x10d h4f y5004 ff18 fs11 fc0 sc0 ls0 ws0">Figure 18.1<span class="_ _0"></span>1<span class="_ _5a"> </span><span class="ff19">Example of<span class="_"> </span><span class="ff1a">tcgetattr<span class="_ _e"> </span></span>and<span class="_"> </span><span class="ff1a">tcsetattr</span></span></div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
