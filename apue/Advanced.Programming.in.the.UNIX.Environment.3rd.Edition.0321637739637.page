<div id="pf27d" class="pf w4 h1f" data-page-no="27d"><div class="pc pc27d w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg27d.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>16.3<span class="_ _2c7"> </span>Addressing<span class="_ _1fb"> </span><span class="ff18">603</span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">void</div><div class="t m0 x32 h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">print_flags(struct addrinfo *aip)</div><div class="t m0 x32 h57 y800 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y801 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;flags&quot;);</div><div class="t m0 x8a h57 y802 ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags == 0) {</div><div class="t m0 x9d h57 y803 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; 0&quot;);</div><div class="t m0 x8a h57 y804 ff1a fs2d fc0 sc0 ls15c ws0">}e<span class="_ _1d"></span><span class="ls0">lse {</span></div><div class="t m0 x9d h57 y805 ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_PASSIVE)</div><div class="t m0 x1f h57 y806 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; passive&quot;);</div><div class="t m0 x9d h57 y807 ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_CANONNAME)</div><div class="t m0 x1f h57 y808 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; canon&quot;);</div><div class="t m0 x9d h57 y809 ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_NUMERICHOST)</div><div class="t m0 x1f h57 y80a ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; numhost&quot;);</div><div class="t m0 x9d h57 y80b ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_NUMERICSERV)</div><div class="t m0 x1f h57 y80c ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; numserv&quot;);</div><div class="t m0 x9d h57 y80d ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_V4MAPPED)</div><div class="t m0 x1f h57 y80e ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; v4mapped&quot;);</div><div class="t m0 x9d h57 y80f ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_flags &amp; AI_ALL)</div><div class="t m0 x1f h57 y810 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot; all&quot;);</div><div class="t m0 x8a h57 y811 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y812 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y3261 ff1a fs2d fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h57 y3262 ff1a fs2d fc0 sc0 ls0 ws0">main(int argc, char *argv[])</div><div class="t m0 x32 h57 y3263 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y420d ff1a fs2d fc0 sc0 ls0 ws0">struct addrinfo<span class="_ _8a"> </span>*ailist, *aip;</div><div class="t m0 x8a h57 y420e ff1a fs2d fc0 sc0 ls0 ws0">struct addrinfo<span class="_ _8a"> </span>hint;</div><div class="t m0 x8a h57 y420f ff1a fs2d fc0 sc0 ls0 ws0">struct sockaddr_in<span class="_ _d9"> </span>*sinp;</div><div class="t m0 x8a h57 y4210 ff1a fs2d fc0 sc0 ls0 ws0">const char<span class="_ _74"> </span>*addr;</div><div class="t m0 x8a h57 y4211 ff1a fs2d fc0 sc0 ls0 ws0">int <span class="_ _1e7"> </span>err;</div><div class="t m0 x8a h57 y4212 ff1a fs2d fc0 sc0 ls0 ws0">char <span class="_ _227"> </span>abuf[INET_ADDRSTRLEN];</div><div class="t m0 x8a h57 y4853 ff1a fs2d fc0 sc0 ls0 ws0">if (argc != 3)</div><div class="t m0 x9d h57 y4854 ff1a fs2d fc0 sc0 ls0 ws0">err_quit(&quot;usage: %s nodename service&quot;, argv[0]);</div><div class="t m0 x8a h57 y4855 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_flags = AI_CANONNAME;</div><div class="t m0 x8a h57 y4856 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_family = 0;</div><div class="t m0 x8a h57 y4857 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_socktype = 0;</div><div class="t m0 x8a h57 y4858 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_protocol = 0;</div><div class="t m0 x8a h57 y4218 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_addrlen = 0;</div><div class="t m0 x8a h57 y4219 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_canonname = NULL;</div><div class="t m0 x8a h57 y421a ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_addr = NULL;</div><div class="t m0 x8a h57 y4859 ff1a fs2d fc0 sc0 ls0 ws0">hint.ai_next = NULL;</div><div class="t m0 x8a h57 y485a ff1a fs2d fc0 sc0 ls0 ws0">if ((err = getaddrinfo(argv[1], argv[2], &amp;hint, &amp;ailist)) != 0)</div><div class="t m0 x9d h57 y485b ff1a fs2d fc0 sc0 ls0 ws0">err_quit(&quot;getaddrinfo error: %s&quot;, gai_strerror(err));</div><div class="t m0 x8a h57 y485c ff1a fs2d fc0 sc0 ls0 ws0">for (aip = ailist; aip != NULL; aip = aip-&gt;ai_next) {</div><div class="t m0 x9d h57 y485d ff1a fs2d fc0 sc0 ls0 ws0">print_flags(aip);</div><div class="t m0 x9d h57 y485e ff1a fs2d fc0 sc0 ls0 ws0">print_family(aip);</div><div class="t m0 x9d h57 y485f ff1a fs2d fc0 sc0 ls0 ws0">print_type(aip);</div><div class="t m0 x9d h57 y4860 ff1a fs2d fc0 sc0 ls0 ws0">print_protocol(aip);</div><div class="t m0 x9d h57 y4861 ff1a fs2d fc0 sc0 ls0 ws0">printf(&quot;\n\thost %s&quot;, aip-&gt;ai_canonname?aip-&gt;ai_canonname:&quot;-&quot;);</div><div class="t m0 x9d h57 y4862 ff1a fs2d fc0 sc0 ls0 ws0">if (aip-&gt;ai_family == AF_INET) {</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
