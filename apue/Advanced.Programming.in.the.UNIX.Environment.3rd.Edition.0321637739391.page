<div id="pf187" class="pf w4 h1f" data-page-no="187"><div class="pc pc187 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="apue/bg187.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h7a ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>10.15<span class="_ _197"> </span><span class="ff1a">sigsetjmp<span class="_ _4b"> </span></span>and<span class="_ _4b"> </span><span class="ff1a">siglongjmp<span class="_ _4b"> </span></span>Functions<span class="_ _1b"> </span><span class="ff18">357</span></div><div class="t m0 x32 h57 y425 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y426 ff1a fs2d fc0 sc0 ls0 ws0">time_t <span class="_"> </span>starttime;</div><div class="t m0 x8a h57 y2db3 ff1a fs2d fc0 sc0 ls0 ws0">if (canjump == 0)</div><div class="t m0 x9d h57 y2db4 ff1a fs2d fc0 sc0 ls0 ws0">return; <span class="_ _15"> </span>/*<span class="_"> </span>unexpected signal, ignore */</div><div class="t m0 x8a h57 y2db5 ff1a fs2d fc0 sc0 ls0 ws0">pr_mask(&quot;starting sig_usr1: &quot;);</div><div class="t m0 x8a h57 y2db6 ff1a fs2d fc0 sc0 ls0 ws0">alarm(3); <span class="_ _12d"> </span>/*<span class="_"> </span>SIGALRM in 3 seconds */</div><div class="t m0 x8a h57 y2db7 ff1a fs2d fc0 sc0 ls0 ws0">starttime = time(NULL);</div><div class="t m0 x8a h57 y2db8 ff1a fs2d fc0 sc0 ls0 ws0">for ( ; ; )<span class="_ _166"> </span>/* busy wait for 5 seconds */</div><div class="t m0 x9d h57 y2db9 ff1a fs2d fc0 sc0 ls0 ws0">if (time(NULL) &gt; starttime + 5)</div><div class="t m0 x1f h57 y2dba ff1a fs2d fc0 sc0 ls0 ws0">break;</div><div class="t m0 x8a h57 y2dbb ff1a fs2d fc0 sc0 ls0 ws0">pr_mask(&quot;finishing sig_usr1: &quot;);</div><div class="t m0 x8a h57 y2dbc ff1a fs2d fc0 sc0 ls0 ws0">canjump = 0;</div><div class="t m0 x8a h57 y2dbd ff1a fs2d fc0 sc0 ls0 ws0">siglongjmp(jmpbuf, 1);<span class="_ _d9"> </span>/* jump back to main, don’t return */</div><div class="t m0 x32 h57 y2dbe ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x32 h57 y2dbf ff1a fs2d fc0 sc0 ls0 ws0">static void</div><div class="t m0 x32 h57 y2dc0 ff1a fs2d fc0 sc0 ls0 ws0">sig_alrm(int signo)</div><div class="t m0 x32 h57 y2dc1 ff1a fs2d fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h57 y2dc2 ff1a fs2d fc0 sc0 ls0 ws0">pr_mask(&quot;in sig_alrm: &quot;);</div><div class="t m0 x32 h57 y2dc3 ff1a fs2d fc0 sc0 ls0 ws0">}</div><div class="t m0 x206 h5e y2dc4 ff18 fs10 fc0 sc0 ls0 ws0">Figure 10.20<span class="_ _5a"> </span><span class="ff19">Example of signal masks,<span class="_"> </span><span class="ff1a">sigsetjmp</span><span class="ls136">,a<span class="_ _84"></span><span class="ls0">nd<span class="_"> </span><span class="ff1a">siglongjmp</span></span></span></span></div><div class="t m0 x3f h49 y2dc5 ff19 fs26 fc0 sc0 ls0 ws0">This <span class="_ _45"> </span>program <span class="_ _45"> </span>demonstrates <span class="_ _45"> </span>another <span class="_ _45"> </span>technique <span class="_ _45"> </span>that <span class="_ _45"> </span>should <span class="_ _45"> </span>be <span class="_ _35"> </span>used <span class="_ _45"> </span>whenever</div><div class="t m0 x32 h4d y2dc6 ff1a fs26 fc0 sc0 ls0 ws0">siglongjmp<span class="_ _66"> </span><span class="ff19">is called <span class="_ _2"></span>from a <span class="_ _2"></span>signal handler<span class="_ _1"></span><span class="lsccf">.W<span class="_ _26"></span><span class="ls18a">es<span class="_ _d"></span><span class="ls0">et the <span class="_ _2"></span>variable<span class="_ _66"> </span><span class="ff1a">canjump<span class="_ _66"> </span></span>to <span class="_ _2"></span>a <span class="_ _2"></span>nonzero</span></span></span></span></div><div class="t m0 x32 h4d y2dc7 ff19 fs26 fc0 sc0 ls0 ws0">value <span class="_"> </span>only <span class="_"> </span>after <span class="_"> </span>we’ve <span class="_"> </span>called<span class="_ _59"> </span><span class="ff1a">sigsetjmp</span><span class="lscd0">.T<span class="_ _5d"></span><span class="ls0">his <span class="_"> </span>variable <span class="_"> </span>is <span class="_"> </span>examined <span class="_"> </span>in <span class="_"> </span>the <span class="_"> </span>signal</span></span></div><div class="t m0 x32 h4d y2dc8 ff19 fs26 fc0 sc0 ls0 ws0">handler<span class="_ _6"></span><span class="lscd1">,a<span class="_ _d"></span><span class="ls0">nd<span class="_ _66"> </span><span class="ff1a">siglongjmp<span class="_ _66"> </span></span>is <span class="_ _2"></span>called only <span class="_ _2"></span>if the <span class="_ _2"></span>ﬂag<span class="_"> </span><span class="ff1a">canjump<span class="_ _66"> </span></span>is <span class="_ _2"></span>nonzero. <span class="_"> </span>This<span class="_"> </span>technique</span></span></div><div class="t m0 x32 h49 y2dc9 ff19 fs26 fc0 sc0 ls0 ws0">provides protection <span class="_ _2"></span>against <span class="_ _2"></span>the <span class="_ _2"></span>signal <span class="_ _3"></span>handler <span class="_ _2"></span>being <span class="_ _2"></span>called <span class="_ _3"></span>at <span class="_ _2"></span>some <span class="_ _2"></span>earlier <span class="_ _3"></span>or <span class="_ _2"></span>later <span class="_ _2"></span>time,</div><div class="t m0 x32 h4d y2dca ff19 fs26 fc0 sc0 ls0 ws0">when <span class="_ _9"></span>the <span class="_ _23"></span>jump <span class="_ _9"></span>buffer <span class="_ _23"></span>hasn’t <span class="_ _9"></span>been <span class="_ _23"></span>initialized <span class="_ _9"></span>by<span class="_ _35"> </span><span class="ff1a">sigsetjmp</span><span class="lscd2">.(<span class="_ _26"></span><span class="ls0">In <span class="_ _9"></span>this <span class="_ _23"></span>trivial <span class="_ _9"></span>program,</span></span></div><div class="t m0 x32 h4d y2dcb ff19 fs26 fc0 sc0 ls0 ws0">we <span class="_ _2"></span>terminate <span class="_ _3"></span>quickly <span class="_ _2"></span>after <span class="_ _3"></span>the<span class="_ _47"> </span><span class="ff1a">siglongjmp</span><span class="lsa55">,b<span class="_ _8"></span><span class="ls0">ut <span class="_ _3"></span>in <span class="_ _3"></span>larger programs, <span class="_ _2"></span>the <span class="_ _3"></span>signal <span class="_ _3"></span>handler</span></span></div><div class="t m0 x32 h4d y2dcc ff19 fs26 fc0 sc0 ls0 ws0">may <span class="_ _42"> </span>remain <span class="_ _42"> </span>installed <span class="_ _42"> </span>long <span class="_ _42"> </span>after <span class="_ _42"> </span>the<span class="_ _44"> </span><span class="ff1a">siglongjmp</span>.) <span class="_ _44"> </span>Providing <span class="_ _42"> </span>this <span class="_ _42"> </span>type <span class="_ _42"> </span>of <span class="_ _42"> </span>protection</div><div class="t m0 x32 h4d y2dcd ff19 fs26 fc0 sc0 ls0 ws0">usually isn’t <span class="_ _2"></span>required with<span class="_ _66"> </span><span class="ff1a">longjmp<span class="_ _47"> </span></span>in <span class="_ _2"></span>normal <span class="_ _2"></span>C <span class="_ _2"></span>code <span class="_ _2"></span>(as <span class="_ _2"></span>opposed <span class="_ _2"></span>to <span class="_ _2"></span>a signal <span class="_ _2"></span>handler).</div><div class="t m0 x32 h4a y2dce ff19 fs26 fc0 sc0 ls0 ws0">Since <span class="_ _2"></span>a <span class="_ _3"></span>signal <span class="_ _3"></span>can <span class="_ _3"></span>occur <span class="_ _3"></span>at<span class="_ _47"> </span><span class="ff1b">any<span class="_ _47"> </span></span>time, <span class="_ _2"></span>however<span class="_ _1"></span>,<span class="_ _47"> </span>we<span class="_ _47"> </span>need <span class="_ _3"></span>the <span class="_ _3"></span>added <span class="_ _2"></span>protection <span class="_ _2"></span>in <span class="_ _3"></span>a <span class="_ _3"></span>signal</div><div class="t m0 x32 h49 y2dcf ff19 fs26 fc0 sc0 ls0 ws0">handler<span class="_ _6"></span>.</div><div class="t m0 x3f h4d y2dd0 ff19 fs26 fc0 sc0 ls0 ws0">Here, we use the data <span class="_ _2"></span>type<span class="_"> </span><span class="ff1a">sig_atomic_t</span><span class="ls901">,w<span class="_ _d"></span><span class="ls0">hich is <span class="_ _2"></span>deﬁned by the <span class="_ _2"></span>ISO C standard</span></span></div><div class="t m0 x32 h49 y2dd1 ff19 fs26 fc0 sc0 ls0 ws0">to <span class="_ _42"> </span>be <span class="_ _42"> </span>the <span class="_ _42"> </span>type <span class="_ _42"> </span>of <span class="_ _42"> </span>variable <span class="_ _42"> </span>that <span class="_ _53"> </span>can <span class="_ _42"> </span>be <span class="_ _42"> </span>written <span class="_ _42"> </span>without <span class="_ _42"> </span>being <span class="_ _42"> </span>interrupted. <span class="_ _44"> </span>By<span class="_ _44"> </span>this <span class="_ _42"> </span>we</div><div class="t m0 x32 h49 y2dd2 ff19 fs26 fc0 sc0 ls0 ws0">mean <span class="_ _2"></span>that <span class="_ _2"></span>a <span class="_ _2"></span>variable <span class="_ _2"></span>of <span class="_ _3"></span>this <span class="_ _2"></span>type <span class="_ _2"></span>should <span class="_ _2"></span>not <span class="_ _2"></span>extend <span class="_ _3"></span>across page <span class="_ _2"></span>boundaries <span class="_ _2"></span>on <span class="_ _3"></span>a <span class="_ _2"></span>system</div><div class="t m0 x32 h49 y2dd3 ff19 fs26 fc0 sc0 ls0 ws0">with <span class="_ _45"> </span>virtual <span class="_ _47"> </span>memory <span class="_ _45"> </span>and <span class="_ _45"> </span>can <span class="_ _45"> </span>be <span class="_ _47"> </span>accessed <span class="_ _45"> </span>with <span class="_ _45"> </span>a <span class="_ _45"> </span>single <span class="_ _47"> </span>machine <span class="_ _45"> </span>instruction, <span class="_ _45"> </span>for</div><div class="t m0 x32 h4d y2dd4 ff19 fs26 fc0 sc0 ls0 ws0">example. <span class="_ _45"> </span>W<span class="_ _6"></span><span class="lscd3">ea<span class="_ _b"></span><span class="ls0">lways <span class="_ _9"></span>include <span class="_ _23"> </span>the <span class="_ _23"></span>ISO <span class="_ _9"></span>type <span class="_ _23"></span>qualiﬁer<span class="_ _45"> </span><span class="ff1a">volatile<span class="_ _35"> </span></span>for <span class="_ _9"></span>these <span class="_ _23"></span>data <span class="_ _23"></span>types <span class="_ _9"></span>as</span></span></div><div class="t m0 x32 h4d y2dd5 ff19 fs26 fc0 sc0 ls0 ws0">well, <span class="_ _9"></span>since <span class="_ _9"></span>the <span class="_ _9"></span>variable <span class="_ _23"></span>is <span class="_ _9"></span>being <span class="_ _9"></span>accessed <span class="_ _9"></span>by <span class="_ _9"></span>two <span class="_ _9"></span>different <span class="_ _3"></span>threads <span class="_ _9"></span>of <span class="_ _9"></span>control: <span class="_ _9"></span>the<span class="_ _45"> </span><span class="ff1a">main</span></div><div class="t m0 x32 h49 y2dd6 ff19 fs26 fc0 sc0 ls0 ws0">function <span class="_ _45"> </span>and <span class="_ _45"> </span>the <span class="_ _35"> </span>asynchr<span class="_ _0"></span>onously <span class="_ _45"> </span>executing <span class="_ _45"> </span>signal <span class="_ _45"> </span>handler<span class="_ _1"></span><span class="lscd4">.F<span class="_ _95"></span><span class="ls0">igur<span class="lscd5">e1<span class="_ _26"></span><span class="ls0">0.21 <span class="_ _45"> </span>shows <span class="_ _45"> </span>a</span></span></span></span></div><div class="t m0 x32 h49 y2dd7 ff19 fs26 fc0 sc0 ls0 ws0">timeline <span class="_ _53"> </span>for <span class="_ _53"> </span>this <span class="_ _53"> </span>program. <span class="_ _4b"> </span>W<span class="_ _6"></span><span class="lscd6">ec<span class="_ _55"></span><span class="ls0">an <span class="_ _e"> </span>divide <span class="_ _53"> </span>Figur<span class="lscd6">e1<span class="_ _55"></span><span class="ls0">0.21 <span class="_ _e"> </span>into <span class="_ _53"> </span>three <span class="_ _42"> </span>parts: <span class="_ _e"> </span>the <span class="_ _53"> </span>left <span class="_ _53"> </span>part</span></span></span></span></div><div class="t m0 x32 h4d y2dd8 ff19 fs26 fc0 sc0 ls0 ws0">(corresponding <span class="_ _9"></span>to<span class="_ _35"> </span><span class="ff1a">main</span>), <span class="_ _9"></span>the <span class="_ _23"> </span>center <span class="_ _23"></span>part <span class="_ _23"></span>(<span class="ff1a">sig_usr1</span>), <span class="_ _9"></span>and <span class="_ _23"> </span>the <span class="_ _23"> </span>right <span class="_ _23"></span>part <span class="_ _23"></span>(<span class="ff1a">sig_alrm</span>).</div><div class="t m0 x32 h49 y2dd9 ff19 fs26 fc0 sc0 ls0 ws0">While <span class="_"> </span>the <span class="_ _e"> </span>process <span class="_"> </span>is <span class="_ _e"> </span>executing <span class="_"> </span>in <span class="_"> </span>the <span class="_ _e"> </span>left <span class="_"> </span>part, <span class="_"> </span>its <span class="_"> </span>signal <span class="_ _e"> </span>mask <span class="_"> </span>is <span class="_"> </span>0 <span class="_ _e"> </span>(no <span class="_"> </span>signals <span class="_"> </span>ar<span class="_ _1"></span>e</div><div class="t m0 x32 h4d y2dda ff19 fs26 fc0 sc0 ls0 ws0">blocked). <span class="_ _61"> </span>While<span class="_ _16"> </span>executing <span class="_ _47"> </span>in <span class="_ _47"> </span>the <span class="_ _45"> </span>center <span class="_ _66"> </span>part, <span class="_ _47"> </span>its <span class="_ _45"> </span>signal <span class="_ _66"> </span>mask <span class="_ _45"> </span>is<span class="_ _61"> </span><span class="ff1a">SIGUSR1</span><span class="lscd7">.W<span class="_ _49"></span><span class="ls0">hile</span></span></div><div class="t m0 x32 h4d y2ddb ff19 fs26 fc0 sc0 ls0 ws0">executing in the right part, its signal mask is<span class="_"> </span><span class="ff1a">SIGUSR1|SIGALRM</span>.</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
