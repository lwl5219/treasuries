<div id="pf2a9" class="pf w4 h1f" data-page-no="2a9"><div class="pc pc2a9 w4 h1f"><img class="bi x0 y0 w3 h4" alt="" src="bg2a9.png"/><div class="t m0 x31 h2 y8e ff1 fs0 fc0 sc0 ls0 ws0"><span class="fc1 sc0">ptg10805159</span></div><div class="t m0 x35 h24 ya4 ff19 fs0 fc0 sc0 ls0 ws0">Section <span class="_"> </span>17.4<span class="_ _284"> </span>Passing <span class="_"> </span>File <span class="_"> </span>Descriptors<span class="_ _1fb"> </span><span class="ff18">647</span></div><div class="t m0 x3f h26 y12f ff19 fsf fc0 sc0 ls5f ws0">To <span class="_ _35"> </span>r<span class="_ _9"></span><span class="ls0">eceive <span class="_"> </span>a <span class="_ _53"> </span>descriptor <span class="_"> </span>(Figur<span class="_ _0"></span><span class="ls13e0">e1<span class="_ _4a"></span><span class="ls0">7.14), <span class="_"> </span>we <span class="_ _e"> </span>allocate <span class="_ _e"> </span>enough <span class="_"> </span>r<span class="_ _0"></span>oom <span class="_ _e"> </span>for <span class="_"> </span>a<span class="_ _4b"> </span><span class="ff1a">cmsghdr</span></span></span></span></div><div class="t m0 x32 h26 y130 ff19 fsf fc0 sc0 ls0 ws0">structur<span class="_ _0"></span><span class="ls747">ea<span class="_ _c"></span><span class="ls0">nd <span class="_ _53"> </span>a <span class="_ _53"> </span>descriptor<span class="_ _6"></span><span class="ls747">,s<span class="_ _43"></span><span class="ls0">et<span class="_ _44"> </span><span class="ff1a">msg_control<span class="_ _44"> </span></span>to <span class="_ _42"> </span>point <span class="_ _53"> </span>to <span class="_ _53"> </span>the <span class="_ _53"> </span>allocated <span class="_ _53"> </span>area, <span class="_ _42"> </span>and <span class="_ _53"> </span>call</span></span></span></span></div><div class="t m0 x32 h26 y131 ff1a fsf fc0 sc0 ls0 ws0">recvmsg<span class="ff19 ls86">.W<span class="_ _26"></span><span class="ls44">eu<span class="_ _5"></span><span class="ls0">se the<span class="_"> </span><span class="ff1a">CMSG_LEN<span class="_ _80"> </span></span>macro<span class="_"> </span>to<span class="_"> </span>calculate the amount of space needed.</span></span></span></div><div class="t m0 x3f h2a y132 ff19 fsf fc0 sc0 ls5f ws0">We <span class="_ _47"> </span>r<span class="_ _3"></span><span class="ls0">ead <span class="_ _23"> </span>from <span class="_ _23"></span>the <span class="_ _23"></span>socket <span class="_ _23"></span>until <span class="_ _23"></span>we <span class="_ _9"></span>read <span class="_ _23"></span>the <span class="_ _23"></span>null <span class="_ _23"></span>byte <span class="_ _23"></span>that <span class="_ _23"></span>pr<span class="_ _0"></span>ecedes <span class="_ _23"></span>the <span class="_ _23"></span>ﬁnal <span class="_ _23"></span>status</span></div><div class="t m0 x32 h2a y133 ff19 fsf fc0 sc0 ls0 ws0">byte. <span class="_"> </span>Everything<span class="_"> </span>up to this null byte is an error message fr<span class="_ _0"></span>om the sender<span class="_ _6"></span>.</div><div class="t m0 x32 h4e y2259 ff1a fs28 fc0 sc0 ls0 ws0">#include &quot;apue.h&quot;</div><div class="t m0 x32 h4e y225a ff1a fs28 fc0 sc0 ls0 ws0">#include &lt;sys/socket.h&gt;<span class="_ _8a"> </span>/* struct msghdr */</div><div class="t m0 x32 h4e y225b ff1a fs28 fc0 sc0 ls0 ws0">/* size of control buffer to send/recv one file descriptor */</div><div class="t m0 x32 h4e y225c ff1a fs28 fc0 sc0 ls0 ws0">#define CONTROLLEN<span class="_ _d9"> </span>CMSG_LEN(sizeof(int))</div><div class="t m0 x32 h4e y4c8e ff1a fs28 fc0 sc0 ls0 ws0">static struct cmsghdr<span class="_ _68"> </span>*cmptr = NULL;<span class="_ _88"> </span>/* malloc’ed first time */</div><div class="t m0 x32 h4e y4c8f ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x140 h4e y3778 ff1a fs28 fc0 sc0 ls1b6 ws0">*R<span class="_ _1d"></span><span class="ls0">eceive a file descriptor from a server process.<span class="_ _3a"> </span>Also, any data</span></div><div class="t m0 x140 h4e y4c90 ff1a fs28 fc0 sc0 ls1b6 ws0">*r<span class="_ _1d"></span><span class="ls0">eceived is passed to (*userfunc)(STDERR_FILENO, buf, nbytes).</span></div><div class="t m0 x140 h4e y4c91 ff1a fs28 fc0 sc0 ls0 ws0">*<span class="_"> </span>We<span class="_"> </span>have a 2-byte protocol for receiving the fd from send_fd().</div><div class="t m0 x140 h4e y4c92 ff1a fs28 fc0 sc0 ls0 ws0">*/</div><div class="t m0 x32 h4e y4c93 ff1a fs28 fc0 sc0 ls0 ws0">int</div><div class="t m0 x32 h4e y4c94 ff1a fs28 fc0 sc0 ls0 ws0">recv_fd(int fd, ssize_t (*userfunc)(int, const void *, size_t))</div><div class="t m0 x32 h4e y4c95 ff1a fs28 fc0 sc0 ls0 ws0">{</div><div class="t m0 x8a h4e y4c3a ff1a fs28 fc0 sc0 ls0 ws0">int <span class="_ _82"> </span>newfd,<span class="_"> </span>nr, status;</div><div class="t m0 x8a h4e y4c3b ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>*ptr;</div><div class="t m0 x8a h4e y4c96 ff1a fs28 fc0 sc0 ls0 ws0">char <span class="_ _bd"> </span>buf[MAXLINE];</div><div class="t m0 x8a h4e y4c97 ff1a fs28 fc0 sc0 ls0 ws0">struct iovec<span class="_ _15"> </span>iov[1];</div><div class="t m0 x8a h4e y4c98 ff1a fs28 fc0 sc0 ls0 ws0">struct msghdr<span class="_ _68"> </span>msg;</div><div class="t m0 x8a h4e y4c99 ff1a fs28 fc0 sc0 ls0 ws0">status = -1;</div><div class="t m0 x8a h4e y4c9a ff1a fs28 fc0 sc0 ls0 ws0">for ( ; ; ) {</div><div class="t m0 x9d h4e y4c9b ff1a fs28 fc0 sc0 ls0 ws0">iov[0].iov_base = buf;</div><div class="t m0 x9d h4e y4c9c ff1a fs28 fc0 sc0 ls0 ws0">iov[0].iov_len <span class="_"> </span>=<span class="_"> </span>sizeof(buf);</div><div class="t m0 x9d h4e y4c9d ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_iov <span class="_ _15"> </span>=<span class="_"> </span>iov;</div><div class="t m0 x9d h4e y4c9e ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_iovlen <span class="_"> </span>=<span class="_"> </span>1;</div><div class="t m0 x9d h4e y4c9f ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_name <span class="_ _68"> </span>=<span class="_"> </span>NULL;</div><div class="t m0 x9d h4e y4ca0 ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_namelen = 0;</div><div class="t m0 x9d h4e y4ca1 ff1a fs28 fc0 sc0 ls0 ws0">if (cmptr == NULL &amp;&amp; (cmptr = malloc(CONTROLLEN)) == NULL)</div><div class="t m0 x1f h4e y4ca2 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h4e y4ca3 ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_control <span class="_ _68"> </span>=<span class="_"> </span>cmptr;</div><div class="t m0 x9d h4e y4ca4 ff1a fs28 fc0 sc0 ls0 ws0">msg.msg_controllen = CONTROLLEN;</div><div class="t m0 x9d h4e y4ca5 ff1a fs28 fc0 sc0 ls0 ws0">if ((nr = recvmsg(fd, &amp;msg, 0)) &lt; 0) {</div><div class="t m0 x1f h4e y4ca6 ff1a fs28 fc0 sc0 ls0 ws0">err_ret(&quot;recvmsg error&quot;);</div><div class="t m0 x1f h4e y4ca7 ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h4e y4ca8 ff1a fs28 fc0 sc0 ls1b6 ws0">}e<span class="_ _1d"></span><span class="ls0">lse if (nr == 0) {</span></div><div class="t m0 x1f h4e y4ca9 ff1a fs28 fc0 sc0 ls0 ws0">err_ret(&quot;connection closed by server&quot;);</div><div class="t m0 x1f h4e y4caa ff1a fs28 fc0 sc0 ls0 ws0">return(-1);</div><div class="t m0 x9d h4e y4cab ff1a fs28 fc0 sc0 ls0 ws0">}</div><div class="t m0 x9d h4e y4cac ff1a fs28 fc0 sc0 ls0 ws0">/*</div><div class="t m0 x175 h4e y4cad ff1a fs28 fc0 sc0 ls1b6 ws0">*S<span class="_ _1d"></span><span class="ls0">ee if this is the final data with null &amp; status.<span class="_ _3a"> </span>Null</span></div><div class="t m0 x175 h4e y4cae ff1a fs28 fc0 sc0 ls0 ws0">*<span class="_"> </span>is<span class="_"> </span>next to last byte of buffer; status byte is last byte.</div><div class="t m0 x175 h4e y4caf ff1a fs28 fc0 sc0 ls1b6 ws0">*Z<span class="_ _1d"></span><span class="ls0">ero status means there is a file descriptor to receive.</span></div><div class="t m0 x175 h4e y4cb0 ff1a fs28 fc0 sc0 ls0 ws0">*/</div></div><div class="pi" data-data='{"ctm":[2.100000,0.000000,0.000000,2.100000,-115.668004,-156.491993]}'></div></div>
